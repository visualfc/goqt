// Copyright 2015-2016 visualfc <visualfc@gmail.com>. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package ui

/*
#include <stdlib.h>
#include "cdrv_def.h"
*/
import "C"
import (
	"unsafe"
)

//struct QAbstractGraphicsShapeItem : QAbstractGraphicsShapeItem
type QAbstractGraphicsShapeItem struct {
	QGraphicsItem
}

//QAbstractGraphicsShapeItem::brush()
func (q *QAbstractGraphicsShapeItem) Brush() *QBrush {
	var __rv uintptr
	q.Drv(1000, 1102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QAbstractGraphicsShapeItem::pen()
func (q *QAbstractGraphicsShapeItem) Pen() *QPen {
	var __rv uintptr
	q.Drv(1000, 1103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QAbstractGraphicsShapeItem::setBrush(QBrush const&)
func (q *QAbstractGraphicsShapeItem) SetBrush(brush *QBrush) {
	q.Drv(1000, 1104, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractGraphicsShapeItem::setPen(QPen const&)
func (q *QAbstractGraphicsShapeItem) SetPen(pen *QPen) {
	q.Drv(1000, 1105, Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QAbstractTextDocumentLayoutPaintContext : QAbstractTextDocumentLayout::PaintContext
type QAbstractTextDocumentLayoutPaintContext struct {
	BaseDrv
}

//QAbstractTextDocumentLayout::PaintContext::PaintContext()
func NewAbstractTextDocumentLayoutPaintContext() *QAbstractTextDocumentLayoutPaintContext {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 2000, 2102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractTextDocumentLayoutPaintContext{}
	_p.SetDriver(__rv, 2000, true)
	return _p
}

//struct QAbstractTextDocumentLayoutSelection : QAbstractTextDocumentLayout::Selection
type QAbstractTextDocumentLayoutSelection struct {
	BaseDrv
}

//struct QAbstractUndoItem : QAbstractUndoItem
type QAbstractUndoItem struct {
	BaseDrv
}

//QAbstractUndoItem::redo()
func (q *QAbstractUndoItem) Redo() {
	q.Drv(4000, 4102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractUndoItem::undo()
func (q *QAbstractUndoItem) Undo() {
	q.Drv(4000, 4103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QActionEvent : QActionEvent
type QActionEvent struct {
	QEvent
}

//QActionEvent::QActionEvent(int,QAction*,QAction*)
func NewActionEvent(_type int32, action *QAction, before *QAction) *QActionEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 5000, 5102, unsafe.Pointer(&_type), Native(action), Native(before), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QActionEvent{}
	_p.SetDriver(__rv, 5000, true)
	return _p
}

//QActionEvent::action()
func (q *QActionEvent) Action() *QAction {
	var __rv uintptr
	q.Drv(5000, 5103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QActionEvent::before()
func (q *QActionEvent) Before() *QAction {
	var __rv uintptr
	q.Drv(5000, 5104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//enum QApplication_Type - QApplication::Type
type QApplication_Type uint32

const (
	QApplication_Tty       QApplication_Type = 0
	QApplication_GuiClient QApplication_Type = 1
	QApplication_GuiServer QApplication_Type = 2
)

//enum QApplication_ColorSpec - QApplication::ColorSpec
type QApplication_ColorSpec uint32

const (
	QApplication_NormalColor QApplication_ColorSpec = 0
	QApplication_CustomColor QApplication_ColorSpec = 1
	QApplication_ManyColor   QApplication_ColorSpec = 2
)

//struct QApplication : QApplication
type QApplication struct {
	QObject
}

// New QApplication from driver
func NewApplicationFromDriver(drv Driver) *QApplication {
	_p := &QApplication{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QApplication) OnLastWindowClosed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(6000, 6102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QApplication) OnFocusChanged(fn func(*QWidget, *QWidget)) uintptr {
	var __rv uintptr
	q.Drv(6000, 6103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QApplication) OnSaveStateRequest(fn func(*QSessionManager)) uintptr {
	var __rv uintptr
	q.Drv(6000, 6104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QApplication) OnCommitDataRequest(fn func(*QSessionManager)) uintptr {
	var __rv uintptr
	q.Drv(6000, 6105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QApplication) OnFontDatabaseChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(6000, 6106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QApplication::QApplication(int,char**)
func NewApplication(args []string) *QApplication {
	_argc := len(args)
	_argv, _ := NewCSArray(args)
	//defer FreeCSArray(_argv, _argv_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 6000, 6107, unsafe.Pointer(&_argc), unsafe.Pointer(&_argv[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QApplication{}
	_p.SetDriver(__rv, 6000, false)
	return _p
}

//QApplication::aboutQt()
func QApplicationAboutQt() {
	DirectQtDrv(nil, 6000, 6108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::aboutQt()
func (q *QApplication) AboutQt() {
	q.Drv(6000, 6108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::activeModalWidget()
func QApplicationActiveModalWidget() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::activeModalWidget()
func (q *QApplication) ActiveModalWidget() *QWidget {
	var __rv uintptr
	q.Drv(6000, 6109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::activePopupWidget()
func QApplicationActivePopupWidget() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::activePopupWidget()
func (q *QApplication) ActivePopupWidget() *QWidget {
	var __rv uintptr
	q.Drv(6000, 6110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::activeWindow()
func QApplicationActiveWindow() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::activeWindow()
func (q *QApplication) ActiveWindow() *QWidget {
	var __rv uintptr
	q.Drv(6000, 6111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QCoreApplication::addLibraryPath(QString const&)
func QApplicationAddLibraryPath(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	DirectQtDrv(nil, 6000, 6112, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::addLibraryPath(QString const&)
func (q *QApplication) AddLibraryPath(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(6000, 6112, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::alert(QWidget*)
func QApplicationAlert(widget QWidgetInterface) {
	DirectQtDrv(nil, 6000, 6113, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::alert(QWidget*)
func (q *QApplication) Alert(widget QWidgetInterface) {
	q.Drv(6000, 6113, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::alert(QWidget*,int)
func QApplicationAlertWithWidgetDuration(widget QWidgetInterface, duration int32) {
	DirectQtDrv(nil, 6000, 6114, Native(widget), unsafe.Pointer(&duration), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::alert(QWidget*,int)
func (q *QApplication) AlertWithWidgetDuration(widget QWidgetInterface, duration int32) {
	q.Drv(6000, 6114, Native(widget), unsafe.Pointer(&duration), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::allWidgets()
func QApplicationAllWidgets() []*QWidget {
	var __rv []*QWidget
	DirectQtDrv(nil, 6000, 6115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::allWidgets()
func (q *QApplication) AllWidgets() []*QWidget {
	var __rv []*QWidget
	q.Drv(6000, 6115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::applicationDirPath()
func QApplicationApplicationDirPath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationDirPath()
func (q *QApplication) ApplicationDirPath() string {
	var __rv C.string_head
	q.Drv(6000, 6116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationFilePath()
func QApplicationApplicationFilePath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationFilePath()
func (q *QApplication) ApplicationFilePath() string {
	var __rv C.string_head
	q.Drv(6000, 6117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationName()
func QApplicationApplicationName() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationName()
func (q *QApplication) ApplicationName() string {
	var __rv C.string_head
	q.Drv(6000, 6118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationPid()
func QApplicationApplicationPid() int64 {
	var __rv int64
	DirectQtDrv(nil, 6000, 6119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::applicationPid()
func (q *QApplication) ApplicationPid() int64 {
	var __rv int64
	q.Drv(6000, 6119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::applicationVersion()
func QApplicationApplicationVersion() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::applicationVersion()
func (q *QApplication) ApplicationVersion() string {
	var __rv C.string_head
	q.Drv(6000, 6120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::arguments()
func QApplicationArguments() []string {
	var __rv []string
	DirectQtDrv(nil, 6000, 6121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::arguments()
func (q *QApplication) Arguments() []string {
	var __rv []string
	q.Drv(6000, 6121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::autoSipEnabled()
func (q *QApplication) AutoSipEnabled() bool {
	var __rv bool
	q.Drv(6000, 6122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::beep()
func QApplicationBeep() {
	DirectQtDrv(nil, 6000, 6123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::beep()
func (q *QApplication) Beep() {
	q.Drv(6000, 6123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::changeOverrideCursor(QCursor const&)
func QApplicationChangeOverrideCursor(value *QCursor) {
	DirectQtDrv(nil, 6000, 6124, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::changeOverrideCursor(QCursor const&)
func (q *QApplication) ChangeOverrideCursor(value *QCursor) {
	q.Drv(6000, 6124, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::clipboard()
func QApplicationClipboard() *QClipboard {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QClipboard{}
	_rp.SetDriver(__rv, 216000, false)
	return _rp
}

//QApplication::clipboard()
func (q *QApplication) Clipboard() *QClipboard {
	var __rv uintptr
	q.Drv(6000, 6125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QClipboard{}
	_rp.SetDriver(__rv, 216000, false)
	return _rp
}

//QApplication::closeAllWindows()
func QApplicationCloseAllWindows() {
	DirectQtDrv(nil, 6000, 6126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::closeAllWindows()
func (q *QApplication) CloseAllWindows() {
	q.Drv(6000, 6126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::closingDown()
func QApplicationClosingDown() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::closingDown()
func (q *QApplication) ClosingDown() bool {
	var __rv bool
	q.Drv(6000, 6127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::colorSpec()
func QApplicationColorSpec() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::colorSpec()
func (q *QApplication) ColorSpec() int32 {
	var __rv int32
	q.Drv(6000, 6128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::cursorFlashTime()
func QApplicationCursorFlashTime() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::cursorFlashTime()
func (q *QApplication) CursorFlashTime() int32 {
	var __rv int32
	q.Drv(6000, 6129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::desktop()
func QApplicationDesktop() *QDesktopWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDesktopWidget{}
	_rp.SetDriver(__rv, 226000, false)
	return _rp
}

//QApplication::desktop()
func (q *QApplication) Desktop() *QDesktopWidget {
	var __rv uintptr
	q.Drv(6000, 6130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDesktopWidget{}
	_rp.SetDriver(__rv, 226000, false)
	return _rp
}

//QApplication::desktopSettingsAware()
func QApplicationDesktopSettingsAware() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::desktopSettingsAware()
func (q *QApplication) DesktopSettingsAware() bool {
	var __rv bool
	q.Drv(6000, 6131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::doubleClickInterval()
func QApplicationDoubleClickInterval() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::doubleClickInterval()
func (q *QApplication) DoubleClickInterval() int32 {
	var __rv int32
	q.Drv(6000, 6132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::exec()
func QApplicationExec() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::exec()
func (q *QApplication) Exec() int32 {
	var __rv int32
	q.Drv(6000, 6133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::exit()
func QApplicationExit() {
	DirectQtDrv(nil, 6000, 6134, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::exit()
func (q *QApplication) Exit() {
	q.Drv(6000, 6134, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::exit(int)
func QApplicationExitWithRetcode(retcode int32) {
	DirectQtDrv(nil, 6000, 6135, unsafe.Pointer(&retcode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::exit(int)
func (q *QApplication) ExitWithRetcode(retcode int32) {
	q.Drv(6000, 6135, unsafe.Pointer(&retcode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::flush()
func QApplicationFlush() {
	DirectQtDrv(nil, 6000, 6136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::flush()
func (q *QApplication) Flush() {
	q.Drv(6000, 6136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::focusWidget()
func QApplicationFocusWidget() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::focusWidget()
func (q *QApplication) FocusWidget() *QWidget {
	var __rv uintptr
	q.Drv(6000, 6137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::font()
func QApplicationFont() *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::font()
func (q *QApplication) Font() *QFont {
	var __rv uintptr
	q.Drv(6000, 6138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::font(QWidget const*)
func QApplicationFontWithWidget(value QWidgetInterface) *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6139, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::font(QWidget const*)
func (q *QApplication) FontWithWidget(value QWidgetInterface) *QFont {
	var __rv uintptr
	q.Drv(6000, 6139, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::font(char const*)
func QApplicationFontWithClassname(className string) *QFont {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6140, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::font(char const*)
func (q *QApplication) FontWithClassname(className string) *QFont {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	q.Drv(6000, 6140, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QApplication::fontMetrics()
func QApplicationFontMetrics() *QFontMetrics {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontMetrics{}
	_rp.SetDriver(__rv, 40000, true)
	return _rp
}

//QApplication::fontMetrics()
func (q *QApplication) FontMetrics() *QFontMetrics {
	var __rv uintptr
	q.Drv(6000, 6141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontMetrics{}
	_rp.SetDriver(__rv, 40000, true)
	return _rp
}

//QApplication::globalStrut()
func QApplicationGlobalStrut() *QSize {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QApplication::globalStrut()
func (q *QApplication) GlobalStrut() *QSize {
	var __rv uintptr
	q.Drv(6000, 6142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QCoreApplication::hasPendingEvents()
func QApplicationHasPendingEvents() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::hasPendingEvents()
func (q *QApplication) HasPendingEvents() bool {
	var __rv bool
	q.Drv(6000, 6143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::installTranslator(QTranslator*)
func QApplicationInstallTranslator(messageFile *QTranslator) {
	DirectQtDrv(nil, 6000, 6144, Native(messageFile), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::installTranslator(QTranslator*)
func (q *QApplication) InstallTranslator(messageFile *QTranslator) {
	q.Drv(6000, 6144, Native(messageFile), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::instance()
func QApplicationInstance() *QApplication {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QApplication{}
	_rp.SetDriver(__rv, 6000, false)
	return _rp
}

//QCoreApplication::instance()
func (q *QApplication) Instance() *QApplication {
	var __rv uintptr
	q.Drv(6000, 6145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QApplication{}
	_rp.SetDriver(__rv, 6000, false)
	return _rp
}

//QApplication::isEffectEnabled(Qt::UIEffect)
func QApplicationIsEffectEnabled(value Qt_UIEffect) bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6146, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isEffectEnabled(Qt::UIEffect)
func (q *QApplication) IsEffectEnabled(value Qt_UIEffect) bool {
	var __rv bool
	q.Drv(6000, 6146, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isLeftToRight()
func QApplicationIsLeftToRight() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isLeftToRight()
func (q *QApplication) IsLeftToRight() bool {
	var __rv bool
	q.Drv(6000, 6147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isRightToLeft()
func QApplicationIsRightToLeft() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isRightToLeft()
func (q *QApplication) IsRightToLeft() bool {
	var __rv bool
	q.Drv(6000, 6148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::isSessionRestored()
func (q *QApplication) IsSessionRestored() bool {
	var __rv bool
	q.Drv(6000, 6149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::keyboardInputInterval()
func QApplicationKeyboardInputInterval() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::keyboardInputInterval()
func (q *QApplication) KeyboardInputInterval() int32 {
	var __rv int32
	q.Drv(6000, 6150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::keyboardModifiers()
func QApplicationKeyboardModifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	DirectQtDrv(nil, 6000, 6151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::keyboardModifiers()
func (q *QApplication) KeyboardModifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(6000, 6151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::layoutDirection()
func QApplicationLayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	DirectQtDrv(nil, 6000, 6152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::layoutDirection()
func (q *QApplication) LayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(6000, 6152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::libraryPaths()
func QApplicationLibraryPaths() []string {
	var __rv []string
	DirectQtDrv(nil, 6000, 6153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::libraryPaths()
func (q *QApplication) LibraryPaths() []string {
	var __rv []string
	q.Drv(6000, 6153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::mouseButtons()
func QApplicationMouseButtons() Qt_MouseButton {
	var __rv Qt_MouseButton
	DirectQtDrv(nil, 6000, 6154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::mouseButtons()
func (q *QApplication) MouseButtons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(6000, 6154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::notify(QObject*,QEvent*)
func (q *QApplication) Notify(value2 QObjectInterface, value3 *QEvent) bool {
	var __rv bool
	q.Drv(6000, 6155, Native(value2), Native(value3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::organizationDomain()
func QApplicationOrganizationDomain() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::organizationDomain()
func (q *QApplication) OrganizationDomain() string {
	var __rv C.string_head
	q.Drv(6000, 6156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::organizationName()
func QApplicationOrganizationName() string {
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::organizationName()
func (q *QApplication) OrganizationName() string {
	var __rv C.string_head
	q.Drv(6000, 6157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QApplication::overrideCursor()
func QApplicationOverrideCursor() *QCursor {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCursor{}
	_rp.SetDriver(__rv, 18000, true)
	return _rp
}

//QApplication::overrideCursor()
func (q *QApplication) OverrideCursor() *QCursor {
	var __rv uintptr
	q.Drv(6000, 6158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCursor{}
	_rp.SetDriver(__rv, 18000, true)
	return _rp
}

//QApplication::palette()
func QApplicationPalette() *QPalette {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QApplication::palette()
func (q *QApplication) Palette() *QPalette {
	var __rv uintptr
	q.Drv(6000, 6159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QApplication::palette(QWidget const*)
func QApplicationPaletteWithWidget(value QWidgetInterface) *QPalette {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6160, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QApplication::palette(QWidget const*)
func (q *QApplication) PaletteWithWidget(value QWidgetInterface) *QPalette {
	var __rv uintptr
	q.Drv(6000, 6160, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QApplication::palette(char const*)
func QApplicationPaletteWithClassname(className string) *QPalette {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6161, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QApplication::palette(char const*)
func (q *QApplication) PaletteWithClassname(className string) *QPalette {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	q.Drv(6000, 6161, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QCoreApplication::postEvent(QObject*,QEvent*)
func QApplicationPostEvent(receiver QObjectInterface, event *QEvent) {
	DirectQtDrv(nil, 6000, 6162, Native(receiver), Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::postEvent(QObject*,QEvent*)
func (q *QApplication) PostEvent(receiver QObjectInterface, event *QEvent) {
	q.Drv(6000, 6162, Native(receiver), Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::quit()
func QApplicationQuit() {
	DirectQtDrv(nil, 6000, 6163, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::quit()
func (q *QApplication) Quit() {
	q.Drv(6000, 6163, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::quitOnLastWindowClosed()
func QApplicationQuitOnLastWindowClosed() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::quitOnLastWindowClosed()
func (q *QApplication) QuitOnLastWindowClosed() bool {
	var __rv bool
	q.Drv(6000, 6164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::removeLibraryPath(QString const&)
func QApplicationRemoveLibraryPath(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	DirectQtDrv(nil, 6000, 6165, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::removeLibraryPath(QString const&)
func (q *QApplication) RemoveLibraryPath(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(6000, 6165, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::removePostedEvents(QObject*)
func QApplicationRemovePostedEvents(receiver QObjectInterface) {
	DirectQtDrv(nil, 6000, 6166, Native(receiver), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::removePostedEvents(QObject*)
func (q *QApplication) RemovePostedEvents(receiver QObjectInterface) {
	q.Drv(6000, 6166, Native(receiver), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::removeTranslator(QTranslator*)
func QApplicationRemoveTranslator(messageFile *QTranslator) {
	DirectQtDrv(nil, 6000, 6167, Native(messageFile), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::removeTranslator(QTranslator*)
func (q *QApplication) RemoveTranslator(messageFile *QTranslator) {
	q.Drv(6000, 6167, Native(messageFile), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::restoreOverrideCursor()
func QApplicationRestoreOverrideCursor() {
	DirectQtDrv(nil, 6000, 6168, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::restoreOverrideCursor()
func (q *QApplication) RestoreOverrideCursor() {
	q.Drv(6000, 6168, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::sendEvent(QObject*,QEvent*)
func QApplicationSendEvent(receiver QObjectInterface, event *QEvent) bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6169, Native(receiver), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::sendEvent(QObject*,QEvent*)
func (q *QApplication) SendEvent(receiver QObjectInterface, event *QEvent) bool {
	var __rv bool
	q.Drv(6000, 6169, Native(receiver), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::sendPostedEvents()
func QApplicationSendPostedEvents() {
	DirectQtDrv(nil, 6000, 6170, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::sendPostedEvents()
func (q *QApplication) SendPostedEvents() {
	q.Drv(6000, 6170, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::sessionId()
func (q *QApplication) SessionId() string {
	var __rv C.string_head
	q.Drv(6000, 6171, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QApplication::sessionKey()
func (q *QApplication) SessionKey() string {
	var __rv C.string_head
	q.Drv(6000, 6172, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QApplication::setActiveWindow(QWidget*)
func QApplicationSetActiveWindow(act QWidgetInterface) {
	DirectQtDrv(nil, 6000, 6173, Native(act), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setActiveWindow(QWidget*)
func (q *QApplication) SetActiveWindow(act QWidgetInterface) {
	q.Drv(6000, 6173, Native(act), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setApplicationName(QString const&)
func QApplicationSetApplicationName(application string) {
	_application := NewCStringHead(application)
	defer FreeCStringHead(_application)
	DirectQtDrv(nil, 6000, 6174, unsafe.Pointer(_application), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setApplicationName(QString const&)
func (q *QApplication) SetApplicationName(application string) {
	_application := NewCStringHead(application)
	defer FreeCStringHead(_application)
	q.Drv(6000, 6174, unsafe.Pointer(_application), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setApplicationVersion(QString const&)
func QApplicationSetApplicationVersion(version string) {
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	DirectQtDrv(nil, 6000, 6175, unsafe.Pointer(_version), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setApplicationVersion(QString const&)
func (q *QApplication) SetApplicationVersion(version string) {
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	q.Drv(6000, 6175, unsafe.Pointer(_version), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setAttribute(Qt::ApplicationAttribute)
func QApplicationSetAttribute(attribute Qt_ApplicationAttribute) {
	DirectQtDrv(nil, 6000, 6176, unsafe.Pointer(&attribute), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setAttribute(Qt::ApplicationAttribute)
func (q *QApplication) SetAttribute(attribute Qt_ApplicationAttribute) {
	q.Drv(6000, 6176, unsafe.Pointer(&attribute), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setAttribute(Qt::ApplicationAttribute,bool)
func QApplicationSetAttributeWithAttributeOn(attribute Qt_ApplicationAttribute, on bool) {
	DirectQtDrv(nil, 6000, 6177, unsafe.Pointer(&attribute), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setAttribute(Qt::ApplicationAttribute,bool)
func (q *QApplication) SetAttributeWithAttributeOn(attribute Qt_ApplicationAttribute, on bool) {
	q.Drv(6000, 6177, unsafe.Pointer(&attribute), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setAutoSipEnabled(bool const)
func (q *QApplication) SetAutoSipEnabled(enabled bool) {
	q.Drv(6000, 6178, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setColorSpec(int)
func QApplicationSetColorSpec(value int32) {
	DirectQtDrv(nil, 6000, 6179, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setColorSpec(int)
func (q *QApplication) SetColorSpec(value int32) {
	q.Drv(6000, 6179, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setCursorFlashTime(int)
func QApplicationSetCursorFlashTime(value int32) {
	DirectQtDrv(nil, 6000, 6180, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setCursorFlashTime(int)
func (q *QApplication) SetCursorFlashTime(value int32) {
	q.Drv(6000, 6180, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setDesktopSettingsAware(bool)
func QApplicationSetDesktopSettingsAware(value bool) {
	DirectQtDrv(nil, 6000, 6181, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setDesktopSettingsAware(bool)
func (q *QApplication) SetDesktopSettingsAware(value bool) {
	q.Drv(6000, 6181, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setDoubleClickInterval(int)
func QApplicationSetDoubleClickInterval(value int32) {
	DirectQtDrv(nil, 6000, 6182, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setDoubleClickInterval(int)
func (q *QApplication) SetDoubleClickInterval(value int32) {
	q.Drv(6000, 6182, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setEffectEnabled(Qt::UIEffect)
func QApplicationSetEffectEnabled(value Qt_UIEffect) {
	DirectQtDrv(nil, 6000, 6183, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setEffectEnabled(Qt::UIEffect)
func (q *QApplication) SetEffectEnabled(value Qt_UIEffect) {
	q.Drv(6000, 6183, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setEffectEnabled(Qt::UIEffect,bool)
func QApplicationSetEffectEnabledWithUieffectEnable(value2 Qt_UIEffect, enable bool) {
	DirectQtDrv(nil, 6000, 6184, unsafe.Pointer(&value2), unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setEffectEnabled(Qt::UIEffect,bool)
func (q *QApplication) SetEffectEnabledWithUieffectEnable(value2 Qt_UIEffect, enable bool) {
	q.Drv(6000, 6184, unsafe.Pointer(&value2), unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setFont(QFont const&)
func QApplicationSetFont(value *QFont) {
	DirectQtDrv(nil, 6000, 6185, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setFont(QFont const&)
func (q *QApplication) SetFont(value *QFont) {
	q.Drv(6000, 6185, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setFont(QFont const&,char const*)
func QApplicationSetFontWithFontClassname(value2 *QFont, className string) {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	DirectQtDrv(nil, 6000, 6186, Native(value2), unsafe.Pointer(_className), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setFont(QFont const&,char const*)
func (q *QApplication) SetFontWithFontClassname(value2 *QFont, className string) {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	q.Drv(6000, 6186, Native(value2), unsafe.Pointer(_className), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setGlobalStrut(QSize const&)
func QApplicationSetGlobalStrut(value *QSize) {
	DirectQtDrv(nil, 6000, 6187, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setGlobalStrut(QSize const&)
func (q *QApplication) SetGlobalStrut(value *QSize) {
	q.Drv(6000, 6187, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setKeyboardInputInterval(int)
func QApplicationSetKeyboardInputInterval(value int32) {
	DirectQtDrv(nil, 6000, 6188, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setKeyboardInputInterval(int)
func (q *QApplication) SetKeyboardInputInterval(value int32) {
	q.Drv(6000, 6188, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setLayoutDirection(Qt::LayoutDirection)
func QApplicationSetLayoutDirection(direction Qt_LayoutDirection) {
	DirectQtDrv(nil, 6000, 6189, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setLayoutDirection(Qt::LayoutDirection)
func (q *QApplication) SetLayoutDirection(direction Qt_LayoutDirection) {
	q.Drv(6000, 6189, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setLibraryPaths(QStringList const&)
func QApplicationSetLibraryPaths(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	DirectQtDrv(nil, 6000, 6190, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setLibraryPaths(QStringList const&)
func (q *QApplication) SetLibraryPaths(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	q.Drv(6000, 6190, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setOrganizationDomain(QString const&)
func QApplicationSetOrganizationDomain(orgDomain string) {
	_orgDomain := NewCStringHead(orgDomain)
	defer FreeCStringHead(_orgDomain)
	DirectQtDrv(nil, 6000, 6191, unsafe.Pointer(_orgDomain), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setOrganizationDomain(QString const&)
func (q *QApplication) SetOrganizationDomain(orgDomain string) {
	_orgDomain := NewCStringHead(orgDomain)
	defer FreeCStringHead(_orgDomain)
	q.Drv(6000, 6191, unsafe.Pointer(_orgDomain), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setOrganizationName(QString const&)
func QApplicationSetOrganizationName(orgName string) {
	_orgName := NewCStringHead(orgName)
	defer FreeCStringHead(_orgName)
	DirectQtDrv(nil, 6000, 6192, unsafe.Pointer(_orgName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCoreApplication::setOrganizationName(QString const&)
func (q *QApplication) SetOrganizationName(orgName string) {
	_orgName := NewCStringHead(orgName)
	defer FreeCStringHead(_orgName)
	q.Drv(6000, 6192, unsafe.Pointer(_orgName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setOverrideCursor(QCursor const&)
func QApplicationSetOverrideCursor(value *QCursor) {
	DirectQtDrv(nil, 6000, 6193, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setOverrideCursor(QCursor const&)
func (q *QApplication) SetOverrideCursor(value *QCursor) {
	q.Drv(6000, 6193, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setPalette(QPalette const&)
func QApplicationSetPalette(value *QPalette) {
	DirectQtDrv(nil, 6000, 6194, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setPalette(QPalette const&)
func (q *QApplication) SetPalette(value *QPalette) {
	q.Drv(6000, 6194, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setPalette(QPalette const&,char const*)
func QApplicationSetPaletteWithPaletteClassname(value2 *QPalette, className string) {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	DirectQtDrv(nil, 6000, 6195, Native(value2), unsafe.Pointer(_className), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setPalette(QPalette const&,char const*)
func (q *QApplication) SetPaletteWithPaletteClassname(value2 *QPalette, className string) {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	q.Drv(6000, 6195, Native(value2), unsafe.Pointer(_className), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setQuitOnLastWindowClosed(bool)
func QApplicationSetQuitOnLastWindowClosed(quit bool) {
	DirectQtDrv(nil, 6000, 6196, unsafe.Pointer(&quit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setQuitOnLastWindowClosed(bool)
func (q *QApplication) SetQuitOnLastWindowClosed(quit bool) {
	q.Drv(6000, 6196, unsafe.Pointer(&quit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStartDragDistance(int)
func QApplicationSetStartDragDistance(l int32) {
	DirectQtDrv(nil, 6000, 6197, unsafe.Pointer(&l), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStartDragDistance(int)
func (q *QApplication) SetStartDragDistance(l int32) {
	q.Drv(6000, 6197, unsafe.Pointer(&l), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStartDragTime(int)
func QApplicationSetStartDragTime(ms int32) {
	DirectQtDrv(nil, 6000, 6198, unsafe.Pointer(&ms), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStartDragTime(int)
func (q *QApplication) SetStartDragTime(ms int32) {
	q.Drv(6000, 6198, unsafe.Pointer(&ms), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStyle(QString const&)
func QApplicationSetStyle(value string) *QStyle {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6199, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QApplication::setStyle(QString const&)
func (q *QApplication) SetStyle(value string) *QStyle {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv uintptr
	q.Drv(6000, 6199, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QApplication::setStyle(QStyle*)
func QApplicationSetStyleWithStyle(value *QStyle) {
	DirectQtDrv(nil, 6000, 6200, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStyle(QStyle*)
func (q *QApplication) SetStyleWithStyle(value *QStyle) {
	q.Drv(6000, 6200, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setStyleSheet(QString const&)
func (q *QApplication) SetStyleSheet(sheet string) {
	_sheet := NewCStringHead(sheet)
	defer FreeCStringHead(_sheet)
	q.Drv(6000, 6201, unsafe.Pointer(_sheet), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setWheelScrollLines(int)
func QApplicationSetWheelScrollLines(value int32) {
	DirectQtDrv(nil, 6000, 6202, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setWheelScrollLines(int)
func (q *QApplication) SetWheelScrollLines(value int32) {
	q.Drv(6000, 6202, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setWindowIcon(QIcon const&)
func QApplicationSetWindowIcon(icon *QIcon) {
	DirectQtDrv(nil, 6000, 6203, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::setWindowIcon(QIcon const&)
func (q *QApplication) SetWindowIcon(icon *QIcon) {
	q.Drv(6000, 6203, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QApplication::startDragDistance()
func QApplicationStartDragDistance() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6204, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::startDragDistance()
func (q *QApplication) StartDragDistance() int32 {
	var __rv int32
	q.Drv(6000, 6204, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::startDragTime()
func QApplicationStartDragTime() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6205, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::startDragTime()
func (q *QApplication) StartDragTime() int32 {
	var __rv int32
	q.Drv(6000, 6205, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::startingUp()
func QApplicationStartingUp() bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6206, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::startingUp()
func (q *QApplication) StartingUp() bool {
	var __rv bool
	q.Drv(6000, 6206, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::style()
func QApplicationStyle() *QStyle {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6207, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QApplication::style()
func (q *QApplication) Style() *QStyle {
	var __rv uintptr
	q.Drv(6000, 6207, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QApplication::styleSheet()
func (q *QApplication) StyleSheet() string {
	var __rv C.string_head
	q.Drv(6000, 6208, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::testAttribute(Qt::ApplicationAttribute)
func QApplicationTestAttribute(attribute Qt_ApplicationAttribute) bool {
	var __rv bool
	DirectQtDrv(nil, 6000, 6209, unsafe.Pointer(&attribute), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::testAttribute(Qt::ApplicationAttribute)
func (q *QApplication) TestAttribute(attribute Qt_ApplicationAttribute) bool {
	var __rv bool
	q.Drv(6000, 6209, unsafe.Pointer(&attribute), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::topLevelAt(QPoint const&)
func QApplicationTopLevelAt(p *QPoint) *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6210, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::topLevelAt(QPoint const&)
func (q *QApplication) TopLevelAt(p *QPoint) *QWidget {
	var __rv uintptr
	q.Drv(6000, 6210, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::topLevelAt(int,int)
func QApplicationTopLevelAtWithXY(x int32, y int32) *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6211, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::topLevelAt(int,int)
func (q *QApplication) TopLevelAtWithXY(x int32, y int32) *QWidget {
	var __rv uintptr
	q.Drv(6000, 6211, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::topLevelWidgets()
func QApplicationTopLevelWidgets() []*QWidget {
	var __rv []*QWidget
	DirectQtDrv(nil, 6000, 6212, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::topLevelWidgets()
func (q *QApplication) TopLevelWidgets() []*QWidget {
	var __rv []*QWidget
	q.Drv(6000, 6212, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCoreApplication::translate(char const*,char const*,char const*)
func QApplicationTranslate(context string, key string, disambiguation string) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6213, unsafe.Pointer(_context), unsafe.Pointer(_key), unsafe.Pointer(_disambiguation), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::translate(char const*,char const*,char const*)
func (q *QApplication) Translate(context string, key string, disambiguation string) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	q.Drv(6000, 6213, unsafe.Pointer(_context), unsafe.Pointer(_key), unsafe.Pointer(_disambiguation), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::translaten(char const*,char const*,char const*,int)
func QApplicationTranslaten(context string, key string, disambiguation string, n int32) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	DirectQtDrv(nil, 6000, 6214, unsafe.Pointer(_context), unsafe.Pointer(_key), unsafe.Pointer(_disambiguation), unsafe.Pointer(&n), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCoreApplication::translaten(char const*,char const*,char const*,int)
func (q *QApplication) Translaten(context string, key string, disambiguation string, n int32) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	q.Drv(6000, 6214, unsafe.Pointer(_context), unsafe.Pointer(_key), unsafe.Pointer(_disambiguation), unsafe.Pointer(&n), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QApplication::wheelScrollLines()
func QApplicationWheelScrollLines() int32 {
	var __rv int32
	DirectQtDrv(nil, 6000, 6215, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::wheelScrollLines()
func (q *QApplication) WheelScrollLines() int32 {
	var __rv int32
	q.Drv(6000, 6215, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QApplication::widgetAt(QPoint const&)
func QApplicationWidgetAt(p *QPoint) *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6216, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::widgetAt(QPoint const&)
func (q *QApplication) WidgetAt(p *QPoint) *QWidget {
	var __rv uintptr
	q.Drv(6000, 6216, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::widgetAt(int,int)
func QApplicationWidgetAtWithXY(x int32, y int32) *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6217, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::widgetAt(int,int)
func (q *QApplication) WidgetAtWithXY(x int32, y int32) *QWidget {
	var __rv uintptr
	q.Drv(6000, 6217, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QApplication::windowIcon()
func QApplicationWindowIcon() *QIcon {
	var __rv uintptr
	DirectQtDrv(nil, 6000, 6218, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QApplication::windowIcon()
func (q *QApplication) WindowIcon() *QIcon {
	var __rv uintptr
	q.Drv(6000, 6218, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//struct QBasicTimer : QBasicTimer
type QBasicTimer struct {
	BaseDrv
}

//QBasicTimer::QBasicTimer()
func NewBasicTimer() *QBasicTimer {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 7000, 7102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBasicTimer{}
	_p.SetDriver(__rv, 7000, true)
	return _p
}

//QBasicTimer::isActive()
func (q *QBasicTimer) IsActive() bool {
	var __rv bool
	q.Drv(7000, 7103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBasicTimer::start(int,QObject*)
func (q *QBasicTimer) Start(msec int32, obj QObjectInterface) {
	q.Drv(7000, 7104, unsafe.Pointer(&msec), Native(obj), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBasicTimer::stop()
func (q *QBasicTimer) Stop() {
	q.Drv(7000, 7105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBasicTimer::timerId()
func (q *QBasicTimer) TimerId() int32 {
	var __rv int32
	q.Drv(7000, 7106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QBitmap : QBitmap
type QBitmap struct {
	QPixmap
}

//QBitmap::QBitmap()
func NewBitmap() *QBitmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 8000, 8102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBitmap{}
	_p.SetDriver(__rv, 8000, true)
	return _p
}

//QBitmap::QBitmap(QPixmap const&)
func NewBitmapWithPixmap(value *QPixmap) *QBitmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 8000, 8103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBitmap{}
	_p.SetDriver(__rv, 8000, true)
	return _p
}

//QBitmap::QBitmap(QSize const&)
func NewBitmapWithSize(value *QSize) *QBitmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 8000, 8104, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBitmap{}
	_p.SetDriver(__rv, 8000, true)
	return _p
}

//QBitmap::QBitmap(QString const&,char const*)
func NewBitmapWithFilenameFormat(fileName string, format string) *QBitmap {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 8000, 8105, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBitmap{}
	_p.SetDriver(__rv, 8000, true)
	return _p
}

//QBitmap::QBitmap(int,int)
func NewBitmapWithWidthHeight(w int32, h int32) *QBitmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 8000, 8106, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBitmap{}
	_p.SetDriver(__rv, 8000, true)
	return _p
}

//QBitmap::clear()
func (q *QBitmap) Clear() {
	q.Drv(8000, 8107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBitmap::fromData(QSize const&,unsigned char const*,QImage::Format)
func QBitmapFromData(size *QSize, bits *byte, monoFormat QImage_Format) *QBitmap {
	var __rv uintptr
	DirectQtDrv(nil, 8000, 8108, Native(size), unsafe.Pointer(&bits), unsafe.Pointer(&monoFormat), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::fromData(QSize const&,unsigned char const*,QImage::Format)
func (q *QBitmap) FromData(size *QSize, bits *byte, monoFormat QImage_Format) *QBitmap {
	var __rv uintptr
	q.Drv(8000, 8108, Native(size), unsafe.Pointer(&bits), unsafe.Pointer(&monoFormat), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::fromImage(QImage const&)
func QBitmapFromImage(image *QImage) *QBitmap {
	var __rv uintptr
	DirectQtDrv(nil, 8000, 8109, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::fromImage(QImage const&)
func (q *QBitmap) FromImage(image *QImage) *QBitmap {
	var __rv uintptr
	q.Drv(8000, 8109, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::fromImage(QImage const&,QFlags<Qt::ImageConversionFlag>)
func QBitmapFromImageWithImageFlags(image *QImage, flags Qt_ImageConversionFlag) *QBitmap {
	var __rv uintptr
	DirectQtDrv(nil, 8000, 8110, Native(image), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::fromImage(QImage const&,QFlags<Qt::ImageConversionFlag>)
func (q *QBitmap) FromImageWithImageFlags(image *QImage, flags Qt_ImageConversionFlag) *QBitmap {
	var __rv uintptr
	q.Drv(8000, 8110, Native(image), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::transformed(QMatrix const&)
func (q *QBitmap) Transformed(value *QMatrix) *QBitmap {
	var __rv uintptr
	q.Drv(8000, 8111, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QBitmap::transformed(QTransform const&)
func (q *QBitmap) TransformedWithTransform(matrix *QTransform) *QBitmap {
	var __rv uintptr
	q.Drv(8000, 8112, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//struct QBrush : QBrush
type QBrush struct {
	BaseDrv
}

//QBrush::QBrush()
func NewBrush() *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QBrush const&)
func NewBrushCopy(brush *QBrush) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9103, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QGradient const&)
func NewBrushWithGradient(gradient *QGradient) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9104, Native(gradient), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QImage const&)
func NewBrushWithImage(image *QImage) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9105, Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QPixmap const&)
func NewBrushWithPixmap(pixmap *QPixmap) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9106, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(Qt::BrushStyle)
func NewBrushWithBrushstyle(bs Qt_BrushStyle) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9107, unsafe.Pointer(&bs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QColor const&,QPixmap const&)
func NewBrushWithColorPixmap(color *QColor, pixmap *QPixmap) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9108, Native(color), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(QColor const&,Qt::BrushStyle)
func NewBrushWithColorBrushstyle(color *QColor, bs Qt_BrushStyle) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9109, Native(color), unsafe.Pointer(&bs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(Qt::GlobalColor,QPixmap const&)
func NewBrushWithGlobalcolorPixmap(color Qt_GlobalColor, pixmap *QPixmap) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9110, unsafe.Pointer(&color), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::QBrush(Qt::GlobalColor,Qt::BrushStyle)
func NewBrushWithGlobalcolorBrushstyle(color Qt_GlobalColor, bs Qt_BrushStyle) *QBrush {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 9000, 9111, unsafe.Pointer(&color), unsafe.Pointer(&bs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBrush{}
	_p.SetDriver(__rv, 9000, true)
	return _p
}

//QBrush::color()
func (q *QBrush) Color() *QColor {
	var __rv uintptr
	q.Drv(9000, 9112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QBrush::gradient()
func (q *QBrush) Gradient() *QGradient {
	var __rv uintptr
	q.Drv(9000, 9113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGradient{}
	_rp.SetDriver(__rv, 46000, true)
	return _rp
}

//QBrush::isDetached()
func (q *QBrush) IsDetached() bool {
	var __rv bool
	q.Drv(9000, 9114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBrush::isOpaque()
func (q *QBrush) IsOpaque() bool {
	var __rv bool
	q.Drv(9000, 9115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBrush::matrix()
func (q *QBrush) Matrix() *QMatrix {
	var __rv uintptr
	q.Drv(9000, 9116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QBrush::setColor(QColor const&)
func (q *QBrush) SetColor(color *QColor) {
	q.Drv(9000, 9117, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setColor(Qt::GlobalColor)
func (q *QBrush) SetColorWithGlobalcolor(color Qt_GlobalColor) {
	q.Drv(9000, 9118, unsafe.Pointer(&color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setMatrix(QMatrix const&)
func (q *QBrush) SetMatrix(mat *QMatrix) {
	q.Drv(9000, 9119, Native(mat), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setStyle(Qt::BrushStyle)
func (q *QBrush) SetStyle(value Qt_BrushStyle) {
	q.Drv(9000, 9120, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setTexture(QPixmap const&)
func (q *QBrush) SetTexture(pixmap *QPixmap) {
	q.Drv(9000, 9121, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setTextureImage(QImage const&)
func (q *QBrush) SetTextureImage(image *QImage) {
	q.Drv(9000, 9122, Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::setTransform(QTransform const&)
func (q *QBrush) SetTransform(value *QTransform) {
	q.Drv(9000, 9123, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBrush::style()
func (q *QBrush) Style() Qt_BrushStyle {
	var __rv Qt_BrushStyle
	q.Drv(9000, 9124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBrush::texture()
func (q *QBrush) Texture() *QPixmap {
	var __rv uintptr
	q.Drv(9000, 9125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QBrush::textureImage()
func (q *QBrush) TextureImage() *QImage {
	var __rv uintptr
	q.Drv(9000, 9126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QBrush::transform()
func (q *QBrush) Transform() *QTransform {
	var __rv uintptr
	q.Drv(9000, 9127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//struct QByteArrayMatcher : QByteArrayMatcher
type QByteArrayMatcher struct {
	BaseDrv
}

//QByteArrayMatcher::QByteArrayMatcher()
func NewByteArrayMatcher() *QByteArrayMatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 10000, 10102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QByteArrayMatcher{}
	_p.SetDriver(__rv, 10000, true)
	return _p
}

//QByteArrayMatcher::QByteArrayMatcher(QByteArray const&)
func NewByteArrayMatcherWithPattern(pattern []byte) *QByteArrayMatcher {
	_pattern := NewCByteArrayHead(pattern)
	defer FreeCByteArrayHead(_pattern)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 10000, 10103, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QByteArrayMatcher{}
	_p.SetDriver(__rv, 10000, true)
	return _p
}

//QByteArrayMatcher::QByteArrayMatcher(QByteArrayMatcher const&)
func NewByteArrayMatcherCopy(other *QByteArrayMatcher) *QByteArrayMatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 10000, 10104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QByteArrayMatcher{}
	_p.SetDriver(__rv, 10000, true)
	return _p
}

//QByteArrayMatcher::indexIn(QByteArray const&)
func (q *QByteArrayMatcher) IndexIn(ba []byte) int32 {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv int32
	q.Drv(10000, 10105, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QByteArrayMatcher::indexIn(QByteArray const&,int)
func (q *QByteArrayMatcher) IndexInWithBaIfrom(ba []byte, from int32) int32 {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv int32
	q.Drv(10000, 10106, unsafe.Pointer(_ba), unsafe.Pointer(&from), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QByteArrayMatcher::pattern()
func (q *QByteArrayMatcher) Pattern() []byte {
	var __rv []byte
	q.Drv(10000, 10107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QByteArrayMatcher::setPattern(QByteArray const&)
func (q *QByteArrayMatcher) SetPattern(pattern []byte) {
	_pattern := NewCByteArrayHead(pattern)
	defer FreeCByteArrayHead(_pattern)
	q.Drv(10000, 10108, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QChildEvent : QChildEvent
type QChildEvent struct {
	QEvent
}

//QChildEvent::QChildEvent(QEvent::Type,QObject*)
func NewChildEvent(_type QEvent_Type, child QObjectInterface) *QChildEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 11000, 11102, unsafe.Pointer(&_type), Native(child), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QChildEvent{}
	_p.SetDriver(__rv, 11000, true)
	return _p
}

//QChildEvent::added()
func (q *QChildEvent) Added() bool {
	var __rv bool
	q.Drv(11000, 11103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QChildEvent::child()
func (q *QChildEvent) Child() *QObject {
	var __rv uintptr
	q.Drv(11000, 11104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QChildEvent::polished()
func (q *QChildEvent) Polished() bool {
	var __rv bool
	q.Drv(11000, 11105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QChildEvent::removed()
func (q *QChildEvent) Removed() bool {
	var __rv bool
	q.Drv(11000, 11106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QCloseEvent : QCloseEvent
type QCloseEvent struct {
	QEvent
}

//QCloseEvent::QCloseEvent()
func NewCloseEvent() *QCloseEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 12000, 12102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCloseEvent{}
	_p.SetDriver(__rv, 12000, true)
	return _p
}

//enum QColor_Spec - QColor::Spec
type QColor_Spec uint32

const (
	QColor_Invalid QColor_Spec = 0
	QColor_Rgb     QColor_Spec = 1
	QColor_Hsv     QColor_Spec = 2
	QColor_Cmyk    QColor_Spec = 3
	QColor_Hsl     QColor_Spec = 4
)

//struct QColor : QColor
type QColor struct {
	BaseDrv
}

//QColor::QColor()
func NewColor() *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(QColor const&)
func NewColorCopy(color *QColor) *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13103, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(QColor::Spec)
func NewColorWithSpec(spec QColor_Spec) *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13104, unsafe.Pointer(&spec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(QString const&)
func NewColorWithName(name string) *QColor {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13105, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(Qt::GlobalColor)
func NewColorWithGlobalcolor(color Qt_GlobalColor) *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13106, unsafe.Pointer(&color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(unsigned int)
func NewColorWithRgb(rgb uint32) *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13107, unsafe.Pointer(&rgb), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::QColor(int,int,int,int)
func NewColorWithInt32Int32Int32Int32(r int32, g int32, b int32, a int32) *QColor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 13000, 13108, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColor{}
	_p.SetDriver(__rv, 13000, true)
	return _p
}

//QColor::alpha()
func (q *QColor) Alpha() int32 {
	var __rv int32
	q.Drv(13000, 13109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::alphaF()
func (q *QColor) AlphaF() float64 {
	var __rv float64
	q.Drv(13000, 13110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::black()
func (q *QColor) Black() int32 {
	var __rv int32
	q.Drv(13000, 13111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::blackF()
func (q *QColor) BlackF() float64 {
	var __rv float64
	q.Drv(13000, 13112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::blue()
func (q *QColor) Blue() int32 {
	var __rv int32
	q.Drv(13000, 13113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::blueF()
func (q *QColor) BlueF() float64 {
	var __rv float64
	q.Drv(13000, 13114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::colorNames()
func QColorColorNames() []string {
	var __rv []string
	DirectQtDrv(nil, 13000, 13115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::colorNames()
func (q *QColor) ColorNames() []string {
	var __rv []string
	q.Drv(13000, 13115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::convertTo(QColor::Spec)
func (q *QColor) ConvertTo(colorSpec QColor_Spec) *QColor {
	var __rv uintptr
	q.Drv(13000, 13116, unsafe.Pointer(&colorSpec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::cyan()
func (q *QColor) Cyan() int32 {
	var __rv int32
	q.Drv(13000, 13117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::cyanF()
func (q *QColor) CyanF() float64 {
	var __rv float64
	q.Drv(13000, 13118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::dark()
func (q *QColor) Dark() *QColor {
	var __rv uintptr
	q.Drv(13000, 13119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::dark(int)
func (q *QColor) DarkWithInt32(f int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13120, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::darker()
func (q *QColor) Darker() *QColor {
	var __rv uintptr
	q.Drv(13000, 13121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::darker(int)
func (q *QColor) DarkerWithInt32(f int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13122, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromCmyk(int,int,int,int,int)
func QColorFromCmyk(c int32, m int32, y int32, k int32, a int32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13123, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromCmyk(int,int,int,int,int)
func (q *QColor) FromCmyk(c int32, m int32, y int32, k int32, a int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13123, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromCmykF(double,double,double,double,double)
func QColorFromCmykF(c float64, m float64, y float64, k float64, a float64) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13124, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromCmykF(double,double,double,double,double)
func (q *QColor) FromCmykF(c float64, m float64, y float64, k float64, a float64) *QColor {
	var __rv uintptr
	q.Drv(13000, 13124, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsl(int,int,int,int)
func QColorFromHsl(h int32, s int32, l int32, a int32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13125, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsl(int,int,int,int)
func (q *QColor) FromHsl(h int32, s int32, l int32, a int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13125, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHslF(double,double,double,double)
func QColorFromHslF(h float64, s float64, l float64, a float64) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13126, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHslF(double,double,double,double)
func (q *QColor) FromHslF(h float64, s float64, l float64, a float64) *QColor {
	var __rv uintptr
	q.Drv(13000, 13126, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsv(int,int,int,int)
func QColorFromHsv(h int32, s int32, v int32, a int32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13127, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsv(int,int,int,int)
func (q *QColor) FromHsv(h int32, s int32, v int32, a int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13127, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsvF(double,double,double,double)
func QColorFromHsvF(h float64, s float64, v float64, a float64) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13128, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromHsvF(double,double,double,double)
func (q *QColor) FromHsvF(h float64, s float64, v float64, a float64) *QColor {
	var __rv uintptr
	q.Drv(13000, 13128, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgb(unsigned int)
func QColorFromRgb(rgb uint32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13129, unsafe.Pointer(&rgb), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgb(unsigned int)
func (q *QColor) FromRgb(rgb uint32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13129, unsafe.Pointer(&rgb), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgb(int,int,int,int)
func QColorFromRgbWithInt32Int32Int32Int32(r int32, g int32, b int32, a int32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13130, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgb(int,int,int,int)
func (q *QColor) FromRgbWithInt32Int32Int32Int32(r int32, g int32, b int32, a int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13130, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgbF(double,double,double,double)
func QColorFromRgbF(r float64, g float64, b float64, a float64) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13131, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgbF(double,double,double,double)
func (q *QColor) FromRgbF(r float64, g float64, b float64, a float64) *QColor {
	var __rv uintptr
	q.Drv(13000, 13131, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgba(unsigned int)
func QColorFromRgba(rgba uint32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 13000, 13132, unsafe.Pointer(&rgba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::fromRgba(unsigned int)
func (q *QColor) FromRgba(rgba uint32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13132, unsafe.Pointer(&rgba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::getCmyk(int*,int*,int*,int*,int*)
func (q *QColor) GetCmyk(c *int32, m *int32, y *int32, k *int32, a *int32) {
	q.Drv(13000, 13133, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getCmykF(double*,double*,double*,double*,double*)
func (q *QColor) GetCmykF(c *float64, m *float64, y *float64, k *float64, a *float64) {
	q.Drv(13000, 13134, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getHsl(int*,int*,int*,int*)
func (q *QColor) GetHsl(h *int32, s *int32, l *int32, a *int32) {
	q.Drv(13000, 13135, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getHslF(double*,double*,double*,double*)
func (q *QColor) GetHslF(h *float64, s *float64, l *float64, a *float64) {
	q.Drv(13000, 13136, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getHsv(int*,int*,int*,int*)
func (q *QColor) GetHsv(h *int32, s *int32, v *int32, a *int32) {
	q.Drv(13000, 13137, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getHsvF(double*,double*,double*,double*)
func (q *QColor) GetHsvF(h *float64, s *float64, v *float64, a *float64) {
	q.Drv(13000, 13138, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getRgb(int*,int*,int*,int*)
func (q *QColor) GetRgb(r *int32, g *int32, b *int32, a *int32) {
	q.Drv(13000, 13139, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::getRgbF(double*,double*,double*,double*)
func (q *QColor) GetRgbF(r *float64, g *float64, b *float64, a *float64) {
	q.Drv(13000, 13140, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::green()
func (q *QColor) Green() int32 {
	var __rv int32
	q.Drv(13000, 13141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::greenF()
func (q *QColor) GreenF() float64 {
	var __rv float64
	q.Drv(13000, 13142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hslHue()
func (q *QColor) HslHue() int32 {
	var __rv int32
	q.Drv(13000, 13143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hslHueF()
func (q *QColor) HslHueF() float64 {
	var __rv float64
	q.Drv(13000, 13144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hslSaturation()
func (q *QColor) HslSaturation() int32 {
	var __rv int32
	q.Drv(13000, 13145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hslSaturationF()
func (q *QColor) HslSaturationF() float64 {
	var __rv float64
	q.Drv(13000, 13146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hsvHue()
func (q *QColor) HsvHue() int32 {
	var __rv int32
	q.Drv(13000, 13147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hsvHueF()
func (q *QColor) HsvHueF() float64 {
	var __rv float64
	q.Drv(13000, 13148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hsvSaturation()
func (q *QColor) HsvSaturation() int32 {
	var __rv int32
	q.Drv(13000, 13149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hsvSaturationF()
func (q *QColor) HsvSaturationF() float64 {
	var __rv float64
	q.Drv(13000, 13150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hue()
func (q *QColor) Hue() int32 {
	var __rv int32
	q.Drv(13000, 13151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::hueF()
func (q *QColor) HueF() float64 {
	var __rv float64
	q.Drv(13000, 13152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::isValid()
func (q *QColor) IsValid() bool {
	var __rv bool
	q.Drv(13000, 13153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::isValidColor(QString const&)
func QColorIsValidColor(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	DirectQtDrv(nil, 13000, 13154, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::isValidColor(QString const&)
func (q *QColor) IsValidColor(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	q.Drv(13000, 13154, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::light()
func (q *QColor) Light() *QColor {
	var __rv uintptr
	q.Drv(13000, 13155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::light(int)
func (q *QColor) LightWithInt32(f int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13156, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::lighter()
func (q *QColor) Lighter() *QColor {
	var __rv uintptr
	q.Drv(13000, 13157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::lighter(int)
func (q *QColor) LighterWithInt32(f int32) *QColor {
	var __rv uintptr
	q.Drv(13000, 13158, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::lightness()
func (q *QColor) Lightness() int32 {
	var __rv int32
	q.Drv(13000, 13159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::lightnessF()
func (q *QColor) LightnessF() float64 {
	var __rv float64
	q.Drv(13000, 13160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::magenta()
func (q *QColor) Magenta() int32 {
	var __rv int32
	q.Drv(13000, 13161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::magentaF()
func (q *QColor) MagentaF() float64 {
	var __rv float64
	q.Drv(13000, 13162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::name()
func (q *QColor) Name() string {
	var __rv C.string_head
	q.Drv(13000, 13163, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QColor::red()
func (q *QColor) Red() int32 {
	var __rv int32
	q.Drv(13000, 13164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::redF()
func (q *QColor) RedF() float64 {
	var __rv float64
	q.Drv(13000, 13165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::rgb()
func (q *QColor) Rgb() uint32 {
	var __rv uint32
	q.Drv(13000, 13166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::rgba()
func (q *QColor) Rgba() uint32 {
	var __rv uint32
	q.Drv(13000, 13167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::saturation()
func (q *QColor) Saturation() int32 {
	var __rv int32
	q.Drv(13000, 13168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::saturationF()
func (q *QColor) SaturationF() float64 {
	var __rv float64
	q.Drv(13000, 13169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::setAlpha(int)
func (q *QColor) SetAlpha(alpha int32) {
	q.Drv(13000, 13170, unsafe.Pointer(&alpha), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setAlphaF(double)
func (q *QColor) SetAlphaF(alpha float64) {
	q.Drv(13000, 13171, unsafe.Pointer(&alpha), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setBlue(int)
func (q *QColor) SetBlue(blue int32) {
	q.Drv(13000, 13172, unsafe.Pointer(&blue), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setBlueF(double)
func (q *QColor) SetBlueF(blue float64) {
	q.Drv(13000, 13173, unsafe.Pointer(&blue), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setCmyk(int,int,int,int,int)
func (q *QColor) SetCmyk(c int32, m int32, y int32, k int32, a int32) {
	q.Drv(13000, 13174, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setCmykF(double,double,double,double,double)
func (q *QColor) SetCmykF(c float64, m float64, y float64, k float64, a float64) {
	q.Drv(13000, 13175, unsafe.Pointer(&c), unsafe.Pointer(&m), unsafe.Pointer(&y), unsafe.Pointer(&k), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setGreen(int)
func (q *QColor) SetGreen(green int32) {
	q.Drv(13000, 13176, unsafe.Pointer(&green), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setGreenF(double)
func (q *QColor) SetGreenF(green float64) {
	q.Drv(13000, 13177, unsafe.Pointer(&green), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setHsl(int,int,int,int)
func (q *QColor) SetHsl(h int32, s int32, l int32, a int32) {
	q.Drv(13000, 13178, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setHslF(double,double,double,double)
func (q *QColor) SetHslF(h float64, s float64, l float64, a float64) {
	q.Drv(13000, 13179, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&l), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setHsv(int,int,int,int)
func (q *QColor) SetHsv(h int32, s int32, v int32, a int32) {
	q.Drv(13000, 13180, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setHsvF(double,double,double,double)
func (q *QColor) SetHsvF(h float64, s float64, v float64, a float64) {
	q.Drv(13000, 13181, unsafe.Pointer(&h), unsafe.Pointer(&s), unsafe.Pointer(&v), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setNamedColor(QString const&)
func (q *QColor) SetNamedColor(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(13000, 13182, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRed(int)
func (q *QColor) SetRed(red int32) {
	q.Drv(13000, 13183, unsafe.Pointer(&red), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRedF(double)
func (q *QColor) SetRedF(red float64) {
	q.Drv(13000, 13184, unsafe.Pointer(&red), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRgb(unsigned int)
func (q *QColor) SetRgb(rgb uint32) {
	q.Drv(13000, 13185, unsafe.Pointer(&rgb), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRgb(int,int,int,int)
func (q *QColor) SetRgbWithInt32Int32Int32Int32(r int32, g int32, b int32, a int32) {
	q.Drv(13000, 13186, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRgbF(double,double,double,double)
func (q *QColor) SetRgbF(r float64, g float64, b float64, a float64) {
	q.Drv(13000, 13187, unsafe.Pointer(&r), unsafe.Pointer(&g), unsafe.Pointer(&b), unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::setRgba(unsigned int)
func (q *QColor) SetRgba(rgba uint32) {
	q.Drv(13000, 13188, unsafe.Pointer(&rgba), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColor::spec()
func (q *QColor) Spec() QColor_Spec {
	var __rv QColor_Spec
	q.Drv(13000, 13189, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::toCmyk()
func (q *QColor) ToCmyk() *QColor {
	var __rv uintptr
	q.Drv(13000, 13190, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::toHsl()
func (q *QColor) ToHsl() *QColor {
	var __rv uintptr
	q.Drv(13000, 13191, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::toHsv()
func (q *QColor) ToHsv() *QColor {
	var __rv uintptr
	q.Drv(13000, 13192, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::toRgb()
func (q *QColor) ToRgb() *QColor {
	var __rv uintptr
	q.Drv(13000, 13193, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColor::value()
func (q *QColor) Value() int32 {
	var __rv int32
	q.Drv(13000, 13194, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::valueF()
func (q *QColor) ValueF() float64 {
	var __rv float64
	q.Drv(13000, 13195, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::yellow()
func (q *QColor) Yellow() int32 {
	var __rv int32
	q.Drv(13000, 13196, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColor::yellowF()
func (q *QColor) YellowF() float64 {
	var __rv float64
	q.Drv(13000, 13197, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QColormap_Mode - QColormap::Mode
type QColormap_Mode uint32

const (
	QColormap_Direct  QColormap_Mode = 0
	QColormap_Indexed QColormap_Mode = 1
	QColormap_Gray    QColormap_Mode = 2
)

//struct QColormap : QColormap
type QColormap struct {
	BaseDrv
}

//QColormap::QColormap(QColormap const&)
func NewColormap(colormap *QColormap) *QColormap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 14000, 14102, Native(colormap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColormap{}
	_p.SetDriver(__rv, 14000, true)
	return _p
}

//QColormap::cleanup()
func QColormapCleanup() {
	DirectQtDrv(nil, 14000, 14103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColormap::cleanup()
func (q *QColormap) Cleanup() {
	q.Drv(14000, 14103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColormap::colorAt(unsigned int)
func (q *QColormap) ColorAt(pixel uint32) *QColor {
	var __rv uintptr
	q.Drv(14000, 14104, unsafe.Pointer(&pixel), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColormap::colormap()
func (q *QColormap) Colormap() []*QColor {
	var __rv []*QColor
	q.Drv(14000, 14105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColormap::depth()
func (q *QColormap) Depth() int32 {
	var __rv int32
	q.Drv(14000, 14106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColormap::initialize()
func QColormapInitialize() {
	DirectQtDrv(nil, 14000, 14107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColormap::initialize()
func (q *QColormap) Initialize() {
	q.Drv(14000, 14107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColormap::instance()
func QColormapInstance() *QColormap {
	var __rv uintptr
	DirectQtDrv(nil, 14000, 14108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColormap{}
	_rp.SetDriver(__rv, 14000, true)
	return _rp
}

//QColormap::instance()
func (q *QColormap) Instance() *QColormap {
	var __rv uintptr
	q.Drv(14000, 14108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColormap{}
	_rp.SetDriver(__rv, 14000, true)
	return _rp
}

//QColormap::instance(int)
func QColormapInstanceWithScreen(screen int32) *QColormap {
	var __rv uintptr
	DirectQtDrv(nil, 14000, 14109, unsafe.Pointer(&screen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColormap{}
	_rp.SetDriver(__rv, 14000, true)
	return _rp
}

//QColormap::instance(int)
func (q *QColormap) InstanceWithScreen(screen int32) *QColormap {
	var __rv uintptr
	q.Drv(14000, 14109, unsafe.Pointer(&screen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColormap{}
	_rp.SetDriver(__rv, 14000, true)
	return _rp
}

//QColormap::mode()
func (q *QColormap) Mode() QColormap_Mode {
	var __rv QColormap_Mode
	q.Drv(14000, 14110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColormap::pixel(QColor const&)
func (q *QColormap) Pixel(color *QColor) uint32 {
	var __rv uint32
	q.Drv(14000, 14111, Native(color), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColormap::size()
func (q *QColormap) Size() int32 {
	var __rv int32
	q.Drv(14000, 14112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QConicalGradient : QConicalGradient
type QConicalGradient struct {
	QGradient
}

//QConicalGradient::QConicalGradient()
func NewConicalGradient() *QConicalGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 15000, 15102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QConicalGradient{}
	_p.SetDriver(__rv, 15000, true)
	return _p
}

//QConicalGradient::QConicalGradient(QPointF const&,double)
func NewConicalGradientWithCenterStartangle(center *QPointF, startAngle float64) *QConicalGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 15000, 15103, Native(center), unsafe.Pointer(&startAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QConicalGradient{}
	_p.SetDriver(__rv, 15000, true)
	return _p
}

//QConicalGradient::QConicalGradient(double,double,double)
func NewConicalGradientWithCxCyStartangle(cx float64, cy float64, startAngle float64) *QConicalGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 15000, 15104, unsafe.Pointer(&cx), unsafe.Pointer(&cy), unsafe.Pointer(&startAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QConicalGradient{}
	_p.SetDriver(__rv, 15000, true)
	return _p
}

//QConicalGradient::angle()
func (q *QConicalGradient) Angle() float64 {
	var __rv float64
	q.Drv(15000, 15105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QConicalGradient::center()
func (q *QConicalGradient) Center() *QPointF {
	var __rv uintptr
	q.Drv(15000, 15106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QConicalGradient::setAngle(double)
func (q *QConicalGradient) SetAngle(angle float64) {
	q.Drv(15000, 15107, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QConicalGradient::setCenter(QPointF const&)
func (q *QConicalGradient) SetCenter(center *QPointF) {
	q.Drv(15000, 15108, Native(center), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QConicalGradient::setCenter(double,double)
func (q *QConicalGradient) SetCenterFWithXY(x float64, y float64) {
	q.Drv(15000, 15109, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QContextMenuEvent_Reason - QContextMenuEvent::Reason
type QContextMenuEvent_Reason uint32

const (
	QContextMenuEvent_Mouse    QContextMenuEvent_Reason = 0
	QContextMenuEvent_Keyboard QContextMenuEvent_Reason = 1
	QContextMenuEvent_Other    QContextMenuEvent_Reason = 2
)

//struct QContextMenuEvent : QContextMenuEvent
type QContextMenuEvent struct {
	QInputEvent
}

//QContextMenuEvent::QContextMenuEvent(QContextMenuEvent::Reason,QPoint const&)
func NewContextMenuEvent(reason QContextMenuEvent_Reason, pos *QPoint) *QContextMenuEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 16000, 16102, unsafe.Pointer(&reason), Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QContextMenuEvent{}
	_p.SetDriver(__rv, 16000, true)
	return _p
}

//QContextMenuEvent::QContextMenuEvent(QContextMenuEvent::Reason,QPoint const&,QPoint const&)
func NewContextMenuEventWithReasonPosGlobalpos(reason QContextMenuEvent_Reason, pos *QPoint, globalPos *QPoint) *QContextMenuEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 16000, 16103, unsafe.Pointer(&reason), Native(pos), Native(globalPos), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QContextMenuEvent{}
	_p.SetDriver(__rv, 16000, true)
	return _p
}

//QContextMenuEvent::QContextMenuEvent(QContextMenuEvent::Reason,QPoint const&,QPoint const&,QFlags<Qt::KeyboardModifier>)
func NewContextMenuEventWithReasonPosGlobalposModifiers(reason QContextMenuEvent_Reason, pos *QPoint, globalPos *QPoint, modifiers Qt_KeyboardModifier) *QContextMenuEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 16000, 16104, unsafe.Pointer(&reason), Native(pos), Native(globalPos), unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QContextMenuEvent{}
	_p.SetDriver(__rv, 16000, true)
	return _p
}

//QContextMenuEvent::globalPos()
func (q *QContextMenuEvent) GlobalPos() *QPoint {
	var __rv uintptr
	q.Drv(16000, 16105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QContextMenuEvent::globalX()
func (q *QContextMenuEvent) GlobalX() int32 {
	var __rv int32
	q.Drv(16000, 16106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QContextMenuEvent::globalY()
func (q *QContextMenuEvent) GlobalY() int32 {
	var __rv int32
	q.Drv(16000, 16107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QContextMenuEvent::pos()
func (q *QContextMenuEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(16000, 16108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QContextMenuEvent::reason()
func (q *QContextMenuEvent) Reason() QContextMenuEvent_Reason {
	var __rv QContextMenuEvent_Reason
	q.Drv(16000, 16109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QContextMenuEvent::x()
func (q *QContextMenuEvent) X() int32 {
	var __rv int32
	q.Drv(16000, 16110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QContextMenuEvent::y()
func (q *QContextMenuEvent) Y() int32 {
	var __rv int32
	q.Drv(16000, 16111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QCryptographicHash_Algorithm - QCryptographicHash::Algorithm
type QCryptographicHash_Algorithm uint32

const (
	QCryptographicHash_Md4  QCryptographicHash_Algorithm = 0
	QCryptographicHash_Md5  QCryptographicHash_Algorithm = 1
	QCryptographicHash_Sha1 QCryptographicHash_Algorithm = 2
)

//struct QCryptographicHash : QCryptographicHash
type QCryptographicHash struct {
	BaseDrv
}

//QCryptographicHash::QCryptographicHash(QCryptographicHash::Algorithm)
func NewCryptographicHash(method QCryptographicHash_Algorithm) *QCryptographicHash {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 17000, 17102, unsafe.Pointer(&method), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCryptographicHash{}
	_p.SetDriver(__rv, 17000, true)
	return _p
}

//QCryptographicHash::addData(QByteArray const&)
func (q *QCryptographicHash) AddData(data []byte) {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	q.Drv(17000, 17103, unsafe.Pointer(_data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCryptographicHash::hash(QByteArray const&,QCryptographicHash::Algorithm)
func QCryptographicHashHash(data []byte, method QCryptographicHash_Algorithm) []byte {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv []byte
	DirectQtDrv(nil, 17000, 17104, unsafe.Pointer(_data), unsafe.Pointer(&method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCryptographicHash::hash(QByteArray const&,QCryptographicHash::Algorithm)
func (q *QCryptographicHash) Hash(data []byte, method QCryptographicHash_Algorithm) []byte {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv []byte
	q.Drv(17000, 17104, unsafe.Pointer(_data), unsafe.Pointer(&method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCryptographicHash::reset()
func (q *QCryptographicHash) Reset() {
	q.Drv(17000, 17105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCryptographicHash::result()
func (q *QCryptographicHash) Result() []byte {
	var __rv []byte
	q.Drv(17000, 17106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QCursor : QCursor
type QCursor struct {
	BaseDrv
}

//QCursor::QCursor()
func NewCursor() *QCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 18000, 18102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCursor{}
	_p.SetDriver(__rv, 18000, true)
	return _p
}

//QCursor::QCursor(QCursor const&)
func NewCursorCopy(cursor *QCursor) *QCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 18000, 18103, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCursor{}
	_p.SetDriver(__rv, 18000, true)
	return _p
}

//QCursor::QCursor(Qt::CursorShape)
func NewCursorWithShape(shape Qt_CursorShape) *QCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 18000, 18104, unsafe.Pointer(&shape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCursor{}
	_p.SetDriver(__rv, 18000, true)
	return _p
}

//QCursor::QCursor(QPixmap const&,int,int)
func NewCursorWithPixmapHotxHoty(pixmap *QPixmap, hotX int32, hotY int32) *QCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 18000, 18105, Native(pixmap), unsafe.Pointer(&hotX), unsafe.Pointer(&hotY), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCursor{}
	_p.SetDriver(__rv, 18000, true)
	return _p
}

//QCursor::QCursor(QBitmap const&,QBitmap const&,int,int)
func NewCursorWithBitmapMaskHotxHoty(bitmap *QBitmap, mask *QBitmap, hotX int32, hotY int32) *QCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 18000, 18106, Native(bitmap), Native(mask), unsafe.Pointer(&hotX), unsafe.Pointer(&hotY), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCursor{}
	_p.SetDriver(__rv, 18000, true)
	return _p
}

//QCursor::bitmap()
func (q *QCursor) Bitmap() *QBitmap {
	var __rv uintptr
	q.Drv(18000, 18107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QCursor::hotSpot()
func (q *QCursor) HotSpot() *QPoint {
	var __rv uintptr
	q.Drv(18000, 18108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QCursor::mask()
func (q *QCursor) Mask() *QBitmap {
	var __rv uintptr
	q.Drv(18000, 18109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QCursor::pixmap()
func (q *QCursor) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(18000, 18110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QCursor::pos()
func QCursorPos() *QPoint {
	var __rv uintptr
	DirectQtDrv(nil, 18000, 18111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QCursor::pos()
func (q *QCursor) Pos() *QPoint {
	var __rv uintptr
	q.Drv(18000, 18111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QCursor::setPos(QPoint const&)
func QCursorSetPos(p *QPoint) {
	DirectQtDrv(nil, 18000, 18112, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCursor::setPos(QPoint const&)
func (q *QCursor) SetPos(p *QPoint) {
	q.Drv(18000, 18112, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCursor::setPos(int,int)
func QCursorSetPosWithXY(x int32, y int32) {
	DirectQtDrv(nil, 18000, 18113, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCursor::setPos(int,int)
func (q *QCursor) SetPosWithXY(x int32, y int32) {
	q.Drv(18000, 18113, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCursor::setShape(Qt::CursorShape)
func (q *QCursor) SetShape(newShape Qt_CursorShape) {
	q.Drv(18000, 18114, unsafe.Pointer(&newShape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCursor::shape()
func (q *QCursor) Shape() Qt_CursorShape {
	var __rv Qt_CursorShape
	q.Drv(18000, 18115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDate_MonthNameType - QDate::MonthNameType
type QDate_MonthNameType uint32

const (
	QDate_DateFormat       QDate_MonthNameType = 0
	QDate_StandaloneFormat QDate_MonthNameType = 0
)

//struct QDate : QDate
type QDate struct {
	BaseDrv
}

//QDate::QDate()
func NewDate() *QDate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 19000, 19102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDate{}
	_p.SetDriver(__rv, 19000, true)
	return _p
}

//QDate::QDate(QDate const&)
func NewDateCopy(other *QDate) *QDate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 19000, 19103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDate{}
	_p.SetDriver(__rv, 19000, true)
	return _p
}

//QDate::QDate(int,int,int)
func NewDateWithYInt32Int32(y int32, m int32, d int32) *QDate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 19000, 19104, unsafe.Pointer(&y), unsafe.Pointer(&m), unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDate{}
	_p.SetDriver(__rv, 19000, true)
	return _p
}

//QDate::addDays(int)
func (q *QDate) AddDays(days int32) *QDate {
	var __rv uintptr
	q.Drv(19000, 19105, unsafe.Pointer(&days), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::addMonths(int)
func (q *QDate) AddMonths(months int32) *QDate {
	var __rv uintptr
	q.Drv(19000, 19106, unsafe.Pointer(&months), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::addYears(int)
func (q *QDate) AddYears(years int32) *QDate {
	var __rv uintptr
	q.Drv(19000, 19107, unsafe.Pointer(&years), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::currentDate()
func QDateCurrentDate() *QDate {
	var __rv uintptr
	DirectQtDrv(nil, 19000, 19108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::currentDate()
func (q *QDate) CurrentDate() *QDate {
	var __rv uintptr
	q.Drv(19000, 19108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::day()
func (q *QDate) Day() int32 {
	var __rv int32
	q.Drv(19000, 19109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::dayOfWeek()
func (q *QDate) DayOfWeek() int32 {
	var __rv int32
	q.Drv(19000, 19110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::dayOfYear()
func (q *QDate) DayOfYear() int32 {
	var __rv int32
	q.Drv(19000, 19111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::daysInMonth()
func (q *QDate) DaysInMonth() int32 {
	var __rv int32
	q.Drv(19000, 19112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::daysInYear()
func (q *QDate) DaysInYear() int32 {
	var __rv int32
	q.Drv(19000, 19113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::daysTo(QDate const&)
func (q *QDate) DaysTo(value *QDate) int32 {
	var __rv int32
	q.Drv(19000, 19114, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::fromJulianDay(int)
func QDateFromJulianDay(jd int32) *QDate {
	var __rv uintptr
	DirectQtDrv(nil, 19000, 19115, unsafe.Pointer(&jd), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromJulianDay(int)
func (q *QDate) FromJulianDay(jd int32) *QDate {
	var __rv uintptr
	q.Drv(19000, 19115, unsafe.Pointer(&jd), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&)
func QDateFromString(s string) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 19000, 19116, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&)
func (q *QDate) FromString(s string) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(19000, 19116, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&,QString const&)
func QDateFromStringWithTextFormat(s string, format string) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	DirectQtDrv(nil, 19000, 19117, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&,QString const&)
func (q *QDate) FromStringWithTextFormat(s string, format string) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(19000, 19117, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&,Qt::DateFormat)
func QDateFromStringWithTextDateformat(s string, f Qt_DateFormat) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 19000, 19118, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::fromString(QString const&,Qt::DateFormat)
func (q *QDate) FromStringWithTextDateformat(s string, f Qt_DateFormat) *QDate {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(19000, 19118, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDate::getDate(int*,int*,int*)
func (q *QDate) GetDate(year *int32, month *int32, day *int32) {
	q.Drv(19000, 19119, unsafe.Pointer(&year), unsafe.Pointer(&month), unsafe.Pointer(&day), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDate::isLeapYear(int)
func QDateIsLeapYear(year int32) bool {
	var __rv bool
	DirectQtDrv(nil, 19000, 19120, unsafe.Pointer(&year), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::isLeapYear(int)
func (q *QDate) IsLeapYear(year int32) bool {
	var __rv bool
	q.Drv(19000, 19120, unsafe.Pointer(&year), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::isNull()
func (q *QDate) IsNull() bool {
	var __rv bool
	q.Drv(19000, 19121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::isValid()
func (q *QDate) IsValid() bool {
	var __rv bool
	q.Drv(19000, 19122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::isValid(int,int,int)
func QDateIsValidWithYInt32Int32(y int32, m int32, d int32) bool {
	var __rv bool
	DirectQtDrv(nil, 19000, 19123, unsafe.Pointer(&y), unsafe.Pointer(&m), unsafe.Pointer(&d), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::isValid(int,int,int)
func (q *QDate) IsValidWithYInt32Int32(y int32, m int32, d int32) bool {
	var __rv bool
	q.Drv(19000, 19123, unsafe.Pointer(&y), unsafe.Pointer(&m), unsafe.Pointer(&d), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::longDayName(int)
func QDateLongDayName(weekday int32) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19124, unsafe.Pointer(&weekday), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longDayName(int)
func (q *QDate) LongDayName(weekday int32) string {
	var __rv C.string_head
	q.Drv(19000, 19124, unsafe.Pointer(&weekday), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longDayName(int,QDate::MonthNameType)
func QDateLongDayNameWithWeekdayType(weekday int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19125, unsafe.Pointer(&weekday), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longDayName(int,QDate::MonthNameType)
func (q *QDate) LongDayNameWithWeekdayType(weekday int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	q.Drv(19000, 19125, unsafe.Pointer(&weekday), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longMonthName(int)
func QDateLongMonthName(month int32) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19126, unsafe.Pointer(&month), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longMonthName(int)
func (q *QDate) LongMonthName(month int32) string {
	var __rv C.string_head
	q.Drv(19000, 19126, unsafe.Pointer(&month), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longMonthName(int,QDate::MonthNameType)
func QDateLongMonthNameWithMonthType(month int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19127, unsafe.Pointer(&month), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::longMonthName(int,QDate::MonthNameType)
func (q *QDate) LongMonthNameWithMonthType(month int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	q.Drv(19000, 19127, unsafe.Pointer(&month), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::month()
func (q *QDate) Month() int32 {
	var __rv int32
	q.Drv(19000, 19128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::setDate(int,int,int)
func (q *QDate) SetDate(year int32, month int32, day int32) bool {
	var __rv bool
	q.Drv(19000, 19129, unsafe.Pointer(&year), unsafe.Pointer(&month), unsafe.Pointer(&day), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::shortDayName(int)
func QDateShortDayName(weekday int32) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19130, unsafe.Pointer(&weekday), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortDayName(int)
func (q *QDate) ShortDayName(weekday int32) string {
	var __rv C.string_head
	q.Drv(19000, 19130, unsafe.Pointer(&weekday), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortDayName(int,QDate::MonthNameType)
func QDateShortDayNameWithWeekdayType(weekday int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19131, unsafe.Pointer(&weekday), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortDayName(int,QDate::MonthNameType)
func (q *QDate) ShortDayNameWithWeekdayType(weekday int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	q.Drv(19000, 19131, unsafe.Pointer(&weekday), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortMonthName(int)
func QDateShortMonthName(month int32) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19132, unsafe.Pointer(&month), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortMonthName(int)
func (q *QDate) ShortMonthName(month int32) string {
	var __rv C.string_head
	q.Drv(19000, 19132, unsafe.Pointer(&month), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortMonthName(int,QDate::MonthNameType)
func QDateShortMonthNameWithMonthType(month int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	DirectQtDrv(nil, 19000, 19133, unsafe.Pointer(&month), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::shortMonthName(int,QDate::MonthNameType)
func (q *QDate) ShortMonthNameWithMonthType(month int32, _type QDate_MonthNameType) string {
	var __rv C.string_head
	q.Drv(19000, 19133, unsafe.Pointer(&month), unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::toJulianDay()
func (q *QDate) ToJulianDay() int32 {
	var __rv int32
	q.Drv(19000, 19134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::toString()
func (q *QDate) ToString() string {
	var __rv C.string_head
	q.Drv(19000, 19135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::toString(QString const&)
func (q *QDate) ToStringWithFormat(format string) string {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv C.string_head
	q.Drv(19000, 19136, unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::toString(Qt::DateFormat)
func (q *QDate) ToStringWithDateformat(f Qt_DateFormat) string {
	var __rv C.string_head
	q.Drv(19000, 19137, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDate::weekNumber()
func (q *QDate) WeekNumber() int32 {
	var __rv int32
	q.Drv(19000, 19138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::weekNumber(int*)
func (q *QDate) WeekNumberWithYearnum(yearNum *int32) int32 {
	var __rv int32
	q.Drv(19000, 19139, unsafe.Pointer(&yearNum), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDate::year()
func (q *QDate) Year() int32 {
	var __rv int32
	q.Drv(19000, 19140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QDateTime : QDateTime
type QDateTime struct {
	BaseDrv
}

//QDateTime::QDateTime()
func NewDateTime() *QDateTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 20000, 20102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTime{}
	_p.SetDriver(__rv, 20000, true)
	return _p
}

//QDateTime::QDateTime(QDate const&)
func NewDateTimeWithDate(value *QDate) *QDateTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 20000, 20103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTime{}
	_p.SetDriver(__rv, 20000, true)
	return _p
}

//QDateTime::QDateTime(QDateTime const&)
func NewDateTimeCopy(other *QDateTime) *QDateTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 20000, 20104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTime{}
	_p.SetDriver(__rv, 20000, true)
	return _p
}

//QDateTime::QDateTime(QDate const&,QTime const&,Qt::TimeSpec)
func NewDateTimeWithDateTimeSpec(value2 *QDate, value3 *QTime, spec Qt_TimeSpec) *QDateTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 20000, 20105, Native(value2), Native(value3), unsafe.Pointer(&spec), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTime{}
	_p.SetDriver(__rv, 20000, true)
	return _p
}

//QDateTime::addDays(int)
func (q *QDateTime) AddDays(days int32) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20106, unsafe.Pointer(&days), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::addMSecs(qint64)
func (q *QDateTime) AddMSecs(msecs int64) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20107, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::addMonths(int)
func (q *QDateTime) AddMonths(months int32) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20108, unsafe.Pointer(&months), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::addSecs(int)
func (q *QDateTime) AddSecs(secs int32) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20109, unsafe.Pointer(&secs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::addYears(int)
func (q *QDateTime) AddYears(years int32) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20110, unsafe.Pointer(&years), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::currentDateTime()
func QDateTimeCurrentDateTime() *QDateTime {
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::currentDateTime()
func (q *QDateTime) CurrentDateTime() *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::currentDateTimeUtc()
func QDateTimeCurrentDateTimeUtc() *QDateTime {
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::currentDateTimeUtc()
func (q *QDateTime) CurrentDateTimeUtc() *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::currentMSecsSinceEpoch()
func QDateTimeCurrentMSecsSinceEpoch() int64 {
	var __rv int64
	DirectQtDrv(nil, 20000, 20113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::currentMSecsSinceEpoch()
func (q *QDateTime) CurrentMSecsSinceEpoch() int64 {
	var __rv int64
	q.Drv(20000, 20113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::date()
func (q *QDateTime) Date() *QDate {
	var __rv uintptr
	q.Drv(20000, 20114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDateTime::daysTo(QDateTime const&)
func (q *QDateTime) DaysTo(value *QDateTime) int32 {
	var __rv int32
	q.Drv(20000, 20115, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::fromMSecsSinceEpoch(qint64)
func QDateTimeFromMSecsSinceEpoch(msecs int64) *QDateTime {
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20116, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromMSecsSinceEpoch(qint64)
func (q *QDateTime) FromMSecsSinceEpoch(msecs int64) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20116, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&)
func QDateTimeFromString(s string) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20117, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&)
func (q *QDateTime) FromString(s string) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(20000, 20117, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&,QString const&)
func QDateTimeFromStringWithTextFormat(s string, format string) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20118, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&,QString const&)
func (q *QDateTime) FromStringWithTextFormat(s string, format string) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(20000, 20118, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&,Qt::DateFormat)
func QDateTimeFromStringWithTextDateformat(s string, f Qt_DateFormat) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20119, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromString(QString const&,Qt::DateFormat)
func (q *QDateTime) FromStringWithTextDateformat(s string, f Qt_DateFormat) *QDateTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(20000, 20119, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromTime_t(unsigned int)
func QDateTimeFromTime_t(secsSince1Jan1970UTC uint32) *QDateTime {
	var __rv uintptr
	DirectQtDrv(nil, 20000, 20120, unsafe.Pointer(&secsSince1Jan1970UTC), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::fromTime_t(unsigned int)
func (q *QDateTime) FromTime_t(secsSince1Jan1970UTC uint32) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20120, unsafe.Pointer(&secsSince1Jan1970UTC), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::isNull()
func (q *QDateTime) IsNull() bool {
	var __rv bool
	q.Drv(20000, 20121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::isValid()
func (q *QDateTime) IsValid() bool {
	var __rv bool
	q.Drv(20000, 20122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::msecsTo(QDateTime const&)
func (q *QDateTime) MsecsTo(value *QDateTime) int64 {
	var __rv int64
	q.Drv(20000, 20123, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::secsTo(QDateTime const&)
func (q *QDateTime) SecsTo(value *QDateTime) int32 {
	var __rv int32
	q.Drv(20000, 20124, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::setDate(QDate const&)
func (q *QDateTime) SetDate(date *QDate) {
	q.Drv(20000, 20125, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::setMSecsSinceEpoch(qint64)
func (q *QDateTime) SetMSecsSinceEpoch(msecs int64) {
	q.Drv(20000, 20126, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::setTime(QTime const&)
func (q *QDateTime) SetTime(time *QTime) {
	q.Drv(20000, 20127, Native(time), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::setTimeSpec(Qt::TimeSpec)
func (q *QDateTime) SetTimeSpec(spec Qt_TimeSpec) {
	q.Drv(20000, 20128, unsafe.Pointer(&spec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::setTime_t(unsigned int)
func (q *QDateTime) SetTime_t(secsSince1Jan1970UTC uint32) {
	q.Drv(20000, 20129, unsafe.Pointer(&secsSince1Jan1970UTC), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::setUtcOffset(int)
func (q *QDateTime) SetUtcOffset(seconds int32) {
	q.Drv(20000, 20130, unsafe.Pointer(&seconds), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTime::time()
func (q *QDateTime) Time() *QTime {
	var __rv uintptr
	q.Drv(20000, 20131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QDateTime::timeSpec()
func (q *QDateTime) TimeSpec() Qt_TimeSpec {
	var __rv Qt_TimeSpec
	q.Drv(20000, 20132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::toLocalTime()
func (q *QDateTime) ToLocalTime() *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::toMSecsSinceEpoch()
func (q *QDateTime) ToMSecsSinceEpoch() int64 {
	var __rv int64
	q.Drv(20000, 20134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::toString()
func (q *QDateTime) ToString() string {
	var __rv C.string_head
	q.Drv(20000, 20135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTime::toString(QString const&)
func (q *QDateTime) ToStringWithFormat(format string) string {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv C.string_head
	q.Drv(20000, 20136, unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTime::toString(Qt::DateFormat)
func (q *QDateTime) ToStringWithDateformat(f Qt_DateFormat) string {
	var __rv C.string_head
	q.Drv(20000, 20137, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTime::toTimeSpec(Qt::TimeSpec)
func (q *QDateTime) ToTimeSpec(spec Qt_TimeSpec) *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20138, unsafe.Pointer(&spec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::toTime_t()
func (q *QDateTime) ToTime_t() uint32 {
	var __rv uint32
	q.Drv(20000, 20139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTime::toUTC()
func (q *QDateTime) ToUTC() *QDateTime {
	var __rv uintptr
	q.Drv(20000, 20140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTime::utcOffset()
func (q *QDateTime) UtcOffset() int32 {
	var __rv int32
	q.Drv(20000, 20141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDesktopServices_StandardLocation - QDesktopServices::StandardLocation
type QDesktopServices_StandardLocation uint32

const (
	QDesktopServices_DesktopLocation      QDesktopServices_StandardLocation = 0
	QDesktopServices_DocumentsLocation    QDesktopServices_StandardLocation = 1
	QDesktopServices_FontsLocation        QDesktopServices_StandardLocation = 2
	QDesktopServices_ApplicationsLocation QDesktopServices_StandardLocation = 3
	QDesktopServices_MusicLocation        QDesktopServices_StandardLocation = 4
	QDesktopServices_MoviesLocation       QDesktopServices_StandardLocation = 5
	QDesktopServices_PicturesLocation     QDesktopServices_StandardLocation = 6
	QDesktopServices_TempLocation         QDesktopServices_StandardLocation = 7
	QDesktopServices_HomeLocation         QDesktopServices_StandardLocation = 8
	QDesktopServices_DataLocation         QDesktopServices_StandardLocation = 9
	QDesktopServices_CacheLocation        QDesktopServices_StandardLocation = 10
)

//struct QDesktopServices : QDesktopServices
type QDesktopServices struct {
	BaseDrv
}

//QDesktopServices::QDesktopServices()
func NewDesktopServices() *QDesktopServices {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 21000, 21102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDesktopServices{}
	_p.SetDriver(__rv, 21000, true)
	return _p
}

//QDesktopServices::displayName(QDesktopServices::StandardLocation)
func QDesktopServicesDisplayName(_type QDesktopServices_StandardLocation) string {
	var __rv C.string_head
	DirectQtDrv(nil, 21000, 21103, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDesktopServices::displayName(QDesktopServices::StandardLocation)
func (q *QDesktopServices) DisplayName(_type QDesktopServices_StandardLocation) string {
	var __rv C.string_head
	q.Drv(21000, 21103, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDesktopServices::openUrl(QUrl const&)
func QDesktopServicesOpenUrl(url *QUrl) bool {
	var __rv bool
	DirectQtDrv(nil, 21000, 21104, Native(url), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopServices::openUrl(QUrl const&)
func (q *QDesktopServices) OpenUrl(url *QUrl) bool {
	var __rv bool
	q.Drv(21000, 21104, Native(url), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopServices::setUrlHandler(QString const&,QObject*,char const*)
func QDesktopServicesSetUrlHandler(scheme string, receiver QObjectInterface, method string) {
	_scheme := NewCStringHead(scheme)
	defer FreeCStringHead(_scheme)
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	DirectQtDrv(nil, 21000, 21105, unsafe.Pointer(_scheme), Native(receiver), unsafe.Pointer(_method), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDesktopServices::setUrlHandler(QString const&,QObject*,char const*)
func (q *QDesktopServices) SetUrlHandler(scheme string, receiver QObjectInterface, method string) {
	_scheme := NewCStringHead(scheme)
	defer FreeCStringHead(_scheme)
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	q.Drv(21000, 21105, unsafe.Pointer(_scheme), Native(receiver), unsafe.Pointer(_method), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDesktopServices::storageLocation(QDesktopServices::StandardLocation)
func QDesktopServicesStorageLocation(_type QDesktopServices_StandardLocation) string {
	var __rv C.string_head
	DirectQtDrv(nil, 21000, 21106, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDesktopServices::storageLocation(QDesktopServices::StandardLocation)
func (q *QDesktopServices) StorageLocation(_type QDesktopServices_StandardLocation) string {
	var __rv C.string_head
	q.Drv(21000, 21106, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDesktopServices::unsetUrlHandler(QString const&)
func QDesktopServicesUnsetUrlHandler(scheme string) {
	_scheme := NewCStringHead(scheme)
	defer FreeCStringHead(_scheme)
	DirectQtDrv(nil, 21000, 21107, unsafe.Pointer(_scheme), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDesktopServices::unsetUrlHandler(QString const&)
func (q *QDesktopServices) UnsetUrlHandler(scheme string) {
	_scheme := NewCStringHead(scheme)
	defer FreeCStringHead(_scheme)
	q.Drv(21000, 21107, unsafe.Pointer(_scheme), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QDir_Filter - QDir::Filter
type QDir_Filter int32

const (
	QDir_Dirs           QDir_Filter = 0x001
	QDir_Files          QDir_Filter = 0x002
	QDir_Drives         QDir_Filter = 0x004
	QDir_NoSymLinks     QDir_Filter = 0x008
	QDir_AllEntries     QDir_Filter = QDir_Dirs | QDir_Files | QDir_Drives
	QDir_TypeMask       QDir_Filter = 0x00f
	QDir_Readable       QDir_Filter = 0x010
	QDir_Writable       QDir_Filter = 0x020
	QDir_Executable     QDir_Filter = 0x040
	QDir_PermissionMask QDir_Filter = 0x070
	QDir_Modified       QDir_Filter = 0x080
	QDir_Hidden         QDir_Filter = 0x100
	QDir_System         QDir_Filter = 0x200
	QDir_AccessMask     QDir_Filter = 0x3F0
	QDir_AllDirs        QDir_Filter = 0x400
	QDir_CaseSensitive  QDir_Filter = 0x800
	QDir_NoDotAndDotDot QDir_Filter = 0x1000
	QDir_NoDot          QDir_Filter = 0x2000
	QDir_NoDotDot       QDir_Filter = 0x4000
	QDir_NoFilter       QDir_Filter = -1
)

//enum QDir_SortFlag - QDir::SortFlag
type QDir_SortFlag int32

const (
	QDir_Name        QDir_SortFlag = 0x00
	QDir_Time        QDir_SortFlag = 0x01
	QDir_Size        QDir_SortFlag = 0x02
	QDir_Unsorted    QDir_SortFlag = 0x03
	QDir_SortByMask  QDir_SortFlag = 0x03
	QDir_DirsFirst   QDir_SortFlag = 0x04
	QDir_Reversed    QDir_SortFlag = 0x08
	QDir_IgnoreCase  QDir_SortFlag = 0x10
	QDir_DirsLast    QDir_SortFlag = 0x20
	QDir_LocaleAware QDir_SortFlag = 0x40
	QDir_Type        QDir_SortFlag = 0x80
	QDir_NoSort      QDir_SortFlag = -1
)

//struct QDir : QDir
type QDir struct {
	BaseDrv
}

//QDir::QDir()
func NewDir() *QDir {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 22000, 22102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDir{}
	_p.SetDriver(__rv, 22000, true)
	return _p
}

//QDir::QDir(QDir const&)
func NewDirCopy(value *QDir) *QDir {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 22000, 22103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDir{}
	_p.SetDriver(__rv, 22000, true)
	return _p
}

//QDir::QDir(QString const&)
func NewDirWithPath(path string) *QDir {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 22000, 22104, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDir{}
	_p.SetDriver(__rv, 22000, true)
	return _p
}

//QDir::QDir(QString const&,QString const&,QFlags<QDir::SortFlag>,QFlags<QDir::Filter>)
func NewDirWithPathNamefilterSortFilter(path string, nameFilter string, sort QDir_SortFlag, filter QDir_Filter) *QDir {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	_nameFilter := NewCStringHead(nameFilter)
	defer FreeCStringHead(_nameFilter)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 22000, 22105, unsafe.Pointer(_path), unsafe.Pointer(_nameFilter), unsafe.Pointer(&sort), unsafe.Pointer(&filter), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDir{}
	_p.SetDriver(__rv, 22000, true)
	return _p
}

//QDir::absoluteFilePath(QString const&)
func (q *QDir) AbsoluteFilePath(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(22000, 22106, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::absolutePath()
func (q *QDir) AbsolutePath() string {
	var __rv C.string_head
	q.Drv(22000, 22107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::addResourceSearchPath(QString const&)
func QDirAddResourceSearchPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	DirectQtDrv(nil, 22000, 22108, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::addResourceSearchPath(QString const&)
func (q *QDir) AddResourceSearchPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(22000, 22108, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::addSearchPath(QString const&,QString const&)
func QDirAddSearchPath(prefix string, path string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	DirectQtDrv(nil, 22000, 22109, unsafe.Pointer(_prefix), unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::addSearchPath(QString const&,QString const&)
func (q *QDir) AddSearchPath(prefix string, path string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(22000, 22109, unsafe.Pointer(_prefix), unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::canonicalPath()
func (q *QDir) CanonicalPath() string {
	var __rv C.string_head
	q.Drv(22000, 22110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::cd(QString const&)
func (q *QDir) Cd(dirName string) bool {
	_dirName := NewCStringHead(dirName)
	defer FreeCStringHead(_dirName)
	var __rv bool
	q.Drv(22000, 22111, unsafe.Pointer(_dirName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::cdUp()
func (q *QDir) CdUp() bool {
	var __rv bool
	q.Drv(22000, 22112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::cleanPath(QString const&)
func QDirCleanPath(path string) string {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22113, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::cleanPath(QString const&)
func (q *QDir) CleanPath(path string) string {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv C.string_head
	q.Drv(22000, 22113, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::count()
func (q *QDir) Count() uint32 {
	var __rv uint32
	q.Drv(22000, 22114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::current()
func QDirCurrent() *QDir {
	var __rv uintptr
	DirectQtDrv(nil, 22000, 22115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::current()
func (q *QDir) Current() *QDir {
	var __rv uintptr
	q.Drv(22000, 22115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::currentPath()
func QDirCurrentPath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::currentPath()
func (q *QDir) CurrentPath() string {
	var __rv C.string_head
	q.Drv(22000, 22116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::dirName()
func (q *QDir) DirName() string {
	var __rv C.string_head
	q.Drv(22000, 22117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::drives()
func QDirDrives() []*QFileInfo {
	var __rv []*QFileInfo
	DirectQtDrv(nil, 22000, 22118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::drives()
func (q *QDir) Drives() []*QFileInfo {
	var __rv []*QFileInfo
	q.Drv(22000, 22118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryInfoList()
func (q *QDir) EntryInfoList() []*QFileInfo {
	var __rv []*QFileInfo
	q.Drv(22000, 22119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryInfoList(QStringList const&)
func (q *QDir) EntryInfoListWithNamefilters(nameFilters []string) []*QFileInfo {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv []*QFileInfo
	q.Drv(22000, 22120, unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryInfoList(QFlags<QDir::Filter>,QFlags<QDir::SortFlag>)
func (q *QDir) EntryInfoListWithFiltersSort(filters QDir_Filter, sort QDir_SortFlag) []*QFileInfo {
	var __rv []*QFileInfo
	q.Drv(22000, 22121, unsafe.Pointer(&filters), unsafe.Pointer(&sort), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryInfoList(QStringList const&,QFlags<QDir::Filter>,QFlags<QDir::SortFlag>)
func (q *QDir) EntryInfoListWithNamefiltersFiltersSort(nameFilters []string, filters QDir_Filter, sort QDir_SortFlag) []*QFileInfo {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv []*QFileInfo
	q.Drv(22000, 22122, unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&filters), unsafe.Pointer(&sort), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryList()
func (q *QDir) EntryList() []string {
	var __rv []string
	q.Drv(22000, 22123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryList(QStringList const&)
func (q *QDir) EntryListWithNamefilters(nameFilters []string) []string {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv []string
	q.Drv(22000, 22124, unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryList(QFlags<QDir::Filter>,QFlags<QDir::SortFlag>)
func (q *QDir) EntryListWithFiltersSort(filters QDir_Filter, sort QDir_SortFlag) []string {
	var __rv []string
	q.Drv(22000, 22125, unsafe.Pointer(&filters), unsafe.Pointer(&sort), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::entryList(QStringList const&,QFlags<QDir::Filter>,QFlags<QDir::SortFlag>)
func (q *QDir) EntryListWithNamefiltersFiltersSort(nameFilters []string, filters QDir_Filter, sort QDir_SortFlag) []string {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv []string
	q.Drv(22000, 22126, unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&filters), unsafe.Pointer(&sort), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::exists()
func (q *QDir) Exists() bool {
	var __rv bool
	q.Drv(22000, 22127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::exists(QString const&)
func (q *QDir) ExistsWithName(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	q.Drv(22000, 22128, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::filePath(QString const&)
func (q *QDir) FilePath(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(22000, 22129, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::filter()
func (q *QDir) Filter() QDir_Filter {
	var __rv QDir_Filter
	q.Drv(22000, 22130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::fromNativeSeparators(QString const&)
func QDirFromNativeSeparators(pathName string) string {
	_pathName := NewCStringHead(pathName)
	defer FreeCStringHead(_pathName)
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22131, unsafe.Pointer(_pathName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::fromNativeSeparators(QString const&)
func (q *QDir) FromNativeSeparators(pathName string) string {
	_pathName := NewCStringHead(pathName)
	defer FreeCStringHead(_pathName)
	var __rv C.string_head
	q.Drv(22000, 22131, unsafe.Pointer(_pathName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::home()
func QDirHome() *QDir {
	var __rv uintptr
	DirectQtDrv(nil, 22000, 22132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::home()
func (q *QDir) Home() *QDir {
	var __rv uintptr
	q.Drv(22000, 22132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::homePath()
func QDirHomePath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::homePath()
func (q *QDir) HomePath() string {
	var __rv C.string_head
	q.Drv(22000, 22133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::isAbsolute()
func (q *QDir) IsAbsolute() bool {
	var __rv bool
	q.Drv(22000, 22134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isAbsolutePath(QString const&)
func QDirIsAbsolutePath(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	DirectQtDrv(nil, 22000, 22135, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isAbsolutePath(QString const&)
func (q *QDir) IsAbsolutePath(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	q.Drv(22000, 22135, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isReadable()
func (q *QDir) IsReadable() bool {
	var __rv bool
	q.Drv(22000, 22136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isRelative()
func (q *QDir) IsRelative() bool {
	var __rv bool
	q.Drv(22000, 22137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isRelativePath(QString const&)
func QDirIsRelativePath(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	DirectQtDrv(nil, 22000, 22138, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isRelativePath(QString const&)
func (q *QDir) IsRelativePath(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	q.Drv(22000, 22138, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::isRoot()
func (q *QDir) IsRoot() bool {
	var __rv bool
	q.Drv(22000, 22139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::makeAbsolute()
func (q *QDir) MakeAbsolute() bool {
	var __rv bool
	q.Drv(22000, 22140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::match(QString const&,QString const&)
func QDirMatchWithFilterFilename(filter string, fileName string) bool {
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	DirectQtDrv(nil, 22000, 22141, unsafe.Pointer(_filter), unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::match(QString const&,QString const&)
func (q *QDir) MatchWithFilterFilename(filter string, fileName string) bool {
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(22000, 22141, unsafe.Pointer(_filter), unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::match(QStringList const&,QString const&)
func QDirMatchWithFiltersFilename(filters []string, fileName string) bool {
	_filters, _filters_size := NewCSArray(filters)
	defer FreeCSArray(_filters, _filters_size)
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	DirectQtDrv(nil, 22000, 22142, unsafe.Pointer(&_filters[0]), unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::match(QStringList const&,QString const&)
func (q *QDir) MatchWithFiltersFilename(filters []string, fileName string) bool {
	_filters, _filters_size := NewCSArray(filters)
	defer FreeCSArray(_filters, _filters_size)
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(22000, 22142, unsafe.Pointer(&_filters[0]), unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::mkdir(QString const&)
func (q *QDir) Mkdir(dirName string) bool {
	_dirName := NewCStringHead(dirName)
	defer FreeCStringHead(_dirName)
	var __rv bool
	q.Drv(22000, 22143, unsafe.Pointer(_dirName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::mkpath(QString const&)
func (q *QDir) Mkpath(dirPath string) bool {
	_dirPath := NewCStringHead(dirPath)
	defer FreeCStringHead(_dirPath)
	var __rv bool
	q.Drv(22000, 22144, unsafe.Pointer(_dirPath), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::nameFilters()
func (q *QDir) NameFilters() []string {
	var __rv []string
	q.Drv(22000, 22145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::nameFiltersFromString(QString const&)
func QDirNameFiltersFromString(nameFilter string) []string {
	_nameFilter := NewCStringHead(nameFilter)
	defer FreeCStringHead(_nameFilter)
	var __rv []string
	DirectQtDrv(nil, 22000, 22146, unsafe.Pointer(_nameFilter), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::nameFiltersFromString(QString const&)
func (q *QDir) NameFiltersFromString(nameFilter string) []string {
	_nameFilter := NewCStringHead(nameFilter)
	defer FreeCStringHead(_nameFilter)
	var __rv []string
	q.Drv(22000, 22146, unsafe.Pointer(_nameFilter), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::path()
func (q *QDir) Path() string {
	var __rv C.string_head
	q.Drv(22000, 22147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::refresh()
func (q *QDir) Refresh() {
	q.Drv(22000, 22148, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::relativeFilePath(QString const&)
func (q *QDir) RelativeFilePath(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(22000, 22149, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::remove(QString const&)
func (q *QDir) Remove(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(22000, 22150, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::rename(QString const&,QString const&)
func (q *QDir) Rename(oldName string, newName string) bool {
	_oldName := NewCStringHead(oldName)
	defer FreeCStringHead(_oldName)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(22000, 22151, unsafe.Pointer(_oldName), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::rmdir(QString const&)
func (q *QDir) Rmdir(dirName string) bool {
	_dirName := NewCStringHead(dirName)
	defer FreeCStringHead(_dirName)
	var __rv bool
	q.Drv(22000, 22152, unsafe.Pointer(_dirName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::rmpath(QString const&)
func (q *QDir) Rmpath(dirPath string) bool {
	_dirPath := NewCStringHead(dirPath)
	defer FreeCStringHead(_dirPath)
	var __rv bool
	q.Drv(22000, 22153, unsafe.Pointer(_dirPath), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::root()
func QDirRoot() *QDir {
	var __rv uintptr
	DirectQtDrv(nil, 22000, 22154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::root()
func (q *QDir) Root() *QDir {
	var __rv uintptr
	q.Drv(22000, 22154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::rootPath()
func QDirRootPath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::rootPath()
func (q *QDir) RootPath() string {
	var __rv C.string_head
	q.Drv(22000, 22155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::searchPaths(QString const&)
func QDirSearchPaths(prefix string) []string {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv []string
	DirectQtDrv(nil, 22000, 22156, unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::searchPaths(QString const&)
func (q *QDir) SearchPaths(prefix string) []string {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv []string
	q.Drv(22000, 22156, unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::separator()
func QDirSeparator() rune {
	var __rv rune
	DirectQtDrv(nil, 22000, 22157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::separator()
func (q *QDir) Separator() rune {
	var __rv rune
	q.Drv(22000, 22157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::setCurrent(QString const&)
func QDirSetCurrent(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	DirectQtDrv(nil, 22000, 22158, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::setCurrent(QString const&)
func (q *QDir) SetCurrent(path string) bool {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv bool
	q.Drv(22000, 22158, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::setFilter(QFlags<QDir::Filter>)
func (q *QDir) SetFilter(filter QDir_Filter) {
	q.Drv(22000, 22159, unsafe.Pointer(&filter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::setNameFilters(QStringList const&)
func (q *QDir) SetNameFilters(nameFilters []string) {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	q.Drv(22000, 22160, unsafe.Pointer(&_nameFilters[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::setPath(QString const&)
func (q *QDir) SetPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(22000, 22161, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::setSearchPaths(QString const&,QStringList const&)
func QDirSetSearchPaths(prefix string, searchPaths []string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	_searchPaths, _searchPaths_size := NewCSArray(searchPaths)
	defer FreeCSArray(_searchPaths, _searchPaths_size)
	DirectQtDrv(nil, 22000, 22162, unsafe.Pointer(_prefix), unsafe.Pointer(&_searchPaths[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::setSearchPaths(QString const&,QStringList const&)
func (q *QDir) SetSearchPaths(prefix string, searchPaths []string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	_searchPaths, _searchPaths_size := NewCSArray(searchPaths)
	defer FreeCSArray(_searchPaths, _searchPaths_size)
	q.Drv(22000, 22162, unsafe.Pointer(_prefix), unsafe.Pointer(&_searchPaths[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::setSorting(QFlags<QDir::SortFlag>)
func (q *QDir) SetSorting(sort QDir_SortFlag) {
	q.Drv(22000, 22163, unsafe.Pointer(&sort), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDir::sorting()
func (q *QDir) Sorting() QDir_SortFlag {
	var __rv QDir_SortFlag
	q.Drv(22000, 22164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDir::temp()
func QDirTemp() *QDir {
	var __rv uintptr
	DirectQtDrv(nil, 22000, 22165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::temp()
func (q *QDir) Temp() *QDir {
	var __rv uintptr
	q.Drv(22000, 22165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QDir::tempPath()
func QDirTempPath() string {
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::tempPath()
func (q *QDir) TempPath() string {
	var __rv C.string_head
	q.Drv(22000, 22166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::toNativeSeparators(QString const&)
func QDirToNativeSeparators(pathName string) string {
	_pathName := NewCStringHead(pathName)
	defer FreeCStringHead(_pathName)
	var __rv C.string_head
	DirectQtDrv(nil, 22000, 22167, unsafe.Pointer(_pathName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDir::toNativeSeparators(QString const&)
func (q *QDir) ToNativeSeparators(pathName string) string {
	_pathName := NewCStringHead(pathName)
	defer FreeCStringHead(_pathName)
	var __rv C.string_head
	q.Drv(22000, 22167, unsafe.Pointer(_pathName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QDirIterator_IteratorFlag - QDirIterator::IteratorFlag
type QDirIterator_IteratorFlag uint32

const (
	QDirIterator_NoIteratorFlags QDirIterator_IteratorFlag = 0x0
	QDirIterator_FollowSymlinks  QDirIterator_IteratorFlag = 0x1
	QDirIterator_Subdirectories  QDirIterator_IteratorFlag = 0x2
)

//struct QDirIterator : QDirIterator
type QDirIterator struct {
	BaseDrv
}

//QDirIterator::QDirIterator(QDir const&,QFlags<QDirIterator::IteratorFlag>)
func NewDirIterator(dir *QDir, flags QDirIterator_IteratorFlag) *QDirIterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 23000, 23102, Native(dir), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirIterator{}
	_p.SetDriver(__rv, 23000, true)
	return _p
}

//QDirIterator::QDirIterator(QString const&,QFlags<QDirIterator::IteratorFlag>)
func NewDirIteratorWithPathFlags(path string, flags QDirIterator_IteratorFlag) *QDirIterator {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 23000, 23103, unsafe.Pointer(_path), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirIterator{}
	_p.SetDriver(__rv, 23000, true)
	return _p
}

//QDirIterator::QDirIterator(QString const&,QFlags<QDir::Filter>,QFlags<QDirIterator::IteratorFlag>)
func NewDirIteratorWithPathFilterFlags(path string, filter QDir_Filter, flags QDirIterator_IteratorFlag) *QDirIterator {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 23000, 23104, unsafe.Pointer(_path), unsafe.Pointer(&filter), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirIterator{}
	_p.SetDriver(__rv, 23000, true)
	return _p
}

//QDirIterator::QDirIterator(QString const&,QStringList const&,QFlags<QDir::Filter>,QFlags<QDirIterator::IteratorFlag>)
func NewDirIteratorWithPathNamefiltersFiltersFlags(path string, nameFilters []string, filters QDir_Filter, flags QDirIterator_IteratorFlag) *QDirIterator {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 23000, 23105, unsafe.Pointer(_path), unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&filters), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirIterator{}
	_p.SetDriver(__rv, 23000, true)
	return _p
}

//QDirIterator::fileInfo()
func (q *QDirIterator) FileInfo() *QFileInfo {
	var __rv uintptr
	q.Drv(23000, 23106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileInfo{}
	_rp.SetDriver(__rv, 34000, true)
	return _rp
}

//QDirIterator::fileName()
func (q *QDirIterator) FileName() string {
	var __rv C.string_head
	q.Drv(23000, 23107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDirIterator::filePath()
func (q *QDirIterator) FilePath() string {
	var __rv C.string_head
	q.Drv(23000, 23108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDirIterator::hasNext()
func (q *QDirIterator) HasNext() bool {
	var __rv bool
	q.Drv(23000, 23109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirIterator::next()
func (q *QDirIterator) Next() string {
	var __rv C.string_head
	q.Drv(23000, 23110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDirIterator::path()
func (q *QDirIterator) Path() string {
	var __rv C.string_head
	q.Drv(23000, 23111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QDragEnterEvent : QDragEnterEvent
type QDragEnterEvent struct {
	QDragMoveEvent
}

//struct QDragLeaveEvent : QDragLeaveEvent
type QDragLeaveEvent struct {
	QEvent
}

//QDragLeaveEvent::QDragLeaveEvent()
func NewDragLeaveEvent() *QDragLeaveEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 25000, 25102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDragLeaveEvent{}
	_p.SetDriver(__rv, 25000, true)
	return _p
}

//struct QDragMoveEvent : QDragMoveEvent
type QDragMoveEvent struct {
	QDropEvent
}

//QDragMoveEvent::accept()
func (q *QDragMoveEvent) Accept() {
	q.Drv(26000, 26102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDragMoveEvent::accept(QRect const&)
func (q *QDragMoveEvent) AcceptWithRect(r *QRect) {
	q.Drv(26000, 26103, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDragMoveEvent::answerRect()
func (q *QDragMoveEvent) AnswerRect() *QRect {
	var __rv uintptr
	q.Drv(26000, 26104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDragMoveEvent::ignore()
func (q *QDragMoveEvent) Ignore() {
	q.Drv(26000, 26105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDragMoveEvent::ignore(QRect const&)
func (q *QDragMoveEvent) IgnoreWithRect(r *QRect) {
	q.Drv(26000, 26106, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QDropEvent : QDropEvent
type QDropEvent struct {
	QEvent
}

//QDropEvent::acceptProposedAction()
func (q *QDropEvent) AcceptProposedAction() {
	q.Drv(27000, 27102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDropEvent::dropAction()
func (q *QDropEvent) DropAction() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(27000, 27103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDropEvent::keyboardModifiers()
func (q *QDropEvent) KeyboardModifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(27000, 27104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDropEvent::mimeData()
func (q *QDropEvent) MimeData() *QMimeData {
	var __rv uintptr
	q.Drv(27000, 27105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QDropEvent::mouseButtons()
func (q *QDropEvent) MouseButtons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(27000, 27106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDropEvent::pos()
func (q *QDropEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(27000, 27107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QDropEvent::possibleActions()
func (q *QDropEvent) PossibleActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(27000, 27108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDropEvent::proposedAction()
func (q *QDropEvent) ProposedAction() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(27000, 27109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDropEvent::setDropAction(Qt::DropAction)
func (q *QDropEvent) SetDropAction(action Qt_DropAction) {
	q.Drv(27000, 27110, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDropEvent::source()
func (q *QDropEvent) Source() *QWidget {
	var __rv uintptr
	q.Drv(27000, 27111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QDynamicPropertyChangeEvent : QDynamicPropertyChangeEvent
type QDynamicPropertyChangeEvent struct {
	QEvent
}

//QDynamicPropertyChangeEvent::QDynamicPropertyChangeEvent(QByteArray const&)
func NewDynamicPropertyChangeEvent(name []byte) *QDynamicPropertyChangeEvent {
	_name := NewCByteArrayHead(name)
	defer FreeCByteArrayHead(_name)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 28000, 28102, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDynamicPropertyChangeEvent{}
	_p.SetDriver(__rv, 28000, true)
	return _p
}

//QDynamicPropertyChangeEvent::propertyName()
func (q *QDynamicPropertyChangeEvent) PropertyName() []byte {
	var __rv []byte
	q.Drv(28000, 28103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QEasingCurve_Type - QEasingCurve::Type
type QEasingCurve_Type uint32

const (
	QEasingCurve_Linear       QEasingCurve_Type = 0
	QEasingCurve_InQuad       QEasingCurve_Type = 1
	QEasingCurve_OutQuad      QEasingCurve_Type = 2
	QEasingCurve_InOutQuad    QEasingCurve_Type = 3
	QEasingCurve_OutInQuad    QEasingCurve_Type = 4
	QEasingCurve_InCubic      QEasingCurve_Type = 5
	QEasingCurve_OutCubic     QEasingCurve_Type = 6
	QEasingCurve_InOutCubic   QEasingCurve_Type = 7
	QEasingCurve_OutInCubic   QEasingCurve_Type = 8
	QEasingCurve_InQuart      QEasingCurve_Type = 9
	QEasingCurve_OutQuart     QEasingCurve_Type = 10
	QEasingCurve_InOutQuart   QEasingCurve_Type = 11
	QEasingCurve_OutInQuart   QEasingCurve_Type = 12
	QEasingCurve_InQuint      QEasingCurve_Type = 13
	QEasingCurve_OutQuint     QEasingCurve_Type = 14
	QEasingCurve_InOutQuint   QEasingCurve_Type = 15
	QEasingCurve_OutInQuint   QEasingCurve_Type = 16
	QEasingCurve_InSine       QEasingCurve_Type = 17
	QEasingCurve_OutSine      QEasingCurve_Type = 18
	QEasingCurve_InOutSine    QEasingCurve_Type = 19
	QEasingCurve_OutInSine    QEasingCurve_Type = 20
	QEasingCurve_InExpo       QEasingCurve_Type = 21
	QEasingCurve_OutExpo      QEasingCurve_Type = 22
	QEasingCurve_InOutExpo    QEasingCurve_Type = 23
	QEasingCurve_OutInExpo    QEasingCurve_Type = 24
	QEasingCurve_InCirc       QEasingCurve_Type = 25
	QEasingCurve_OutCirc      QEasingCurve_Type = 26
	QEasingCurve_InOutCirc    QEasingCurve_Type = 27
	QEasingCurve_OutInCirc    QEasingCurve_Type = 28
	QEasingCurve_InElastic    QEasingCurve_Type = 29
	QEasingCurve_OutElastic   QEasingCurve_Type = 30
	QEasingCurve_InOutElastic QEasingCurve_Type = 31
	QEasingCurve_OutInElastic QEasingCurve_Type = 32
	QEasingCurve_InBack       QEasingCurve_Type = 33
	QEasingCurve_OutBack      QEasingCurve_Type = 34
	QEasingCurve_InOutBack    QEasingCurve_Type = 35
	QEasingCurve_OutInBack    QEasingCurve_Type = 36
	QEasingCurve_InBounce     QEasingCurve_Type = 37
	QEasingCurve_OutBounce    QEasingCurve_Type = 38
	QEasingCurve_InOutBounce  QEasingCurve_Type = 39
	QEasingCurve_OutInBounce  QEasingCurve_Type = 40
	QEasingCurve_InCurve      QEasingCurve_Type = 41
	QEasingCurve_OutCurve     QEasingCurve_Type = 42
	QEasingCurve_SineCurve    QEasingCurve_Type = 43
	QEasingCurve_CosineCurve  QEasingCurve_Type = 44
	QEasingCurve_Custom       QEasingCurve_Type = 45
	QEasingCurve_NCurveTypes  QEasingCurve_Type = 46
)

//struct QEasingCurve : QEasingCurve
type QEasingCurve struct {
	BaseDrv
}

//QEasingCurve::QEasingCurve()
func NewEasingCurve() *QEasingCurve {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 29000, 29102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEasingCurve{}
	_p.SetDriver(__rv, 29000, true)
	return _p
}

//QEasingCurve::QEasingCurve(QEasingCurve const&)
func NewEasingCurveCopy(other *QEasingCurve) *QEasingCurve {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 29000, 29103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEasingCurve{}
	_p.SetDriver(__rv, 29000, true)
	return _p
}

//QEasingCurve::QEasingCurve(QEasingCurve::Type)
func NewEasingCurveWithType(_type QEasingCurve_Type) *QEasingCurve {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 29000, 29104, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEasingCurve{}
	_p.SetDriver(__rv, 29000, true)
	return _p
}

//QEasingCurve::amplitude()
func (q *QEasingCurve) Amplitude() float64 {
	var __rv float64
	q.Drv(29000, 29105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEasingCurve::overshoot()
func (q *QEasingCurve) Overshoot() float64 {
	var __rv float64
	q.Drv(29000, 29106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEasingCurve::period()
func (q *QEasingCurve) Period() float64 {
	var __rv float64
	q.Drv(29000, 29107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEasingCurve::setAmplitude(double)
func (q *QEasingCurve) SetAmplitude(amplitude float64) {
	q.Drv(29000, 29108, unsafe.Pointer(&amplitude), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEasingCurve::setOvershoot(double)
func (q *QEasingCurve) SetOvershoot(overshoot float64) {
	q.Drv(29000, 29109, unsafe.Pointer(&overshoot), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEasingCurve::setPeriod(double)
func (q *QEasingCurve) SetPeriod(period float64) {
	q.Drv(29000, 29110, unsafe.Pointer(&period), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEasingCurve::setType(QEasingCurve::Type)
func (q *QEasingCurve) SetType(_type QEasingCurve_Type) {
	q.Drv(29000, 29111, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEasingCurve::type()
func (q *QEasingCurve) Type() QEasingCurve_Type {
	var __rv QEasingCurve_Type
	q.Drv(29000, 29112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEasingCurve::valueForProgress(double)
func (q *QEasingCurve) ValueForProgress(progress float64) float64 {
	var __rv float64
	q.Drv(29000, 29113, unsafe.Pointer(&progress), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QElapsedTimer_ClockType - QElapsedTimer::ClockType
type QElapsedTimer_ClockType uint32

const (
	QElapsedTimer_SystemTime       QElapsedTimer_ClockType = 0
	QElapsedTimer_MonotonicClock   QElapsedTimer_ClockType = 1
	QElapsedTimer_TickCounter      QElapsedTimer_ClockType = 2
	QElapsedTimer_MachAbsoluteTime QElapsedTimer_ClockType = 3
)

//struct QElapsedTimer : QElapsedTimer
type QElapsedTimer struct {
	BaseDrv
}

//QElapsedTimer::QElapsedTimer()
func NewElapsedTimer() *QElapsedTimer {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 30000, 30102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QElapsedTimer{}
	_p.SetDriver(__rv, 30000, true)
	return _p
}

//QElapsedTimer::clockType()
func QElapsedTimerClockType() QElapsedTimer_ClockType {
	var __rv QElapsedTimer_ClockType
	DirectQtDrv(nil, 30000, 30103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::clockType()
func (q *QElapsedTimer) ClockType() QElapsedTimer_ClockType {
	var __rv QElapsedTimer_ClockType
	q.Drv(30000, 30103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::elapsed()
func (q *QElapsedTimer) Elapsed() int64 {
	var __rv int64
	q.Drv(30000, 30104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::hasExpired(qint64)
func (q *QElapsedTimer) HasExpired(timeout int64) bool {
	var __rv bool
	q.Drv(30000, 30105, unsafe.Pointer(&timeout), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::invalidate()
func (q *QElapsedTimer) Invalidate() {
	q.Drv(30000, 30106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QElapsedTimer::isMonotonic()
func QElapsedTimerIsMonotonic() bool {
	var __rv bool
	DirectQtDrv(nil, 30000, 30107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::isMonotonic()
func (q *QElapsedTimer) IsMonotonic() bool {
	var __rv bool
	q.Drv(30000, 30107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::isValid()
func (q *QElapsedTimer) IsValid() bool {
	var __rv bool
	q.Drv(30000, 30108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::msecsSinceReference()
func (q *QElapsedTimer) MsecsSinceReference() int64 {
	var __rv int64
	q.Drv(30000, 30109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::msecsTo(QElapsedTimer const&)
func (q *QElapsedTimer) MsecsTo(other *QElapsedTimer) int64 {
	var __rv int64
	q.Drv(30000, 30110, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::restart()
func (q *QElapsedTimer) Restart() int64 {
	var __rv int64
	q.Drv(30000, 30111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::secsTo(QElapsedTimer const&)
func (q *QElapsedTimer) SecsTo(other *QElapsedTimer) int64 {
	var __rv int64
	q.Drv(30000, 30112, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QElapsedTimer::start()
func (q *QElapsedTimer) Start() {
	q.Drv(30000, 30113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QEvent_Type - QEvent::Type
type QEvent_Type uint32

const (
	QEvent_None                             QEvent_Type = 0
	QEvent_Timer                            QEvent_Type = 1
	QEvent_MouseButtonPress                 QEvent_Type = 2
	QEvent_MouseButtonRelease               QEvent_Type = 3
	QEvent_MouseButtonDblClick              QEvent_Type = 4
	QEvent_MouseMove                        QEvent_Type = 5
	QEvent_KeyPress                         QEvent_Type = 6
	QEvent_KeyRelease                       QEvent_Type = 7
	QEvent_FocusIn                          QEvent_Type = 8
	QEvent_FocusOut                         QEvent_Type = 9
	QEvent_Enter                            QEvent_Type = 10
	QEvent_Leave                            QEvent_Type = 11
	QEvent_Paint                            QEvent_Type = 12
	QEvent_Move                             QEvent_Type = 13
	QEvent_Resize                           QEvent_Type = 14
	QEvent_Create                           QEvent_Type = 15
	QEvent_Destroy                          QEvent_Type = 16
	QEvent_Show                             QEvent_Type = 17
	QEvent_Hide                             QEvent_Type = 18
	QEvent_Close                            QEvent_Type = 19
	QEvent_Quit                             QEvent_Type = 20
	QEvent_ParentChange                     QEvent_Type = 21
	QEvent_ParentAboutToChange              QEvent_Type = 131
	QEvent_ThreadChange                     QEvent_Type = 22
	QEvent_WindowActivate                   QEvent_Type = 24
	QEvent_WindowDeactivate                 QEvent_Type = 25
	QEvent_ShowToParent                     QEvent_Type = 26
	QEvent_HideToParent                     QEvent_Type = 27
	QEvent_Wheel                            QEvent_Type = 31
	QEvent_WindowTitleChange                QEvent_Type = 33
	QEvent_WindowIconChange                 QEvent_Type = 34
	QEvent_ApplicationWindowIconChange      QEvent_Type = 35
	QEvent_ApplicationFontChange            QEvent_Type = 36
	QEvent_ApplicationLayoutDirectionChange QEvent_Type = 37
	QEvent_ApplicationPaletteChange         QEvent_Type = 38
	QEvent_PaletteChange                    QEvent_Type = 39
	QEvent_Clipboard                        QEvent_Type = 40
	QEvent_Speech                           QEvent_Type = 42
	QEvent_MetaCall                         QEvent_Type = 43
	QEvent_SockAct                          QEvent_Type = 50
	QEvent_WinEventAct                      QEvent_Type = 132
	QEvent_DeferredDelete                   QEvent_Type = 52
	QEvent_DragEnter                        QEvent_Type = 60
	QEvent_DragMove                         QEvent_Type = 61
	QEvent_DragLeave                        QEvent_Type = 62
	QEvent_Drop                             QEvent_Type = 63
	QEvent_DragResponse                     QEvent_Type = 64
	QEvent_ChildAdded                       QEvent_Type = 68
	QEvent_ChildPolished                    QEvent_Type = 69
	QEvent_ChildRemoved                     QEvent_Type = 71
	QEvent_ShowWindowRequest                QEvent_Type = 73
	QEvent_PolishRequest                    QEvent_Type = 74
	QEvent_Polish                           QEvent_Type = 75
	QEvent_LayoutRequest                    QEvent_Type = 76
	QEvent_UpdateRequest                    QEvent_Type = 77
	QEvent_UpdateLater                      QEvent_Type = 78
	QEvent_EmbeddingControl                 QEvent_Type = 79
	QEvent_ActivateControl                  QEvent_Type = 80
	QEvent_DeactivateControl                QEvent_Type = 81
	QEvent_ContextMenu                      QEvent_Type = 82
	QEvent_InputMethod                      QEvent_Type = 83
	QEvent_AccessibilityPrepare             QEvent_Type = 86
	QEvent_TabletMove                       QEvent_Type = 87
	QEvent_LocaleChange                     QEvent_Type = 88
	QEvent_LanguageChange                   QEvent_Type = 89
	QEvent_LayoutDirectionChange            QEvent_Type = 90
	QEvent_Style                            QEvent_Type = 91
	QEvent_TabletPress                      QEvent_Type = 92
	QEvent_TabletRelease                    QEvent_Type = 93
	QEvent_OkRequest                        QEvent_Type = 94
	QEvent_HelpRequest                      QEvent_Type = 95
	QEvent_IconDrag                         QEvent_Type = 96
	QEvent_FontChange                       QEvent_Type = 97
	QEvent_EnabledChange                    QEvent_Type = 98
	QEvent_ActivationChange                 QEvent_Type = 99
	QEvent_StyleChange                      QEvent_Type = 100
	QEvent_IconTextChange                   QEvent_Type = 101
	QEvent_ModifiedChange                   QEvent_Type = 102
	QEvent_MouseTrackingChange              QEvent_Type = 109
	QEvent_WindowBlocked                    QEvent_Type = 103
	QEvent_WindowUnblocked                  QEvent_Type = 104
	QEvent_WindowStateChange                QEvent_Type = 105
	QEvent_ToolTip                          QEvent_Type = 110
	QEvent_WhatsThis                        QEvent_Type = 111
	QEvent_StatusTip                        QEvent_Type = 112
	QEvent_ActionChanged                    QEvent_Type = 113
	QEvent_ActionAdded                      QEvent_Type = 114
	QEvent_ActionRemoved                    QEvent_Type = 115
	QEvent_FileOpen                         QEvent_Type = 116
	QEvent_Shortcut                         QEvent_Type = 117
	QEvent_ShortcutOverride                 QEvent_Type = 51
	QEvent_WhatsThisClicked                 QEvent_Type = 118
	QEvent_ToolBarChange                    QEvent_Type = 120
	QEvent_ApplicationActivate              QEvent_Type = 121
	QEvent_ApplicationDeactivate            QEvent_Type = 122
	QEvent_QueryWhatsThis                   QEvent_Type = 123
	QEvent_EnterWhatsThisMode               QEvent_Type = 124
	QEvent_LeaveWhatsThisMode               QEvent_Type = 125
	QEvent_ZOrderChange                     QEvent_Type = 126
	QEvent_HoverEnter                       QEvent_Type = 127
	QEvent_HoverLeave                       QEvent_Type = 128
	QEvent_HoverMove                        QEvent_Type = 129
	QEvent_AccessibilityHelp                QEvent_Type = 119
	QEvent_AccessibilityDescription         QEvent_Type = 130
	QEvent_AcceptDropsChange                QEvent_Type = 152
	QEvent_MenubarUpdated                   QEvent_Type = 153
	QEvent_ZeroTimerEvent                   QEvent_Type = 154
	QEvent_GraphicsSceneMouseMove           QEvent_Type = 155
	QEvent_GraphicsSceneMousePress          QEvent_Type = 156
	QEvent_GraphicsSceneMouseRelease        QEvent_Type = 157
	QEvent_GraphicsSceneMouseDoubleClick    QEvent_Type = 158
	QEvent_GraphicsSceneContextMenu         QEvent_Type = 159
	QEvent_GraphicsSceneHoverEnter          QEvent_Type = 160
	QEvent_GraphicsSceneHoverMove           QEvent_Type = 161
	QEvent_GraphicsSceneHoverLeave          QEvent_Type = 162
	QEvent_GraphicsSceneHelp                QEvent_Type = 163
	QEvent_GraphicsSceneDragEnter           QEvent_Type = 164
	QEvent_GraphicsSceneDragMove            QEvent_Type = 165
	QEvent_GraphicsSceneDragLeave           QEvent_Type = 166
	QEvent_GraphicsSceneDrop                QEvent_Type = 167
	QEvent_GraphicsSceneWheel               QEvent_Type = 168
	QEvent_KeyboardLayoutChange             QEvent_Type = 169
	QEvent_DynamicPropertyChange            QEvent_Type = 170
	QEvent_TabletEnterProximity             QEvent_Type = 171
	QEvent_TabletLeaveProximity             QEvent_Type = 172
	QEvent_NonClientAreaMouseMove           QEvent_Type = 173
	QEvent_NonClientAreaMouseButtonPress    QEvent_Type = 174
	QEvent_NonClientAreaMouseButtonRelease  QEvent_Type = 175
	QEvent_NonClientAreaMouseButtonDblClick QEvent_Type = 176
	QEvent_MacSizeChange                    QEvent_Type = 177
	QEvent_ContentsRectChange               QEvent_Type = 178
	QEvent_MacGLWindowChange                QEvent_Type = 179
	QEvent_FutureCallOut                    QEvent_Type = 180
	QEvent_GraphicsSceneResize              QEvent_Type = 181
	QEvent_GraphicsSceneMove                QEvent_Type = 182
	QEvent_CursorChange                     QEvent_Type = 183
	QEvent_ToolTipChange                    QEvent_Type = 184
	QEvent_NetworkReplyUpdated              QEvent_Type = 185
	QEvent_GrabMouse                        QEvent_Type = 186
	QEvent_UngrabMouse                      QEvent_Type = 187
	QEvent_GrabKeyboard                     QEvent_Type = 188
	QEvent_UngrabKeyboard                   QEvent_Type = 189
	QEvent_MacGLClearDrawable               QEvent_Type = 191
	QEvent_StateMachineSignal               QEvent_Type = 192
	QEvent_StateMachineWrapped              QEvent_Type = 193
	QEvent_TouchBegin                       QEvent_Type = 194
	QEvent_TouchUpdate                      QEvent_Type = 195
	QEvent_TouchEnd                         QEvent_Type = 196
	QEvent_NativeGesture                    QEvent_Type = 197
	QEvent_RequestSoftwareInputPanel        QEvent_Type = 199
	QEvent_CloseSoftwareInputPanel          QEvent_Type = 200
	QEvent_UpdateSoftKeys                   QEvent_Type = 201
	QEvent_WinIdChange                      QEvent_Type = 203
	QEvent_Gesture                          QEvent_Type = 198
	QEvent_GestureOverride                  QEvent_Type = 202
	QEvent_User                             QEvent_Type = 1000
	QEvent_MaxUser                          QEvent_Type = 65535
)

//struct QEvent : QEvent
type QEvent struct {
	BaseDrv
}

//QEvent::QEvent(QEvent::Type)
func NewEvent(_type QEvent_Type) *QEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 31000, 31102, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEvent{}
	_p.SetDriver(__rv, 31000, true)
	return _p
}

//QEvent::accept()
func (q *QEvent) Accept() {
	q.Drv(31000, 31103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEvent::ignore()
func (q *QEvent) Ignore() {
	q.Drv(31000, 31104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEvent::isAccepted()
func (q *QEvent) IsAccepted() bool {
	var __rv bool
	q.Drv(31000, 31105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::registerEventType()
func QEventRegisterEventType() int32 {
	var __rv int32
	DirectQtDrv(nil, 31000, 31106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::registerEventType()
func (q *QEvent) RegisterEventType() int32 {
	var __rv int32
	q.Drv(31000, 31106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::registerEventType(int)
func QEventRegisterEventTypeWithHint(hint int32) int32 {
	var __rv int32
	DirectQtDrv(nil, 31000, 31107, unsafe.Pointer(&hint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::registerEventType(int)
func (q *QEvent) RegisterEventTypeWithHint(hint int32) int32 {
	var __rv int32
	q.Drv(31000, 31107, unsafe.Pointer(&hint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::setAccepted(bool)
func (q *QEvent) SetAccepted(accepted bool) {
	q.Drv(31000, 31108, unsafe.Pointer(&accepted), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEvent::spontaneous()
func (q *QEvent) Spontaneous() bool {
	var __rv bool
	q.Drv(31000, 31109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEvent::type()
func (q *QEvent) Type() QEvent_Type {
	var __rv QEvent_Type
	q.Drv(31000, 31110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QFactoryInterface : QFactoryInterface
type QFactoryInterface struct {
	BaseDrv
}

//QFactoryInterface::keys()
func (q *QFactoryInterface) Keys() []string {
	var __rv []string
	q.Drv(32000, 32102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFileIconProvider_IconType - QFileIconProvider::IconType
type QFileIconProvider_IconType uint32

const (
	QFileIconProvider_Computer QFileIconProvider_IconType = 0
	QFileIconProvider_Desktop  QFileIconProvider_IconType = 1
	QFileIconProvider_Trashcan QFileIconProvider_IconType = 2
	QFileIconProvider_Network  QFileIconProvider_IconType = 3
	QFileIconProvider_Drive    QFileIconProvider_IconType = 4
	QFileIconProvider_Folder   QFileIconProvider_IconType = 5
	QFileIconProvider_File     QFileIconProvider_IconType = 6
)

//struct QFileIconProvider : QFileIconProvider
type QFileIconProvider struct {
	BaseDrv
}

//QFileIconProvider::QFileIconProvider()
func NewFileIconProvider() *QFileIconProvider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 33000, 33102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileIconProvider{}
	_p.SetDriver(__rv, 33000, true)
	return _p
}

//QFileIconProvider::icon(QFileIconProvider::IconType)
func (q *QFileIconProvider) Icon(_type QFileIconProvider_IconType) *QIcon {
	var __rv uintptr
	q.Drv(33000, 33103, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QFileIconProvider::icon(QFileInfo const&)
func (q *QFileIconProvider) IconWithInfo(info *QFileInfo) *QIcon {
	var __rv uintptr
	q.Drv(33000, 33104, Native(info), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QFileIconProvider::type(QFileInfo const&)
func (q *QFileIconProvider) Type(info *QFileInfo) string {
	var __rv C.string_head
	q.Drv(33000, 33105, Native(info), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QFileInfo : QFileInfo
type QFileInfo struct {
	BaseDrv
}

//QFileInfo::QFileInfo()
func NewFileInfo() *QFileInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 34000, 34102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileInfo{}
	_p.SetDriver(__rv, 34000, true)
	return _p
}

//QFileInfo::QFileInfo(QFile const&)
func NewFileInfoWithFile(file *QFile) *QFileInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 34000, 34103, Native(file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileInfo{}
	_p.SetDriver(__rv, 34000, true)
	return _p
}

//QFileInfo::QFileInfo(QFileInfo const&)
func NewFileInfoCopy(fileinfo *QFileInfo) *QFileInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 34000, 34104, Native(fileinfo), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileInfo{}
	_p.SetDriver(__rv, 34000, true)
	return _p
}

//QFileInfo::QFileInfo(QString const&)
func NewFileInfoWithFilename(file string) *QFileInfo {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 34000, 34105, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileInfo{}
	_p.SetDriver(__rv, 34000, true)
	return _p
}

//QFileInfo::QFileInfo(QDir const&,QString const&)
func NewFileInfoWithDirFilename(dir *QDir, file string) *QFileInfo {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 34000, 34106, Native(dir), unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileInfo{}
	_p.SetDriver(__rv, 34000, true)
	return _p
}

//QFileInfo::absoluteDir()
func (q *QFileInfo) AbsoluteDir() *QDir {
	var __rv uintptr
	q.Drv(34000, 34107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QFileInfo::absoluteFilePath()
func (q *QFileInfo) AbsoluteFilePath() string {
	var __rv C.string_head
	q.Drv(34000, 34108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::absolutePath()
func (q *QFileInfo) AbsolutePath() string {
	var __rv C.string_head
	q.Drv(34000, 34109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::baseName()
func (q *QFileInfo) BaseName() string {
	var __rv C.string_head
	q.Drv(34000, 34110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::bundleName()
func (q *QFileInfo) BundleName() string {
	var __rv C.string_head
	q.Drv(34000, 34111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::caching()
func (q *QFileInfo) Caching() bool {
	var __rv bool
	q.Drv(34000, 34112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::canonicalFilePath()
func (q *QFileInfo) CanonicalFilePath() string {
	var __rv C.string_head
	q.Drv(34000, 34113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::canonicalPath()
func (q *QFileInfo) CanonicalPath() string {
	var __rv C.string_head
	q.Drv(34000, 34114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::completeBaseName()
func (q *QFileInfo) CompleteBaseName() string {
	var __rv C.string_head
	q.Drv(34000, 34115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::completeSuffix()
func (q *QFileInfo) CompleteSuffix() string {
	var __rv C.string_head
	q.Drv(34000, 34116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::created()
func (q *QFileInfo) Created() *QDateTime {
	var __rv uintptr
	q.Drv(34000, 34117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QFileInfo::dir()
func (q *QFileInfo) Dir() *QDir {
	var __rv uintptr
	q.Drv(34000, 34118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QFileInfo::exists()
func (q *QFileInfo) Exists() bool {
	var __rv bool
	q.Drv(34000, 34119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::fileName()
func (q *QFileInfo) FileName() string {
	var __rv C.string_head
	q.Drv(34000, 34120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::filePath()
func (q *QFileInfo) FilePath() string {
	var __rv C.string_head
	q.Drv(34000, 34121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::group()
func (q *QFileInfo) Group() string {
	var __rv C.string_head
	q.Drv(34000, 34122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::groupId()
func (q *QFileInfo) GroupId() uint32 {
	var __rv uint32
	q.Drv(34000, 34123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isAbsolute()
func (q *QFileInfo) IsAbsolute() bool {
	var __rv bool
	q.Drv(34000, 34124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isBundle()
func (q *QFileInfo) IsBundle() bool {
	var __rv bool
	q.Drv(34000, 34125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isDir()
func (q *QFileInfo) IsDir() bool {
	var __rv bool
	q.Drv(34000, 34126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isExecutable()
func (q *QFileInfo) IsExecutable() bool {
	var __rv bool
	q.Drv(34000, 34127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isFile()
func (q *QFileInfo) IsFile() bool {
	var __rv bool
	q.Drv(34000, 34128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isHidden()
func (q *QFileInfo) IsHidden() bool {
	var __rv bool
	q.Drv(34000, 34129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isReadable()
func (q *QFileInfo) IsReadable() bool {
	var __rv bool
	q.Drv(34000, 34130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isRelative()
func (q *QFileInfo) IsRelative() bool {
	var __rv bool
	q.Drv(34000, 34131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isRoot()
func (q *QFileInfo) IsRoot() bool {
	var __rv bool
	q.Drv(34000, 34132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isSymLink()
func (q *QFileInfo) IsSymLink() bool {
	var __rv bool
	q.Drv(34000, 34133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::isWritable()
func (q *QFileInfo) IsWritable() bool {
	var __rv bool
	q.Drv(34000, 34134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::lastModified()
func (q *QFileInfo) LastModified() *QDateTime {
	var __rv uintptr
	q.Drv(34000, 34135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QFileInfo::lastRead()
func (q *QFileInfo) LastRead() *QDateTime {
	var __rv uintptr
	q.Drv(34000, 34136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QFileInfo::makeAbsolute()
func (q *QFileInfo) MakeAbsolute() bool {
	var __rv bool
	q.Drv(34000, 34137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::owner()
func (q *QFileInfo) Owner() string {
	var __rv C.string_head
	q.Drv(34000, 34138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::ownerId()
func (q *QFileInfo) OwnerId() uint32 {
	var __rv uint32
	q.Drv(34000, 34139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::path()
func (q *QFileInfo) Path() string {
	var __rv C.string_head
	q.Drv(34000, 34140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::permission(QFlags<QFile::Permission>)
func (q *QFileInfo) Permission(permissions QFile_Permission) bool {
	var __rv bool
	q.Drv(34000, 34141, unsafe.Pointer(&permissions), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::permissions()
func (q *QFileInfo) Permissions() QFile_Permission {
	var __rv QFile_Permission
	q.Drv(34000, 34142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::readLink()
func (q *QFileInfo) ReadLink() string {
	var __rv C.string_head
	q.Drv(34000, 34143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::refresh()
func (q *QFileInfo) Refresh() {
	q.Drv(34000, 34144, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileInfo::setCaching(bool)
func (q *QFileInfo) SetCaching(on bool) {
	q.Drv(34000, 34145, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileInfo::setFile(QFile const&)
func (q *QFileInfo) SetFile(file *QFile) {
	q.Drv(34000, 34146, Native(file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileInfo::setFile(QString const&)
func (q *QFileInfo) SetFileWithFilename(file string) {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	q.Drv(34000, 34147, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileInfo::setFile(QDir const&,QString const&)
func (q *QFileInfo) SetFileWithDirFilename(dir *QDir, file string) {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	q.Drv(34000, 34148, Native(dir), unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileInfo::size()
func (q *QFileInfo) Size() int64 {
	var __rv int64
	q.Drv(34000, 34149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileInfo::suffix()
func (q *QFileInfo) Suffix() string {
	var __rv C.string_head
	q.Drv(34000, 34150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileInfo::symLinkTarget()
func (q *QFileInfo) SymLinkTarget() string {
	var __rv C.string_head
	q.Drv(34000, 34151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QFileOpenEvent : QFileOpenEvent
type QFileOpenEvent struct {
	QEvent
}

//QFileOpenEvent::QFileOpenEvent(QString const&)
func NewFileOpenEvent(file string) *QFileOpenEvent {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 35000, 35102, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileOpenEvent{}
	_p.SetDriver(__rv, 35000, true)
	return _p
}

//QFileOpenEvent::QFileOpenEvent(QUrl const&)
func NewFileOpenEventWithUrl(url *QUrl) *QFileOpenEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 35000, 35103, Native(url), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileOpenEvent{}
	_p.SetDriver(__rv, 35000, true)
	return _p
}

//QFileOpenEvent::file()
func (q *QFileOpenEvent) File() string {
	var __rv C.string_head
	q.Drv(35000, 35104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileOpenEvent::url()
func (q *QFileOpenEvent) Url() *QUrl {
	var __rv uintptr
	q.Drv(35000, 35105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//struct QFocusEvent : QFocusEvent
type QFocusEvent struct {
	QEvent
}

//QFocusEvent::QFocusEvent(QEvent::Type,Qt::FocusReason)
func NewFocusEvent(_type QEvent_Type, reason Qt_FocusReason) *QFocusEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 36000, 36102, unsafe.Pointer(&_type), unsafe.Pointer(&reason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFocusEvent{}
	_p.SetDriver(__rv, 36000, true)
	return _p
}

//QFocusEvent::gotFocus()
func (q *QFocusEvent) GotFocus() bool {
	var __rv bool
	q.Drv(36000, 36103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFocusEvent::lostFocus()
func (q *QFocusEvent) LostFocus() bool {
	var __rv bool
	q.Drv(36000, 36104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFocusEvent::reason()
func (q *QFocusEvent) Reason() Qt_FocusReason {
	var __rv Qt_FocusReason
	q.Drv(36000, 36105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFont_StyleStrategy - QFont::StyleStrategy
type QFont_StyleStrategy uint32

const (
	QFont_PreferDefault       QFont_StyleStrategy = 0x0001
	QFont_PreferBitmap        QFont_StyleStrategy = 0x0002
	QFont_PreferDevice        QFont_StyleStrategy = 0x0004
	QFont_PreferOutline       QFont_StyleStrategy = 0x0008
	QFont_ForceOutline        QFont_StyleStrategy = 0x0010
	QFont_PreferMatch         QFont_StyleStrategy = 0x0020
	QFont_PreferQuality       QFont_StyleStrategy = 0x0040
	QFont_PreferAntialias     QFont_StyleStrategy = 0x0080
	QFont_NoAntialias         QFont_StyleStrategy = 0x0100
	QFont_OpenGLCompatible    QFont_StyleStrategy = 0x0200
	QFont_ForceIntegerMetrics QFont_StyleStrategy = 0x0400
	QFont_NoFontMerging       QFont_StyleStrategy = 0x8000
)

//enum QFont_SpacingType - QFont::SpacingType
type QFont_SpacingType uint32

const (
	QFont_PercentageSpacing QFont_SpacingType = 0
	QFont_AbsoluteSpacing   QFont_SpacingType = 1
)

//enum QFont_ResolveProperties - QFont::ResolveProperties
type QFont_ResolveProperties uint32

const (
	QFont_FamilyResolved         QFont_ResolveProperties = 0x0001
	QFont_SizeResolved           QFont_ResolveProperties = 0x0002
	QFont_StyleHintResolved      QFont_ResolveProperties = 0x0004
	QFont_StyleStrategyResolved  QFont_ResolveProperties = 0x0008
	QFont_WeightResolved         QFont_ResolveProperties = 0x0010
	QFont_StyleResolved          QFont_ResolveProperties = 0x0020
	QFont_UnderlineResolved      QFont_ResolveProperties = 0x0040
	QFont_OverlineResolved       QFont_ResolveProperties = 0x0080
	QFont_StrikeOutResolved      QFont_ResolveProperties = 0x0100
	QFont_FixedPitchResolved     QFont_ResolveProperties = 0x0200
	QFont_StretchResolved        QFont_ResolveProperties = 0x0400
	QFont_KerningResolved        QFont_ResolveProperties = 0x0800
	QFont_CapitalizationResolved QFont_ResolveProperties = 0x1000
	QFont_LetterSpacingResolved  QFont_ResolveProperties = 0x2000
	QFont_WordSpacingResolved    QFont_ResolveProperties = 0x4000
	QFont_AllPropertiesResolved  QFont_ResolveProperties = 0x7fff
)

//enum QFont_StyleHint - QFont::StyleHint
type QFont_StyleHint uint32

const (
	QFont_Helvetica  QFont_StyleHint = 0
	QFont_SansSerif  QFont_StyleHint = QFont_Helvetica
	QFont_Times      QFont_StyleHint = QFont_Helvetica + 1
	QFont_Serif      QFont_StyleHint = QFont_Times
	QFont_Courier    QFont_StyleHint = QFont_Times + 1
	QFont_TypeWriter QFont_StyleHint = QFont_Courier
	QFont_OldEnglish QFont_StyleHint = QFont_Courier + 1
	QFont_Decorative QFont_StyleHint = QFont_OldEnglish
	QFont_System     QFont_StyleHint = QFont_OldEnglish + 1
	QFont_AnyStyle   QFont_StyleHint = QFont_OldEnglish + 1 + 1
	QFont_Cursive    QFont_StyleHint = QFont_OldEnglish + 1 + 1 + 1
	QFont_Monospace  QFont_StyleHint = QFont_OldEnglish + 1 + 1 + 1 + 1
	QFont_Fantasy    QFont_StyleHint = QFont_OldEnglish + 1 + 1 + 1 + 1 + 1
)

//enum QFont_Weight - QFont::Weight
type QFont_Weight uint32

const (
	QFont_Light    QFont_Weight = 25
	QFont_Normal   QFont_Weight = 50
	QFont_DemiBold QFont_Weight = 63
	QFont_Bold     QFont_Weight = 75
	QFont_Black    QFont_Weight = 87
)

//enum QFont_Capitalization - QFont::Capitalization
type QFont_Capitalization uint32

const (
	QFont_MixedCase    QFont_Capitalization = 0
	QFont_AllUppercase QFont_Capitalization = 1
	QFont_AllLowercase QFont_Capitalization = 2
	QFont_SmallCaps    QFont_Capitalization = 3
	QFont_Capitalize   QFont_Capitalization = 4
)

//enum QFont_Stretch - QFont::Stretch
type QFont_Stretch uint32

const (
	QFont_UltraCondensed QFont_Stretch = 50
	QFont_ExtraCondensed QFont_Stretch = 62
	QFont_Condensed      QFont_Stretch = 75
	QFont_SemiCondensed  QFont_Stretch = 87
	QFont_Unstretched    QFont_Stretch = 100
	QFont_SemiExpanded   QFont_Stretch = 112
	QFont_Expanded       QFont_Stretch = 125
	QFont_ExtraExpanded  QFont_Stretch = 150
	QFont_UltraExpanded  QFont_Stretch = 200
)

//enum QFont_Style - QFont::Style
type QFont_Style uint32

const (
	QFont_StyleNormal  QFont_Style = 0
	QFont_StyleItalic  QFont_Style = 1
	QFont_StyleOblique QFont_Style = 2
)

//struct QFont : QFont
type QFont struct {
	BaseDrv
}

//QFont::QFont()
func NewFont() *QFont {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 37000, 37102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFont{}
	_p.SetDriver(__rv, 37000, true)
	return _p
}

//QFont::QFont(QFont const&)
func NewFontCopy(value *QFont) *QFont {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 37000, 37103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFont{}
	_p.SetDriver(__rv, 37000, true)
	return _p
}

//QFont::QFont(QFont const&,QPaintDevice*)
func NewFontWithFontPaintDevice(value2 *QFont, pd QPaintDeviceInterface) *QFont {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 37000, 37104, Native(value2), unsafe.Pointer(new_pd_head(pd)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFont{}
	_p.SetDriver(__rv, 37000, true)
	return _p
}

//QFont::QFont(QString const&,int,int,bool)
func NewFontWithFamilyPointsizeWeightItalic(family string, pointSize int32, weight int32, italic bool) *QFont {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 37000, 37105, unsafe.Pointer(_family), unsafe.Pointer(&pointSize), unsafe.Pointer(&weight), unsafe.Pointer(&italic), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFont{}
	_p.SetDriver(__rv, 37000, true)
	return _p
}

//QFont::bold()
func (q *QFont) Bold() bool {
	var __rv bool
	q.Drv(37000, 37106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::cacheStatistics()
func QFontCacheStatistics() {
	DirectQtDrv(nil, 37000, 37107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::cacheStatistics()
func (q *QFont) CacheStatistics() {
	q.Drv(37000, 37107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::capitalization()
func (q *QFont) Capitalization() QFont_Capitalization {
	var __rv QFont_Capitalization
	q.Drv(37000, 37108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::cleanup()
func QFontCleanup() {
	DirectQtDrv(nil, 37000, 37109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::cleanup()
func (q *QFont) Cleanup() {
	q.Drv(37000, 37109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::defaultFamily()
func (q *QFont) DefaultFamily() string {
	var __rv C.string_head
	q.Drv(37000, 37110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::exactMatch()
func (q *QFont) ExactMatch() bool {
	var __rv bool
	q.Drv(37000, 37111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::family()
func (q *QFont) Family() string {
	var __rv C.string_head
	q.Drv(37000, 37112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::fixedPitch()
func (q *QFont) FixedPitch() bool {
	var __rv bool
	q.Drv(37000, 37113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::fromString(QString const&)
func (q *QFont) FromString(value string) bool {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv bool
	q.Drv(37000, 37114, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::initialize()
func QFontInitialize() {
	DirectQtDrv(nil, 37000, 37115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::initialize()
func (q *QFont) Initialize() {
	q.Drv(37000, 37115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::insertSubstitution(QString const&,QString const&)
func QFontInsertSubstitution(value2 string, value3 string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_value3 := NewCStringHead(value3)
	defer FreeCStringHead(_value3)
	DirectQtDrv(nil, 37000, 37116, unsafe.Pointer(_value2), unsafe.Pointer(_value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::insertSubstitution(QString const&,QString const&)
func (q *QFont) InsertSubstitution(value2 string, value3 string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_value3 := NewCStringHead(value3)
	defer FreeCStringHead(_value3)
	q.Drv(37000, 37116, unsafe.Pointer(_value2), unsafe.Pointer(_value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::insertSubstitutions(QString const&,QStringList const&)
func QFontInsertSubstitutions(value2 string, value3 []string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_value3, _value3_size := NewCSArray(value3)
	defer FreeCSArray(_value3, _value3_size)
	DirectQtDrv(nil, 37000, 37117, unsafe.Pointer(_value2), unsafe.Pointer(&_value3[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::insertSubstitutions(QString const&,QStringList const&)
func (q *QFont) InsertSubstitutions(value2 string, value3 []string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_value3, _value3_size := NewCSArray(value3)
	defer FreeCSArray(_value3, _value3_size)
	q.Drv(37000, 37117, unsafe.Pointer(_value2), unsafe.Pointer(&_value3[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::isCopyOf(QFont const&)
func (q *QFont) IsCopyOf(value *QFont) bool {
	var __rv bool
	q.Drv(37000, 37118, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::italic()
func (q *QFont) Italic() bool {
	var __rv bool
	q.Drv(37000, 37119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::kerning()
func (q *QFont) Kerning() bool {
	var __rv bool
	q.Drv(37000, 37120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::key()
func (q *QFont) Key() string {
	var __rv C.string_head
	q.Drv(37000, 37121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::lastResortFamily()
func (q *QFont) LastResortFamily() string {
	var __rv C.string_head
	q.Drv(37000, 37122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::lastResortFont()
func (q *QFont) LastResortFont() string {
	var __rv C.string_head
	q.Drv(37000, 37123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::letterSpacing()
func (q *QFont) LetterSpacing() float64 {
	var __rv float64
	q.Drv(37000, 37124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::letterSpacingType()
func (q *QFont) LetterSpacingType() QFont_SpacingType {
	var __rv QFont_SpacingType
	q.Drv(37000, 37125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::overline()
func (q *QFont) Overline() bool {
	var __rv bool
	q.Drv(37000, 37126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::pixelSize()
func (q *QFont) PixelSize() int32 {
	var __rv int32
	q.Drv(37000, 37127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::pointSize()
func (q *QFont) PointSize() int32 {
	var __rv int32
	q.Drv(37000, 37128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::pointSizeF()
func (q *QFont) PointSizeF() float64 {
	var __rv float64
	q.Drv(37000, 37129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::rawMode()
func (q *QFont) RawMode() bool {
	var __rv bool
	q.Drv(37000, 37130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::rawName()
func (q *QFont) RawName() string {
	var __rv C.string_head
	q.Drv(37000, 37131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::removeSubstitution(QString const&)
func QFontRemoveSubstitutions(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	DirectQtDrv(nil, 37000, 37132, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::removeSubstitution(QString const&)
func (q *QFont) RemoveSubstitutions(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(37000, 37132, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::resolve()
func (q *QFont) Resolve() uint32 {
	var __rv uint32
	q.Drv(37000, 37133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::resolve(QFont const&)
func (q *QFont) ResolveWithFont(value *QFont) *QFont {
	var __rv uintptr
	q.Drv(37000, 37134, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFont::resolve(unsigned int)
func (q *QFont) ResolveWithMask(mask uint32) {
	q.Drv(37000, 37135, unsafe.Pointer(&mask), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setBold(bool)
func (q *QFont) SetBold(value bool) {
	q.Drv(37000, 37136, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setCapitalization(QFont::Capitalization)
func (q *QFont) SetCapitalization(value QFont_Capitalization) {
	q.Drv(37000, 37137, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setFamily(QString const&)
func (q *QFont) SetFamily(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(37000, 37138, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setFixedPitch(bool)
func (q *QFont) SetFixedPitch(value bool) {
	q.Drv(37000, 37139, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setItalic(bool)
func (q *QFont) SetItalic(b bool) {
	q.Drv(37000, 37140, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setKerning(bool)
func (q *QFont) SetKerning(value bool) {
	q.Drv(37000, 37141, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setLetterSpacing(QFont::SpacingType,double)
func (q *QFont) SetLetterSpacing(_type QFont_SpacingType, spacing float64) {
	q.Drv(37000, 37142, unsafe.Pointer(&_type), unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setOverline(bool)
func (q *QFont) SetOverline(value bool) {
	q.Drv(37000, 37143, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setPixelSize(int)
func (q *QFont) SetPixelSize(value int32) {
	q.Drv(37000, 37144, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setPointSize(int)
func (q *QFont) SetPointSize(value int32) {
	q.Drv(37000, 37145, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setPointSizeF(double)
func (q *QFont) SetPointSizeF(value float64) {
	q.Drv(37000, 37146, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setRawMode(bool)
func (q *QFont) SetRawMode(value bool) {
	q.Drv(37000, 37147, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setRawName(QString const&)
func (q *QFont) SetRawName(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(37000, 37148, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStretch(int)
func (q *QFont) SetStretch(value int32) {
	q.Drv(37000, 37149, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStrikeOut(bool)
func (q *QFont) SetStrikeOut(value bool) {
	q.Drv(37000, 37150, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStyle(QFont::Style)
func (q *QFont) SetStyle(style QFont_Style) {
	q.Drv(37000, 37151, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStyleHint(QFont::StyleHint)
func (q *QFont) SetStyleHint(value QFont_StyleHint) {
	q.Drv(37000, 37152, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStyleHint(QFont::StyleHint,QFont::StyleStrategy)
func (q *QFont) SetStyleHintWithStylehintStylestrategy(value2 QFont_StyleHint, value3 QFont_StyleStrategy) {
	q.Drv(37000, 37153, unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setStyleStrategy(QFont::StyleStrategy)
func (q *QFont) SetStyleStrategy(s QFont_StyleStrategy) {
	q.Drv(37000, 37154, unsafe.Pointer(&s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setUnderline(bool)
func (q *QFont) SetUnderline(value bool) {
	q.Drv(37000, 37155, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setWeight(int)
func (q *QFont) SetWeight(value int32) {
	q.Drv(37000, 37156, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::setWordSpacing(double)
func (q *QFont) SetWordSpacing(spacing float64) {
	q.Drv(37000, 37157, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFont::stretch()
func (q *QFont) Stretch() int32 {
	var __rv int32
	q.Drv(37000, 37158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::strikeOut()
func (q *QFont) StrikeOut() bool {
	var __rv bool
	q.Drv(37000, 37159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::style()
func (q *QFont) Style() QFont_Style {
	var __rv QFont_Style
	q.Drv(37000, 37160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::styleHint()
func (q *QFont) StyleHint() QFont_StyleHint {
	var __rv QFont_StyleHint
	q.Drv(37000, 37161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::styleStrategy()
func (q *QFont) StyleStrategy() QFont_StyleStrategy {
	var __rv QFont_StyleStrategy
	q.Drv(37000, 37162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::substitute(QString const&)
func QFontSubstitute(value string) string {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv C.string_head
	DirectQtDrv(nil, 37000, 37163, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::substitute(QString const&)
func (q *QFont) Substitute(value string) string {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv C.string_head
	q.Drv(37000, 37163, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::substitutes(QString const&)
func QFontSubstitutes(value string) []string {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []string
	DirectQtDrv(nil, 37000, 37164, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::substitutes(QString const&)
func (q *QFont) Substitutes(value string) []string {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []string
	q.Drv(37000, 37164, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::substitutions()
func QFontSubstitutions() []string {
	var __rv []string
	DirectQtDrv(nil, 37000, 37165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::substitutions()
func (q *QFont) Substitutions() []string {
	var __rv []string
	q.Drv(37000, 37165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::toString()
func (q *QFont) ToString() string {
	var __rv C.string_head
	q.Drv(37000, 37166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFont::underline()
func (q *QFont) Underline() bool {
	var __rv bool
	q.Drv(37000, 37167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::weight()
func (q *QFont) Weight() int32 {
	var __rv int32
	q.Drv(37000, 37168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFont::wordSpacing()
func (q *QFont) WordSpacing() float64 {
	var __rv float64
	q.Drv(37000, 37169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFontDatabase_WritingSystem - QFontDatabase::WritingSystem
type QFontDatabase_WritingSystem uint32

const (
	QFontDatabase_Any                 QFontDatabase_WritingSystem = 0
	QFontDatabase_Latin               QFontDatabase_WritingSystem = 1
	QFontDatabase_Greek               QFontDatabase_WritingSystem = 2
	QFontDatabase_Cyrillic            QFontDatabase_WritingSystem = 3
	QFontDatabase_Armenian            QFontDatabase_WritingSystem = 4
	QFontDatabase_Hebrew              QFontDatabase_WritingSystem = 5
	QFontDatabase_Arabic              QFontDatabase_WritingSystem = 6
	QFontDatabase_Syriac              QFontDatabase_WritingSystem = 7
	QFontDatabase_Thaana              QFontDatabase_WritingSystem = 8
	QFontDatabase_Devanagari          QFontDatabase_WritingSystem = 9
	QFontDatabase_Bengali             QFontDatabase_WritingSystem = 10
	QFontDatabase_Gurmukhi            QFontDatabase_WritingSystem = 11
	QFontDatabase_Gujarati            QFontDatabase_WritingSystem = 12
	QFontDatabase_Oriya               QFontDatabase_WritingSystem = 13
	QFontDatabase_Tamil               QFontDatabase_WritingSystem = 14
	QFontDatabase_Telugu              QFontDatabase_WritingSystem = 15
	QFontDatabase_Kannada             QFontDatabase_WritingSystem = 16
	QFontDatabase_Malayalam           QFontDatabase_WritingSystem = 17
	QFontDatabase_Sinhala             QFontDatabase_WritingSystem = 18
	QFontDatabase_Thai                QFontDatabase_WritingSystem = 19
	QFontDatabase_Lao                 QFontDatabase_WritingSystem = 20
	QFontDatabase_Tibetan             QFontDatabase_WritingSystem = 21
	QFontDatabase_Myanmar             QFontDatabase_WritingSystem = 22
	QFontDatabase_Georgian            QFontDatabase_WritingSystem = 23
	QFontDatabase_Khmer               QFontDatabase_WritingSystem = 24
	QFontDatabase_SimplifiedChinese   QFontDatabase_WritingSystem = 25
	QFontDatabase_TraditionalChinese  QFontDatabase_WritingSystem = 26
	QFontDatabase_Japanese            QFontDatabase_WritingSystem = 27
	QFontDatabase_Korean              QFontDatabase_WritingSystem = 28
	QFontDatabase_Vietnamese          QFontDatabase_WritingSystem = 29
	QFontDatabase_Symbol              QFontDatabase_WritingSystem = 30
	QFontDatabase_Other               QFontDatabase_WritingSystem = QFontDatabase_Symbol
	QFontDatabase_Ogham               QFontDatabase_WritingSystem = QFontDatabase_Symbol + 1
	QFontDatabase_Runic               QFontDatabase_WritingSystem = QFontDatabase_Symbol + 1 + 1
	QFontDatabase_Nko                 QFontDatabase_WritingSystem = QFontDatabase_Symbol + 1 + 1 + 1
	QFontDatabase_WritingSystemsCount QFontDatabase_WritingSystem = QFontDatabase_Symbol + 1 + 1 + 1 + 1
)

//struct QFontDatabase : QFontDatabase
type QFontDatabase struct {
	BaseDrv
}

//QFontDatabase::QFontDatabase()
func NewFontDatabase() *QFontDatabase {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 38000, 38102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontDatabase{}
	_p.SetDriver(__rv, 38000, true)
	return _p
}

//QFontDatabase::addApplicationFont(QString const&)
func QFontDatabaseAddApplicationFont(fileName string) int32 {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv int32
	DirectQtDrv(nil, 38000, 38103, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::addApplicationFont(QString const&)
func (q *QFontDatabase) AddApplicationFont(fileName string) int32 {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv int32
	q.Drv(38000, 38103, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::addApplicationFontFromData(QByteArray const&)
func QFontDatabaseAddApplicationFontFromData(fontData []byte) int32 {
	_fontData := NewCByteArrayHead(fontData)
	defer FreeCByteArrayHead(_fontData)
	var __rv int32
	DirectQtDrv(nil, 38000, 38104, unsafe.Pointer(_fontData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::addApplicationFontFromData(QByteArray const&)
func (q *QFontDatabase) AddApplicationFontFromData(fontData []byte) int32 {
	_fontData := NewCByteArrayHead(fontData)
	defer FreeCByteArrayHead(_fontData)
	var __rv int32
	q.Drv(38000, 38104, unsafe.Pointer(_fontData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::applicationFontFamilies(int)
func QFontDatabaseApplicationFontFamilies(id int32) []string {
	var __rv []string
	DirectQtDrv(nil, 38000, 38105, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::applicationFontFamilies(int)
func (q *QFontDatabase) ApplicationFontFamilies(id int32) []string {
	var __rv []string
	q.Drv(38000, 38105, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::bold(QString const&,QString const&)
func (q *QFontDatabase) Bold(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38106, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::families()
func (q *QFontDatabase) Families() []string {
	var __rv []string
	q.Drv(38000, 38107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::families(QFontDatabase::WritingSystem)
func (q *QFontDatabase) FamiliesWithWritingsystem(writingSystem QFontDatabase_WritingSystem) []string {
	var __rv []string
	q.Drv(38000, 38108, unsafe.Pointer(&writingSystem), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::font(QString const&,QString const&,int)
func (q *QFontDatabase) Font(family string, style string, pointSize int32) *QFont {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv uintptr
	q.Drv(38000, 38109, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&pointSize), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDatabase::isBitmapScalable(QString const&)
func (q *QFontDatabase) IsBitmapScalable(family string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv bool
	q.Drv(38000, 38110, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isBitmapScalable(QString const&,QString const&)
func (q *QFontDatabase) IsBitmapScalableWithFamilyStyle(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38111, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isFixedPitch(QString const&)
func (q *QFontDatabase) IsFixedPitch(family string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv bool
	q.Drv(38000, 38112, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isFixedPitch(QString const&,QString const&)
func (q *QFontDatabase) IsFixedPitchWithFamilyStyle(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38113, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isScalable(QString const&)
func (q *QFontDatabase) IsScalable(family string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv bool
	q.Drv(38000, 38114, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isScalable(QString const&,QString const&)
func (q *QFontDatabase) IsScalableWithFamilyStyle(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38115, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isSmoothlyScalable(QString const&)
func (q *QFontDatabase) IsSmoothlyScalable(family string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv bool
	q.Drv(38000, 38116, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::isSmoothlyScalable(QString const&,QString const&)
func (q *QFontDatabase) IsSmoothlyScalableWithFamilyStyle(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38117, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::italic(QString const&,QString const&)
func (q *QFontDatabase) Italic(family string, style string) bool {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv bool
	q.Drv(38000, 38118, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::pointSizes(QString const&)
func (q *QFontDatabase) PointSizes(family string) []int32 {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv []int32
	q.Drv(38000, 38119, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::pointSizes(QString const&,QString const&)
func (q *QFontDatabase) PointSizesWithFamilyStyle(family string, style string) []int32 {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv []int32
	q.Drv(38000, 38120, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::removeAllApplicationFonts()
func QFontDatabaseRemoveAllApplicationFonts() bool {
	var __rv bool
	DirectQtDrv(nil, 38000, 38121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::removeAllApplicationFonts()
func (q *QFontDatabase) RemoveAllApplicationFonts() bool {
	var __rv bool
	q.Drv(38000, 38121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::removeApplicationFont(int)
func QFontDatabaseRemoveApplicationFont(id int32) bool {
	var __rv bool
	DirectQtDrv(nil, 38000, 38122, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::removeApplicationFont(int)
func (q *QFontDatabase) RemoveApplicationFont(id int32) bool {
	var __rv bool
	q.Drv(38000, 38122, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::smoothSizes(QString const&,QString const&)
func (q *QFontDatabase) SmoothSizes(family string, style string) []int32 {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv []int32
	q.Drv(38000, 38123, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::standardSizes()
func QFontDatabaseStandardSizes() []int32 {
	var __rv []int32
	DirectQtDrv(nil, 38000, 38124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::standardSizes()
func (q *QFontDatabase) StandardSizes() []int32 {
	var __rv []int32
	q.Drv(38000, 38124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::styleString(QFont const&)
func (q *QFontDatabase) StyleString(font *QFont) string {
	var __rv C.string_head
	q.Drv(38000, 38125, Native(font), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::styleString(QFontInfo const&)
func (q *QFontDatabase) StyleStringWithFontinfo(fontInfo *QFontInfo) string {
	var __rv C.string_head
	q.Drv(38000, 38126, Native(fontInfo), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::styles(QString const&)
func (q *QFontDatabase) Styles(family string) []string {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv []string
	q.Drv(38000, 38127, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::supportsThreadedFontRendering()
func QFontDatabaseSupportsThreadedFontRendering() bool {
	var __rv bool
	DirectQtDrv(nil, 38000, 38128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::supportsThreadedFontRendering()
func (q *QFontDatabase) SupportsThreadedFontRendering() bool {
	var __rv bool
	q.Drv(38000, 38128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::weight(QString const&,QString const&)
func (q *QFontDatabase) Weight(family string, style string) int32 {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	_style := NewCStringHead(style)
	defer FreeCStringHead(_style)
	var __rv int32
	q.Drv(38000, 38129, unsafe.Pointer(_family), unsafe.Pointer(_style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::writingSystemName(QFontDatabase::WritingSystem)
func QFontDatabaseWritingSystemName(writingSystem QFontDatabase_WritingSystem) string {
	var __rv C.string_head
	DirectQtDrv(nil, 38000, 38130, unsafe.Pointer(&writingSystem), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::writingSystemName(QFontDatabase::WritingSystem)
func (q *QFontDatabase) WritingSystemName(writingSystem QFontDatabase_WritingSystem) string {
	var __rv C.string_head
	q.Drv(38000, 38130, unsafe.Pointer(&writingSystem), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::writingSystemSample(QFontDatabase::WritingSystem)
func QFontDatabaseWritingSystemSample(writingSystem QFontDatabase_WritingSystem) string {
	var __rv C.string_head
	DirectQtDrv(nil, 38000, 38131, unsafe.Pointer(&writingSystem), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::writingSystemSample(QFontDatabase::WritingSystem)
func (q *QFontDatabase) WritingSystemSample(writingSystem QFontDatabase_WritingSystem) string {
	var __rv C.string_head
	q.Drv(38000, 38131, unsafe.Pointer(&writingSystem), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontDatabase::writingSystems()
func (q *QFontDatabase) WritingSystems() []QFontDatabase_WritingSystem {
	var __rv []QFontDatabase_WritingSystem
	q.Drv(38000, 38132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDatabase::writingSystems(QString const&)
func (q *QFontDatabase) WritingSystemsWithFamily(family string) []QFontDatabase_WritingSystem {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	var __rv []QFontDatabase_WritingSystem
	q.Drv(38000, 38133, unsafe.Pointer(_family), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QFontInfo : QFontInfo
type QFontInfo struct {
	BaseDrv
}

//QFontInfo::QFontInfo(QFont const&)
func NewFontInfo(value *QFont) *QFontInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 39000, 39102, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontInfo{}
	_p.SetDriver(__rv, 39000, true)
	return _p
}

//QFontInfo::QFontInfo(QFontInfo const&)
func NewFontInfoCopy(value *QFontInfo) *QFontInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 39000, 39103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontInfo{}
	_p.SetDriver(__rv, 39000, true)
	return _p
}

//QFontInfo::bold()
func (q *QFontInfo) Bold() bool {
	var __rv bool
	q.Drv(39000, 39104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::exactMatch()
func (q *QFontInfo) ExactMatch() bool {
	var __rv bool
	q.Drv(39000, 39105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::family()
func (q *QFontInfo) Family() string {
	var __rv C.string_head
	q.Drv(39000, 39106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontInfo::fixedPitch()
func (q *QFontInfo) FixedPitch() bool {
	var __rv bool
	q.Drv(39000, 39107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::italic()
func (q *QFontInfo) Italic() bool {
	var __rv bool
	q.Drv(39000, 39108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::overline()
func (q *QFontInfo) Overline() bool {
	var __rv bool
	q.Drv(39000, 39109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::pixelSize()
func (q *QFontInfo) PixelSize() int32 {
	var __rv int32
	q.Drv(39000, 39110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::pointSize()
func (q *QFontInfo) PointSize() int32 {
	var __rv int32
	q.Drv(39000, 39111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::pointSizeF()
func (q *QFontInfo) PointSizeF() float64 {
	var __rv float64
	q.Drv(39000, 39112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::rawMode()
func (q *QFontInfo) RawMode() bool {
	var __rv bool
	q.Drv(39000, 39113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::strikeOut()
func (q *QFontInfo) StrikeOut() bool {
	var __rv bool
	q.Drv(39000, 39114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::style()
func (q *QFontInfo) Style() QFont_Style {
	var __rv QFont_Style
	q.Drv(39000, 39115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::styleHint()
func (q *QFontInfo) StyleHint() QFont_StyleHint {
	var __rv QFont_StyleHint
	q.Drv(39000, 39116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::underline()
func (q *QFontInfo) Underline() bool {
	var __rv bool
	q.Drv(39000, 39117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontInfo::weight()
func (q *QFontInfo) Weight() int32 {
	var __rv int32
	q.Drv(39000, 39118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QFontMetrics : QFontMetrics
type QFontMetrics struct {
	BaseDrv
}

//QFontMetrics::QFontMetrics(QFont const&)
func NewFontMetrics(value *QFont) *QFontMetrics {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 40000, 40102, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetrics{}
	_p.SetDriver(__rv, 40000, true)
	return _p
}

//QFontMetrics::QFontMetrics(QFontMetrics const&)
func NewFontMetricsCopy(value *QFontMetrics) *QFontMetrics {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 40000, 40103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetrics{}
	_p.SetDriver(__rv, 40000, true)
	return _p
}

//QFontMetrics::QFontMetrics(QFont const&,QPaintDevice*)
func NewFontMetricsWithFontPaintDevice(value2 *QFont, pd QPaintDeviceInterface) *QFontMetrics {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 40000, 40104, Native(value2), unsafe.Pointer(new_pd_head(pd)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetrics{}
	_p.SetDriver(__rv, 40000, true)
	return _p
}

//QFontMetrics::ascent()
func (q *QFontMetrics) Ascent() int32 {
	var __rv int32
	q.Drv(40000, 40105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::averageCharWidth()
func (q *QFontMetrics) AverageCharWidth() int32 {
	var __rv int32
	q.Drv(40000, 40106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::boundingRect(QChar)
func (q *QFontMetrics) BoundingRect(value rune) *QRect {
	var __rv uintptr
	q.Drv(40000, 40107, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFontMetrics::boundingRect(QString const&)
func (q *QFontMetrics) BoundingRectWithText(text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(40000, 40108, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFontMetrics::boundingRect(QRect const&,int,QString const&,int,int*)
func (q *QFontMetrics) BoundingRectWithRectFlagsTextTabstopsTabarray(r *QRect, flags int32, text string, tabstops int32, tabarray *int32) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(40000, 40109, Native(r), unsafe.Pointer(&flags), unsafe.Pointer(_text), unsafe.Pointer(&tabstops), unsafe.Pointer(&tabarray), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFontMetrics::boundingRect(int,int,int,int,int,QString const&,int,int*)
func (q *QFontMetrics) BoundingRectWithXYWidthHeightFlagsTextTabstopsTabarray(x int32, y int32, w int32, h int32, flags int32, text string, tabstops int32, tabarray *int32) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(40000, 40110, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&flags), unsafe.Pointer(_text), unsafe.Pointer(&tabstops), unsafe.Pointer(&tabarray), unsafe.Pointer(&__rv), nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFontMetrics::charWidth(QString const&,int)
func (q *QFontMetrics) CharWidth(str string, pos int32) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(40000, 40111, unsafe.Pointer(_str), unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::descent()
func (q *QFontMetrics) Descent() int32 {
	var __rv int32
	q.Drv(40000, 40112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::elidedText(QString const&,Qt::TextElideMode,int,int)
func (q *QFontMetrics) ElidedText(text string, mode Qt_TextElideMode, width int32, flags int32) string {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	q.Drv(40000, 40113, unsafe.Pointer(_text), unsafe.Pointer(&mode), unsafe.Pointer(&width), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontMetrics::height()
func (q *QFontMetrics) Height() int32 {
	var __rv int32
	q.Drv(40000, 40114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::inFont(QChar)
func (q *QFontMetrics) InFont(value rune) bool {
	var __rv bool
	q.Drv(40000, 40115, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::leading()
func (q *QFontMetrics) Leading() int32 {
	var __rv int32
	q.Drv(40000, 40116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::leftBearing(QChar)
func (q *QFontMetrics) LeftBearing(value rune) int32 {
	var __rv int32
	q.Drv(40000, 40117, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::lineSpacing()
func (q *QFontMetrics) LineSpacing() int32 {
	var __rv int32
	q.Drv(40000, 40118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::lineWidth()
func (q *QFontMetrics) LineWidth() int32 {
	var __rv int32
	q.Drv(40000, 40119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::maxWidth()
func (q *QFontMetrics) MaxWidth() int32 {
	var __rv int32
	q.Drv(40000, 40120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::minLeftBearing()
func (q *QFontMetrics) MinLeftBearing() int32 {
	var __rv int32
	q.Drv(40000, 40121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::minRightBearing()
func (q *QFontMetrics) MinRightBearing() int32 {
	var __rv int32
	q.Drv(40000, 40122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::overlinePos()
func (q *QFontMetrics) OverlinePos() int32 {
	var __rv int32
	q.Drv(40000, 40123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::rightBearing(QChar)
func (q *QFontMetrics) RightBearing(value rune) int32 {
	var __rv int32
	q.Drv(40000, 40124, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::size(int,QString const&,int,int*)
func (q *QFontMetrics) Size(flags int32, str string, tabstops int32, tabarray *int32) *QSize {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	q.Drv(40000, 40125, unsafe.Pointer(&flags), unsafe.Pointer(_str), unsafe.Pointer(&tabstops), unsafe.Pointer(&tabarray), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QFontMetrics::strikeOutPos()
func (q *QFontMetrics) StrikeOutPos() int32 {
	var __rv int32
	q.Drv(40000, 40126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::tightBoundingRect(QString const&)
func (q *QFontMetrics) TightBoundingRect(text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(40000, 40127, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFontMetrics::underlinePos()
func (q *QFontMetrics) UnderlinePos() int32 {
	var __rv int32
	q.Drv(40000, 40128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::width(QChar)
func (q *QFontMetrics) Width(value rune) int32 {
	var __rv int32
	q.Drv(40000, 40129, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::width(QString const&)
func (q *QFontMetrics) WidthWithString(value string) int32 {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv int32
	q.Drv(40000, 40130, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::width(QString const&,int)
func (q *QFontMetrics) WidthWithStringLen(value2 string, len int32) int32 {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	var __rv int32
	q.Drv(40000, 40131, unsafe.Pointer(_value2), unsafe.Pointer(&len), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::width(QString const&,int,int)
func (q *QFontMetrics) WidthWithStringLenFlags(value2 string, len int32, flags int32) int32 {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	var __rv int32
	q.Drv(40000, 40132, unsafe.Pointer(_value2), unsafe.Pointer(&len), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetrics::xHeight()
func (q *QFontMetrics) XHeight() int32 {
	var __rv int32
	q.Drv(40000, 40133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QFontMetricsF : QFontMetricsF
type QFontMetricsF struct {
	BaseDrv
}

//QFontMetricsF::QFontMetricsF(QFont const&)
func NewFontMetricsF(value *QFont) *QFontMetricsF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 41000, 41102, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetricsF{}
	_p.SetDriver(__rv, 41000, true)
	return _p
}

//QFontMetricsF::QFontMetricsF(QFontMetrics const&)
func NewFontMetricsFWithFontmetrics(value *QFontMetrics) *QFontMetricsF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 41000, 41103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetricsF{}
	_p.SetDriver(__rv, 41000, true)
	return _p
}

//QFontMetricsF::QFontMetricsF(QFontMetricsF const&)
func NewFontMetricsFCopy(value *QFontMetricsF) *QFontMetricsF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 41000, 41104, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetricsF{}
	_p.SetDriver(__rv, 41000, true)
	return _p
}

//QFontMetricsF::QFontMetricsF(QFont const&,QPaintDevice*)
func NewFontMetricsFWithFontPaintDevice(value2 *QFont, pd QPaintDeviceInterface) *QFontMetricsF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 41000, 41105, Native(value2), unsafe.Pointer(new_pd_head(pd)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontMetricsF{}
	_p.SetDriver(__rv, 41000, true)
	return _p
}

//QFontMetricsF::ascent()
func (q *QFontMetricsF) Ascent() float64 {
	var __rv float64
	q.Drv(41000, 41106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::averageCharWidth()
func (q *QFontMetricsF) AverageCharWidth() float64 {
	var __rv float64
	q.Drv(41000, 41107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::boundingRect(QChar)
func (q *QFontMetricsF) BoundingRect(value rune) *QRectF {
	var __rv uintptr
	q.Drv(41000, 41108, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QFontMetricsF::boundingRect(QString const&)
func (q *QFontMetricsF) BoundingRectWithString(string string) *QRectF {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(41000, 41109, unsafe.Pointer(_string), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QFontMetricsF::boundingRect(QRectF const&,int,QString const&,int,int*)
func (q *QFontMetricsF) BoundingRectFWithRectfFlagsStringTabstopsTabarray(r *QRectF, flags int32, string string, tabstops int32, tabarray *int32) *QRectF {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(41000, 41110, Native(r), unsafe.Pointer(&flags), unsafe.Pointer(_string), unsafe.Pointer(&tabstops), unsafe.Pointer(&tabarray), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QFontMetricsF::descent()
func (q *QFontMetricsF) Descent() float64 {
	var __rv float64
	q.Drv(41000, 41111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::elidedText(QString const&,Qt::TextElideMode,double,int)
func (q *QFontMetricsF) ElidedText(text string, mode Qt_TextElideMode, width float64, flags int32) string {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	q.Drv(41000, 41112, unsafe.Pointer(_text), unsafe.Pointer(&mode), unsafe.Pointer(&width), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFontMetricsF::height()
func (q *QFontMetricsF) Height() float64 {
	var __rv float64
	q.Drv(41000, 41113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::inFont(QChar)
func (q *QFontMetricsF) InFont(value rune) bool {
	var __rv bool
	q.Drv(41000, 41114, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::leading()
func (q *QFontMetricsF) Leading() float64 {
	var __rv float64
	q.Drv(41000, 41115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::leftBearing(QChar)
func (q *QFontMetricsF) LeftBearing(value rune) float64 {
	var __rv float64
	q.Drv(41000, 41116, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::lineSpacing()
func (q *QFontMetricsF) LineSpacing() float64 {
	var __rv float64
	q.Drv(41000, 41117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::lineWidth()
func (q *QFontMetricsF) LineWidth() float64 {
	var __rv float64
	q.Drv(41000, 41118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::maxWidth()
func (q *QFontMetricsF) MaxWidth() float64 {
	var __rv float64
	q.Drv(41000, 41119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::minLeftBearing()
func (q *QFontMetricsF) MinLeftBearing() float64 {
	var __rv float64
	q.Drv(41000, 41120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::minRightBearing()
func (q *QFontMetricsF) MinRightBearing() float64 {
	var __rv float64
	q.Drv(41000, 41121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::overlinePos()
func (q *QFontMetricsF) OverlinePos() float64 {
	var __rv float64
	q.Drv(41000, 41122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::rightBearing(QChar)
func (q *QFontMetricsF) RightBearing(value rune) float64 {
	var __rv float64
	q.Drv(41000, 41123, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::size(int,QString const&,int,int*)
func (q *QFontMetricsF) Size(flags int32, str string, tabstops int32, tabarray *int32) *QSizeF {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	q.Drv(41000, 41124, unsafe.Pointer(&flags), unsafe.Pointer(_str), unsafe.Pointer(&tabstops), unsafe.Pointer(&tabarray), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QFontMetricsF::strikeOutPos()
func (q *QFontMetricsF) StrikeOutPos() float64 {
	var __rv float64
	q.Drv(41000, 41125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::tightBoundingRect(QString const&)
func (q *QFontMetricsF) TightBoundingRect(text string) *QRectF {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(41000, 41126, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QFontMetricsF::underlinePos()
func (q *QFontMetricsF) UnderlinePos() float64 {
	var __rv float64
	q.Drv(41000, 41127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::width(QChar)
func (q *QFontMetricsF) Width(value rune) float64 {
	var __rv float64
	q.Drv(41000, 41128, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::width(QString const&)
func (q *QFontMetricsF) WidthWithString(string string) float64 {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv float64
	q.Drv(41000, 41129, unsafe.Pointer(_string), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontMetricsF::xHeight()
func (q *QFontMetricsF) XHeight() float64 {
	var __rv float64
	q.Drv(41000, 41130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGenericArgument : QGenericArgument
type QGenericArgument struct {
	BaseDrv
}

//QGenericArgument::QGenericArgument()
func NewGenericArgument() *QGenericArgument {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 42000, 42102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGenericArgument{}
	_p.SetDriver(__rv, 42000, true)
	return _p
}

//QGenericArgument::QGenericArgument(char const*,void const*)
func NewGenericArgumentWithAnameAdata(aName string, aData uintptr) *QGenericArgument {
	_aName := NewCStringHead(aName)
	defer FreeCStringHead(_aName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 42000, 42103, unsafe.Pointer(_aName), unsafe.Pointer(&aData), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGenericArgument{}
	_p.SetDriver(__rv, 42000, true)
	return _p
}

//QGenericArgument::data()
func (q *QGenericArgument) Data() uintptr {
	var __rv uintptr
	q.Drv(42000, 42104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGenericArgument::name()
func (q *QGenericArgument) Name() string {
	var __rv C.string_head
	q.Drv(42000, 42105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QGenericReturnArgument : QGenericReturnArgument
type QGenericReturnArgument struct {
	QGenericArgument
}

//QGenericReturnArgument::QGenericReturnArgument()
func NewGenericReturnArgument() *QGenericReturnArgument {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 43000, 43102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGenericReturnArgument{}
	_p.SetDriver(__rv, 43000, true)
	return _p
}

//QGenericReturnArgument::QGenericReturnArgument(char const*,void*)
func NewGenericReturnArgumentWithAnameAdata(aName string, aData uintptr) *QGenericReturnArgument {
	_aName := NewCStringHead(aName)
	defer FreeCStringHead(_aName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 43000, 43103, unsafe.Pointer(_aName), unsafe.Pointer(&aData), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGenericReturnArgument{}
	_p.SetDriver(__rv, 43000, true)
	return _p
}

//struct QGestureEvent : QGestureEvent
type QGestureEvent struct {
	QEvent
}

//QGestureEvent::QGestureEvent(QList<QGesture*> const&)
func NewGestureEvent(gestures []*QGesture) *QGestureEvent {
	_gestures := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&gestures)))
	defer FreeCObjectArrayHead(_gestures)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 44000, 44102, unsafe.Pointer(_gestures), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGestureEvent{}
	_p.SetDriver(__rv, 44000, true)
	return _p
}

//QGestureEvent::accept()
func (q *QGestureEvent) Accept() {
	q.Drv(44000, 44103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::accept(QGesture*)
func (q *QGestureEvent) AcceptWithGesture(value *QGesture) {
	q.Drv(44000, 44104, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::accept(Qt::GestureType)
func (q *QGestureEvent) AcceptWithGesturetype(value Qt_GestureType) {
	q.Drv(44000, 44105, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::activeGestures()
func (q *QGestureEvent) ActiveGestures() []*QGesture {
	var __rv []*QGesture
	q.Drv(44000, 44106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::canceledGestures()
func (q *QGestureEvent) CanceledGestures() []*QGesture {
	var __rv []*QGesture
	q.Drv(44000, 44107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::gesture(Qt::GestureType)
func (q *QGestureEvent) Gesture(_type Qt_GestureType) *QGesture {
	var __rv uintptr
	q.Drv(44000, 44108, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGesture{}
	_rp.SetDriver(__rv, 249000, false)
	return _rp
}

//QGestureEvent::gestures()
func (q *QGestureEvent) Gestures() []*QGesture {
	var __rv []*QGesture
	q.Drv(44000, 44109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::ignore()
func (q *QGestureEvent) Ignore() {
	q.Drv(44000, 44110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::ignore(QGesture*)
func (q *QGestureEvent) IgnoreWithGesture(value *QGesture) {
	q.Drv(44000, 44111, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::ignore(Qt::GestureType)
func (q *QGestureEvent) IgnoreWithGesturetype(value Qt_GestureType) {
	q.Drv(44000, 44112, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::isAccepted()
func (q *QGestureEvent) IsAccepted() bool {
	var __rv bool
	q.Drv(44000, 44113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::isAccepted(QGesture*)
func (q *QGestureEvent) IsAcceptedWithGesture(value *QGesture) bool {
	var __rv bool
	q.Drv(44000, 44114, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::isAccepted(Qt::GestureType)
func (q *QGestureEvent) IsAcceptedWithGesturetype(value Qt_GestureType) bool {
	var __rv bool
	q.Drv(44000, 44115, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureEvent::mapToGraphicsScene(QPointF const&)
func (q *QGestureEvent) MapToGraphicsScene(gesturePoint *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(44000, 44116, Native(gesturePoint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGestureEvent::setAccepted(bool)
func (q *QGestureEvent) SetAccepted(accepted bool) {
	q.Drv(44000, 44117, unsafe.Pointer(&accepted), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::setAccepted(QGesture*,bool)
func (q *QGestureEvent) SetAcceptedWithGestureBool(value2 *QGesture, value3 bool) {
	q.Drv(44000, 44118, Native(value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::setAccepted(Qt::GestureType,bool)
func (q *QGestureEvent) SetAcceptedWithGesturetypeBool(value2 Qt_GestureType, value3 bool) {
	q.Drv(44000, 44119, unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::setWidget(QWidget*)
func (q *QGestureEvent) SetWidget(widget QWidgetInterface) {
	q.Drv(44000, 44120, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureEvent::widget()
func (q *QGestureEvent) Widget() *QWidget {
	var __rv uintptr
	q.Drv(44000, 44121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//enum QGestureRecognizer_ResultFlag - QGestureRecognizer::ResultFlag
type QGestureRecognizer_ResultFlag uint32

const (
	QGestureRecognizer_Ignore           QGestureRecognizer_ResultFlag = 0x0001
	QGestureRecognizer_MayBeGesture     QGestureRecognizer_ResultFlag = 0x0002
	QGestureRecognizer_TriggerGesture   QGestureRecognizer_ResultFlag = 0x0004
	QGestureRecognizer_FinishGesture    QGestureRecognizer_ResultFlag = 0x0008
	QGestureRecognizer_CancelGesture    QGestureRecognizer_ResultFlag = 0x0010
	QGestureRecognizer_ResultState_Mask QGestureRecognizer_ResultFlag = 0x00ff
	QGestureRecognizer_ConsumeEventHint QGestureRecognizer_ResultFlag = 0x0100
	QGestureRecognizer_ResultHint_Mask  QGestureRecognizer_ResultFlag = 0xff00
)

//struct QGestureRecognizer : QGestureRecognizer
type QGestureRecognizer struct {
	BaseDrv
}

//QGestureRecognizer::create(QObject*)
func (q *QGestureRecognizer) Create(target QObjectInterface) *QGesture {
	var __rv uintptr
	q.Drv(45000, 45102, Native(target), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGesture{}
	_rp.SetDriver(__rv, 249000, false)
	return _rp
}

//QGestureRecognizer::recognize(QGesture*,QObject*,QEvent*)
func (q *QGestureRecognizer) Recognize(state *QGesture, watched QObjectInterface, event *QEvent) QGestureRecognizer_ResultFlag {
	var __rv QGestureRecognizer_ResultFlag
	q.Drv(45000, 45103, Native(state), Native(watched), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureRecognizer::registerRecognizer(QGestureRecognizer*)
func QGestureRecognizerRegisterRecognizer(recognizer *QGestureRecognizer) Qt_GestureType {
	var __rv Qt_GestureType
	DirectQtDrv(nil, 45000, 45104, Native(recognizer), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureRecognizer::registerRecognizer(QGestureRecognizer*)
func (q *QGestureRecognizer) RegisterRecognizer(recognizer *QGestureRecognizer) Qt_GestureType {
	var __rv Qt_GestureType
	q.Drv(45000, 45104, Native(recognizer), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGestureRecognizer::reset(QGesture*)
func (q *QGestureRecognizer) Reset(state *QGesture) {
	q.Drv(45000, 45105, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureRecognizer::unregisterRecognizer(Qt::GestureType)
func QGestureRecognizerUnregisterRecognizer(_type Qt_GestureType) {
	DirectQtDrv(nil, 45000, 45106, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGestureRecognizer::unregisterRecognizer(Qt::GestureType)
func (q *QGestureRecognizer) UnregisterRecognizer(_type Qt_GestureType) {
	q.Drv(45000, 45106, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGradient_CoordinateMode - QGradient::CoordinateMode
type QGradient_CoordinateMode uint32

const (
	QGradient_LogicalMode         QGradient_CoordinateMode = 0
	QGradient_StretchToDeviceMode QGradient_CoordinateMode = 1
	QGradient_ObjectBoundingMode  QGradient_CoordinateMode = 2
)

//enum QGradient_Spread - QGradient::Spread
type QGradient_Spread uint32

const (
	QGradient_PadSpread     QGradient_Spread = 0
	QGradient_ReflectSpread QGradient_Spread = 1
	QGradient_RepeatSpread  QGradient_Spread = 2
)

//enum QGradient_Type - QGradient::Type
type QGradient_Type uint32

const (
	QGradient_LinearGradient  QGradient_Type = 0
	QGradient_RadialGradient  QGradient_Type = 1
	QGradient_ConicalGradient QGradient_Type = 2
	QGradient_NoGradient      QGradient_Type = 3
)

//enum QGradient_InterpolationMode - QGradient::InterpolationMode
type QGradient_InterpolationMode uint32

const (
	QGradient_ColorInterpolation     QGradient_InterpolationMode = 0
	QGradient_ComponentInterpolation QGradient_InterpolationMode = 1
)

//struct QGradient : QGradient
type QGradient struct {
	BaseDrv
}

//QGradient::QGradient()
func NewGradient() *QGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 46000, 46102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGradient{}
	_p.SetDriver(__rv, 46000, true)
	return _p
}

//QGradient::coordinateMode()
func (q *QGradient) CoordinateMode() QGradient_CoordinateMode {
	var __rv QGradient_CoordinateMode
	q.Drv(46000, 46103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGradient::interpolationMode()
func (q *QGradient) InterpolationMode() QGradient_InterpolationMode {
	var __rv QGradient_InterpolationMode
	q.Drv(46000, 46104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGradient::setColorAt(double,QColor const&)
func (q *QGradient) SetColorAt(pos float64, color *QColor) {
	q.Drv(46000, 46105, unsafe.Pointer(&pos), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGradient::setCoordinateMode(QGradient::CoordinateMode)
func (q *QGradient) SetCoordinateMode(mode QGradient_CoordinateMode) {
	q.Drv(46000, 46106, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGradient::setInterpolationMode(QGradient::InterpolationMode)
func (q *QGradient) SetInterpolationMode(mode QGradient_InterpolationMode) {
	q.Drv(46000, 46107, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGradient::setSpread(QGradient::Spread)
func (q *QGradient) SetSpread(spread QGradient_Spread) {
	q.Drv(46000, 46108, unsafe.Pointer(&spread), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGradient::spread()
func (q *QGradient) Spread() QGradient_Spread {
	var __rv QGradient_Spread
	q.Drv(46000, 46109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGradient::type()
func (q *QGradient) Type() QGradient_Type {
	var __rv QGradient_Type
	q.Drv(46000, 46110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QHashDummyValue : QHashDummyValue
type QHashDummyValue struct {
	BaseDrv
}

//struct QHelpEvent : QHelpEvent
type QHelpEvent struct {
	QEvent
}

//QHelpEvent::QHelpEvent(QEvent::Type,QPoint const&,QPoint const&)
func NewHelpEvent(_type QEvent_Type, pos *QPoint, globalPos *QPoint) *QHelpEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 48000, 48102, unsafe.Pointer(&_type), Native(pos), Native(globalPos), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHelpEvent{}
	_p.SetDriver(__rv, 48000, true)
	return _p
}

//QHelpEvent::globalPos()
func (q *QHelpEvent) GlobalPos() *QPoint {
	var __rv uintptr
	q.Drv(48000, 48103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QHelpEvent::globalX()
func (q *QHelpEvent) GlobalX() int32 {
	var __rv int32
	q.Drv(48000, 48104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHelpEvent::globalY()
func (q *QHelpEvent) GlobalY() int32 {
	var __rv int32
	q.Drv(48000, 48105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHelpEvent::pos()
func (q *QHelpEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(48000, 48106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QHelpEvent::x()
func (q *QHelpEvent) X() int32 {
	var __rv int32
	q.Drv(48000, 48107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHelpEvent::y()
func (q *QHelpEvent) Y() int32 {
	var __rv int32
	q.Drv(48000, 48108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QHideEvent : QHideEvent
type QHideEvent struct {
	QEvent
}

//QHideEvent::QHideEvent()
func NewHideEvent() *QHideEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 49000, 49102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHideEvent{}
	_p.SetDriver(__rv, 49000, true)
	return _p
}

//struct QHoverEvent : QHoverEvent
type QHoverEvent struct {
	QEvent
}

//QHoverEvent::QHoverEvent(QEvent::Type,QPoint const&,QPoint const&)
func NewHoverEvent(_type QEvent_Type, pos *QPoint, oldPos *QPoint) *QHoverEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 50000, 50102, unsafe.Pointer(&_type), Native(pos), Native(oldPos), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHoverEvent{}
	_p.SetDriver(__rv, 50000, true)
	return _p
}

//QHoverEvent::oldPos()
func (q *QHoverEvent) OldPos() *QPoint {
	var __rv uintptr
	q.Drv(50000, 50103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QHoverEvent::pos()
func (q *QHoverEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(50000, 50104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//enum QIcon_Mode - QIcon::Mode
type QIcon_Mode uint32

const (
	QIcon_Normal   QIcon_Mode = 0
	QIcon_Disabled QIcon_Mode = 1
	QIcon_Active   QIcon_Mode = 2
	QIcon_Selected QIcon_Mode = 3
)

//enum QIcon_State - QIcon::State
type QIcon_State uint32

const (
	QIcon_On  QIcon_State = 0
	QIcon_Off QIcon_State = 1
)

//struct QIcon : QIcon
type QIcon struct {
	BaseDrv
}

//QIcon::QIcon()
func NewIcon() *QIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 51000, 51102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIcon{}
	_p.SetDriver(__rv, 51000, true)
	return _p
}

//QIcon::QIcon(QIcon const&)
func NewIconCopy(other *QIcon) *QIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 51000, 51103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIcon{}
	_p.SetDriver(__rv, 51000, true)
	return _p
}

//QIcon::QIcon(QPixmap const&)
func NewIconWithPixmap(pixmap *QPixmap) *QIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 51000, 51104, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIcon{}
	_p.SetDriver(__rv, 51000, true)
	return _p
}

//QIcon::QIcon(QString const&)
func NewIconWithFilename(fileName string) *QIcon {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 51000, 51105, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIcon{}
	_p.SetDriver(__rv, 51000, true)
	return _p
}

//QIcon::actualSize(QSize const&)
func (q *QIcon) ActualSize(size *QSize) *QSize {
	var __rv uintptr
	q.Drv(51000, 51106, Native(size), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QIcon::actualSize(QSize const&,QIcon::Mode,QIcon::State)
func (q *QIcon) ActualSizeWithSizeModeState(size *QSize, mode QIcon_Mode, state QIcon_State) *QSize {
	var __rv uintptr
	q.Drv(51000, 51107, Native(size), unsafe.Pointer(&mode), unsafe.Pointer(&state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QIcon::addFile(QString const&)
func (q *QIcon) AddFile(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(51000, 51108, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::addFile(QString const&,QSize const&,QIcon::Mode,QIcon::State)
func (q *QIcon) AddFileWithFilenameSizeModeState(fileName string, size *QSize, mode QIcon_Mode, state QIcon_State) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(51000, 51109, unsafe.Pointer(_fileName), Native(size), unsafe.Pointer(&mode), unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::addPixmap(QPixmap const&)
func (q *QIcon) AddPixmap(pixmap *QPixmap) {
	q.Drv(51000, 51110, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::addPixmap(QPixmap const&,QIcon::Mode,QIcon::State)
func (q *QIcon) AddPixmapWithPixmapModeState(pixmap *QPixmap, mode QIcon_Mode, state QIcon_State) {
	q.Drv(51000, 51111, Native(pixmap), unsafe.Pointer(&mode), unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::availableSizes()
func (q *QIcon) AvailableSizes() []*QSize {
	var __rv []*QSize
	q.Drv(51000, 51112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::availableSizes(QIcon::Mode,QIcon::State)
func (q *QIcon) AvailableSizesWithModeState(mode QIcon_Mode, state QIcon_State) []*QSize {
	var __rv []*QSize
	q.Drv(51000, 51113, unsafe.Pointer(&mode), unsafe.Pointer(&state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::cacheKey()
func (q *QIcon) CacheKey() int64 {
	var __rv int64
	q.Drv(51000, 51114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::detach()
func (q *QIcon) Detach() {
	q.Drv(51000, 51115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::fromTheme(QString const&)
func QIconFromTheme(name string) *QIcon {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	DirectQtDrv(nil, 51000, 51116, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QIcon::fromTheme(QString const&)
func (q *QIcon) FromTheme(name string) *QIcon {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(51000, 51116, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QIcon::fromTheme(QString const&,QIcon const&)
func QIconFromThemeWithNameFallback(name string, fallback *QIcon) *QIcon {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	DirectQtDrv(nil, 51000, 51117, unsafe.Pointer(_name), Native(fallback), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QIcon::fromTheme(QString const&,QIcon const&)
func (q *QIcon) FromThemeWithNameFallback(name string, fallback *QIcon) *QIcon {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(51000, 51117, unsafe.Pointer(_name), Native(fallback), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QIcon::hasThemeIcon(QString const&)
func QIconHasThemeIcon(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	DirectQtDrv(nil, 51000, 51118, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::hasThemeIcon(QString const&)
func (q *QIcon) HasThemeIcon(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	q.Drv(51000, 51118, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::isDetached()
func (q *QIcon) IsDetached() bool {
	var __rv bool
	q.Drv(51000, 51119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::isNull()
func (q *QIcon) IsNull() bool {
	var __rv bool
	q.Drv(51000, 51120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::name()
func (q *QIcon) Name() string {
	var __rv C.string_head
	q.Drv(51000, 51121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QIcon::paint(QPainter*,QRect const&,QFlags<Qt::AlignmentFlag>,QIcon::Mode,QIcon::State)
func (q *QIcon) PaintWithPainterRectAlignmentModeState(painter *QPainter, rect *QRect, alignment Qt_AlignmentFlag, mode QIcon_Mode, state QIcon_State) {
	q.Drv(51000, 51122, Native(painter), Native(rect), unsafe.Pointer(&alignment), unsafe.Pointer(&mode), unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::paint(QPainter*,int,int,int,int,QFlags<Qt::AlignmentFlag>,QIcon::Mode,QIcon::State)
func (q *QIcon) PaintWithPainterXYWidthHeightAlignmentModeState(painter *QPainter, x int32, y int32, w int32, h int32, alignment Qt_AlignmentFlag, mode QIcon_Mode, state QIcon_State) {
	q.Drv(51000, 51123, Native(painter), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&alignment), unsafe.Pointer(&mode), unsafe.Pointer(&state), nil, nil, nil, nil)
}

//QIcon::pixmap(QSize const&)
func (q *QIcon) Pixmap(size *QSize) *QPixmap {
	var __rv uintptr
	q.Drv(51000, 51124, Native(size), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QIcon::pixmap(int)
func (q *QIcon) PixmapWithExtent(extent int32) *QPixmap {
	var __rv uintptr
	q.Drv(51000, 51125, unsafe.Pointer(&extent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QIcon::pixmap(QSize const&,QIcon::Mode,QIcon::State)
func (q *QIcon) PixmapWithSizeModeState(size *QSize, mode QIcon_Mode, state QIcon_State) *QPixmap {
	var __rv uintptr
	q.Drv(51000, 51126, Native(size), unsafe.Pointer(&mode), unsafe.Pointer(&state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QIcon::pixmap(int,QIcon::Mode,QIcon::State)
func (q *QIcon) PixmapWithExtentModeState(extent int32, mode QIcon_Mode, state QIcon_State) *QPixmap {
	var __rv uintptr
	q.Drv(51000, 51127, unsafe.Pointer(&extent), unsafe.Pointer(&mode), unsafe.Pointer(&state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QIcon::pixmap(int,int,QIcon::Mode,QIcon::State)
func (q *QIcon) PixmapWithWidthHeightModeState(w int32, h int32, mode QIcon_Mode, state QIcon_State) *QPixmap {
	var __rv uintptr
	q.Drv(51000, 51128, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&mode), unsafe.Pointer(&state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QIcon::setThemeName(QString const&)
func QIconSetThemeName(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	DirectQtDrv(nil, 51000, 51129, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::setThemeName(QString const&)
func (q *QIcon) SetThemeName(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(51000, 51129, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::setThemeSearchPaths(QStringList const&)
func QIconSetThemeSearchPaths(searchpath []string) {
	_searchpath, _searchpath_size := NewCSArray(searchpath)
	defer FreeCSArray(_searchpath, _searchpath_size)
	DirectQtDrv(nil, 51000, 51130, unsafe.Pointer(&_searchpath[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::setThemeSearchPaths(QStringList const&)
func (q *QIcon) SetThemeSearchPaths(searchpath []string) {
	_searchpath, _searchpath_size := NewCSArray(searchpath)
	defer FreeCSArray(_searchpath, _searchpath_size)
	q.Drv(51000, 51130, unsafe.Pointer(&_searchpath[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIcon::themeName()
func QIconThemeName() string {
	var __rv C.string_head
	DirectQtDrv(nil, 51000, 51131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QIcon::themeName()
func (q *QIcon) ThemeName() string {
	var __rv C.string_head
	q.Drv(51000, 51131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QIcon::themeSearchPaths()
func QIconThemeSearchPaths() []string {
	var __rv []string
	DirectQtDrv(nil, 51000, 51132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIcon::themeSearchPaths()
func (q *QIcon) ThemeSearchPaths() []string {
	var __rv []string
	q.Drv(51000, 51132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QIconDragEvent : QIconDragEvent
type QIconDragEvent struct {
	QEvent
}

//QIconDragEvent::QIconDragEvent()
func NewIconDragEvent() *QIconDragEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 52000, 52102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIconDragEvent{}
	_p.SetDriver(__rv, 52000, true)
	return _p
}

//enum QImage_InvertMode - QImage::InvertMode
type QImage_InvertMode uint32

const (
	QImage_InvertRgb  QImage_InvertMode = 0
	QImage_InvertRgba QImage_InvertMode = 1
)

//enum QImage_Format - QImage::Format
type QImage_Format uint32

const (
	QImage_Format_Invalid                QImage_Format = 0
	QImage_Format_Mono                   QImage_Format = 1
	QImage_Format_MonoLSB                QImage_Format = 2
	QImage_Format_Indexed8               QImage_Format = 3
	QImage_Format_RGB32                  QImage_Format = 4
	QImage_Format_ARGB32                 QImage_Format = 5
	QImage_Format_ARGB32_Premultiplied   QImage_Format = 6
	QImage_Format_RGB16                  QImage_Format = 7
	QImage_Format_ARGB8565_Premultiplied QImage_Format = 8
	QImage_Format_RGB666                 QImage_Format = 9
	QImage_Format_ARGB6666_Premultiplied QImage_Format = 10
	QImage_Format_RGB555                 QImage_Format = 11
	QImage_Format_ARGB8555_Premultiplied QImage_Format = 12
	QImage_Format_RGB888                 QImage_Format = 13
	QImage_Format_RGB444                 QImage_Format = 14
	QImage_Format_ARGB4444_Premultiplied QImage_Format = 15
	QImage_NImageFormats                 QImage_Format = 16
)

//struct QImage : QImage
type QImage struct {
	QPaintDevice
}

//QImage::QImage()
func NewImage() *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(QImage const&)
func NewImageCopy(value *QImage) *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(char const*[])
func NewImageWithXpm(xpm []string) *QImage {
	_xpm, _xpm_size := NewCSArray(xpm)
	defer FreeCSArray(_xpm, _xpm_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53104, unsafe.Pointer(&_xpm[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(QSize const&,QImage::Format)
func NewImageWithSizeFormat(size *QSize, format QImage_Format) *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53105, Native(size), unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(QString const&,char const*)
func NewImageWithFilenameFormat(fileName string, format string) *QImage {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53106, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(int,int,QImage::Format)
func NewImageWithWidthHeightFormat(width int32, height int32, format QImage_Format) *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53107, unsafe.Pointer(&width), unsafe.Pointer(&height), unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(unsigned char const*,int,int,QImage::Format)
func NewImageWithDataWidthHeightFormat(data *byte, width int32, height int32, format QImage_Format) *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53108, unsafe.Pointer(&data), unsafe.Pointer(&width), unsafe.Pointer(&height), unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::QImage(unsigned char const*,int,int,int,QImage::Format)
func NewImageWithDataWidthHeightBytesperlineFormat(data *byte, width int32, height int32, bytesPerLine int32, format QImage_Format) *QImage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 53000, 53109, unsafe.Pointer(&data), unsafe.Pointer(&width), unsafe.Pointer(&height), unsafe.Pointer(&bytesPerLine), unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImage{}
	_p.SetDriver(__rv, 53000, true)
	return _p
}

//QImage::allGray()
func (q *QImage) AllGray() bool {
	var __rv bool
	q.Drv(53000, 53110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::bitPlaneCount()
func (q *QImage) BitPlaneCount() int32 {
	var __rv int32
	q.Drv(53000, 53111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::bits()
func (q *QImage) Bits() *byte {
	var __rv *byte
	q.Drv(53000, 53112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::byteCount()
func (q *QImage) ByteCount() int32 {
	var __rv int32
	q.Drv(53000, 53113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::bytesPerLine()
func (q *QImage) BytesPerLine() int32 {
	var __rv int32
	q.Drv(53000, 53114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::cacheKey()
func (q *QImage) CacheKey() int64 {
	var __rv int64
	q.Drv(53000, 53115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::color(int)
func (q *QImage) Color(i int32) uint32 {
	var __rv uint32
	q.Drv(53000, 53116, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::colorCount()
func (q *QImage) ColorCount() int32 {
	var __rv int32
	q.Drv(53000, 53117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::colorTable()
func (q *QImage) ColorTable() []QRgb {
	var __rv []QRgb
	q.Drv(53000, 53118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::constBits()
func (q *QImage) ConstBits() *byte {
	var __rv *byte
	q.Drv(53000, 53119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::constScanLine(int)
func (q *QImage) ConstScanLine(value int32) *byte {
	var __rv *byte
	q.Drv(53000, 53120, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::convertToFormat(QImage::Format)
func (q *QImage) ConvertToFormat(f QImage_Format) *QImage {
	var __rv uintptr
	q.Drv(53000, 53121, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::convertToFormat(QImage::Format,QFlags<Qt::ImageConversionFlag>)
func (q *QImage) ConvertToFormatWithFormatFlags(f QImage_Format, flags Qt_ImageConversionFlag) *QImage {
	var __rv uintptr
	q.Drv(53000, 53122, unsafe.Pointer(&f), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::convertToFormat(QImage::Format,QVector<QRgb> const&,QFlags<Qt::ImageConversionFlag>)
func (q *QImage) ConvertToFormatWithFormatColortableFlags(f QImage_Format, colorTable []QRgb, flags Qt_ImageConversionFlag) *QImage {
	_colorTable := NewCUintArrayHead(*(*[]uint32)(unsafe.Pointer(&colorTable)))
	defer FreeCUintArrayHead(_colorTable)
	var __rv uintptr
	q.Drv(53000, 53123, unsafe.Pointer(&f), unsafe.Pointer(_colorTable), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::copy()
func (q *QImage) Copy() *QImage {
	var __rv uintptr
	q.Drv(53000, 53124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::copy(QRect const&)
func (q *QImage) CopyWithRect(rect *QRect) *QImage {
	var __rv uintptr
	q.Drv(53000, 53125, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::copy(int,int,int,int)
func (q *QImage) CopyWithXYWidthHeight(x int32, y int32, w int32, h int32) *QImage {
	var __rv uintptr
	q.Drv(53000, 53126, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::createAlphaMask()
func (q *QImage) CreateAlphaMask() *QImage {
	var __rv uintptr
	q.Drv(53000, 53127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::createAlphaMask(QFlags<Qt::ImageConversionFlag>)
func (q *QImage) CreateAlphaMaskWithFlags(flags Qt_ImageConversionFlag) *QImage {
	var __rv uintptr
	q.Drv(53000, 53128, unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::createHeuristicMask(bool)
func (q *QImage) CreateHeuristicMask(clipTight bool) *QImage {
	var __rv uintptr
	q.Drv(53000, 53129, unsafe.Pointer(&clipTight), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::createMaskFromColor(unsigned int)
func (q *QImage) CreateMaskFromColor(color uint32) *QImage {
	var __rv uintptr
	q.Drv(53000, 53130, unsafe.Pointer(&color), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::createMaskFromColor(unsigned int,Qt::MaskMode)
func (q *QImage) CreateMaskFromColorWithColorMode(color uint32, mode Qt_MaskMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53131, unsafe.Pointer(&color), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::depth()
func (q *QImage) Depth() int32 {
	var __rv int32
	q.Drv(53000, 53132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::detach()
func (q *QImage) Detach() {
	q.Drv(53000, 53133, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::dotsPerMeterX()
func (q *QImage) DotsPerMeterX() int32 {
	var __rv int32
	q.Drv(53000, 53134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::dotsPerMeterY()
func (q *QImage) DotsPerMeterY() int32 {
	var __rv int32
	q.Drv(53000, 53135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::fill(unsigned int)
func (q *QImage) Fill(pixel uint32) {
	q.Drv(53000, 53136, unsafe.Pointer(&pixel), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::format()
func (q *QImage) Format() QImage_Format {
	var __rv QImage_Format
	q.Drv(53000, 53137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::fromData(QByteArray const&)
func QImageFromData(data []byte) *QImage {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv uintptr
	DirectQtDrv(nil, 53000, 53138, unsafe.Pointer(_data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::fromData(QByteArray const&)
func (q *QImage) FromData(data []byte) *QImage {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv uintptr
	q.Drv(53000, 53138, unsafe.Pointer(_data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::fromData(QByteArray const&,char const*)
func QImageFromDataWithDataFormat(data []byte, format string) *QImage {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	DirectQtDrv(nil, 53000, 53139, unsafe.Pointer(_data), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::fromData(QByteArray const&,char const*)
func (q *QImage) FromDataWithDataFormat(data []byte, format string) *QImage {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(53000, 53139, unsafe.Pointer(_data), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::fromData(unsigned char const*,int,char const*)
func QImageFromDataWithDataSizeFormat(data *byte, size int32, format string) *QImage {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	DirectQtDrv(nil, 53000, 53140, unsafe.Pointer(&data), unsafe.Pointer(&size), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::fromData(unsigned char const*,int,char const*)
func (q *QImage) FromDataWithDataSizeFormat(data *byte, size int32, format string) *QImage {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(53000, 53140, unsafe.Pointer(&data), unsafe.Pointer(&size), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::hasAlphaChannel()
func (q *QImage) HasAlphaChannel() bool {
	var __rv bool
	q.Drv(53000, 53141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::height()
func (q *QImage) Height() int32 {
	var __rv int32
	q.Drv(53000, 53142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::invertPixels()
func (q *QImage) InvertPixels() {
	q.Drv(53000, 53143, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::invertPixels(QImage::InvertMode)
func (q *QImage) InvertPixelsWithInvertmode(value QImage_InvertMode) {
	q.Drv(53000, 53144, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::isDetached()
func (q *QImage) IsDetached() bool {
	var __rv bool
	q.Drv(53000, 53145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::isGrayscale()
func (q *QImage) IsGrayscale() bool {
	var __rv bool
	q.Drv(53000, 53146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::isNull()
func (q *QImage) IsNull() bool {
	var __rv bool
	q.Drv(53000, 53147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::load(QString const&)
func (q *QImage) Load(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(53000, 53148, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::load(QIODevice*,char const*)
func (q *QImage) LoadWithDeviceFormat(device QIODeviceInterface, format string) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(53000, 53149, Native(device), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::load(QString const&,char const*)
func (q *QImage) LoadWithFilenameFormat(fileName string, format string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(53000, 53150, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::loadFromData(QByteArray const&)
func (q *QImage) LoadFromData(data []byte) bool {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv bool
	q.Drv(53000, 53151, unsafe.Pointer(_data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::loadFromData(QByteArray const&,char const*)
func (q *QImage) LoadFromDataWithDataAformat(data []byte, aformat string) bool {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	_aformat := NewCStringHead(aformat)
	defer FreeCStringHead(_aformat)
	var __rv bool
	q.Drv(53000, 53152, unsafe.Pointer(_data), unsafe.Pointer(_aformat), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::loadFromData(unsigned char const*,int,char const*)
func (q *QImage) LoadFromDataWithBufLenFormat(buf *byte, len int32, format string) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(53000, 53153, unsafe.Pointer(&buf), unsafe.Pointer(&len), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::mirrored()
func (q *QImage) Mirrored() *QImage {
	var __rv uintptr
	q.Drv(53000, 53154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::mirrored(bool,bool)
func (q *QImage) MirroredWithHorizontallyVertically(horizontally bool, vertically bool) *QImage {
	var __rv uintptr
	q.Drv(53000, 53155, unsafe.Pointer(&horizontally), unsafe.Pointer(&vertically), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::offset()
func (q *QImage) Offset() *QPoint {
	var __rv uintptr
	q.Drv(53000, 53156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QImage::pixel(QPoint const&)
func (q *QImage) Pixel(pt *QPoint) uint32 {
	var __rv uint32
	q.Drv(53000, 53157, Native(pt), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::pixel(int,int)
func (q *QImage) PixelWithXY(x int32, y int32) uint32 {
	var __rv uint32
	q.Drv(53000, 53158, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::pixelIndex(QPoint const&)
func (q *QImage) PixelIndex(pt *QPoint) int32 {
	var __rv int32
	q.Drv(53000, 53159, Native(pt), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::pixelIndex(int,int)
func (q *QImage) PixelIndexWithXY(x int32, y int32) int32 {
	var __rv int32
	q.Drv(53000, 53160, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::rect()
func (q *QImage) Rect() *QRect {
	var __rv uintptr
	q.Drv(53000, 53161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QImage::rgbSwapped()
func (q *QImage) RgbSwapped() *QImage {
	var __rv uintptr
	q.Drv(53000, 53162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::save(QIODevice*)
func (q *QImage) Save(device QIODeviceInterface) bool {
	var __rv bool
	q.Drv(53000, 53163, Native(device), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::save(QString const&)
func (q *QImage) SaveWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(53000, 53164, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::save(QIODevice*,char const*,int)
func (q *QImage) SaveWithDeviceFormatQuality(device QIODeviceInterface, format string, quality int32) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(53000, 53165, Native(device), unsafe.Pointer(_format), unsafe.Pointer(&quality), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::save(QString const&,char const*,int)
func (q *QImage) SaveWithFilenameFormatQuality(fileName string, format string, quality int32) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(53000, 53166, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&quality), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::scaled(QSize const&)
func (q *QImage) Scaled(s *QSize) *QImage {
	var __rv uintptr
	q.Drv(53000, 53167, Native(s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaled(QSize const&,Qt::AspectRatioMode,Qt::TransformationMode)
func (q *QImage) ScaledWithSizeAspectmodeMode(s *QSize, aspectMode Qt_AspectRatioMode, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53168, Native(s), unsafe.Pointer(&aspectMode), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaled(int,int,Qt::AspectRatioMode,Qt::TransformationMode)
func (q *QImage) ScaledWithWidthHeightAspectmodeMode(w int32, h int32, aspectMode Qt_AspectRatioMode, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53169, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&aspectMode), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaledToHeight(int)
func (q *QImage) ScaledToHeight(h int32) *QImage {
	var __rv uintptr
	q.Drv(53000, 53170, unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaledToHeight(int,Qt::TransformationMode)
func (q *QImage) ScaledToHeightWithHeightMode(h int32, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53171, unsafe.Pointer(&h), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaledToWidth(int)
func (q *QImage) ScaledToWidth(w int32) *QImage {
	var __rv uintptr
	q.Drv(53000, 53172, unsafe.Pointer(&w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scaledToWidth(int,Qt::TransformationMode)
func (q *QImage) ScaledToWidthWithWidthMode(w int32, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53173, unsafe.Pointer(&w), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::scanLine(int)
func (q *QImage) ScanLine(value int32) *byte {
	var __rv *byte
	q.Drv(53000, 53174, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::setColor(int,unsigned int)
func (q *QImage) SetColor(i int32, c uint32) {
	q.Drv(53000, 53175, unsafe.Pointer(&i), unsafe.Pointer(&c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setColorCount(int)
func (q *QImage) SetColorCount(value int32) {
	q.Drv(53000, 53176, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setColorTable(QVector<QRgb> const)
func (q *QImage) SetColorTable(colors []QRgb) {
	_colors := NewCUintArrayHead(*(*[]uint32)(unsafe.Pointer(&colors)))
	defer FreeCUintArrayHead(_colors)
	q.Drv(53000, 53177, unsafe.Pointer(_colors), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setDotsPerMeterX(int)
func (q *QImage) SetDotsPerMeterX(value int32) {
	q.Drv(53000, 53178, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setDotsPerMeterY(int)
func (q *QImage) SetDotsPerMeterY(value int32) {
	q.Drv(53000, 53179, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setOffset(QPoint const&)
func (q *QImage) SetOffset(value *QPoint) {
	q.Drv(53000, 53180, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setPixel(QPoint const&,unsigned int)
func (q *QImage) SetPixelWithPointIndex_or_rgb(pt *QPoint, index_or_rgb uint32) {
	q.Drv(53000, 53181, Native(pt), unsafe.Pointer(&index_or_rgb), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setPixel(int,int,unsigned int)
func (q *QImage) SetPixelWithXYIndex_or_rgb(x int32, y int32, index_or_rgb uint32) {
	q.Drv(53000, 53182, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&index_or_rgb), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::setText(QString const&,QString const&)
func (q *QImage) SetText(key string, value string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(53000, 53183, unsafe.Pointer(_key), unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImage::size()
func (q *QImage) Size() *QSize {
	var __rv uintptr
	q.Drv(53000, 53184, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QImage::text()
func (q *QImage) Text() string {
	var __rv C.string_head
	q.Drv(53000, 53185, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImage::text(QString const&)
func (q *QImage) TextWithKey(key string) string {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv C.string_head
	q.Drv(53000, 53186, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImage::textKeys()
func (q *QImage) TextKeys() []string {
	var __rv []string
	q.Drv(53000, 53187, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::transformed(QMatrix const&)
func (q *QImage) Transformed(matrix *QMatrix) *QImage {
	var __rv uintptr
	q.Drv(53000, 53188, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::transformed(QTransform const&)
func (q *QImage) TransformedWithTransform(matrix *QTransform) *QImage {
	var __rv uintptr
	q.Drv(53000, 53189, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::transformed(QMatrix const&,Qt::TransformationMode)
func (q *QImage) TransformedWithMatrixMode(matrix *QMatrix, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53190, Native(matrix), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::transformed(QTransform const&,Qt::TransformationMode)
func (q *QImage) TransformedWithTransformMode(matrix *QTransform, mode Qt_TransformationMode) *QImage {
	var __rv uintptr
	q.Drv(53000, 53191, Native(matrix), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImage::trueMatrix(QMatrix const&,int,int)
func QImageTrueMatrixWithMatrixWidthHeight(value2 *QMatrix, w int32, h int32) *QMatrix {
	var __rv uintptr
	DirectQtDrv(nil, 53000, 53192, Native(value2), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QImage::trueMatrix(QMatrix const&,int,int)
func (q *QImage) TrueMatrixWithMatrixWidthHeight(value2 *QMatrix, w int32, h int32) *QMatrix {
	var __rv uintptr
	q.Drv(53000, 53192, Native(value2), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QImage::trueMatrix(QTransform const&,int,int)
func QImageTrueMatrixWithTransformWidthHeight(value2 *QTransform, w int32, h int32) *QTransform {
	var __rv uintptr
	DirectQtDrv(nil, 53000, 53193, Native(value2), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QImage::trueMatrix(QTransform const&,int,int)
func (q *QImage) TrueMatrixWithTransformWidthHeight(value2 *QTransform, w int32, h int32) *QTransform {
	var __rv uintptr
	q.Drv(53000, 53193, Native(value2), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QImage::valid(QPoint const&)
func (q *QImage) Valid(pt *QPoint) bool {
	var __rv bool
	q.Drv(53000, 53194, Native(pt), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::valid(int,int)
func (q *QImage) ValidWithXY(x int32, y int32) bool {
	var __rv bool
	q.Drv(53000, 53195, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImage::width()
func (q *QImage) Width() int32 {
	var __rv int32
	q.Drv(53000, 53196, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QImageIOHandler_ImageOption - QImageIOHandler::ImageOption
type QImageIOHandler_ImageOption uint32

const (
	QImageIOHandler_Size               QImageIOHandler_ImageOption = 0
	QImageIOHandler_ClipRect           QImageIOHandler_ImageOption = 1
	QImageIOHandler_Description        QImageIOHandler_ImageOption = 2
	QImageIOHandler_ScaledClipRect     QImageIOHandler_ImageOption = 3
	QImageIOHandler_ScaledSize         QImageIOHandler_ImageOption = 4
	QImageIOHandler_CompressionRatio   QImageIOHandler_ImageOption = 5
	QImageIOHandler_Gamma              QImageIOHandler_ImageOption = 6
	QImageIOHandler_Quality            QImageIOHandler_ImageOption = 7
	QImageIOHandler_Name               QImageIOHandler_ImageOption = 8
	QImageIOHandler_SubType            QImageIOHandler_ImageOption = 9
	QImageIOHandler_IncrementalReading QImageIOHandler_ImageOption = 10
	QImageIOHandler_Endianness         QImageIOHandler_ImageOption = 11
	QImageIOHandler_Animation          QImageIOHandler_ImageOption = 12
	QImageIOHandler_BackgroundColor    QImageIOHandler_ImageOption = 13
	QImageIOHandler_ImageFormat        QImageIOHandler_ImageOption = 14
)

//struct QImageIOHandler : QImageIOHandler
type QImageIOHandler struct {
	BaseDrv
}

//QImageIOHandler::canRead()
func (q *QImageIOHandler) CanRead() bool {
	var __rv bool
	q.Drv(54000, 54102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::currentImageNumber()
func (q *QImageIOHandler) CurrentImageNumber() int32 {
	var __rv int32
	q.Drv(54000, 54103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::currentImageRect()
func (q *QImageIOHandler) CurrentImageRect() *QRect {
	var __rv uintptr
	q.Drv(54000, 54104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QImageIOHandler::device()
func (q *QImageIOHandler) Device() *QIODevice {
	var __rv uintptr
	q.Drv(54000, 54105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QImageIOHandler::format()
func (q *QImageIOHandler) Format() []byte {
	var __rv []byte
	q.Drv(54000, 54106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::imageCount()
func (q *QImageIOHandler) ImageCount() int32 {
	var __rv int32
	q.Drv(54000, 54107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::jumpToImage(int)
func (q *QImageIOHandler) JumpToImage(imageNumber int32) bool {
	var __rv bool
	q.Drv(54000, 54108, unsafe.Pointer(&imageNumber), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::jumpToNextImage()
func (q *QImageIOHandler) JumpToNextImage() bool {
	var __rv bool
	q.Drv(54000, 54109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::loopCount()
func (q *QImageIOHandler) LoopCount() int32 {
	var __rv int32
	q.Drv(54000, 54110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::name()
func (q *QImageIOHandler) Name() []byte {
	var __rv []byte
	q.Drv(54000, 54111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::nextImageDelay()
func (q *QImageIOHandler) NextImageDelay() int32 {
	var __rv int32
	q.Drv(54000, 54112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::option(QImageIOHandler::ImageOption)
func (q *QImageIOHandler) Option(option QImageIOHandler_ImageOption) *QVariant {
	var __rv uintptr
	q.Drv(54000, 54113, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QImageIOHandler::read(QImage*)
func (q *QImageIOHandler) Read(image *QImage) bool {
	var __rv bool
	q.Drv(54000, 54114, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::setDevice(QIODevice*)
func (q *QImageIOHandler) SetDevice(device QIODeviceInterface) {
	q.Drv(54000, 54115, Native(device), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageIOHandler::setFormat(QByteArray const&)
func (q *QImageIOHandler) SetFormat(format []byte) {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	q.Drv(54000, 54116, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageIOHandler::setOption(QImageIOHandler::ImageOption,QVariant const&)
func (q *QImageIOHandler) SetOption(option QImageIOHandler_ImageOption, value *QVariant) {
	q.Drv(54000, 54117, unsafe.Pointer(&option), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageIOHandler::supportsOption(QImageIOHandler::ImageOption)
func (q *QImageIOHandler) SupportsOption(option QImageIOHandler_ImageOption) bool {
	var __rv bool
	q.Drv(54000, 54118, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageIOHandler::write(QImage const&)
func (q *QImageIOHandler) Write(image *QImage) bool {
	var __rv bool
	q.Drv(54000, 54119, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QImageReader_ImageReaderError - QImageReader::ImageReaderError
type QImageReader_ImageReaderError uint32

const (
	QImageReader_UnknownError           QImageReader_ImageReaderError = 0
	QImageReader_FileNotFoundError      QImageReader_ImageReaderError = 1
	QImageReader_DeviceError            QImageReader_ImageReaderError = 2
	QImageReader_UnsupportedFormatError QImageReader_ImageReaderError = 3
	QImageReader_InvalidDataError       QImageReader_ImageReaderError = 4
)

//struct QImageReader : QImageReader
type QImageReader struct {
	BaseDrv
}

//QImageReader::QImageReader()
func NewImageReader() *QImageReader {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 55000, 55102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageReader{}
	_p.SetDriver(__rv, 55000, true)
	return _p
}

//QImageReader::QImageReader(QIODevice*,QByteArray const&)
func NewImageReaderWithDeviceFormat(device QIODeviceInterface, format []byte) *QImageReader {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 55000, 55103, Native(device), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageReader{}
	_p.SetDriver(__rv, 55000, true)
	return _p
}

//QImageReader::QImageReader(QString const&,QByteArray const&)
func NewImageReaderWithFilenameFormat(fileName string, format []byte) *QImageReader {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 55000, 55104, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageReader{}
	_p.SetDriver(__rv, 55000, true)
	return _p
}

//QImageReader::autoDetectImageFormat()
func (q *QImageReader) AutoDetectImageFormat() bool {
	var __rv bool
	q.Drv(55000, 55105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::backgroundColor()
func (q *QImageReader) BackgroundColor() *QColor {
	var __rv uintptr
	q.Drv(55000, 55106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QImageReader::canRead()
func (q *QImageReader) CanRead() bool {
	var __rv bool
	q.Drv(55000, 55107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::clipRect()
func (q *QImageReader) ClipRect() *QRect {
	var __rv uintptr
	q.Drv(55000, 55108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QImageReader::currentImageNumber()
func (q *QImageReader) CurrentImageNumber() int32 {
	var __rv int32
	q.Drv(55000, 55109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::currentImageRect()
func (q *QImageReader) CurrentImageRect() *QRect {
	var __rv uintptr
	q.Drv(55000, 55110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QImageReader::decideFormatFromContent()
func (q *QImageReader) DecideFormatFromContent() bool {
	var __rv bool
	q.Drv(55000, 55111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::device()
func (q *QImageReader) Device() *QIODevice {
	var __rv uintptr
	q.Drv(55000, 55112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QImageReader::error()
func (q *QImageReader) Error() QImageReader_ImageReaderError {
	var __rv QImageReader_ImageReaderError
	q.Drv(55000, 55113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::errorString()
func (q *QImageReader) ErrorString() string {
	var __rv C.string_head
	q.Drv(55000, 55114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageReader::fileName()
func (q *QImageReader) FileName() string {
	var __rv C.string_head
	q.Drv(55000, 55115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageReader::format()
func (q *QImageReader) Format() []byte {
	var __rv []byte
	q.Drv(55000, 55116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageCount()
func (q *QImageReader) ImageCount() int32 {
	var __rv int32
	q.Drv(55000, 55117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageFormat()
func (q *QImageReader) ImageFormat() QImage_Format {
	var __rv QImage_Format
	q.Drv(55000, 55118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageFormat(QIODevice*)
func QImageReaderImageFormatWithDevice(device QIODeviceInterface) []byte {
	var __rv []byte
	DirectQtDrv(nil, 55000, 55119, Native(device), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageFormat(QIODevice*)
func (q *QImageReader) ImageFormatWithDevice(device QIODeviceInterface) []byte {
	var __rv []byte
	q.Drv(55000, 55119, Native(device), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageFormat(QString const&)
func QImageReaderImageFormatWithFilename(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	DirectQtDrv(nil, 55000, 55120, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::imageFormat(QString const&)
func (q *QImageReader) ImageFormatWithFilename(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	q.Drv(55000, 55120, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::jumpToImage(int)
func (q *QImageReader) JumpToImage(imageNumber int32) bool {
	var __rv bool
	q.Drv(55000, 55121, unsafe.Pointer(&imageNumber), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::jumpToNextImage()
func (q *QImageReader) JumpToNextImage() bool {
	var __rv bool
	q.Drv(55000, 55122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::loopCount()
func (q *QImageReader) LoopCount() int32 {
	var __rv int32
	q.Drv(55000, 55123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::nextImageDelay()
func (q *QImageReader) NextImageDelay() int32 {
	var __rv int32
	q.Drv(55000, 55124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::quality()
func (q *QImageReader) Quality() int32 {
	var __rv int32
	q.Drv(55000, 55125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::read()
func (q *QImageReader) Read() *QImage {
	var __rv uintptr
	q.Drv(55000, 55126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QImageReader::read(QImage*)
func (q *QImageReader) ReadWithImage(image *QImage) bool {
	var __rv bool
	q.Drv(55000, 55127, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::scaledClipRect()
func (q *QImageReader) ScaledClipRect() *QRect {
	var __rv uintptr
	q.Drv(55000, 55128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QImageReader::scaledSize()
func (q *QImageReader) ScaledSize() *QSize {
	var __rv uintptr
	q.Drv(55000, 55129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QImageReader::setAutoDetectImageFormat(bool)
func (q *QImageReader) SetAutoDetectImageFormat(enabled bool) {
	q.Drv(55000, 55130, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setBackgroundColor(QColor const&)
func (q *QImageReader) SetBackgroundColor(color *QColor) {
	q.Drv(55000, 55131, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setClipRect(QRect const&)
func (q *QImageReader) SetClipRect(rect *QRect) {
	q.Drv(55000, 55132, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setDecideFormatFromContent(bool)
func (q *QImageReader) SetDecideFormatFromContent(ignored bool) {
	q.Drv(55000, 55133, unsafe.Pointer(&ignored), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setDevice(QIODevice*)
func (q *QImageReader) SetDevice(device QIODeviceInterface) {
	q.Drv(55000, 55134, Native(device), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setFileName(QString const&)
func (q *QImageReader) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(55000, 55135, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setFormat(QByteArray const&)
func (q *QImageReader) SetFormat(format []byte) {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	q.Drv(55000, 55136, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setQuality(int)
func (q *QImageReader) SetQuality(quality int32) {
	q.Drv(55000, 55137, unsafe.Pointer(&quality), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setScaledClipRect(QRect const&)
func (q *QImageReader) SetScaledClipRect(rect *QRect) {
	q.Drv(55000, 55138, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::setScaledSize(QSize const&)
func (q *QImageReader) SetScaledSize(size *QSize) {
	q.Drv(55000, 55139, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageReader::size()
func (q *QImageReader) Size() *QSize {
	var __rv uintptr
	q.Drv(55000, 55140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QImageReader::supportedImageFormats()
func QImageReaderSupportedImageFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 55000, 55141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::supportedImageFormats()
func (q *QImageReader) SupportedImageFormats() [][]byte {
	var __rv [][]byte
	q.Drv(55000, 55141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::supportsAnimation()
func (q *QImageReader) SupportsAnimation() bool {
	var __rv bool
	q.Drv(55000, 55142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::supportsOption(QImageIOHandler::ImageOption)
func (q *QImageReader) SupportsOption(option QImageIOHandler_ImageOption) bool {
	var __rv bool
	q.Drv(55000, 55143, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageReader::text(QString const&)
func (q *QImageReader) Text(key string) string {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv C.string_head
	q.Drv(55000, 55144, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageReader::textKeys()
func (q *QImageReader) TextKeys() []string {
	var __rv []string
	q.Drv(55000, 55145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QImageWriter_ImageWriterError - QImageWriter::ImageWriterError
type QImageWriter_ImageWriterError uint32

const (
	QImageWriter_UnknownError           QImageWriter_ImageWriterError = 0
	QImageWriter_DeviceError            QImageWriter_ImageWriterError = 1
	QImageWriter_UnsupportedFormatError QImageWriter_ImageWriterError = 2
)

//struct QImageWriter : QImageWriter
type QImageWriter struct {
	BaseDrv
}

//QImageWriter::QImageWriter()
func NewImageWriter() *QImageWriter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 56000, 56102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageWriter{}
	_p.SetDriver(__rv, 56000, true)
	return _p
}

//QImageWriter::QImageWriter(QIODevice*,QByteArray const&)
func NewImageWriterWithDeviceFormat(device QIODeviceInterface, format []byte) *QImageWriter {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 56000, 56103, Native(device), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageWriter{}
	_p.SetDriver(__rv, 56000, true)
	return _p
}

//QImageWriter::QImageWriter(QString const&,QByteArray const&)
func NewImageWriterWithFilenameFormat(fileName string, format []byte) *QImageWriter {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 56000, 56104, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QImageWriter{}
	_p.SetDriver(__rv, 56000, true)
	return _p
}

//QImageWriter::canWrite()
func (q *QImageWriter) CanWrite() bool {
	var __rv bool
	q.Drv(56000, 56105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::compression()
func (q *QImageWriter) Compression() int32 {
	var __rv int32
	q.Drv(56000, 56106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::description()
func (q *QImageWriter) Description() string {
	var __rv C.string_head
	q.Drv(56000, 56107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageWriter::device()
func (q *QImageWriter) Device() *QIODevice {
	var __rv uintptr
	q.Drv(56000, 56108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QImageWriter::error()
func (q *QImageWriter) Error() QImageWriter_ImageWriterError {
	var __rv QImageWriter_ImageWriterError
	q.Drv(56000, 56109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::errorString()
func (q *QImageWriter) ErrorString() string {
	var __rv C.string_head
	q.Drv(56000, 56110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageWriter::fileName()
func (q *QImageWriter) FileName() string {
	var __rv C.string_head
	q.Drv(56000, 56111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QImageWriter::format()
func (q *QImageWriter) Format() []byte {
	var __rv []byte
	q.Drv(56000, 56112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::gamma()
func (q *QImageWriter) Gamma() float32 {
	var __rv float32
	q.Drv(56000, 56113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::quality()
func (q *QImageWriter) Quality() int32 {
	var __rv int32
	q.Drv(56000, 56114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::setCompression(int)
func (q *QImageWriter) SetCompression(compression int32) {
	q.Drv(56000, 56115, unsafe.Pointer(&compression), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setDescription(QString const&)
func (q *QImageWriter) SetDescription(description string) {
	_description := NewCStringHead(description)
	defer FreeCStringHead(_description)
	q.Drv(56000, 56116, unsafe.Pointer(_description), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setDevice(QIODevice*)
func (q *QImageWriter) SetDevice(device QIODeviceInterface) {
	q.Drv(56000, 56117, Native(device), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setFileName(QString const&)
func (q *QImageWriter) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(56000, 56118, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setFormat(QByteArray const&)
func (q *QImageWriter) SetFormat(format []byte) {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	q.Drv(56000, 56119, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setGamma(float)
func (q *QImageWriter) SetGamma(gamma float32) {
	q.Drv(56000, 56120, unsafe.Pointer(&gamma), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setQuality(int)
func (q *QImageWriter) SetQuality(quality int32) {
	q.Drv(56000, 56121, unsafe.Pointer(&quality), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::setText(QString const&,QString const&)
func (q *QImageWriter) SetText(key string, text string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(56000, 56122, unsafe.Pointer(_key), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QImageWriter::supportedImageFormats()
func QImageWriterSupportedImageFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 56000, 56123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::supportedImageFormats()
func (q *QImageWriter) SupportedImageFormats() [][]byte {
	var __rv [][]byte
	q.Drv(56000, 56123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::supportsOption(QImageIOHandler::ImageOption)
func (q *QImageWriter) SupportsOption(option QImageIOHandler_ImageOption) bool {
	var __rv bool
	q.Drv(56000, 56124, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QImageWriter::write(QImage const&)
func (q *QImageWriter) Write(image *QImage) bool {
	var __rv bool
	q.Drv(56000, 56125, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QInputEvent : QInputEvent
type QInputEvent struct {
	QEvent
}

//QInputEvent::QInputEvent(QEvent::Type,QFlags<Qt::KeyboardModifier>)
func NewInputEvent(_type QEvent_Type, modifiers Qt_KeyboardModifier) *QInputEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 57000, 57102, unsafe.Pointer(&_type), unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputEvent{}
	_p.SetDriver(__rv, 57000, true)
	return _p
}

//QInputEvent::modifiers()
func (q *QInputEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(57000, 57103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QInputEvent) SetModifiers(amodifiers Qt_KeyboardModifier) {
	q.Drv(57000, 57104, unsafe.Pointer(&amodifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QInputMethodEvent_AttributeType - QInputMethodEvent::AttributeType
type QInputMethodEvent_AttributeType uint32

const (
	QInputMethodEvent_TextFormat QInputMethodEvent_AttributeType = 0
	QInputMethodEvent_Cursor     QInputMethodEvent_AttributeType = 1
	QInputMethodEvent_Language   QInputMethodEvent_AttributeType = 2
	QInputMethodEvent_Ruby       QInputMethodEvent_AttributeType = 3
	QInputMethodEvent_Selection  QInputMethodEvent_AttributeType = 4
)

//struct QInputMethodEvent : QInputMethodEvent
type QInputMethodEvent struct {
	QEvent
}

//QInputMethodEvent::QInputMethodEvent()
func NewInputMethodEvent() *QInputMethodEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 58000, 58102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputMethodEvent{}
	_p.SetDriver(__rv, 58000, true)
	return _p
}

//QInputMethodEvent::QInputMethodEvent(QInputMethodEvent const&)
func NewInputMethodEventCopy(other *QInputMethodEvent) *QInputMethodEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 58000, 58103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputMethodEvent{}
	_p.SetDriver(__rv, 58000, true)
	return _p
}

//QInputMethodEvent::QInputMethodEvent(QString const&,QList<QInputMethodEvent::Attribute> const&)
func NewInputMethodEventWithPreedittextAttributes(preeditText string, attributes []*QInputMethodEventAttribute) *QInputMethodEvent {
	_preeditText := NewCStringHead(preeditText)
	defer FreeCStringHead(_preeditText)
	_attributes := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&attributes)))
	defer FreeCNoObjectArrayHead(_attributes)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 58000, 58104, unsafe.Pointer(_preeditText), unsafe.Pointer(_attributes), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputMethodEvent{}
	_p.SetDriver(__rv, 58000, true)
	return _p
}

//QInputMethodEvent::attributes()
func (q *QInputMethodEvent) Attributes() []*QInputMethodEventAttribute {
	var __rv []*QInputMethodEventAttribute
	q.Drv(58000, 58105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputMethodEvent::commitString()
func (q *QInputMethodEvent) CommitString() string {
	var __rv C.string_head
	q.Drv(58000, 58106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputMethodEvent::preeditString()
func (q *QInputMethodEvent) PreeditString() string {
	var __rv C.string_head
	q.Drv(58000, 58107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputMethodEvent::replacementLength()
func (q *QInputMethodEvent) ReplacementLength() int32 {
	var __rv int32
	q.Drv(58000, 58108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputMethodEvent::replacementStart()
func (q *QInputMethodEvent) ReplacementStart() int32 {
	var __rv int32
	q.Drv(58000, 58109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputMethodEvent::setCommitString(QString const&)
func (q *QInputMethodEvent) SetCommitString(commitString string) {
	_commitString := NewCStringHead(commitString)
	defer FreeCStringHead(_commitString)
	q.Drv(58000, 58110, unsafe.Pointer(_commitString), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputMethodEvent::setCommitString(QString const&,int,int)
func (q *QInputMethodEvent) SetCommitStringWithCommitstringReplacefromReplacelength(commitString string, replaceFrom int32, replaceLength int32) {
	_commitString := NewCStringHead(commitString)
	defer FreeCStringHead(_commitString)
	q.Drv(58000, 58111, unsafe.Pointer(_commitString), unsafe.Pointer(&replaceFrom), unsafe.Pointer(&replaceLength), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QInputMethodEventAttribute : QInputMethodEvent::Attribute
type QInputMethodEventAttribute struct {
	BaseDrv
}

//QInputMethodEvent::Attribute::Attribute(QInputMethodEvent::AttributeType,int,int,QVariant)
func NewInputMethodEventAttribute(t QInputMethodEvent_AttributeType, s int32, l int32, val *QVariant) *QInputMethodEventAttribute {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 59000, 59102, unsafe.Pointer(&t), unsafe.Pointer(&s), unsafe.Pointer(&l), Native(val), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputMethodEventAttribute{}
	_p.SetDriver(__rv, 59000, true)
	return _p
}

//struct QIntVariantMap : QIntVariantMap
type QIntVariantMap struct {
	BaseDrv
}

//QIntVariantMap::QIntVariantMap()
func NewIntVariantMap() *QIntVariantMap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 60000, 60102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIntVariantMap{}
	_p.SetDriver(__rv, 60000, true)
	return _p
}

//QIntVariantMap::insert(int,QVariant const&)
func (q *QIntVariantMap) Insert(k int32, v *QVariant) {
	q.Drv(60000, 60103, unsafe.Pointer(&k), Native(v), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIntVariantMap::keys()
func (q *QIntVariantMap) Keys() []int32 {
	var __rv []int32
	q.Drv(60000, 60104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIntVariantMap::value(int)
func (q *QIntVariantMap) Value(key int32) *QVariant {
	var __rv uintptr
	q.Drv(60000, 60105, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//map to QIntVariantMap
func ToIntVariantMap(m map[int32]*QVariant) *QIntVariantMap {
	p := NewIntVariantMap()
	for k, v := range m {
		p.Insert(k, v)
	}
	return p
}

//map from QIntVariantMap
func FromIntVariantMap(p *QIntVariantMap) map[int32]*QVariant {
	m := make(map[int32]*QVariant)
	for _, k := range p.Keys() {
		m[k] = p.Value(k)
	}
	return m
}

//struct QItemEditorCreatorBase : QItemEditorCreatorBase
type QItemEditorCreatorBase struct {
	BaseDrv
}

//QItemEditorCreatorBase::createWidget(QWidget*)
func (q *QItemEditorCreatorBase) CreateWidget(parent QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(61000, 61102, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QItemEditorCreatorBase::valuePropertyName()
func (q *QItemEditorCreatorBase) ValuePropertyName() []byte {
	var __rv []byte
	q.Drv(61000, 61103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QItemEditorFactory : QItemEditorFactory
type QItemEditorFactory struct {
	BaseDrv
}

//QItemEditorFactory::QItemEditorFactory()
func NewItemEditorFactory() *QItemEditorFactory {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 62000, 62102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemEditorFactory{}
	_p.SetDriver(__rv, 62000, true)
	return _p
}

//QItemEditorFactory::createEditor(QVariant::Type,QWidget*)
func (q *QItemEditorFactory) CreateEditor(_type QVariant_Type, parent QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(62000, 62103, unsafe.Pointer(&_type), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QItemEditorFactory::defaultFactory()
func QItemEditorFactoryDefaultFactory() *QItemEditorFactory {
	var __rv uintptr
	DirectQtDrv(nil, 62000, 62104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemEditorFactory{}
	_rp.SetDriver(__rv, 62000, true)
	return _rp
}

//QItemEditorFactory::defaultFactory()
func (q *QItemEditorFactory) DefaultFactory() *QItemEditorFactory {
	var __rv uintptr
	q.Drv(62000, 62104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemEditorFactory{}
	_rp.SetDriver(__rv, 62000, true)
	return _rp
}

//QItemEditorFactory::registerEditor(QVariant::Type,QItemEditorCreatorBase*)
func (q *QItemEditorFactory) RegisterEditor(_type QVariant_Type, creator *QItemEditorCreatorBase) {
	q.Drv(62000, 62105, unsafe.Pointer(&_type), Native(creator), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemEditorFactory::setDefaultFactory(QItemEditorFactory*)
func QItemEditorFactorySetDefaultFactory(factory *QItemEditorFactory) {
	DirectQtDrv(nil, 62000, 62106, Native(factory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemEditorFactory::setDefaultFactory(QItemEditorFactory*)
func (q *QItemEditorFactory) SetDefaultFactory(factory *QItemEditorFactory) {
	q.Drv(62000, 62106, Native(factory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemEditorFactory::valuePropertyName(QVariant::Type)
func (q *QItemEditorFactory) ValuePropertyName(_type QVariant_Type) []byte {
	var __rv []byte
	q.Drv(62000, 62107, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QItemSelection : QItemSelection
type QItemSelection struct {
	BaseDrv
}

//QItemSelection::QItemSelection()
func NewItemSelection() *QItemSelection {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 63000, 63102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelection{}
	_p.SetDriver(__rv, 63000, true)
	return _p
}

//QItemSelection::QItemSelection(QModelIndex const&,QModelIndex const&)
func NewItemSelectionWithTopleftBottomright(topLeft *QModelIndex, bottomRight *QModelIndex) *QItemSelection {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 63000, 63103, Native(topLeft), Native(bottomRight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelection{}
	_p.SetDriver(__rv, 63000, true)
	return _p
}

//QItemSelection::contains(QModelIndex const&)
func (q *QItemSelection) Contains(index *QModelIndex) bool {
	var __rv bool
	q.Drv(63000, 63104, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelection::indexes()
func (q *QItemSelection) Indexes() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(63000, 63105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelection::merge(QItemSelection const&,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QItemSelection) Merge(other *QItemSelection, command QItemSelectionModel_SelectionFlag) {
	q.Drv(63000, 63106, Native(other), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelection::select(QModelIndex const&,QModelIndex const&)
func (q *QItemSelection) Select(topLeft *QModelIndex, bottomRight *QModelIndex) {
	q.Drv(63000, 63107, Native(topLeft), Native(bottomRight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelection::split(QItemSelectionRange const&,QItemSelectionRange const&,QItemSelection*)
func QItemSelectionSplit(_range *QItemSelectionRange, other *QItemSelectionRange, result *QItemSelection) {
	DirectQtDrv(nil, 63000, 63108, Native(_range), Native(other), Native(result), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelection::split(QItemSelectionRange const&,QItemSelectionRange const&,QItemSelection*)
func (q *QItemSelection) Split(_range *QItemSelectionRange, other *QItemSelectionRange, result *QItemSelection) {
	q.Drv(63000, 63108, Native(_range), Native(other), Native(result), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QItemSelectionRange : QItemSelectionRange
type QItemSelectionRange struct {
	BaseDrv
}

//QItemSelectionRange::QItemSelectionRange()
func NewItemSelectionRange() *QItemSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 64000, 64102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionRange{}
	_p.SetDriver(__rv, 64000, true)
	return _p
}

//QItemSelectionRange::QItemSelectionRange(QItemSelectionRange const&)
func NewItemSelectionRangeCopy(other *QItemSelectionRange) *QItemSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 64000, 64103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionRange{}
	_p.SetDriver(__rv, 64000, true)
	return _p
}

//QItemSelectionRange::QItemSelectionRange(QModelIndex const&)
func NewItemSelectionRangeWithIndex(index *QModelIndex) *QItemSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 64000, 64104, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionRange{}
	_p.SetDriver(__rv, 64000, true)
	return _p
}

//QItemSelectionRange::QItemSelectionRange(QModelIndex const&,QModelIndex const&)
func NewItemSelectionRangeWithTopleftBottomright(topLeft *QModelIndex, bottomRight *QModelIndex) *QItemSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 64000, 64105, Native(topLeft), Native(bottomRight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionRange{}
	_p.SetDriver(__rv, 64000, true)
	return _p
}

//QItemSelectionRange::bottom()
func (q *QItemSelectionRange) Bottom() int32 {
	var __rv int32
	q.Drv(64000, 64106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::bottomRight()
func (q *QItemSelectionRange) BottomRight() *QModelIndex {
	var __rv uintptr
	q.Drv(64000, 64107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QItemSelectionRange::contains(QModelIndex const&)
func (q *QItemSelectionRange) Contains(index *QModelIndex) bool {
	var __rv bool
	q.Drv(64000, 64108, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::contains(int,int,QModelIndex const&)
func (q *QItemSelectionRange) ContainsWithRowColumnParentindex(row int32, column int32, parentIndex *QModelIndex) bool {
	var __rv bool
	q.Drv(64000, 64109, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(parentIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::height()
func (q *QItemSelectionRange) Height() int32 {
	var __rv int32
	q.Drv(64000, 64110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::indexes()
func (q *QItemSelectionRange) Indexes() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(64000, 64111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::intersected(QItemSelectionRange const&)
func (q *QItemSelectionRange) Intersected(other *QItemSelectionRange) *QItemSelectionRange {
	var __rv uintptr
	q.Drv(64000, 64112, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemSelectionRange{}
	_rp.SetDriver(__rv, 64000, true)
	return _rp
}

//QItemSelectionRange::intersects(QItemSelectionRange const&)
func (q *QItemSelectionRange) Intersects(other *QItemSelectionRange) bool {
	var __rv bool
	q.Drv(64000, 64113, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::isEmpty()
func (q *QItemSelectionRange) IsEmpty() bool {
	var __rv bool
	q.Drv(64000, 64114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::isValid()
func (q *QItemSelectionRange) IsValid() bool {
	var __rv bool
	q.Drv(64000, 64115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::left()
func (q *QItemSelectionRange) Left() int32 {
	var __rv int32
	q.Drv(64000, 64116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::model()
func (q *QItemSelectionRange) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(64000, 64117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QItemSelectionRange::parent()
func (q *QItemSelectionRange) Parent() *QModelIndex {
	var __rv uintptr
	q.Drv(64000, 64118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QItemSelectionRange::right()
func (q *QItemSelectionRange) Right() int32 {
	var __rv int32
	q.Drv(64000, 64119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::top()
func (q *QItemSelectionRange) Top() int32 {
	var __rv int32
	q.Drv(64000, 64120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionRange::topLeft()
func (q *QItemSelectionRange) TopLeft() *QModelIndex {
	var __rv uintptr
	q.Drv(64000, 64121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QItemSelectionRange::width()
func (q *QItemSelectionRange) Width() int32 {
	var __rv int32
	q.Drv(64000, 64122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QKeyEvent : QKeyEvent
type QKeyEvent struct {
	QInputEvent
}

//QKeyEvent::QKeyEvent(QEvent::Type,int,QFlags<Qt::KeyboardModifier>,QString const&,bool,unsigned short)
func NewKeyEvent(_type QEvent_Type, key int32, modifiers Qt_KeyboardModifier, text string, autorep bool, count uint16) *QKeyEvent {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 65000, 65102, unsafe.Pointer(&_type), unsafe.Pointer(&key), unsafe.Pointer(&modifiers), unsafe.Pointer(_text), unsafe.Pointer(&autorep), unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeyEvent{}
	_p.SetDriver(__rv, 65000, true)
	return _p
}

//QKeyEvent::count()
func (q *QKeyEvent) Count() int32 {
	var __rv int32
	q.Drv(65000, 65103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::isAutoRepeat()
func (q *QKeyEvent) IsAutoRepeat() bool {
	var __rv bool
	q.Drv(65000, 65104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::key()
func (q *QKeyEvent) Key() int32 {
	var __rv int32
	q.Drv(65000, 65105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::matches(QKeySequence::StandardKey)
func (q *QKeyEvent) Matches(key QKeySequence_StandardKey) bool {
	var __rv bool
	q.Drv(65000, 65106, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::modifiers()
func (q *QKeyEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(65000, 65107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::nativeModifiers()
func (q *QKeyEvent) NativeModifiers() uint32 {
	var __rv uint32
	q.Drv(65000, 65108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::nativeScanCode()
func (q *QKeyEvent) NativeScanCode() uint32 {
	var __rv uint32
	q.Drv(65000, 65109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::nativeVirtualKey()
func (q *QKeyEvent) NativeVirtualKey() uint32 {
	var __rv uint32
	q.Drv(65000, 65110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEvent::text()
func (q *QKeyEvent) Text() string {
	var __rv C.string_head
	q.Drv(65000, 65111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QKeySequence_SequenceFormat - QKeySequence::SequenceFormat
type QKeySequence_SequenceFormat uint32

const (
	QKeySequence_NativeText   QKeySequence_SequenceFormat = 0
	QKeySequence_PortableText QKeySequence_SequenceFormat = 1
)

//enum QKeySequence_StandardKey - QKeySequence::StandardKey
type QKeySequence_StandardKey uint32

const (
	QKeySequence_UnknownKey               QKeySequence_StandardKey = 0
	QKeySequence_HelpContents             QKeySequence_StandardKey = 1
	QKeySequence_WhatsThis                QKeySequence_StandardKey = 2
	QKeySequence_Open                     QKeySequence_StandardKey = 3
	QKeySequence_Close                    QKeySequence_StandardKey = 4
	QKeySequence_Save                     QKeySequence_StandardKey = 5
	QKeySequence_New                      QKeySequence_StandardKey = 6
	QKeySequence_Delete                   QKeySequence_StandardKey = 7
	QKeySequence_Cut                      QKeySequence_StandardKey = 8
	QKeySequence_Copy                     QKeySequence_StandardKey = 9
	QKeySequence_Paste                    QKeySequence_StandardKey = 10
	QKeySequence_Undo                     QKeySequence_StandardKey = 11
	QKeySequence_Redo                     QKeySequence_StandardKey = 12
	QKeySequence_Back                     QKeySequence_StandardKey = 13
	QKeySequence_Forward                  QKeySequence_StandardKey = 14
	QKeySequence_Refresh                  QKeySequence_StandardKey = 15
	QKeySequence_ZoomIn                   QKeySequence_StandardKey = 16
	QKeySequence_ZoomOut                  QKeySequence_StandardKey = 17
	QKeySequence_Print                    QKeySequence_StandardKey = 18
	QKeySequence_AddTab                   QKeySequence_StandardKey = 19
	QKeySequence_NextChild                QKeySequence_StandardKey = 20
	QKeySequence_PreviousChild            QKeySequence_StandardKey = 21
	QKeySequence_Find                     QKeySequence_StandardKey = 22
	QKeySequence_FindNext                 QKeySequence_StandardKey = 23
	QKeySequence_FindPrevious             QKeySequence_StandardKey = 24
	QKeySequence_Replace                  QKeySequence_StandardKey = 25
	QKeySequence_SelectAll                QKeySequence_StandardKey = 26
	QKeySequence_Bold                     QKeySequence_StandardKey = 27
	QKeySequence_Italic                   QKeySequence_StandardKey = 28
	QKeySequence_Underline                QKeySequence_StandardKey = 29
	QKeySequence_MoveToNextChar           QKeySequence_StandardKey = 30
	QKeySequence_MoveToPreviousChar       QKeySequence_StandardKey = 31
	QKeySequence_MoveToNextWord           QKeySequence_StandardKey = 32
	QKeySequence_MoveToPreviousWord       QKeySequence_StandardKey = 33
	QKeySequence_MoveToNextLine           QKeySequence_StandardKey = 34
	QKeySequence_MoveToPreviousLine       QKeySequence_StandardKey = 35
	QKeySequence_MoveToNextPage           QKeySequence_StandardKey = 36
	QKeySequence_MoveToPreviousPage       QKeySequence_StandardKey = 37
	QKeySequence_MoveToStartOfLine        QKeySequence_StandardKey = 38
	QKeySequence_MoveToEndOfLine          QKeySequence_StandardKey = 39
	QKeySequence_MoveToStartOfBlock       QKeySequence_StandardKey = 40
	QKeySequence_MoveToEndOfBlock         QKeySequence_StandardKey = 41
	QKeySequence_MoveToStartOfDocument    QKeySequence_StandardKey = 42
	QKeySequence_MoveToEndOfDocument      QKeySequence_StandardKey = 43
	QKeySequence_SelectNextChar           QKeySequence_StandardKey = 44
	QKeySequence_SelectPreviousChar       QKeySequence_StandardKey = 45
	QKeySequence_SelectNextWord           QKeySequence_StandardKey = 46
	QKeySequence_SelectPreviousWord       QKeySequence_StandardKey = 47
	QKeySequence_SelectNextLine           QKeySequence_StandardKey = 48
	QKeySequence_SelectPreviousLine       QKeySequence_StandardKey = 49
	QKeySequence_SelectNextPage           QKeySequence_StandardKey = 50
	QKeySequence_SelectPreviousPage       QKeySequence_StandardKey = 51
	QKeySequence_SelectStartOfLine        QKeySequence_StandardKey = 52
	QKeySequence_SelectEndOfLine          QKeySequence_StandardKey = 53
	QKeySequence_SelectStartOfBlock       QKeySequence_StandardKey = 54
	QKeySequence_SelectEndOfBlock         QKeySequence_StandardKey = 55
	QKeySequence_SelectStartOfDocument    QKeySequence_StandardKey = 56
	QKeySequence_SelectEndOfDocument      QKeySequence_StandardKey = 57
	QKeySequence_DeleteStartOfWord        QKeySequence_StandardKey = 58
	QKeySequence_DeleteEndOfWord          QKeySequence_StandardKey = 59
	QKeySequence_DeleteEndOfLine          QKeySequence_StandardKey = 60
	QKeySequence_InsertParagraphSeparator QKeySequence_StandardKey = 61
	QKeySequence_InsertLineSeparator      QKeySequence_StandardKey = 62
	QKeySequence_SaveAs                   QKeySequence_StandardKey = 63
	QKeySequence_Preferences              QKeySequence_StandardKey = 64
	QKeySequence_Quit                     QKeySequence_StandardKey = 65
)

//enum QKeySequence_SequenceMatch - QKeySequence::SequenceMatch
type QKeySequence_SequenceMatch uint32

const (
	QKeySequence_NoMatch      QKeySequence_SequenceMatch = 0
	QKeySequence_PartialMatch QKeySequence_SequenceMatch = 1
	QKeySequence_ExactMatch   QKeySequence_SequenceMatch = 2
)

//struct QKeySequence : QKeySequence
type QKeySequence struct {
	BaseDrv
}

//QKeySequence::QKeySequence()
func NewKeySequence() *QKeySequence {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::QKeySequence(QKeySequence const&)
func NewKeySequenceCopy(ks *QKeySequence) *QKeySequence {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66103, Native(ks), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::QKeySequence(QKeySequence::StandardKey)
func NewKeySequenceWithStandardkey(key QKeySequence_StandardKey) *QKeySequence {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66104, unsafe.Pointer(&key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::QKeySequence(QString const&)
func NewKeySequenceWithKey(key string) *QKeySequence {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66105, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::QKeySequence(QString const&,QKeySequence::SequenceFormat)
func NewKeySequenceWithKeyFormat(key string, format QKeySequence_SequenceFormat) *QKeySequence {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66106, unsafe.Pointer(_key), unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::QKeySequence(int,int,int,int)
func NewKeySequenceWithK1K2K3K4(k1 int32, k2 int32, k3 int32, k4 int32) *QKeySequence {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 66000, 66107, unsafe.Pointer(&k1), unsafe.Pointer(&k2), unsafe.Pointer(&k3), unsafe.Pointer(&k4), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeySequence{}
	_p.SetDriver(__rv, 66000, true)
	return _p
}

//QKeySequence::count()
func (q *QKeySequence) Count() uint32 {
	var __rv uint32
	q.Drv(66000, 66108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::fromString(QString const&)
func QKeySequenceFromString(str string) *QKeySequence {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	DirectQtDrv(nil, 66000, 66109, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::fromString(QString const&)
func (q *QKeySequence) FromString(str string) *QKeySequence {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	q.Drv(66000, 66109, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::fromString(QString const&,QKeySequence::SequenceFormat)
func QKeySequenceFromStringWithTextFormat(str string, format QKeySequence_SequenceFormat) *QKeySequence {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	DirectQtDrv(nil, 66000, 66110, unsafe.Pointer(_str), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::fromString(QString const&,QKeySequence::SequenceFormat)
func (q *QKeySequence) FromStringWithTextFormat(str string, format QKeySequence_SequenceFormat) *QKeySequence {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv uintptr
	q.Drv(66000, 66110, unsafe.Pointer(_str), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::isDetached()
func (q *QKeySequence) IsDetached() bool {
	var __rv bool
	q.Drv(66000, 66111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::isEmpty()
func (q *QKeySequence) IsEmpty() bool {
	var __rv bool
	q.Drv(66000, 66112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::keyBindings(QKeySequence::StandardKey)
func QKeySequenceKeyBindings(key QKeySequence_StandardKey) []*QKeySequence {
	var __rv []*QKeySequence
	DirectQtDrv(nil, 66000, 66113, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::keyBindings(QKeySequence::StandardKey)
func (q *QKeySequence) KeyBindings(key QKeySequence_StandardKey) []*QKeySequence {
	var __rv []*QKeySequence
	q.Drv(66000, 66113, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::matches(QKeySequence const&)
func (q *QKeySequence) Matches(seq *QKeySequence) QKeySequence_SequenceMatch {
	var __rv QKeySequence_SequenceMatch
	q.Drv(66000, 66114, Native(seq), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeySequence::mnemonic(QString const&)
func QKeySequenceMnemonic(text string) *QKeySequence {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	DirectQtDrv(nil, 66000, 66115, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::mnemonic(QString const&)
func (q *QKeySequence) Mnemonic(text string) *QKeySequence {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(66000, 66115, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QKeySequence::toString()
func (q *QKeySequence) ToString() string {
	var __rv C.string_head
	q.Drv(66000, 66116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QKeySequence::toString(QKeySequence::SequenceFormat)
func (q *QKeySequence) ToStringWithFormat(format QKeySequence_SequenceFormat) string {
	var __rv C.string_head
	q.Drv(66000, 66117, unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QLayoutItem : QLayoutItem
type QLayoutItem struct {
	BaseDrv
}

//QLayoutItem::alignment()
func (q *QLayoutItem) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(67000, 67102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::controlTypes()
func (q *QLayoutItem) ControlTypes() QSizePolicy_ControlType {
	var __rv QSizePolicy_ControlType
	q.Drv(67000, 67103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::expandingDirections()
func (q *QLayoutItem) ExpandingDirections() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(67000, 67104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::geometry()
func (q *QLayoutItem) Geometry() *QRect {
	var __rv uintptr
	q.Drv(67000, 67105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QLayoutItem::hasHeightForWidth()
func (q *QLayoutItem) HasHeightForWidth() bool {
	var __rv bool
	q.Drv(67000, 67106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::heightForWidth(int)
func (q *QLayoutItem) HeightForWidth(value int32) int32 {
	var __rv int32
	q.Drv(67000, 67107, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::invalidate()
func (q *QLayoutItem) Invalidate() {
	q.Drv(67000, 67108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayoutItem::isEmpty()
func (q *QLayoutItem) IsEmpty() bool {
	var __rv bool
	q.Drv(67000, 67109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::layout()
func (q *QLayoutItem) Layout() *QLayout {
	var __rv uintptr
	q.Drv(67000, 67110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayout{}
	_rp.SetDriver(__rv, 302000, false)
	return _rp
}

//QLayoutItem::maximumSize()
func (q *QLayoutItem) MaximumSize() *QSize {
	var __rv uintptr
	q.Drv(67000, 67111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayoutItem::minimumHeightForWidth(int)
func (q *QLayoutItem) MinimumHeightForWidth(value int32) int32 {
	var __rv int32
	q.Drv(67000, 67112, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayoutItem::minimumSize()
func (q *QLayoutItem) MinimumSize() *QSize {
	var __rv uintptr
	q.Drv(67000, 67113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayoutItem::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QLayoutItem) SetAlignment(a Qt_AlignmentFlag) {
	q.Drv(67000, 67114, unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayoutItem::setGeometry(QRect const&)
func (q *QLayoutItem) SetGeometry(value *QRect) {
	q.Drv(67000, 67115, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayoutItem::sizeHint()
func (q *QLayoutItem) SizeHint() *QSize {
	var __rv uintptr
	q.Drv(67000, 67116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayoutItem::spacerItem()
func (q *QLayoutItem) SpacerItem() *QSpacerItem {
	var __rv uintptr
	q.Drv(67000, 67117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSpacerItem{}
	_rp.SetDriver(__rv, 123000, true)
	return _rp
}

//QLayoutItem::widget()
func (q *QLayoutItem) Widget() *QWidget {
	var __rv uintptr
	q.Drv(67000, 67118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//enum QLibraryInfo_LibraryLocation - QLibraryInfo::LibraryLocation
type QLibraryInfo_LibraryLocation uint32

const (
	QLibraryInfo_PrefixPath        QLibraryInfo_LibraryLocation = 0
	QLibraryInfo_DocumentationPath QLibraryInfo_LibraryLocation = 1
	QLibraryInfo_HeadersPath       QLibraryInfo_LibraryLocation = 2
	QLibraryInfo_LibrariesPath     QLibraryInfo_LibraryLocation = 3
	QLibraryInfo_BinariesPath      QLibraryInfo_LibraryLocation = 4
	QLibraryInfo_PluginsPath       QLibraryInfo_LibraryLocation = 5
	QLibraryInfo_DataPath          QLibraryInfo_LibraryLocation = 6
	QLibraryInfo_TranslationsPath  QLibraryInfo_LibraryLocation = 7
	QLibraryInfo_SettingsPath      QLibraryInfo_LibraryLocation = 8
	QLibraryInfo_DemosPath         QLibraryInfo_LibraryLocation = 9
	QLibraryInfo_ExamplesPath      QLibraryInfo_LibraryLocation = 10
	QLibraryInfo_ImportsPath       QLibraryInfo_LibraryLocation = 11
)

//struct QLibraryInfo : QLibraryInfo
type QLibraryInfo struct {
	BaseDrv
}

//QLibraryInfo::buildDate()
func QLibraryInfoBuildDate() *QDate {
	var __rv uintptr
	DirectQtDrv(nil, 68000, 68102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QLibraryInfo::buildDate()
func (q *QLibraryInfo) BuildDate() *QDate {
	var __rv uintptr
	q.Drv(68000, 68102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QLibraryInfo::licensedProducts()
func QLibraryInfoLicensedProducts() string {
	var __rv C.string_head
	DirectQtDrv(nil, 68000, 68103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibraryInfo::licensedProducts()
func (q *QLibraryInfo) LicensedProducts() string {
	var __rv C.string_head
	q.Drv(68000, 68103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibraryInfo::licensee()
func QLibraryInfoLicensee() string {
	var __rv C.string_head
	DirectQtDrv(nil, 68000, 68104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibraryInfo::licensee()
func (q *QLibraryInfo) Licensee() string {
	var __rv C.string_head
	q.Drv(68000, 68104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibraryInfo::location(QLibraryInfo::LibraryLocation)
func QLibraryInfoLocation(value QLibraryInfo_LibraryLocation) string {
	var __rv C.string_head
	DirectQtDrv(nil, 68000, 68105, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibraryInfo::location(QLibraryInfo::LibraryLocation)
func (q *QLibraryInfo) Location(value QLibraryInfo_LibraryLocation) string {
	var __rv C.string_head
	q.Drv(68000, 68105, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QLine : QLine
type QLine struct {
	BaseDrv
}

//QLine::QLine()
func NewLine() *QLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 69000, 69102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLine{}
	_p.SetDriver(__rv, 69000, true)
	return _p
}

//QLine::QLine(QPoint const&,QPoint const&)
func NewLineWithPt1Pt2(pt1 *QPoint, pt2 *QPoint) *QLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 69000, 69103, Native(pt1), Native(pt2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLine{}
	_p.SetDriver(__rv, 69000, true)
	return _p
}

//QLine::QLine(int,int,int,int)
func NewLineWithX1Y1X2Y2(x1 int32, y1 int32, x2 int32, y2 int32) *QLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 69000, 69104, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLine{}
	_p.SetDriver(__rv, 69000, true)
	return _p
}

//QLine::dx()
func (q *QLine) Dx() int32 {
	var __rv int32
	q.Drv(69000, 69105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::dy()
func (q *QLine) Dy() int32 {
	var __rv int32
	q.Drv(69000, 69106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::isNull()
func (q *QLine) IsNull() bool {
	var __rv bool
	q.Drv(69000, 69107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::p1()
func (q *QLine) P1() *QPoint {
	var __rv uintptr
	q.Drv(69000, 69108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QLine::p2()
func (q *QLine) P2() *QPoint {
	var __rv uintptr
	q.Drv(69000, 69109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QLine::setLine(int,int,int,int)
func (q *QLine) SetLine(x1 int32, y1 int32, x2 int32, y2 int32) {
	q.Drv(69000, 69110, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::setP1(QPoint const&)
func (q *QLine) SetP1(p1 *QPoint) {
	q.Drv(69000, 69111, Native(p1), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::setP2(QPoint const&)
func (q *QLine) SetP2(p2 *QPoint) {
	q.Drv(69000, 69112, Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::setPoints(QPoint const&,QPoint const&)
func (q *QLine) SetPoints(p1 *QPoint, p2 *QPoint) {
	q.Drv(69000, 69113, Native(p1), Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::translate(QPoint const&)
func (q *QLine) Translate(p *QPoint) {
	q.Drv(69000, 69114, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::translate(int,int)
func (q *QLine) TranslateWithDxDy(dx int32, dy int32) {
	q.Drv(69000, 69115, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLine::translated(QPoint const&)
func (q *QLine) Translated(p *QPoint) *QLine {
	var __rv uintptr
	q.Drv(69000, 69116, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLine{}
	_rp.SetDriver(__rv, 69000, true)
	return _rp
}

//QLine::translated(int,int)
func (q *QLine) TranslatedWithDxDy(dx int32, dy int32) *QLine {
	var __rv uintptr
	q.Drv(69000, 69117, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLine{}
	_rp.SetDriver(__rv, 69000, true)
	return _rp
}

//QLine::x1()
func (q *QLine) X1() int32 {
	var __rv int32
	q.Drv(69000, 69118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::x2()
func (q *QLine) X2() int32 {
	var __rv int32
	q.Drv(69000, 69119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::y1()
func (q *QLine) Y1() int32 {
	var __rv int32
	q.Drv(69000, 69120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLine::y2()
func (q *QLine) Y2() int32 {
	var __rv int32
	q.Drv(69000, 69121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QLineF_IntersectType - QLineF::IntersectType
type QLineF_IntersectType uint32

const (
	QLineF_NoIntersection        QLineF_IntersectType = 0
	QLineF_BoundedIntersection   QLineF_IntersectType = 1
	QLineF_UnboundedIntersection QLineF_IntersectType = 2
)

//struct QLineF : QLineF
type QLineF struct {
	BaseDrv
}

//QLineF::QLineF()
func NewLineF() *QLineF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 70000, 70102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineF{}
	_p.SetDriver(__rv, 70000, true)
	return _p
}

//QLineF::QLineF(QLine const&)
func NewLineFWithLine(line *QLine) *QLineF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 70000, 70103, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineF{}
	_p.SetDriver(__rv, 70000, true)
	return _p
}

//QLineF::QLineF(QLineF const&)
func NewLineFCopy(other *QLineF) *QLineF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 70000, 70104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineF{}
	_p.SetDriver(__rv, 70000, true)
	return _p
}

//QLineF::QLineF(QPointF const&,QPointF const&)
func NewLineFWithPt1Pt2(pt1 *QPointF, pt2 *QPointF) *QLineF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 70000, 70105, Native(pt1), Native(pt2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineF{}
	_p.SetDriver(__rv, 70000, true)
	return _p
}

//QLineF::QLineF(double,double,double,double)
func NewLineFWithX1Y1X2Y2(x1 float64, y1 float64, x2 float64, y2 float64) *QLineF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 70000, 70106, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineF{}
	_p.SetDriver(__rv, 70000, true)
	return _p
}

//QLineF::angle()
func (q *QLineF) Angle() float64 {
	var __rv float64
	q.Drv(70000, 70107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::angle(QLineF const&)
func (q *QLineF) AngleFWithLinef(l *QLineF) float64 {
	var __rv float64
	q.Drv(70000, 70108, Native(l), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::angleTo(QLineF const&)
func (q *QLineF) AngleTo(l *QLineF) float64 {
	var __rv float64
	q.Drv(70000, 70109, Native(l), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::dx()
func (q *QLineF) Dx() float64 {
	var __rv float64
	q.Drv(70000, 70110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::dy()
func (q *QLineF) Dy() float64 {
	var __rv float64
	q.Drv(70000, 70111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::fromPolar(double,double)
func QLineFFromPolar(length float64, angle float64) *QLineF {
	var __rv uintptr
	DirectQtDrv(nil, 70000, 70112, unsafe.Pointer(&length), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::fromPolar(double,double)
func (q *QLineF) FromPolar(length float64, angle float64) *QLineF {
	var __rv uintptr
	q.Drv(70000, 70112, unsafe.Pointer(&length), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::intersect(QLineF const&,QPointF*)
func (q *QLineF) Intersect(l *QLineF, intersectionPoint *QPointF) QLineF_IntersectType {
	var __rv QLineF_IntersectType
	q.Drv(70000, 70113, Native(l), Native(intersectionPoint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::isNull()
func (q *QLineF) IsNull() bool {
	var __rv bool
	q.Drv(70000, 70114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::length()
func (q *QLineF) Length() float64 {
	var __rv float64
	q.Drv(70000, 70115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::normalVector()
func (q *QLineF) NormalVector() *QLineF {
	var __rv uintptr
	q.Drv(70000, 70116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::p1()
func (q *QLineF) P1() *QPointF {
	var __rv uintptr
	q.Drv(70000, 70117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QLineF::p2()
func (q *QLineF) P2() *QPointF {
	var __rv uintptr
	q.Drv(70000, 70118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QLineF::pointAt(double)
func (q *QLineF) PointAt(t float64) *QPointF {
	var __rv uintptr
	q.Drv(70000, 70119, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QLineF::setAngle(double)
func (q *QLineF) SetAngle(angle float64) {
	q.Drv(70000, 70120, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::setLength(double)
func (q *QLineF) SetLength(len float64) {
	q.Drv(70000, 70121, unsafe.Pointer(&len), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::setLine(double,double,double,double)
func (q *QLineF) SetLine(x1 float64, y1 float64, x2 float64, y2 float64) {
	q.Drv(70000, 70122, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::setP1(QPointF const&)
func (q *QLineF) SetP1(p1 *QPointF) {
	q.Drv(70000, 70123, Native(p1), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::setP2(QPointF const&)
func (q *QLineF) SetP2(p2 *QPointF) {
	q.Drv(70000, 70124, Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::setPoints(QPointF const&,QPointF const&)
func (q *QLineF) SetPoints(p1 *QPointF, p2 *QPointF) {
	q.Drv(70000, 70125, Native(p1), Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::toLine()
func (q *QLineF) ToLine() *QLine {
	var __rv uintptr
	q.Drv(70000, 70126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLine{}
	_rp.SetDriver(__rv, 69000, true)
	return _rp
}

//QLineF::translate(QPointF const&)
func (q *QLineF) Translate(p *QPointF) {
	q.Drv(70000, 70127, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::translate(double,double)
func (q *QLineF) TranslateFWithDxDy(dx float64, dy float64) {
	q.Drv(70000, 70128, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineF::translated(QPointF const&)
func (q *QLineF) Translated(p *QPointF) *QLineF {
	var __rv uintptr
	q.Drv(70000, 70129, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::translated(double,double)
func (q *QLineF) TranslatedFWithDxDy(dx float64, dy float64) *QLineF {
	var __rv uintptr
	q.Drv(70000, 70130, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::unitVector()
func (q *QLineF) UnitVector() *QLineF {
	var __rv uintptr
	q.Drv(70000, 70131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QLineF::x1()
func (q *QLineF) X1() float64 {
	var __rv float64
	q.Drv(70000, 70132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::x2()
func (q *QLineF) X2() float64 {
	var __rv float64
	q.Drv(70000, 70133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::y1()
func (q *QLineF) Y1() float64 {
	var __rv float64
	q.Drv(70000, 70134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineF::y2()
func (q *QLineF) Y2() float64 {
	var __rv float64
	q.Drv(70000, 70135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QLinearGradient : QLinearGradient
type QLinearGradient struct {
	QGradient
}

//QLinearGradient::QLinearGradient()
func NewLinearGradient() *QLinearGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 71000, 71102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLinearGradient{}
	_p.SetDriver(__rv, 71000, true)
	return _p
}

//QLinearGradient::QLinearGradient(QPointF const&,QPointF const&)
func NewLinearGradientWithStartFinalstop(start *QPointF, finalStop *QPointF) *QLinearGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 71000, 71103, Native(start), Native(finalStop), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLinearGradient{}
	_p.SetDriver(__rv, 71000, true)
	return _p
}

//QLinearGradient::QLinearGradient(double,double,double,double)
func NewLinearGradientWithXstartYstartXfinalstopYfinalstop(xStart float64, yStart float64, xFinalStop float64, yFinalStop float64) *QLinearGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 71000, 71104, unsafe.Pointer(&xStart), unsafe.Pointer(&yStart), unsafe.Pointer(&xFinalStop), unsafe.Pointer(&yFinalStop), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLinearGradient{}
	_p.SetDriver(__rv, 71000, true)
	return _p
}

//QLinearGradient::finalStop()
func (q *QLinearGradient) FinalStop() *QPointF {
	var __rv uintptr
	q.Drv(71000, 71105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QLinearGradient::setFinalStop(QPointF const&)
func (q *QLinearGradient) SetFinalStop(stop *QPointF) {
	q.Drv(71000, 71106, Native(stop), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLinearGradient::setFinalStop(double,double)
func (q *QLinearGradient) SetFinalStopFWithXY(x float64, y float64) {
	q.Drv(71000, 71107, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLinearGradient::setStart(QPointF const&)
func (q *QLinearGradient) SetStart(start *QPointF) {
	q.Drv(71000, 71108, Native(start), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLinearGradient::setStart(double,double)
func (q *QLinearGradient) SetStartFWithXY(x float64, y float64) {
	q.Drv(71000, 71109, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLinearGradient::start()
func (q *QLinearGradient) Start() *QPointF {
	var __rv uintptr
	q.Drv(71000, 71110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//enum QListWidgetItem_ItemType - QListWidgetItem::ItemType
type QListWidgetItem_ItemType uint32

const (
	QListWidgetItem_Type     QListWidgetItem_ItemType = 0
	QListWidgetItem_UserType QListWidgetItem_ItemType = 1000
)

//struct QListWidgetItem : QListWidgetItem
type QListWidgetItem struct {
	BaseDrv
}

//QListWidgetItem::QListWidgetItem()
func NewListWidgetItem() *QListWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 72000, 72102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidgetItem{}
	_p.SetDriver(__rv, 72000, true)
	return _p
}

//QListWidgetItem::QListWidgetItem(QListWidgetItem const&)
func NewListWidgetItemCopy(other *QListWidgetItem) *QListWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 72000, 72103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidgetItem{}
	_p.SetDriver(__rv, 72000, true)
	return _p
}

//QListWidgetItem::QListWidgetItem(QListWidget*,int)
func NewListWidgetItemWithViewType(view *QListWidget, _type int32) *QListWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 72000, 72104, Native(view), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidgetItem{}
	_p.SetDriver(__rv, 72000, true)
	return _p
}

//QListWidgetItem::QListWidgetItem(QString const&,QListWidget*,int)
func NewListWidgetItemWithTextViewType(text string, view *QListWidget, _type int32) *QListWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 72000, 72105, unsafe.Pointer(_text), Native(view), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidgetItem{}
	_p.SetDriver(__rv, 72000, true)
	return _p
}

//QListWidgetItem::QListWidgetItem(QIcon const&,QString const&,QListWidget*,int)
func NewListWidgetItemWithIconTextViewType(icon *QIcon, text string, view *QListWidget, _type int32) *QListWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 72000, 72106, Native(icon), unsafe.Pointer(_text), Native(view), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidgetItem{}
	_p.SetDriver(__rv, 72000, true)
	return _p
}

//QListWidgetItem::background()
func (q *QListWidgetItem) Background() *QBrush {
	var __rv uintptr
	q.Drv(72000, 72107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QListWidgetItem::backgroundColor()
func (q *QListWidgetItem) BackgroundColor() *QColor {
	var __rv uintptr
	q.Drv(72000, 72108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QListWidgetItem::checkState()
func (q *QListWidgetItem) CheckState() Qt_CheckState {
	var __rv Qt_CheckState
	q.Drv(72000, 72109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::clone()
func (q *QListWidgetItem) Clone() *QListWidgetItem {
	var __rv uintptr
	q.Drv(72000, 72110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidgetItem::data(int)
func (q *QListWidgetItem) Data(role int32) *QVariant {
	var __rv uintptr
	q.Drv(72000, 72111, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QListWidgetItem::flags()
func (q *QListWidgetItem) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(72000, 72112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::font()
func (q *QListWidgetItem) Font() *QFont {
	var __rv uintptr
	q.Drv(72000, 72113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QListWidgetItem::foreground()
func (q *QListWidgetItem) Foreground() *QBrush {
	var __rv uintptr
	q.Drv(72000, 72114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QListWidgetItem::icon()
func (q *QListWidgetItem) Icon() *QIcon {
	var __rv uintptr
	q.Drv(72000, 72115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QListWidgetItem::isHidden()
func (q *QListWidgetItem) IsHidden() bool {
	var __rv bool
	q.Drv(72000, 72116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::isSelected()
func (q *QListWidgetItem) IsSelected() bool {
	var __rv bool
	q.Drv(72000, 72117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::listWidget()
func (q *QListWidgetItem) ListWidget() *QListWidget {
	var __rv uintptr
	q.Drv(72000, 72118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidget{}
	_rp.SetDriver(__rv, 306000, false)
	return _rp
}

//QListWidgetItem::setBackground(QBrush const&)
func (q *QListWidgetItem) SetBackground(brush *QBrush) {
	q.Drv(72000, 72119, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setBackgroundColor(QColor const&)
func (q *QListWidgetItem) SetBackgroundColor(color *QColor) {
	q.Drv(72000, 72120, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setCheckState(Qt::CheckState)
func (q *QListWidgetItem) SetCheckState(state Qt_CheckState) {
	q.Drv(72000, 72121, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setData(int,QVariant const&)
func (q *QListWidgetItem) SetData(role int32, value *QVariant) {
	q.Drv(72000, 72122, unsafe.Pointer(&role), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setFlags(QFlags<Qt::ItemFlag>)
func (q *QListWidgetItem) SetFlags(flags Qt_ItemFlag) {
	q.Drv(72000, 72123, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setFont(QFont const&)
func (q *QListWidgetItem) SetFont(font *QFont) {
	q.Drv(72000, 72124, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setForeground(QBrush const&)
func (q *QListWidgetItem) SetForeground(brush *QBrush) {
	q.Drv(72000, 72125, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setHidden(bool)
func (q *QListWidgetItem) SetHidden(hide bool) {
	q.Drv(72000, 72126, unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setIcon(QIcon const&)
func (q *QListWidgetItem) SetIcon(icon *QIcon) {
	q.Drv(72000, 72127, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setSelected(bool)
func (q *QListWidgetItem) SetSelected(_select bool) {
	q.Drv(72000, 72128, unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setSizeHint(QSize const&)
func (q *QListWidgetItem) SetSizeHint(size *QSize) {
	q.Drv(72000, 72129, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setStatusTip(QString const&)
func (q *QListWidgetItem) SetStatusTip(statusTip string) {
	_statusTip := NewCStringHead(statusTip)
	defer FreeCStringHead(_statusTip)
	q.Drv(72000, 72130, unsafe.Pointer(_statusTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setText(QString const&)
func (q *QListWidgetItem) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(72000, 72131, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setTextAlignment(int)
func (q *QListWidgetItem) SetTextAlignment(alignment int32) {
	q.Drv(72000, 72132, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setTextColor(QColor const&)
func (q *QListWidgetItem) SetTextColor(color *QColor) {
	q.Drv(72000, 72133, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setToolTip(QString const&)
func (q *QListWidgetItem) SetToolTip(toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(72000, 72134, unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::setWhatsThis(QString const&)
func (q *QListWidgetItem) SetWhatsThis(whatsThis string) {
	_whatsThis := NewCStringHead(whatsThis)
	defer FreeCStringHead(_whatsThis)
	q.Drv(72000, 72135, unsafe.Pointer(_whatsThis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidgetItem::sizeHint()
func (q *QListWidgetItem) SizeHint() *QSize {
	var __rv uintptr
	q.Drv(72000, 72136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QListWidgetItem::statusTip()
func (q *QListWidgetItem) StatusTip() string {
	var __rv C.string_head
	q.Drv(72000, 72137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QListWidgetItem::text()
func (q *QListWidgetItem) Text() string {
	var __rv C.string_head
	q.Drv(72000, 72138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QListWidgetItem::textAlignment()
func (q *QListWidgetItem) TextAlignment() int32 {
	var __rv int32
	q.Drv(72000, 72139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::textColor()
func (q *QListWidgetItem) TextColor() *QColor {
	var __rv uintptr
	q.Drv(72000, 72140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QListWidgetItem::toolTip()
func (q *QListWidgetItem) ToolTip() string {
	var __rv C.string_head
	q.Drv(72000, 72141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QListWidgetItem::type()
func (q *QListWidgetItem) Type() int32 {
	var __rv int32
	q.Drv(72000, 72142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidgetItem::whatsThis()
func (q *QListWidgetItem) WhatsThis() string {
	var __rv C.string_head
	q.Drv(72000, 72143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QLocale_MeasurementSystem - QLocale::MeasurementSystem
type QLocale_MeasurementSystem uint32

const (
	QLocale_MetricSystem   QLocale_MeasurementSystem = 0
	QLocale_ImperialSystem QLocale_MeasurementSystem = 1
)

//enum QLocale_NumberOption - QLocale::NumberOption
type QLocale_NumberOption uint32

const (
	QLocale_OmitGroupSeparator   QLocale_NumberOption = 0x01
	QLocale_RejectGroupSeparator QLocale_NumberOption = 0x02
)

//enum QLocale_FormatType - QLocale::FormatType
type QLocale_FormatType uint32

const (
	QLocale_LongFormat   QLocale_FormatType = 0
	QLocale_ShortFormat  QLocale_FormatType = 1
	QLocale_NarrowFormat QLocale_FormatType = 2
)

//enum QLocale_Country - QLocale::Country
type QLocale_Country uint32

const (
	QLocale_AnyCountry                             QLocale_Country = 0
	QLocale_Afghanistan                            QLocale_Country = 1
	QLocale_Albania                                QLocale_Country = 2
	QLocale_Algeria                                QLocale_Country = 3
	QLocale_AmericanSamoa                          QLocale_Country = 4
	QLocale_Andorra                                QLocale_Country = 5
	QLocale_Angola                                 QLocale_Country = 6
	QLocale_Anguilla                               QLocale_Country = 7
	QLocale_Antarctica                             QLocale_Country = 8
	QLocale_AntiguaAndBarbuda                      QLocale_Country = 9
	QLocale_Argentina                              QLocale_Country = 10
	QLocale_Armenia                                QLocale_Country = 11
	QLocale_Aruba                                  QLocale_Country = 12
	QLocale_Australia                              QLocale_Country = 13
	QLocale_Austria                                QLocale_Country = 14
	QLocale_Azerbaijan                             QLocale_Country = 15
	QLocale_Bahamas                                QLocale_Country = 16
	QLocale_Bahrain                                QLocale_Country = 17
	QLocale_Bangladesh                             QLocale_Country = 18
	QLocale_Barbados                               QLocale_Country = 19
	QLocale_Belarus                                QLocale_Country = 20
	QLocale_Belgium                                QLocale_Country = 21
	QLocale_Belize                                 QLocale_Country = 22
	QLocale_Benin                                  QLocale_Country = 23
	QLocale_Bermuda                                QLocale_Country = 24
	QLocale_Bhutan                                 QLocale_Country = 25
	QLocale_Bolivia                                QLocale_Country = 26
	QLocale_BosniaAndHerzegowina                   QLocale_Country = 27
	QLocale_Botswana                               QLocale_Country = 28
	QLocale_BouvetIsland                           QLocale_Country = 29
	QLocale_Brazil                                 QLocale_Country = 30
	QLocale_BritishIndianOceanTerritory            QLocale_Country = 31
	QLocale_BruneiDarussalam                       QLocale_Country = 32
	QLocale_Bulgaria                               QLocale_Country = 33
	QLocale_BurkinaFaso                            QLocale_Country = 34
	QLocale_Burundi                                QLocale_Country = 35
	QLocale_Cambodia                               QLocale_Country = 36
	QLocale_Cameroon                               QLocale_Country = 37
	QLocale_Canada                                 QLocale_Country = 38
	QLocale_CapeVerde                              QLocale_Country = 39
	QLocale_CaymanIslands                          QLocale_Country = 40
	QLocale_CentralAfricanRepublic                 QLocale_Country = 41
	QLocale_Chad                                   QLocale_Country = 42
	QLocale_Chile                                  QLocale_Country = 43
	QLocale_China                                  QLocale_Country = 44
	QLocale_ChristmasIsland                        QLocale_Country = 45
	QLocale_CocosIslands                           QLocale_Country = 46
	QLocale_Colombia                               QLocale_Country = 47
	QLocale_Comoros                                QLocale_Country = 48
	QLocale_DemocraticRepublicOfCongo              QLocale_Country = 49
	QLocale_PeoplesRepublicOfCongo                 QLocale_Country = 50
	QLocale_CookIslands                            QLocale_Country = 51
	QLocale_CostaRica                              QLocale_Country = 52
	QLocale_IvoryCoast                             QLocale_Country = 53
	QLocale_Croatia                                QLocale_Country = 54
	QLocale_Cuba                                   QLocale_Country = 55
	QLocale_Cyprus                                 QLocale_Country = 56
	QLocale_CzechRepublic                          QLocale_Country = 57
	QLocale_Denmark                                QLocale_Country = 58
	QLocale_Djibouti                               QLocale_Country = 59
	QLocale_Dominica                               QLocale_Country = 60
	QLocale_DominicanRepublic                      QLocale_Country = 61
	QLocale_EastTimor                              QLocale_Country = 62
	QLocale_Ecuador                                QLocale_Country = 63
	QLocale_Egypt                                  QLocale_Country = 64
	QLocale_ElSalvador                             QLocale_Country = 65
	QLocale_EquatorialGuinea                       QLocale_Country = 66
	QLocale_Eritrea                                QLocale_Country = 67
	QLocale_Estonia                                QLocale_Country = 68
	QLocale_Ethiopia                               QLocale_Country = 69
	QLocale_FalklandIslands                        QLocale_Country = 70
	QLocale_FaroeIslands                           QLocale_Country = 71
	QLocale_FijiCountry                            QLocale_Country = 72
	QLocale_Finland                                QLocale_Country = 73
	QLocale_France                                 QLocale_Country = 74
	QLocale_MetropolitanFrance                     QLocale_Country = 75
	QLocale_FrenchGuiana                           QLocale_Country = 76
	QLocale_FrenchPolynesia                        QLocale_Country = 77
	QLocale_FrenchSouthernTerritories              QLocale_Country = 78
	QLocale_Gabon                                  QLocale_Country = 79
	QLocale_Gambia                                 QLocale_Country = 80
	QLocale_Georgia                                QLocale_Country = 81
	QLocale_Germany                                QLocale_Country = 82
	QLocale_Ghana                                  QLocale_Country = 83
	QLocale_Gibraltar                              QLocale_Country = 84
	QLocale_Greece                                 QLocale_Country = 85
	QLocale_Greenland                              QLocale_Country = 86
	QLocale_Grenada                                QLocale_Country = 87
	QLocale_Guadeloupe                             QLocale_Country = 88
	QLocale_Guam                                   QLocale_Country = 89
	QLocale_Guatemala                              QLocale_Country = 90
	QLocale_Guinea                                 QLocale_Country = 91
	QLocale_GuineaBissau                           QLocale_Country = 92
	QLocale_Guyana                                 QLocale_Country = 93
	QLocale_Haiti                                  QLocale_Country = 94
	QLocale_HeardAndMcDonaldIslands                QLocale_Country = 95
	QLocale_Honduras                               QLocale_Country = 96
	QLocale_HongKong                               QLocale_Country = 97
	QLocale_Hungary                                QLocale_Country = 98
	QLocale_Iceland                                QLocale_Country = 99
	QLocale_India                                  QLocale_Country = 100
	QLocale_Indonesia                              QLocale_Country = 101
	QLocale_Iran                                   QLocale_Country = 102
	QLocale_Iraq                                   QLocale_Country = 103
	QLocale_Ireland                                QLocale_Country = 104
	QLocale_Israel                                 QLocale_Country = 105
	QLocale_Italy                                  QLocale_Country = 106
	QLocale_Jamaica                                QLocale_Country = 107
	QLocale_Japan                                  QLocale_Country = 108
	QLocale_Jordan                                 QLocale_Country = 109
	QLocale_Kazakhstan                             QLocale_Country = 110
	QLocale_Kenya                                  QLocale_Country = 111
	QLocale_Kiribati                               QLocale_Country = 112
	QLocale_DemocraticRepublicOfKorea              QLocale_Country = 113
	QLocale_RepublicOfKorea                        QLocale_Country = 114
	QLocale_Kuwait                                 QLocale_Country = 115
	QLocale_Kyrgyzstan                             QLocale_Country = 116
	QLocale_Lao                                    QLocale_Country = 117
	QLocale_Latvia                                 QLocale_Country = 118
	QLocale_Lebanon                                QLocale_Country = 119
	QLocale_Lesotho                                QLocale_Country = 120
	QLocale_Liberia                                QLocale_Country = 121
	QLocale_LibyanArabJamahiriya                   QLocale_Country = 122
	QLocale_Liechtenstein                          QLocale_Country = 123
	QLocale_Lithuania                              QLocale_Country = 124
	QLocale_Luxembourg                             QLocale_Country = 125
	QLocale_Macau                                  QLocale_Country = 126
	QLocale_Macedonia                              QLocale_Country = 127
	QLocale_Madagascar                             QLocale_Country = 128
	QLocale_Malawi                                 QLocale_Country = 129
	QLocale_Malaysia                               QLocale_Country = 130
	QLocale_Maldives                               QLocale_Country = 131
	QLocale_Mali                                   QLocale_Country = 132
	QLocale_Malta                                  QLocale_Country = 133
	QLocale_MarshallIslands                        QLocale_Country = 134
	QLocale_Martinique                             QLocale_Country = 135
	QLocale_Mauritania                             QLocale_Country = 136
	QLocale_Mauritius                              QLocale_Country = 137
	QLocale_Mayotte                                QLocale_Country = 138
	QLocale_Mexico                                 QLocale_Country = 139
	QLocale_Micronesia                             QLocale_Country = 140
	QLocale_Moldova                                QLocale_Country = 141
	QLocale_Monaco                                 QLocale_Country = 142
	QLocale_Mongolia                               QLocale_Country = 143
	QLocale_Montserrat                             QLocale_Country = 144
	QLocale_Morocco                                QLocale_Country = 145
	QLocale_Mozambique                             QLocale_Country = 146
	QLocale_Myanmar                                QLocale_Country = 147
	QLocale_Namibia                                QLocale_Country = 148
	QLocale_NauruCountry                           QLocale_Country = 149
	QLocale_Nepal                                  QLocale_Country = 150
	QLocale_Netherlands                            QLocale_Country = 151
	QLocale_NetherlandsAntilles                    QLocale_Country = 152
	QLocale_NewCaledonia                           QLocale_Country = 153
	QLocale_NewZealand                             QLocale_Country = 154
	QLocale_Nicaragua                              QLocale_Country = 155
	QLocale_Niger                                  QLocale_Country = 156
	QLocale_Nigeria                                QLocale_Country = 157
	QLocale_Niue                                   QLocale_Country = 158
	QLocale_NorfolkIsland                          QLocale_Country = 159
	QLocale_NorthernMarianaIslands                 QLocale_Country = 160
	QLocale_Norway                                 QLocale_Country = 161
	QLocale_Oman                                   QLocale_Country = 162
	QLocale_Pakistan                               QLocale_Country = 163
	QLocale_Palau                                  QLocale_Country = 164
	QLocale_PalestinianTerritory                   QLocale_Country = 165
	QLocale_Panama                                 QLocale_Country = 166
	QLocale_PapuaNewGuinea                         QLocale_Country = 167
	QLocale_Paraguay                               QLocale_Country = 168
	QLocale_Peru                                   QLocale_Country = 169
	QLocale_Philippines                            QLocale_Country = 170
	QLocale_Pitcairn                               QLocale_Country = 171
	QLocale_Poland                                 QLocale_Country = 172
	QLocale_Portugal                               QLocale_Country = 173
	QLocale_PuertoRico                             QLocale_Country = 174
	QLocale_Qatar                                  QLocale_Country = 175
	QLocale_Reunion                                QLocale_Country = 176
	QLocale_Romania                                QLocale_Country = 177
	QLocale_RussianFederation                      QLocale_Country = 178
	QLocale_Rwanda                                 QLocale_Country = 179
	QLocale_SaintKittsAndNevis                     QLocale_Country = 180
	QLocale_StLucia                                QLocale_Country = 181
	QLocale_StVincentAndTheGrenadines              QLocale_Country = 182
	QLocale_Samoa                                  QLocale_Country = 183
	QLocale_SanMarino                              QLocale_Country = 184
	QLocale_SaoTomeAndPrincipe                     QLocale_Country = 185
	QLocale_SaudiArabia                            QLocale_Country = 186
	QLocale_Senegal                                QLocale_Country = 187
	QLocale_Seychelles                             QLocale_Country = 188
	QLocale_SierraLeone                            QLocale_Country = 189
	QLocale_Singapore                              QLocale_Country = 190
	QLocale_Slovakia                               QLocale_Country = 191
	QLocale_Slovenia                               QLocale_Country = 192
	QLocale_SolomonIslands                         QLocale_Country = 193
	QLocale_Somalia                                QLocale_Country = 194
	QLocale_SouthAfrica                            QLocale_Country = 195
	QLocale_SouthGeorgiaAndTheSouthSandwichIslands QLocale_Country = 196
	QLocale_Spain                                  QLocale_Country = 197
	QLocale_SriLanka                               QLocale_Country = 198
	QLocale_StHelena                               QLocale_Country = 199
	QLocale_StPierreAndMiquelon                    QLocale_Country = 200
	QLocale_Sudan                                  QLocale_Country = 201
	QLocale_Suriname                               QLocale_Country = 202
	QLocale_SvalbardAndJanMayenIslands             QLocale_Country = 203
	QLocale_Swaziland                              QLocale_Country = 204
	QLocale_Sweden                                 QLocale_Country = 205
	QLocale_Switzerland                            QLocale_Country = 206
	QLocale_SyrianArabRepublic                     QLocale_Country = 207
	QLocale_Taiwan                                 QLocale_Country = 208
	QLocale_Tajikistan                             QLocale_Country = 209
	QLocale_Tanzania                               QLocale_Country = 210
	QLocale_Thailand                               QLocale_Country = 211
	QLocale_Togo                                   QLocale_Country = 212
	QLocale_Tokelau                                QLocale_Country = 213
	QLocale_TongaCountry                           QLocale_Country = 214
	QLocale_TrinidadAndTobago                      QLocale_Country = 215
	QLocale_Tunisia                                QLocale_Country = 216
	QLocale_Turkey                                 QLocale_Country = 217
	QLocale_Turkmenistan                           QLocale_Country = 218
	QLocale_TurksAndCaicosIslands                  QLocale_Country = 219
	QLocale_Tuvalu                                 QLocale_Country = 220
	QLocale_Uganda                                 QLocale_Country = 221
	QLocale_Ukraine                                QLocale_Country = 222
	QLocale_UnitedArabEmirates                     QLocale_Country = 223
	QLocale_UnitedKingdom                          QLocale_Country = 224
	QLocale_UnitedStates                           QLocale_Country = 225
	QLocale_UnitedStatesMinorOutlyingIslands       QLocale_Country = 226
	QLocale_Uruguay                                QLocale_Country = 227
	QLocale_Uzbekistan                             QLocale_Country = 228
	QLocale_Vanuatu                                QLocale_Country = 229
	QLocale_VaticanCityState                       QLocale_Country = 230
	QLocale_Venezuela                              QLocale_Country = 231
	QLocale_VietNam                                QLocale_Country = 232
	QLocale_BritishVirginIslands                   QLocale_Country = 233
	QLocale_USVirginIslands                        QLocale_Country = 234
	QLocale_WallisAndFutunaIslands                 QLocale_Country = 235
	QLocale_WesternSahara                          QLocale_Country = 236
	QLocale_Yemen                                  QLocale_Country = 237
	QLocale_Yugoslavia                             QLocale_Country = 238
	QLocale_Zambia                                 QLocale_Country = 239
	QLocale_Zimbabwe                               QLocale_Country = 240
	QLocale_SerbiaAndMontenegro                    QLocale_Country = 241
	QLocale_Montenegro                             QLocale_Country = 242
	QLocale_Serbia                                 QLocale_Country = 243
	QLocale_SaintBarthelemy                        QLocale_Country = 244
	QLocale_SaintMartin                            QLocale_Country = 245
	QLocale_LatinAmericaAndTheCaribbean            QLocale_Country = 246
	QLocale_LastCountry                            QLocale_Country = QLocale_LatinAmericaAndTheCaribbean
)

//enum QLocale_Language - QLocale::Language
type QLocale_Language uint32

const (
	QLocale_C                       QLocale_Language = 1
	QLocale_Abkhazian               QLocale_Language = 2
	QLocale_Afan                    QLocale_Language = 3
	QLocale_Afar                    QLocale_Language = 4
	QLocale_Afrikaans               QLocale_Language = 5
	QLocale_Albanian                QLocale_Language = 6
	QLocale_Amharic                 QLocale_Language = 7
	QLocale_Arabic                  QLocale_Language = 8
	QLocale_Armenian                QLocale_Language = 9
	QLocale_Assamese                QLocale_Language = 10
	QLocale_Aymara                  QLocale_Language = 11
	QLocale_Azerbaijani             QLocale_Language = 12
	QLocale_Bashkir                 QLocale_Language = 13
	QLocale_Basque                  QLocale_Language = 14
	QLocale_Bengali                 QLocale_Language = 15
	QLocale_Bhutani                 QLocale_Language = 16
	QLocale_Bihari                  QLocale_Language = 17
	QLocale_Bislama                 QLocale_Language = 18
	QLocale_Breton                  QLocale_Language = 19
	QLocale_Bulgarian               QLocale_Language = 20
	QLocale_Burmese                 QLocale_Language = 21
	QLocale_Byelorussian            QLocale_Language = 22
	QLocale_Cambodian               QLocale_Language = 23
	QLocale_Catalan                 QLocale_Language = 24
	QLocale_Chinese                 QLocale_Language = 25
	QLocale_Corsican                QLocale_Language = 26
	QLocale_Croatian                QLocale_Language = 27
	QLocale_Czech                   QLocale_Language = 28
	QLocale_Danish                  QLocale_Language = 29
	QLocale_Dutch                   QLocale_Language = 30
	QLocale_English                 QLocale_Language = 31
	QLocale_Esperanto               QLocale_Language = 32
	QLocale_Estonian                QLocale_Language = 33
	QLocale_Faroese                 QLocale_Language = 34
	QLocale_FijiLanguage            QLocale_Language = 35
	QLocale_Finnish                 QLocale_Language = 36
	QLocale_French                  QLocale_Language = 37
	QLocale_Frisian                 QLocale_Language = 38
	QLocale_Gaelic                  QLocale_Language = 39
	QLocale_Galician                QLocale_Language = 40
	QLocale_Georgian                QLocale_Language = 41
	QLocale_German                  QLocale_Language = 42
	QLocale_Greek                   QLocale_Language = 43
	QLocale_Greenlandic             QLocale_Language = 44
	QLocale_Guarani                 QLocale_Language = 45
	QLocale_Gujarati                QLocale_Language = 46
	QLocale_Hausa                   QLocale_Language = 47
	QLocale_Hebrew                  QLocale_Language = 48
	QLocale_Hindi                   QLocale_Language = 49
	QLocale_Hungarian               QLocale_Language = 50
	QLocale_Icelandic               QLocale_Language = 51
	QLocale_Indonesian              QLocale_Language = 52
	QLocale_Interlingua             QLocale_Language = 53
	QLocale_Interlingue             QLocale_Language = 54
	QLocale_Inuktitut               QLocale_Language = 55
	QLocale_Inupiak                 QLocale_Language = 56
	QLocale_Irish                   QLocale_Language = 57
	QLocale_Italian                 QLocale_Language = 58
	QLocale_Japanese                QLocale_Language = 59
	QLocale_Javanese                QLocale_Language = 60
	QLocale_Kannada                 QLocale_Language = 61
	QLocale_Kashmiri                QLocale_Language = 62
	QLocale_Kazakh                  QLocale_Language = 63
	QLocale_Kinyarwanda             QLocale_Language = 64
	QLocale_Kirghiz                 QLocale_Language = 65
	QLocale_Korean                  QLocale_Language = 66
	QLocale_Kurdish                 QLocale_Language = 67
	QLocale_Kurundi                 QLocale_Language = 68
	QLocale_Laothian                QLocale_Language = 69
	QLocale_Latin                   QLocale_Language = 70
	QLocale_Latvian                 QLocale_Language = 71
	QLocale_Lingala                 QLocale_Language = 72
	QLocale_Lithuanian              QLocale_Language = 73
	QLocale_Macedonian              QLocale_Language = 74
	QLocale_Malagasy                QLocale_Language = 75
	QLocale_Malay                   QLocale_Language = 76
	QLocale_Malayalam               QLocale_Language = 77
	QLocale_Maltese                 QLocale_Language = 78
	QLocale_Maori                   QLocale_Language = 79
	QLocale_Marathi                 QLocale_Language = 80
	QLocale_Moldavian               QLocale_Language = 81
	QLocale_Mongolian               QLocale_Language = 82
	QLocale_NauruLanguage           QLocale_Language = 83
	QLocale_Nepali                  QLocale_Language = 84
	QLocale_Norwegian               QLocale_Language = 85
	QLocale_NorwegianBokmal         QLocale_Language = QLocale_Norwegian
	QLocale_Occitan                 QLocale_Language = 86
	QLocale_Oriya                   QLocale_Language = 87
	QLocale_Pashto                  QLocale_Language = 88
	QLocale_Persian                 QLocale_Language = 89
	QLocale_Polish                  QLocale_Language = 90
	QLocale_Portuguese              QLocale_Language = 91
	QLocale_Punjabi                 QLocale_Language = 92
	QLocale_Quechua                 QLocale_Language = 93
	QLocale_RhaetoRomance           QLocale_Language = 94
	QLocale_Romanian                QLocale_Language = 95
	QLocale_Russian                 QLocale_Language = 96
	QLocale_Samoan                  QLocale_Language = 97
	QLocale_Sangho                  QLocale_Language = 98
	QLocale_Sanskrit                QLocale_Language = 99
	QLocale_Serbian                 QLocale_Language = 100
	QLocale_SerboCroatian           QLocale_Language = 101
	QLocale_Sesotho                 QLocale_Language = 102
	QLocale_Setswana                QLocale_Language = 103
	QLocale_Shona                   QLocale_Language = 104
	QLocale_Sindhi                  QLocale_Language = 105
	QLocale_Singhalese              QLocale_Language = 106
	QLocale_Siswati                 QLocale_Language = 107
	QLocale_Slovak                  QLocale_Language = 108
	QLocale_Slovenian               QLocale_Language = 109
	QLocale_Somali                  QLocale_Language = 110
	QLocale_Spanish                 QLocale_Language = 111
	QLocale_Sundanese               QLocale_Language = 112
	QLocale_Swahili                 QLocale_Language = 113
	QLocale_Swedish                 QLocale_Language = 114
	QLocale_Tagalog                 QLocale_Language = 115
	QLocale_Tajik                   QLocale_Language = 116
	QLocale_Tamil                   QLocale_Language = 117
	QLocale_Tatar                   QLocale_Language = 118
	QLocale_Telugu                  QLocale_Language = 119
	QLocale_Thai                    QLocale_Language = 120
	QLocale_Tibetan                 QLocale_Language = 121
	QLocale_Tigrinya                QLocale_Language = 122
	QLocale_TongaLanguage           QLocale_Language = 123
	QLocale_Tsonga                  QLocale_Language = 124
	QLocale_Turkish                 QLocale_Language = 125
	QLocale_Turkmen                 QLocale_Language = 126
	QLocale_Twi                     QLocale_Language = 127
	QLocale_Uigur                   QLocale_Language = 128
	QLocale_Ukrainian               QLocale_Language = 129
	QLocale_Urdu                    QLocale_Language = 130
	QLocale_Uzbek                   QLocale_Language = 131
	QLocale_Vietnamese              QLocale_Language = 132
	QLocale_Volapuk                 QLocale_Language = 133
	QLocale_Welsh                   QLocale_Language = 134
	QLocale_Wolof                   QLocale_Language = 135
	QLocale_Xhosa                   QLocale_Language = 136
	QLocale_Yiddish                 QLocale_Language = 137
	QLocale_Yoruba                  QLocale_Language = 138
	QLocale_Zhuang                  QLocale_Language = 139
	QLocale_Zulu                    QLocale_Language = 140
	QLocale_NorwegianNynorsk        QLocale_Language = 141
	QLocale_Nynorsk                 QLocale_Language = QLocale_NorwegianNynorsk
	QLocale_Bosnian                 QLocale_Language = 142
	QLocale_Divehi                  QLocale_Language = 143
	QLocale_Manx                    QLocale_Language = 144
	QLocale_Cornish                 QLocale_Language = 145
	QLocale_Akan                    QLocale_Language = 146
	QLocale_Konkani                 QLocale_Language = 147
	QLocale_Ga                      QLocale_Language = 148
	QLocale_Igbo                    QLocale_Language = 149
	QLocale_Kamba                   QLocale_Language = 150
	QLocale_Syriac                  QLocale_Language = 151
	QLocale_Blin                    QLocale_Language = 152
	QLocale_Geez                    QLocale_Language = 153
	QLocale_Koro                    QLocale_Language = 154
	QLocale_Sidamo                  QLocale_Language = 155
	QLocale_Atsam                   QLocale_Language = 156
	QLocale_Tigre                   QLocale_Language = 157
	QLocale_Jju                     QLocale_Language = 158
	QLocale_Friulian                QLocale_Language = 159
	QLocale_Venda                   QLocale_Language = 160
	QLocale_Ewe                     QLocale_Language = 161
	QLocale_Walamo                  QLocale_Language = 162
	QLocale_Hawaiian                QLocale_Language = 163
	QLocale_Tyap                    QLocale_Language = 164
	QLocale_Chewa                   QLocale_Language = 165
	QLocale_Filipino                QLocale_Language = 166
	QLocale_SwissGerman             QLocale_Language = 167
	QLocale_SichuanYi               QLocale_Language = 168
	QLocale_Kpelle                  QLocale_Language = 169
	QLocale_LowGerman               QLocale_Language = 170
	QLocale_SouthNdebele            QLocale_Language = 171
	QLocale_NorthernSotho           QLocale_Language = 172
	QLocale_NorthernSami            QLocale_Language = 173
	QLocale_Taroko                  QLocale_Language = 174
	QLocale_Gusii                   QLocale_Language = 175
	QLocale_Taita                   QLocale_Language = 176
	QLocale_Fulah                   QLocale_Language = 177
	QLocale_Kikuyu                  QLocale_Language = 178
	QLocale_Samburu                 QLocale_Language = 179
	QLocale_Sena                    QLocale_Language = 180
	QLocale_NorthNdebele            QLocale_Language = 181
	QLocale_Rombo                   QLocale_Language = 182
	QLocale_Tachelhit               QLocale_Language = 183
	QLocale_Kabyle                  QLocale_Language = 184
	QLocale_Nyankole                QLocale_Language = 185
	QLocale_Bena                    QLocale_Language = 186
	QLocale_Vunjo                   QLocale_Language = 187
	QLocale_Bambara                 QLocale_Language = 188
	QLocale_Embu                    QLocale_Language = 189
	QLocale_Cherokee                QLocale_Language = 190
	QLocale_Morisyen                QLocale_Language = 191
	QLocale_Makonde                 QLocale_Language = 192
	QLocale_Langi                   QLocale_Language = 193
	QLocale_Ganda                   QLocale_Language = 194
	QLocale_Bemba                   QLocale_Language = 195
	QLocale_Kabuverdianu            QLocale_Language = 196
	QLocale_Meru                    QLocale_Language = 197
	QLocale_Kalenjin                QLocale_Language = 198
	QLocale_Nama                    QLocale_Language = 199
	QLocale_Machame                 QLocale_Language = 200
	QLocale_Colognian               QLocale_Language = 201
	QLocale_Masai                   QLocale_Language = 202
	QLocale_Soga                    QLocale_Language = 203
	QLocale_Luyia                   QLocale_Language = 204
	QLocale_Asu                     QLocale_Language = 205
	QLocale_Teso                    QLocale_Language = 206
	QLocale_Saho                    QLocale_Language = 207
	QLocale_KoyraChiini             QLocale_Language = 208
	QLocale_Rwa                     QLocale_Language = 209
	QLocale_Luo                     QLocale_Language = 210
	QLocale_Chiga                   QLocale_Language = 211
	QLocale_CentralMoroccoTamazight QLocale_Language = 212
	QLocale_KoyraboroSenni          QLocale_Language = 213
	QLocale_Shambala                QLocale_Language = 214
	QLocale_LastLanguage            QLocale_Language = QLocale_Shambala
)

//struct QLocale : QLocale
type QLocale struct {
	BaseDrv
}

//QLocale::QLocale()
func NewLocale() *QLocale {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 73000, 73102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLocale{}
	_p.SetDriver(__rv, 73000, true)
	return _p
}

//QLocale::QLocale(QLocale const&)
func NewLocaleCopy(other *QLocale) *QLocale {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 73000, 73103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLocale{}
	_p.SetDriver(__rv, 73000, true)
	return _p
}

//QLocale::QLocale(QString const&)
func NewLocaleWithName(name string) *QLocale {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 73000, 73104, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLocale{}
	_p.SetDriver(__rv, 73000, true)
	return _p
}

//QLocale::QLocale(QLocale::Language,QLocale::Country)
func NewLocaleWithLanguageCountry(language QLocale_Language, country QLocale_Country) *QLocale {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 73000, 73105, unsafe.Pointer(&language), unsafe.Pointer(&country), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLocale{}
	_p.SetDriver(__rv, 73000, true)
	return _p
}

//QLocale::amText()
func (q *QLocale) AmText() string {
	var __rv C.string_head
	q.Drv(73000, 73106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::c()
func QLocaleC() *QLocale {
	var __rv uintptr
	DirectQtDrv(nil, 73000, 73107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QLocale::c()
func (q *QLocale) C() *QLocale {
	var __rv uintptr
	q.Drv(73000, 73107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QLocale::countriesForLanguage(QLocale::Language)
func QLocaleCountriesForLanguage(lang QLocale_Language) []QLocale_Country {
	var __rv []QLocale_Country
	DirectQtDrv(nil, 73000, 73108, unsafe.Pointer(&lang), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::countriesForLanguage(QLocale::Language)
func (q *QLocale) CountriesForLanguage(lang QLocale_Language) []QLocale_Country {
	var __rv []QLocale_Country
	q.Drv(73000, 73108, unsafe.Pointer(&lang), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::country()
func (q *QLocale) Country() QLocale_Country {
	var __rv QLocale_Country
	q.Drv(73000, 73109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::countryToString(QLocale::Country)
func QLocaleCountryToString(country QLocale_Country) string {
	var __rv C.string_head
	DirectQtDrv(nil, 73000, 73110, unsafe.Pointer(&country), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::countryToString(QLocale::Country)
func (q *QLocale) CountryToString(country QLocale_Country) string {
	var __rv C.string_head
	q.Drv(73000, 73110, unsafe.Pointer(&country), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dateFormat()
func (q *QLocale) DateFormat() string {
	var __rv C.string_head
	q.Drv(73000, 73111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dateFormat(QLocale::FormatType)
func (q *QLocale) DateFormatWithFormatType(format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73112, unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dateTimeFormat()
func (q *QLocale) DateTimeFormat() string {
	var __rv C.string_head
	q.Drv(73000, 73113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dateTimeFormat(QLocale::FormatType)
func (q *QLocale) DateTimeFormatWithFormatType(format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73114, unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dayName(int)
func (q *QLocale) DayName(value int32) string {
	var __rv C.string_head
	q.Drv(73000, 73115, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::dayName(int,QLocale::FormatType)
func (q *QLocale) DayNameWithInt32FormatType(value2 int32, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73116, unsafe.Pointer(&value2), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::decimalPoint()
func (q *QLocale) DecimalPoint() rune {
	var __rv rune
	q.Drv(73000, 73117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::exponential()
func (q *QLocale) Exponential() rune {
	var __rv rune
	q.Drv(73000, 73118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::groupSeparator()
func (q *QLocale) GroupSeparator() rune {
	var __rv rune
	q.Drv(73000, 73119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::language()
func (q *QLocale) Language() QLocale_Language {
	var __rv QLocale_Language
	q.Drv(73000, 73120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::languageToString(QLocale::Language)
func QLocaleLanguageToString(language QLocale_Language) string {
	var __rv C.string_head
	DirectQtDrv(nil, 73000, 73121, unsafe.Pointer(&language), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::languageToString(QLocale::Language)
func (q *QLocale) LanguageToString(language QLocale_Language) string {
	var __rv C.string_head
	q.Drv(73000, 73121, unsafe.Pointer(&language), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::measurementSystem()
func (q *QLocale) MeasurementSystem() QLocale_MeasurementSystem {
	var __rv QLocale_MeasurementSystem
	q.Drv(73000, 73122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::monthName(int)
func (q *QLocale) MonthName(value int32) string {
	var __rv C.string_head
	q.Drv(73000, 73123, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::monthName(int,QLocale::FormatType)
func (q *QLocale) MonthNameWithInt32FormatType(value2 int32, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73124, unsafe.Pointer(&value2), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::name()
func (q *QLocale) Name() string {
	var __rv C.string_head
	q.Drv(73000, 73125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::negativeSign()
func (q *QLocale) NegativeSign() rune {
	var __rv rune
	q.Drv(73000, 73126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::numberOptions()
func (q *QLocale) NumberOptions() QLocale_NumberOption {
	var __rv QLocale_NumberOption
	q.Drv(73000, 73127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::percent()
func (q *QLocale) Percent() rune {
	var __rv rune
	q.Drv(73000, 73128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::pmText()
func (q *QLocale) PmText() string {
	var __rv C.string_head
	q.Drv(73000, 73129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::positiveSign()
func (q *QLocale) PositiveSign() rune {
	var __rv rune
	q.Drv(73000, 73130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::setDefault(QLocale const&)
func QLocaleSetDefault(locale *QLocale) {
	DirectQtDrv(nil, 73000, 73131, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLocale::setDefault(QLocale const&)
func (q *QLocale) SetDefault(locale *QLocale) {
	q.Drv(73000, 73131, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLocale::setNumberOptions(QFlags<QLocale::NumberOption>)
func (q *QLocale) SetNumberOptions(options QLocale_NumberOption) {
	q.Drv(73000, 73132, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLocale::standaloneDayName(int)
func (q *QLocale) StandaloneDayName(value int32) string {
	var __rv C.string_head
	q.Drv(73000, 73133, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::standaloneDayName(int,QLocale::FormatType)
func (q *QLocale) StandaloneDayNameWithInt32FormatType(value2 int32, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73134, unsafe.Pointer(&value2), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::standaloneMonthName(int)
func (q *QLocale) StandaloneMonthName(value int32) string {
	var __rv C.string_head
	q.Drv(73000, 73135, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::standaloneMonthName(int,QLocale::FormatType)
func (q *QLocale) StandaloneMonthNameWithInt32FormatType(value2 int32, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73136, unsafe.Pointer(&value2), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::system()
func QLocaleSystem() *QLocale {
	var __rv uintptr
	DirectQtDrv(nil, 73000, 73137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QLocale::system()
func (q *QLocale) System() *QLocale {
	var __rv uintptr
	q.Drv(73000, 73137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QLocale::textDirection()
func (q *QLocale) TextDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(73000, 73138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::timeFormat()
func (q *QLocale) TimeFormat() string {
	var __rv C.string_head
	q.Drv(73000, 73139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::timeFormat(QLocale::FormatType)
func (q *QLocale) TimeFormatWithFormatType(format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73140, unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toDate(QString const&)
func (q *QLocale) ToDate(string string) *QDate {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73141, unsafe.Pointer(_string), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QLocale::toDate(QString const&,QLocale::FormatType)
func (q *QLocale) ToDateWithStringFormatType(string string, value2 QLocale_FormatType) *QDate {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73142, unsafe.Pointer(_string), unsafe.Pointer(&value2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QLocale::toDate(QString const&,QString const&)
func (q *QLocale) ToDateWithStringFormat(string string, format string) *QDate {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(73000, 73143, unsafe.Pointer(_string), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QLocale::toDateTime(QString const&)
func (q *QLocale) ToDateTime(string string) *QDateTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73144, unsafe.Pointer(_string), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QLocale::toDateTime(QString const&,QLocale::FormatType)
func (q *QLocale) ToDateTimeWithStringFormatType(string string, format QLocale_FormatType) *QDateTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73145, unsafe.Pointer(_string), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QLocale::toDateTime(QString const&,QString const&)
func (q *QLocale) ToDateTimeWithStringFormat(string string, format string) *QDateTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(73000, 73146, unsafe.Pointer(_string), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QLocale::toDouble(QString const&)
func (q *QLocale) ToDouble(s string) float64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv float64
	q.Drv(73000, 73147, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toDouble(QString const&,bool*)
func (q *QLocale) ToDoubleWithTextOk(s string, ok *bool) float64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv float64
	q.Drv(73000, 73148, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toFloat(QString const&)
func (q *QLocale) ToFloat(s string) float32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv float32
	q.Drv(73000, 73149, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toFloat(QString const&,bool*)
func (q *QLocale) ToFloatWithTextOk(s string, ok *bool) float32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv float32
	q.Drv(73000, 73150, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toInt(QString const&)
func (q *QLocale) ToInt(s string) int32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int32
	q.Drv(73000, 73151, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toInt(QString const&,bool*,int)
func (q *QLocale) ToIntWithTextOkBase(s string, ok *bool) int32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int32
	q.Drv(73000, 73152, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toLongLong(QString const&)
func (q *QLocale) ToLongLong(s string) int64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int64
	q.Drv(73000, 73153, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toLongLong(QString const&,bool*,int)
func (q *QLocale) ToLongLongWithTextOkBase(s string, ok *bool) int64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int64
	q.Drv(73000, 73154, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toShort(QString const&)
func (q *QLocale) ToShort(s string) int16 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int16
	q.Drv(73000, 73155, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toShort(QString const&,bool*,int)
func (q *QLocale) ToShortWithTextOkBase(s string, ok *bool) int16 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int16
	q.Drv(73000, 73156, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toString(QDate const&)
func (q *QLocale) ToString(date *QDate) string {
	var __rv C.string_head
	q.Drv(73000, 73157, Native(date), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QDateTime const&)
func (q *QLocale) ToStringWithDatetime(dateTime *QDateTime) string {
	var __rv C.string_head
	q.Drv(73000, 73158, Native(dateTime), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QTime const&)
func (q *QLocale) ToStringWithTime(time *QTime) string {
	var __rv C.string_head
	q.Drv(73000, 73159, Native(time), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(double)
func (q *QLocale) ToStringFWithFloat64(i float64) string {
	var __rv C.string_head
	q.Drv(73000, 73160, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(float)
func (q *QLocale) ToStringFWithFloat32(i float32) string {
	var __rv C.string_head
	q.Drv(73000, 73161, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(int)
func (q *QLocale) ToStringWithInt32(i int32) string {
	var __rv C.string_head
	q.Drv(73000, 73162, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(qint64)
func (q *QLocale) ToStringWithInt64(i int64) string {
	var __rv C.string_head
	q.Drv(73000, 73163, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(short)
func (q *QLocale) ToStringWithInt16(i int16) string {
	var __rv C.string_head
	q.Drv(73000, 73164, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(unsigned int)
func (q *QLocale) ToStringWithUint32(i uint32) string {
	var __rv C.string_head
	q.Drv(73000, 73165, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(unsigned short)
func (q *QLocale) ToStringWithUint16(i uint16) string {
	var __rv C.string_head
	q.Drv(73000, 73166, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QDate const&,QLocale::FormatType)
func (q *QLocale) ToStringWithDateFormatType(date *QDate, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73167, Native(date), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QDate const&,QString const&)
func (q *QLocale) ToStringWithDateFormatstr(date *QDate, formatStr string) string {
	_formatStr := NewCStringHead(formatStr)
	defer FreeCStringHead(_formatStr)
	var __rv C.string_head
	q.Drv(73000, 73168, Native(date), unsafe.Pointer(_formatStr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QDateTime const&,QLocale::FormatType)
func (q *QLocale) ToStringWithDatetimeFormatType(dateTime *QDateTime, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73169, Native(dateTime), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QDateTime const&,QString const&)
func (q *QLocale) ToStringWithDatetimeFormat(dateTime *QDateTime, format string) string {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv C.string_head
	q.Drv(73000, 73170, Native(dateTime), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QTime const&,QLocale::FormatType)
func (q *QLocale) ToStringWithTimeFormatType(time *QTime, format QLocale_FormatType) string {
	var __rv C.string_head
	q.Drv(73000, 73171, Native(time), unsafe.Pointer(&format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(QTime const&,QString const&)
func (q *QLocale) ToStringWithTimeFormatstr(time *QTime, formatStr string) string {
	_formatStr := NewCStringHead(formatStr)
	defer FreeCStringHead(_formatStr)
	var __rv C.string_head
	q.Drv(73000, 73172, Native(time), unsafe.Pointer(_formatStr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(double,char,int)
func (q *QLocale) ToStringFWithFloat64FmtPrec(i float64, f byte, prec int32) string {
	var __rv C.string_head
	q.Drv(73000, 73173, unsafe.Pointer(&i), unsafe.Pointer(&f), unsafe.Pointer(&prec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toString(float,char,int)
func (q *QLocale) ToStringFWithFloat32FmtPrec(i float32, f byte, prec int32) string {
	var __rv C.string_head
	q.Drv(73000, 73174, unsafe.Pointer(&i), unsafe.Pointer(&f), unsafe.Pointer(&prec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLocale::toTime(QString const&)
func (q *QLocale) ToTime(string string) *QTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73175, unsafe.Pointer(_string), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QLocale::toTime(QString const&,QLocale::FormatType)
func (q *QLocale) ToTimeWithStringFormatType(string string, value2 QLocale_FormatType) *QTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	q.Drv(73000, 73176, unsafe.Pointer(_string), unsafe.Pointer(&value2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QLocale::toTime(QString const&,QString const&)
func (q *QLocale) ToTimeWithStringFormat(string string, format string) *QTime {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(73000, 73177, unsafe.Pointer(_string), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QLocale::toUInt(QString const&)
func (q *QLocale) ToUInt(s string) uint32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uint32
	q.Drv(73000, 73178, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toUInt(QString const&,bool*,int)
func (q *QLocale) ToUIntWithTextOkBase(s string, ok *bool) uint32 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uint32
	q.Drv(73000, 73179, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toULongLong(QString const&)
func (q *QLocale) ToULongLong(s string) int64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int64
	q.Drv(73000, 73180, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toULongLong(QString const&,bool*,int)
func (q *QLocale) ToULongLongWithTextOkBase(s string, ok *bool) int64 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv int64
	q.Drv(73000, 73181, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toUShort(QString const&)
func (q *QLocale) ToUShort(s string) uint16 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uint16
	q.Drv(73000, 73182, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::toUShort(QString const&,bool*,int)
func (q *QLocale) ToUShortWithTextOkBase(s string, ok *bool) uint16 {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uint16
	q.Drv(73000, 73183, unsafe.Pointer(_s), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLocale::zeroDigit()
func (q *QLocale) ZeroDigit() rune {
	var __rv rune
	q.Drv(73000, 73184, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QMargins : QMargins
type QMargins struct {
	BaseDrv
}

//QMargins::QMargins()
func NewMargins() *QMargins {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 74000, 74102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMargins{}
	_p.SetDriver(__rv, 74000, true)
	return _p
}

//QMargins::QMargins(int,int,int,int)
func NewMarginsWithLeftTopRightBottom(left int32, top int32, right int32, bottom int32) *QMargins {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 74000, 74103, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMargins{}
	_p.SetDriver(__rv, 74000, true)
	return _p
}

//QMargins::bottom()
func (q *QMargins) Bottom() int32 {
	var __rv int32
	q.Drv(74000, 74104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMargins::isNull()
func (q *QMargins) IsNull() bool {
	var __rv bool
	q.Drv(74000, 74105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMargins::left()
func (q *QMargins) Left() int32 {
	var __rv int32
	q.Drv(74000, 74106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMargins::right()
func (q *QMargins) Right() int32 {
	var __rv int32
	q.Drv(74000, 74107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMargins::setBottom(int)
func (q *QMargins) SetBottom(bottom int32) {
	q.Drv(74000, 74108, unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMargins::setLeft(int)
func (q *QMargins) SetLeft(left int32) {
	q.Drv(74000, 74109, unsafe.Pointer(&left), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMargins::setRight(int)
func (q *QMargins) SetRight(right int32) {
	q.Drv(74000, 74110, unsafe.Pointer(&right), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMargins::setTop(int)
func (q *QMargins) SetTop(top int32) {
	q.Drv(74000, 74111, unsafe.Pointer(&top), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMargins::top()
func (q *QMargins) Top() int32 {
	var __rv int32
	q.Drv(74000, 74112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QMatrix : QMatrix
type QMatrix struct {
	BaseDrv
}

//QMatrix::QMatrix()
func NewMatrix() *QMatrix {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 75000, 75102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMatrix{}
	_p.SetDriver(__rv, 75000, true)
	return _p
}

//QMatrix::QMatrix(QMatrix const&)
func NewMatrixCopy(matrix *QMatrix) *QMatrix {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 75000, 75103, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMatrix{}
	_p.SetDriver(__rv, 75000, true)
	return _p
}

//QMatrix::QMatrix(Qt::Initialization)
func NewMatrixWithInitialization(value Qt_Initialization) *QMatrix {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 75000, 75104, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMatrix{}
	_p.SetDriver(__rv, 75000, true)
	return _p
}

//QMatrix::QMatrix(double,double,double,double,double,double)
func NewMatrixWithM11M12M21M22DxDy(m11 float64, m12 float64, m21 float64, m22 float64, dx float64, dy float64) *QMatrix {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 75000, 75105, unsafe.Pointer(&m11), unsafe.Pointer(&m12), unsafe.Pointer(&m21), unsafe.Pointer(&m22), unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMatrix{}
	_p.SetDriver(__rv, 75000, true)
	return _p
}

//QMatrix::determinant()
func (q *QMatrix) Determinant() float64 {
	var __rv float64
	q.Drv(75000, 75106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::dx()
func (q *QMatrix) Dx() float64 {
	var __rv float64
	q.Drv(75000, 75107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::dy()
func (q *QMatrix) Dy() float64 {
	var __rv float64
	q.Drv(75000, 75108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::inverted(bool*)
func (q *QMatrix) Inverted(invertible *bool) *QMatrix {
	var __rv uintptr
	q.Drv(75000, 75109, unsafe.Pointer(&invertible), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QMatrix::isIdentity()
func (q *QMatrix) IsIdentity() bool {
	var __rv bool
	q.Drv(75000, 75110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::isInvertible()
func (q *QMatrix) IsInvertible() bool {
	var __rv bool
	q.Drv(75000, 75111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::m11()
func (q *QMatrix) M11() float64 {
	var __rv float64
	q.Drv(75000, 75112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::m12()
func (q *QMatrix) M12() float64 {
	var __rv float64
	q.Drv(75000, 75113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::m21()
func (q *QMatrix) M21() float64 {
	var __rv float64
	q.Drv(75000, 75114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::m22()
func (q *QMatrix) M22() float64 {
	var __rv float64
	q.Drv(75000, 75115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMatrix::mapRect(QRect const&)
func (q *QMatrix) MapRect(value *QRect) *QRect {
	var __rv uintptr
	q.Drv(75000, 75116, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QMatrix::mapRect(QRectF const&)
func (q *QMatrix) MapRectFWithRectf(value *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(75000, 75117, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QMatrix::mapToPolygon(QRect const&)
func (q *QMatrix) MapToPolygon(r *QRect) *QPolygon {
	var __rv uintptr
	q.Drv(75000, 75118, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QMatrix::reset()
func (q *QMatrix) Reset() {
	q.Drv(75000, 75119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMatrix::rotate(double)
func (q *QMatrix) Rotate(a float64) *QMatrix {
	var __rv uintptr
	q.Drv(75000, 75120, unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QMatrix::scale(double,double)
func (q *QMatrix) Scale(sx float64, sy float64) *QMatrix {
	var __rv uintptr
	q.Drv(75000, 75121, unsafe.Pointer(&sx), unsafe.Pointer(&sy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QMatrix::setMatrix(double,double,double,double,double,double)
func (q *QMatrix) SetMatrix(m11 float64, m12 float64, m21 float64, m22 float64, dx float64, dy float64) {
	q.Drv(75000, 75122, unsafe.Pointer(&m11), unsafe.Pointer(&m12), unsafe.Pointer(&m21), unsafe.Pointer(&m22), unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil)
}

//QMatrix::shear(double,double)
func (q *QMatrix) Shear(sh float64, sv float64) *QMatrix {
	var __rv uintptr
	q.Drv(75000, 75123, unsafe.Pointer(&sh), unsafe.Pointer(&sv), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QMatrix::translate(double,double)
func (q *QMatrix) Translate(dx float64, dy float64) *QMatrix {
	var __rv uintptr
	q.Drv(75000, 75124, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//struct QMetaEnum : QMetaEnum
type QMetaEnum struct {
	BaseDrv
}

//QMetaEnum::QMetaEnum()
func NewMetaEnum() *QMetaEnum {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 76000, 76102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMetaEnum{}
	_p.SetDriver(__rv, 76000, true)
	return _p
}

//QMetaEnum::enclosingMetaObject()
func (q *QMetaEnum) EnclosingMetaObject() *QMetaObject {
	var __rv uintptr
	q.Drv(76000, 76103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaObject{}
	_rp.SetDriver(__rv, 78000, true)
	return _rp
}

//QMetaEnum::isFlag()
func (q *QMetaEnum) IsFlag() bool {
	var __rv bool
	q.Drv(76000, 76104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::isValid()
func (q *QMetaEnum) IsValid() bool {
	var __rv bool
	q.Drv(76000, 76105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::key(int)
func (q *QMetaEnum) Key(index int32) string {
	var __rv C.string_head
	q.Drv(76000, 76106, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaEnum::keyCount()
func (q *QMetaEnum) KeyCount() int32 {
	var __rv int32
	q.Drv(76000, 76107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::keyToValue(char const*)
func (q *QMetaEnum) KeyToValue(key string) int32 {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv int32
	q.Drv(76000, 76108, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::keysToValue(char const*)
func (q *QMetaEnum) KeysToValue(keys string) int32 {
	_keys := NewCStringHead(keys)
	defer FreeCStringHead(_keys)
	var __rv int32
	q.Drv(76000, 76109, unsafe.Pointer(_keys), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::name()
func (q *QMetaEnum) Name() string {
	var __rv C.string_head
	q.Drv(76000, 76110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaEnum::scope()
func (q *QMetaEnum) Scope() string {
	var __rv C.string_head
	q.Drv(76000, 76111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaEnum::value(int)
func (q *QMetaEnum) Value(index int32) int32 {
	var __rv int32
	q.Drv(76000, 76112, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaEnum::valueToKey(int)
func (q *QMetaEnum) ValueToKey(value int32) string {
	var __rv C.string_head
	q.Drv(76000, 76113, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaEnum::valueToKeys(int)
func (q *QMetaEnum) ValueToKeys(value int32) []byte {
	var __rv []byte
	q.Drv(76000, 76114, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QMetaMethod_Access - QMetaMethod::Access
type QMetaMethod_Access uint32

const (
	QMetaMethod_Private   QMetaMethod_Access = 0
	QMetaMethod_Protected QMetaMethod_Access = 1
	QMetaMethod_Public    QMetaMethod_Access = 2
)

//enum QMetaMethod_Attributes - QMetaMethod::Attributes
type QMetaMethod_Attributes uint32

const (
	QMetaMethod_Compatibility QMetaMethod_Attributes = 0x1
	QMetaMethod_Cloned        QMetaMethod_Attributes = 0x2
	QMetaMethod_Scriptable    QMetaMethod_Attributes = 0x4
)

//enum QMetaMethod_MethodType - QMetaMethod::MethodType
type QMetaMethod_MethodType uint32

const (
	QMetaMethod_Method      QMetaMethod_MethodType = 0
	QMetaMethod_Signal      QMetaMethod_MethodType = 1
	QMetaMethod_Slot        QMetaMethod_MethodType = 2
	QMetaMethod_Constructor QMetaMethod_MethodType = 3
)

//struct QMetaMethod : QMetaMethod
type QMetaMethod struct {
	BaseDrv
}

//QMetaMethod::QMetaMethod()
func NewMetaMethod() *QMetaMethod {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 77000, 77102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMetaMethod{}
	_p.SetDriver(__rv, 77000, true)
	return _p
}

//QMetaMethod::access()
func (q *QMetaMethod) Access() QMetaMethod_Access {
	var __rv QMetaMethod_Access
	q.Drv(77000, 77103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::attributes()
func (q *QMetaMethod) Attributes() int32 {
	var __rv int32
	q.Drv(77000, 77104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::enclosingMetaObject()
func (q *QMetaMethod) EnclosingMetaObject() *QMetaObject {
	var __rv uintptr
	q.Drv(77000, 77105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaObject{}
	_rp.SetDriver(__rv, 78000, true)
	return _rp
}

//QMetaMethod::methodIndex()
func (q *QMetaMethod) MethodIndex() int32 {
	var __rv int32
	q.Drv(77000, 77106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::methodType()
func (q *QMetaMethod) MethodType() QMetaMethod_MethodType {
	var __rv QMetaMethod_MethodType
	q.Drv(77000, 77107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::parameterNames()
func (q *QMetaMethod) ParameterNames() [][]byte {
	var __rv [][]byte
	q.Drv(77000, 77108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::parameterTypes()
func (q *QMetaMethod) ParameterTypes() [][]byte {
	var __rv [][]byte
	q.Drv(77000, 77109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::signature()
func (q *QMetaMethod) MethodSignature() []byte {
	var __rv []byte
	q.Drv(77000, 77110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaMethod::tag()
func (q *QMetaMethod) Tag() string {
	var __rv C.string_head
	q.Drv(77000, 77111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaMethod::typeName()
func (q *QMetaMethod) TypeName() string {
	var __rv C.string_head
	q.Drv(77000, 77112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QMetaObject_Call - QMetaObject::Call
type QMetaObject_Call uint32

const (
	QMetaObject_InvokeMetaMethod        QMetaObject_Call = 0
	QMetaObject_ReadProperty            QMetaObject_Call = 1
	QMetaObject_WriteProperty           QMetaObject_Call = 2
	QMetaObject_ResetProperty           QMetaObject_Call = 3
	QMetaObject_QueryPropertyDesignable QMetaObject_Call = 4
	QMetaObject_QueryPropertyScriptable QMetaObject_Call = 5
	QMetaObject_QueryPropertyStored     QMetaObject_Call = 6
	QMetaObject_QueryPropertyEditable   QMetaObject_Call = 7
	QMetaObject_QueryPropertyUser       QMetaObject_Call = 8
	QMetaObject_CreateInstance          QMetaObject_Call = 9
)

//struct QMetaObject : QMetaObject
type QMetaObject struct {
	BaseDrv
}

//QMetaObject::QMetaObject()
func NewMetaObject() *QMetaObject {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 78000, 78102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMetaObject{}
	_p.SetDriver(__rv, 78000, true)
	return _p
}

//QMetaObject::cast(QObject*)
func (q *QMetaObject) Cast(obj QObjectInterface) *QObject {
	var __rv uintptr
	q.Drv(78000, 78103, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QMetaObject::checkConnectArgs(char const*,char const*)
func QMetaObjectCheckConnectArgs(signal string, method string) bool {
	_signal := NewCStringHead(signal)
	defer FreeCStringHead(_signal)
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	var __rv bool
	DirectQtDrv(nil, 78000, 78104, unsafe.Pointer(_signal), unsafe.Pointer(_method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::checkConnectArgs(char const*,char const*)
func (q *QMetaObject) CheckConnectArgs(signal string, method string) bool {
	_signal := NewCStringHead(signal)
	defer FreeCStringHead(_signal)
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	var __rv bool
	q.Drv(78000, 78104, unsafe.Pointer(_signal), unsafe.Pointer(_method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::classInfoCount()
func (q *QMetaObject) ClassInfoCount() int32 {
	var __rv int32
	q.Drv(78000, 78105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::classInfoOffset()
func (q *QMetaObject) ClassInfoOffset() int32 {
	var __rv int32
	q.Drv(78000, 78106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::className()
func (q *QMetaObject) ClassName() string {
	var __rv C.string_head
	q.Drv(78000, 78107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaObject::connect(QObject const*,int,QObject const*,int,int,int*)
func QMetaObjectConnect(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32, _type int32, types *int32) bool {
	var __rv bool
	DirectQtDrv(nil, 78000, 78108, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&_type), unsafe.Pointer(&types), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::connect(QObject const*,int,QObject const*,int,int,int*)
func (q *QMetaObject) Connect(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32, _type int32, types *int32) bool {
	var __rv bool
	q.Drv(78000, 78108, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&_type), unsafe.Pointer(&types), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::connectSlotsByName(QObject*)
func QMetaObjectConnectSlotsByName(o QObjectInterface) {
	DirectQtDrv(nil, 78000, 78109, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMetaObject::connectSlotsByName(QObject*)
func (q *QMetaObject) ConnectSlotsByName(o QObjectInterface) {
	q.Drv(78000, 78109, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMetaObject::constructor(int)
func (q *QMetaObject) Constructor(index int32) *QMetaMethod {
	var __rv uintptr
	q.Drv(78000, 78110, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaMethod{}
	_rp.SetDriver(__rv, 77000, true)
	return _rp
}

//QMetaObject::constructorCount()
func (q *QMetaObject) ConstructorCount() int32 {
	var __rv int32
	q.Drv(78000, 78111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::disconnect(QObject const*,int,QObject const*,int)
func QMetaObjectDisconnect(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32) bool {
	var __rv bool
	DirectQtDrv(nil, 78000, 78112, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::disconnect(QObject const*,int,QObject const*,int)
func (q *QMetaObject) Disconnect(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32) bool {
	var __rv bool
	q.Drv(78000, 78112, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::disconnectOne(QObject const*,int,QObject const*,int)
func QMetaObjectDisconnectOne(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32) bool {
	var __rv bool
	DirectQtDrv(nil, 78000, 78113, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::disconnectOne(QObject const*,int,QObject const*,int)
func (q *QMetaObject) DisconnectOne(sender QObjectInterface, signal_index int32, receiver QObjectInterface, method_index int32) bool {
	var __rv bool
	q.Drv(78000, 78113, Native(sender), unsafe.Pointer(&signal_index), Native(receiver), unsafe.Pointer(&method_index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::enumerator(int)
func (q *QMetaObject) Enumerator(index int32) *QMetaEnum {
	var __rv uintptr
	q.Drv(78000, 78114, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaEnum{}
	_rp.SetDriver(__rv, 76000, true)
	return _rp
}

//QMetaObject::enumeratorCount()
func (q *QMetaObject) EnumeratorCount() int32 {
	var __rv int32
	q.Drv(78000, 78115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::enumeratorOffset()
func (q *QMetaObject) EnumeratorOffset() int32 {
	var __rv int32
	q.Drv(78000, 78116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfClassInfo(char const*)
func (q *QMetaObject) IndexOfClassInfo(name string) int32 {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv int32
	q.Drv(78000, 78117, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfConstructor(char const*)
func (q *QMetaObject) IndexOfConstructor(constructor string) int32 {
	_constructor := NewCStringHead(constructor)
	defer FreeCStringHead(_constructor)
	var __rv int32
	q.Drv(78000, 78118, unsafe.Pointer(_constructor), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfEnumerator(char const*)
func (q *QMetaObject) IndexOfEnumerator(name string) int32 {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv int32
	q.Drv(78000, 78119, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfMethod(char const*)
func (q *QMetaObject) IndexOfMethod(method string) int32 {
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	var __rv int32
	q.Drv(78000, 78120, unsafe.Pointer(_method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfProperty(char const*)
func (q *QMetaObject) IndexOfProperty(name string) int32 {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv int32
	q.Drv(78000, 78121, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfSignal(char const*)
func (q *QMetaObject) IndexOfSignal(signal string) int32 {
	_signal := NewCStringHead(signal)
	defer FreeCStringHead(_signal)
	var __rv int32
	q.Drv(78000, 78122, unsafe.Pointer(_signal), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::indexOfSlot(char const*)
func (q *QMetaObject) IndexOfSlot(slot string) int32 {
	_slot := NewCStringHead(slot)
	defer FreeCStringHead(_slot)
	var __rv int32
	q.Drv(78000, 78123, unsafe.Pointer(_slot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::method(int)
func (q *QMetaObject) Method(index int32) *QMetaMethod {
	var __rv uintptr
	q.Drv(78000, 78124, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaMethod{}
	_rp.SetDriver(__rv, 77000, true)
	return _rp
}

//QMetaObject::methodCount()
func (q *QMetaObject) MethodCount() int32 {
	var __rv int32
	q.Drv(78000, 78125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::methodOffset()
func (q *QMetaObject) MethodOffset() int32 {
	var __rv int32
	q.Drv(78000, 78126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::newInstance()
func (q *QMetaObject) NewInstance() *QObject {
	var __rv uintptr
	q.Drv(78000, 78127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QMetaObject::newInstance(QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument,QGenericArgument)
func (q *QMetaObject) NewInstanceWithVal0Val1Val2Val3Val4Val5Val6Val7Val8Val9(val0 *QGenericArgument, val1 *QGenericArgument, val2 *QGenericArgument, val3 *QGenericArgument, val4 *QGenericArgument, val5 *QGenericArgument, val6 *QGenericArgument, val7 *QGenericArgument, val8 *QGenericArgument, val9 *QGenericArgument) *QObject {
	var __rv uintptr
	q.Drv(78000, 78128, Native(val0), Native(val1), Native(val2), Native(val3), Native(val4), Native(val5), Native(val6), Native(val7), Native(val8), Native(val9), unsafe.Pointer(&__rv), nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QMetaObject::normalizedSignature(char const*)
func QMetaObjectNormalizedSignature(method string) []byte {
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	var __rv []byte
	DirectQtDrv(nil, 78000, 78129, unsafe.Pointer(_method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::normalizedSignature(char const*)
func (q *QMetaObject) NormalizedSignature(method string) []byte {
	_method := NewCStringHead(method)
	defer FreeCStringHead(_method)
	var __rv []byte
	q.Drv(78000, 78129, unsafe.Pointer(_method), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::normalizedType(char const*)
func QMetaObjectNormalizedType(_type string) []byte {
	__type := NewCStringHead(_type)
	defer FreeCStringHead(__type)
	var __rv []byte
	DirectQtDrv(nil, 78000, 78130, unsafe.Pointer(__type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::normalizedType(char const*)
func (q *QMetaObject) NormalizedType(_type string) []byte {
	__type := NewCStringHead(_type)
	defer FreeCStringHead(__type)
	var __rv []byte
	q.Drv(78000, 78130, unsafe.Pointer(__type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::property(int)
func (q *QMetaObject) Property(index int32) *QMetaProperty {
	var __rv uintptr
	q.Drv(78000, 78131, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaProperty{}
	_rp.SetDriver(__rv, 79000, true)
	return _rp
}

//QMetaObject::propertyCount()
func (q *QMetaObject) PropertyCount() int32 {
	var __rv int32
	q.Drv(78000, 78132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::propertyOffset()
func (q *QMetaObject) PropertyOffset() int32 {
	var __rv int32
	q.Drv(78000, 78133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaObject::superClass()
func (q *QMetaObject) SuperClass() *QMetaObject {
	var __rv uintptr
	q.Drv(78000, 78134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaObject{}
	_rp.SetDriver(__rv, 78000, true)
	return _rp
}

//QMetaObject::tr(char const*,char const*)
func (q *QMetaObject) TrWithSC(s string, c string) string {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_c := NewCStringHead(c)
	defer FreeCStringHead(_c)
	var __rv C.string_head
	q.Drv(78000, 78135, unsafe.Pointer(_s), unsafe.Pointer(_c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaObject::tr(char const*,char const*,int)
func (q *QMetaObject) TrWithSCInt32(s string, c string, n int32) string {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_c := NewCStringHead(c)
	defer FreeCStringHead(_c)
	var __rv C.string_head
	q.Drv(78000, 78136, unsafe.Pointer(_s), unsafe.Pointer(_c), unsafe.Pointer(&n), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaObject::userProperty()
func (q *QMetaObject) UserProperty() *QMetaProperty {
	var __rv uintptr
	q.Drv(78000, 78137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaProperty{}
	_rp.SetDriver(__rv, 79000, true)
	return _rp
}

//struct QMetaProperty : QMetaProperty
type QMetaProperty struct {
	BaseDrv
}

//QMetaProperty::QMetaProperty()
func NewMetaProperty() *QMetaProperty {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 79000, 79102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMetaProperty{}
	_p.SetDriver(__rv, 79000, true)
	return _p
}

//QMetaProperty::enclosingMetaObject()
func (q *QMetaProperty) EnclosingMetaObject() *QMetaObject {
	var __rv uintptr
	q.Drv(79000, 79103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaObject{}
	_rp.SetDriver(__rv, 78000, true)
	return _rp
}

//QMetaProperty::enumerator()
func (q *QMetaProperty) Enumerator() *QMetaEnum {
	var __rv uintptr
	q.Drv(79000, 79104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaEnum{}
	_rp.SetDriver(__rv, 76000, true)
	return _rp
}

//QMetaProperty::hasNotifySignal()
func (q *QMetaProperty) HasNotifySignal() bool {
	var __rv bool
	q.Drv(79000, 79105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::hasStdCppSet()
func (q *QMetaProperty) HasStdCppSet() bool {
	var __rv bool
	q.Drv(79000, 79106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isConstant()
func (q *QMetaProperty) IsConstant() bool {
	var __rv bool
	q.Drv(79000, 79107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isDesignable()
func (q *QMetaProperty) IsDesignable() bool {
	var __rv bool
	q.Drv(79000, 79108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isDesignable(QObject const*)
func (q *QMetaProperty) IsDesignableWithObject(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79109, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isEditable()
func (q *QMetaProperty) IsEditable() bool {
	var __rv bool
	q.Drv(79000, 79110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isEditable(QObject const*)
func (q *QMetaProperty) IsEditableWithObject(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79111, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isEnumType()
func (q *QMetaProperty) IsEnumType() bool {
	var __rv bool
	q.Drv(79000, 79112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isFinal()
func (q *QMetaProperty) IsFinal() bool {
	var __rv bool
	q.Drv(79000, 79113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isFlagType()
func (q *QMetaProperty) IsFlagType() bool {
	var __rv bool
	q.Drv(79000, 79114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isReadable()
func (q *QMetaProperty) IsReadable() bool {
	var __rv bool
	q.Drv(79000, 79115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isResettable()
func (q *QMetaProperty) IsResettable() bool {
	var __rv bool
	q.Drv(79000, 79116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isScriptable()
func (q *QMetaProperty) IsScriptable() bool {
	var __rv bool
	q.Drv(79000, 79117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isScriptable(QObject const*)
func (q *QMetaProperty) IsScriptableWithObject(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79118, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isStored()
func (q *QMetaProperty) IsStored() bool {
	var __rv bool
	q.Drv(79000, 79119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isStored(QObject const*)
func (q *QMetaProperty) IsStoredWithObject(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79120, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isUser()
func (q *QMetaProperty) IsUser() bool {
	var __rv bool
	q.Drv(79000, 79121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isUser(QObject const*)
func (q *QMetaProperty) IsUserWithObject(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79122, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isValid()
func (q *QMetaProperty) IsValid() bool {
	var __rv bool
	q.Drv(79000, 79123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::isWritable()
func (q *QMetaProperty) IsWritable() bool {
	var __rv bool
	q.Drv(79000, 79124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::name()
func (q *QMetaProperty) Name() string {
	var __rv C.string_head
	q.Drv(79000, 79125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaProperty::notifySignal()
func (q *QMetaProperty) NotifySignal() *QMetaMethod {
	var __rv uintptr
	q.Drv(79000, 79126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaMethod{}
	_rp.SetDriver(__rv, 77000, true)
	return _rp
}

//QMetaProperty::notifySignalIndex()
func (q *QMetaProperty) NotifySignalIndex() int32 {
	var __rv int32
	q.Drv(79000, 79127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::propertyIndex()
func (q *QMetaProperty) PropertyIndex() int32 {
	var __rv int32
	q.Drv(79000, 79128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::read(QObject const*)
func (q *QMetaProperty) Read(obj QObjectInterface) *QVariant {
	var __rv uintptr
	q.Drv(79000, 79129, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QMetaProperty::reset(QObject*)
func (q *QMetaProperty) Reset(obj QObjectInterface) bool {
	var __rv bool
	q.Drv(79000, 79130, Native(obj), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::type()
func (q *QMetaProperty) Type() QVariant_Type {
	var __rv QVariant_Type
	q.Drv(79000, 79131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::typeName()
func (q *QMetaProperty) TypeName() string {
	var __rv C.string_head
	q.Drv(79000, 79132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMetaProperty::userType()
func (q *QMetaProperty) UserType() int32 {
	var __rv int32
	q.Drv(79000, 79133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMetaProperty::write(QObject*,QVariant const&)
func (q *QMetaProperty) Write(obj QObjectInterface, value *QVariant) bool {
	var __rv bool
	q.Drv(79000, 79134, Native(obj), Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QModelIndex : QModelIndex
type QModelIndex struct {
	BaseDrv
}

//QModelIndex::QModelIndex()
func NewModelIndex() *QModelIndex {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 80000, 80102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QModelIndex{}
	_p.SetDriver(__rv, 80000, true)
	return _p
}

//QModelIndex::QModelIndex(QModelIndex const&)
func NewModelIndexCopy(other *QModelIndex) *QModelIndex {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 80000, 80103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QModelIndex{}
	_p.SetDriver(__rv, 80000, true)
	return _p
}

//QModelIndex::child(int,int)
func (q *QModelIndex) Child(row int32, column int32) *QModelIndex {
	var __rv uintptr
	q.Drv(80000, 80104, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QModelIndex::column()
func (q *QModelIndex) Column() int32 {
	var __rv int32
	q.Drv(80000, 80105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::data()
func (q *QModelIndex) Data() *QVariant {
	var __rv uintptr
	q.Drv(80000, 80106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QModelIndex::data(int)
func (q *QModelIndex) DataWithRole(role int32) *QVariant {
	var __rv uintptr
	q.Drv(80000, 80107, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QModelIndex::flags()
func (q *QModelIndex) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(80000, 80108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::internalId()
func (q *QModelIndex) InternalId() int64 {
	var __rv int64
	q.Drv(80000, 80109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::internalPointer()
func (q *QModelIndex) InternalPointer() uintptr {
	var __rv uintptr
	q.Drv(80000, 80110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::isValid()
func (q *QModelIndex) IsValid() bool {
	var __rv bool
	q.Drv(80000, 80111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::model()
func (q *QModelIndex) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(80000, 80112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QModelIndex::parent()
func (q *QModelIndex) Parent() *QModelIndex {
	var __rv uintptr
	q.Drv(80000, 80113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QModelIndex::row()
func (q *QModelIndex) Row() int32 {
	var __rv int32
	q.Drv(80000, 80114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QModelIndex::sibling(int,int)
func (q *QModelIndex) Sibling(row int32, column int32) *QModelIndex {
	var __rv uintptr
	q.Drv(80000, 80115, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//struct QMouseEvent : QMouseEvent
type QMouseEvent struct {
	QInputEvent
}

//QMouseEvent::QMouseEvent(QEvent::Type,QPoint const&,Qt::MouseButton,QFlags<Qt::MouseButton>,QFlags<Qt::KeyboardModifier>)
func NewMouseEvent(_type QEvent_Type, pos *QPoint, button Qt_MouseButton, buttons Qt_MouseButton, modifiers Qt_KeyboardModifier) *QMouseEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 81000, 81102, unsafe.Pointer(&_type), Native(pos), unsafe.Pointer(&button), unsafe.Pointer(&buttons), unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMouseEvent{}
	_p.SetDriver(__rv, 81000, true)
	return _p
}

//QMouseEvent::QMouseEvent(QEvent::Type,QPoint const&,QPoint const&,Qt::MouseButton,QFlags<Qt::MouseButton>,QFlags<Qt::KeyboardModifier>)
func NewMouseEventWithTypePosGlobalposButtonButtonsModifiers(_type QEvent_Type, pos *QPoint, globalPos *QPoint, button Qt_MouseButton, buttons Qt_MouseButton, modifiers Qt_KeyboardModifier) *QMouseEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 81000, 81103, unsafe.Pointer(&_type), Native(pos), Native(globalPos), unsafe.Pointer(&button), unsafe.Pointer(&buttons), unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMouseEvent{}
	_p.SetDriver(__rv, 81000, true)
	return _p
}

//QMouseEvent::button()
func (q *QMouseEvent) Button() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(81000, 81104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEvent::buttons()
func (q *QMouseEvent) Buttons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(81000, 81105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEvent::globalPos()
func (q *QMouseEvent) GlobalPos() *QPoint {
	var __rv uintptr
	q.Drv(81000, 81106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QMouseEvent::globalX()
func (q *QMouseEvent) GlobalX() int32 {
	var __rv int32
	q.Drv(81000, 81107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEvent::globalY()
func (q *QMouseEvent) GlobalY() int32 {
	var __rv int32
	q.Drv(81000, 81108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEvent::pos()
func (q *QMouseEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(81000, 81109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QMouseEvent::posF()
func (q *QMouseEvent) LocalPos() *QPointF {
	var __rv uintptr
	q.Drv(81000, 81110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QMouseEvent::x()
func (q *QMouseEvent) X() int32 {
	var __rv int32
	q.Drv(81000, 81111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEvent::y()
func (q *QMouseEvent) Y() int32 {
	var __rv int32
	q.Drv(81000, 81112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QMoveEvent : QMoveEvent
type QMoveEvent struct {
	QEvent
}

//QMoveEvent::QMoveEvent(QPoint const&,QPoint const&)
func NewMoveEvent(pos *QPoint, oldPos *QPoint) *QMoveEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 82000, 82102, Native(pos), Native(oldPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMoveEvent{}
	_p.SetDriver(__rv, 82000, true)
	return _p
}

//QMoveEvent::oldPos()
func (q *QMoveEvent) OldPos() *QPoint {
	var __rv uintptr
	q.Drv(82000, 82103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QMoveEvent::pos()
func (q *QMoveEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(82000, 82104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//enum QPaintDevice_PaintDeviceMetric - QPaintDevice::PaintDeviceMetric
type QPaintDevice_PaintDeviceMetric uint32

const (
	QPaintDevice_PdmWidth        QPaintDevice_PaintDeviceMetric = 1
	QPaintDevice_PdmHeight       QPaintDevice_PaintDeviceMetric = 1 + 1
	QPaintDevice_PdmWidthMM      QPaintDevice_PaintDeviceMetric = 1 + 1 + 1
	QPaintDevice_PdmHeightMM     QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1
	QPaintDevice_PdmNumColors    QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1
	QPaintDevice_PdmDepth        QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1 + 1
	QPaintDevice_PdmDpiX         QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1 + 1 + 1
	QPaintDevice_PdmDpiY         QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QPaintDevice_PdmPhysicalDpiX QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QPaintDevice_PdmPhysicalDpiY QPaintDevice_PaintDeviceMetric = 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
)

//struct QPaintDevice : QPaintDevice
type QPaintDevice struct {
	BaseDrv
}

//QPaintDevice::colorCount()
func (q *QPaintDevice) ColorCount() int32 {
	var __rv int32
	q.Drv(83000, 83102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::depth()
func (q *QPaintDevice) Depth() int32 {
	var __rv int32
	q.Drv(83000, 83103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::devType()
func (q *QPaintDevice) DevType() int32 {
	var __rv int32
	q.Drv(83000, 83104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::height()
func (q *QPaintDevice) Height() int32 {
	var __rv int32
	q.Drv(83000, 83105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::heightMM()
func (q *QPaintDevice) HeightMM() int32 {
	var __rv int32
	q.Drv(83000, 83106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::logicalDpiX()
func (q *QPaintDevice) LogicalDpiX() int32 {
	var __rv int32
	q.Drv(83000, 83107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::logicalDpiY()
func (q *QPaintDevice) LogicalDpiY() int32 {
	var __rv int32
	q.Drv(83000, 83108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::paintEngine()
func (q *QPaintDevice) PaintEngine() *QPaintEngine {
	var __rv uintptr
	q.Drv(83000, 83109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintEngine{}
	_rp.SetDriver(__rv, 84000, true)
	return _rp
}

//QPaintDevice::paintingActive()
func (q *QPaintDevice) PaintingActive() bool {
	var __rv bool
	q.Drv(83000, 83110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::physicalDpiX()
func (q *QPaintDevice) PhysicalDpiX() int32 {
	var __rv int32
	q.Drv(83000, 83111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::physicalDpiY()
func (q *QPaintDevice) PhysicalDpiY() int32 {
	var __rv int32
	q.Drv(83000, 83112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::width()
func (q *QPaintDevice) Width() int32 {
	var __rv int32
	q.Drv(83000, 83113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::widthMM()
func (q *QPaintDevice) WidthMM() int32 {
	var __rv int32
	q.Drv(83000, 83114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QPaintEngine_PolygonDrawMode - QPaintEngine::PolygonDrawMode
type QPaintEngine_PolygonDrawMode uint32

const (
	QPaintEngine_OddEvenMode  QPaintEngine_PolygonDrawMode = 0
	QPaintEngine_WindingMode  QPaintEngine_PolygonDrawMode = 1
	QPaintEngine_ConvexMode   QPaintEngine_PolygonDrawMode = 2
	QPaintEngine_PolylineMode QPaintEngine_PolygonDrawMode = 3
)

//enum QPaintEngine_Type - QPaintEngine::Type
type QPaintEngine_Type uint32

const (
	QPaintEngine_X11           QPaintEngine_Type = 0
	QPaintEngine_Windows       QPaintEngine_Type = 1
	QPaintEngine_QuickDraw     QPaintEngine_Type = 2
	QPaintEngine_CoreGraphics  QPaintEngine_Type = 3
	QPaintEngine_MacPrinter    QPaintEngine_Type = 4
	QPaintEngine_QWindowSystem QPaintEngine_Type = 5
	QPaintEngine_PostScript    QPaintEngine_Type = 6
	QPaintEngine_OpenGL        QPaintEngine_Type = 7
	QPaintEngine_Picture       QPaintEngine_Type = 8
	QPaintEngine_SVG           QPaintEngine_Type = 9
	QPaintEngine_Raster        QPaintEngine_Type = 10
	QPaintEngine_Direct3D      QPaintEngine_Type = 11
	QPaintEngine_Pdf           QPaintEngine_Type = 12
	QPaintEngine_OpenVG        QPaintEngine_Type = 13
	QPaintEngine_OpenGL2       QPaintEngine_Type = 14
	QPaintEngine_PaintBuffer   QPaintEngine_Type = 15
	QPaintEngine_User          QPaintEngine_Type = 50
	QPaintEngine_MaxUser       QPaintEngine_Type = 100
)

//enum QPaintEngine_PaintEngineFeature - QPaintEngine::PaintEngineFeature
type QPaintEngine_PaintEngineFeature uint32

const (
	QPaintEngine_PrimitiveTransform          QPaintEngine_PaintEngineFeature = 0x00000001
	QPaintEngine_PatternTransform            QPaintEngine_PaintEngineFeature = 0x00000002
	QPaintEngine_PixmapTransform             QPaintEngine_PaintEngineFeature = 0x00000004
	QPaintEngine_PatternBrush                QPaintEngine_PaintEngineFeature = 0x00000008
	QPaintEngine_LinearGradientFill          QPaintEngine_PaintEngineFeature = 0x00000010
	QPaintEngine_RadialGradientFill          QPaintEngine_PaintEngineFeature = 0x00000020
	QPaintEngine_ConicalGradientFill         QPaintEngine_PaintEngineFeature = 0x00000040
	QPaintEngine_AlphaBlend                  QPaintEngine_PaintEngineFeature = 0x00000080
	QPaintEngine_PorterDuff                  QPaintEngine_PaintEngineFeature = 0x00000100
	QPaintEngine_PainterPaths                QPaintEngine_PaintEngineFeature = 0x00000200
	QPaintEngine_Antialiasing                QPaintEngine_PaintEngineFeature = 0x00000400
	QPaintEngine_BrushStroke                 QPaintEngine_PaintEngineFeature = 0x00000800
	QPaintEngine_ConstantOpacity             QPaintEngine_PaintEngineFeature = 0x00001000
	QPaintEngine_MaskedBrush                 QPaintEngine_PaintEngineFeature = 0x00002000
	QPaintEngine_PerspectiveTransform        QPaintEngine_PaintEngineFeature = 0x00004000
	QPaintEngine_BlendModes                  QPaintEngine_PaintEngineFeature = 0x00008000
	QPaintEngine_ObjectBoundingModeGradients QPaintEngine_PaintEngineFeature = 0x00010000
	QPaintEngine_RasterOpModes               QPaintEngine_PaintEngineFeature = 0x00020000
	QPaintEngine_PaintOutsidePaintEvent      QPaintEngine_PaintEngineFeature = 0x20000000
	QPaintEngine_AllFeatures                 QPaintEngine_PaintEngineFeature = 0xffffffff
)

//enum QPaintEngine_DirtyFlag - QPaintEngine::DirtyFlag
type QPaintEngine_DirtyFlag uint32

const (
	QPaintEngine_DirtyPen             QPaintEngine_DirtyFlag = 0x0001
	QPaintEngine_DirtyBrush           QPaintEngine_DirtyFlag = 0x0002
	QPaintEngine_DirtyBrushOrigin     QPaintEngine_DirtyFlag = 0x0004
	QPaintEngine_DirtyFont            QPaintEngine_DirtyFlag = 0x0008
	QPaintEngine_DirtyBackground      QPaintEngine_DirtyFlag = 0x0010
	QPaintEngine_DirtyBackgroundMode  QPaintEngine_DirtyFlag = 0x0020
	QPaintEngine_DirtyTransform       QPaintEngine_DirtyFlag = 0x0040
	QPaintEngine_DirtyClipRegion      QPaintEngine_DirtyFlag = 0x0080
	QPaintEngine_DirtyClipPath        QPaintEngine_DirtyFlag = 0x0100
	QPaintEngine_DirtyHints           QPaintEngine_DirtyFlag = 0x0200
	QPaintEngine_DirtyCompositionMode QPaintEngine_DirtyFlag = 0x0400
	QPaintEngine_DirtyClipEnabled     QPaintEngine_DirtyFlag = 0x0800
	QPaintEngine_DirtyOpacity         QPaintEngine_DirtyFlag = 0x1000
	QPaintEngine_AllDirty             QPaintEngine_DirtyFlag = 0xffff
)

//struct QPaintEngine : QPaintEngine
type QPaintEngine struct {
	BaseDrv
}

//QPaintEngine::begin(QPaintDevice*)
func (q *QPaintEngine) Begin(pdev QPaintDeviceInterface) bool {
	var __rv bool
	q.Drv(84000, 84102, unsafe.Pointer(new_pd_head(pdev)), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::clearDirty(QFlags<QPaintEngine::DirtyFlag>)
func (q *QPaintEngine) ClearDirty(df QPaintEngine_DirtyFlag) {
	q.Drv(84000, 84103, unsafe.Pointer(&df), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::coordinateOffset()
func (q *QPaintEngine) CoordinateOffset() *QPoint {
	var __rv uintptr
	q.Drv(84000, 84104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QPaintEngine::drawEllipse(QRect const&)
func (q *QPaintEngine) DrawEllipse(r *QRect) {
	q.Drv(84000, 84105, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawEllipse(QRectF const&)
func (q *QPaintEngine) DrawEllipseFWithRectf(r *QRectF) {
	q.Drv(84000, 84106, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawImage(QRectF const&,QImage const&,QRectF const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPaintEngine) DrawImage(r *QRectF, pm *QImage, sr *QRectF, flags Qt_ImageConversionFlag) {
	q.Drv(84000, 84107, Native(r), Native(pm), Native(sr), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawLines(QLine const*,int)
func (q *QPaintEngine) DrawLinesWithLinesLinecount(lines *QLine, lineCount int32) {
	q.Drv(84000, 84108, Native(lines), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawLines(QLineF const*,int)
func (q *QPaintEngine) DrawLinesFWithLinesLinecount(lines *QLineF, lineCount int32) {
	q.Drv(84000, 84109, Native(lines), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPath(QPainterPath const&)
func (q *QPaintEngine) DrawPath(path *QPainterPath) {
	q.Drv(84000, 84110, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPixmap(QRectF const&,QPixmap const&,QRectF const&)
func (q *QPaintEngine) DrawPixmap(r *QRectF, pm *QPixmap, sr *QRectF) {
	q.Drv(84000, 84111, Native(r), Native(pm), Native(sr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPoints(QPoint const*,int)
func (q *QPaintEngine) DrawPointsWithPointsPointcount(points *QPoint, pointCount int32) {
	q.Drv(84000, 84112, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPoints(QPointF const*,int)
func (q *QPaintEngine) DrawPointsFWithPointsPointcount(points *QPointF, pointCount int32) {
	q.Drv(84000, 84113, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPolygon(QPoint const*,int,QPaintEngine::PolygonDrawMode)
func (q *QPaintEngine) DrawPolygonWithPointsPointcountMode(points *QPoint, pointCount int32, mode QPaintEngine_PolygonDrawMode) {
	q.Drv(84000, 84114, Native(points), unsafe.Pointer(&pointCount), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawPolygon(QPointF const*,int,QPaintEngine::PolygonDrawMode)
func (q *QPaintEngine) DrawPolygonFWithPointsPointcountMode(points *QPointF, pointCount int32, mode QPaintEngine_PolygonDrawMode) {
	q.Drv(84000, 84115, Native(points), unsafe.Pointer(&pointCount), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawRects(QRect const*,int)
func (q *QPaintEngine) DrawRectsWithRectsRectcount(rects *QRect, rectCount int32) {
	q.Drv(84000, 84116, Native(rects), unsafe.Pointer(&rectCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawRects(QRectF const*,int)
func (q *QPaintEngine) DrawRectsFWithRectsRectcount(rects *QRectF, rectCount int32) {
	q.Drv(84000, 84117, Native(rects), unsafe.Pointer(&rectCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawTextItem(QPointF const&,QTextItem const&)
func (q *QPaintEngine) DrawTextItem(p *QPointF, textItem *QTextItem) {
	q.Drv(84000, 84118, Native(p), Native(textItem), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::drawTiledPixmap(QRectF const&,QPixmap const&,QPointF const&)
func (q *QPaintEngine) DrawTiledPixmap(r *QRectF, pixmap *QPixmap, s *QPointF) {
	q.Drv(84000, 84119, Native(r), Native(pixmap), Native(s), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::end()
func (q *QPaintEngine) End() bool {
	var __rv bool
	q.Drv(84000, 84120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::fix_neg_rect(int*,int*,int*,int*)
func (q *QPaintEngine) Fix_neg_rect(x *int32, y *int32, w *int32, h *int32) {
	q.Drv(84000, 84121, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::hasFeature(QFlags<QPaintEngine::PaintEngineFeature>)
func (q *QPaintEngine) HasFeature(feature QPaintEngine_PaintEngineFeature) bool {
	var __rv bool
	q.Drv(84000, 84122, unsafe.Pointer(&feature), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::isActive()
func (q *QPaintEngine) IsActive() bool {
	var __rv bool
	q.Drv(84000, 84123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::isExtended()
func (q *QPaintEngine) IsExtended() bool {
	var __rv bool
	q.Drv(84000, 84124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::paintDevice()
func (q *QPaintEngine) PaintDevice() *QPaintDevice {
	var __rv uintptr
	q.Drv(84000, 84125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPaintEngine::painter()
func (q *QPaintEngine) Painter() *QPainter {
	var __rv uintptr
	q.Drv(84000, 84126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainter{}
	_rp.SetDriver(__rv, 87000, true)
	return _rp
}

//QPaintEngine::setActive(bool)
func (q *QPaintEngine) SetActive(newState bool) {
	q.Drv(84000, 84127, unsafe.Pointer(&newState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::setDirty(QFlags<QPaintEngine::DirtyFlag>)
func (q *QPaintEngine) SetDirty(df QPaintEngine_DirtyFlag) {
	q.Drv(84000, 84128, unsafe.Pointer(&df), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::setPaintDevice(QPaintDevice*)
func (q *QPaintEngine) SetPaintDevice(device QPaintDeviceInterface) {
	q.Drv(84000, 84129, unsafe.Pointer(new_pd_head(device)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::setSystemClip(QRegion const&)
func (q *QPaintEngine) SetSystemClip(baseClip *QRegion) {
	q.Drv(84000, 84130, Native(baseClip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::setSystemRect(QRect const&)
func (q *QPaintEngine) SetSystemRect(rect *QRect) {
	q.Drv(84000, 84131, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::syncState()
func (q *QPaintEngine) SyncState() {
	q.Drv(84000, 84132, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintEngine::systemClip()
func (q *QPaintEngine) SystemClip() *QRegion {
	var __rv uintptr
	q.Drv(84000, 84133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QPaintEngine::systemRect()
func (q *QPaintEngine) SystemRect() *QRect {
	var __rv uintptr
	q.Drv(84000, 84134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPaintEngine::testDirty(QFlags<QPaintEngine::DirtyFlag>)
func (q *QPaintEngine) TestDirty(df QPaintEngine_DirtyFlag) bool {
	var __rv bool
	q.Drv(84000, 84135, unsafe.Pointer(&df), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::type()
func (q *QPaintEngine) Type() QPaintEngine_Type {
	var __rv QPaintEngine_Type
	q.Drv(84000, 84136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngine::updateState(QPaintEngineState const&)
func (q *QPaintEngine) UpdateState(state *QPaintEngineState) {
	q.Drv(84000, 84137, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QPaintEngineState : QPaintEngineState
type QPaintEngineState struct {
	BaseDrv
}

//QPaintEngineState::QPaintEngineState()
func NewPaintEngineState() *QPaintEngineState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 85000, 85102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPaintEngineState{}
	_p.SetDriver(__rv, 85000, true)
	return _p
}

//QPaintEngineState::backgroundBrush()
func (q *QPaintEngineState) BackgroundBrush() *QBrush {
	var __rv uintptr
	q.Drv(85000, 85103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPaintEngineState::backgroundMode()
func (q *QPaintEngineState) BackgroundMode() Qt_BGMode {
	var __rv Qt_BGMode
	q.Drv(85000, 85104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::brush()
func (q *QPaintEngineState) Brush() *QBrush {
	var __rv uintptr
	q.Drv(85000, 85105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPaintEngineState::brushNeedsResolving()
func (q *QPaintEngineState) BrushNeedsResolving() bool {
	var __rv bool
	q.Drv(85000, 85106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::brushOrigin()
func (q *QPaintEngineState) BrushOrigin() *QPointF {
	var __rv uintptr
	q.Drv(85000, 85107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPaintEngineState::clipOperation()
func (q *QPaintEngineState) ClipOperation() Qt_ClipOperation {
	var __rv Qt_ClipOperation
	q.Drv(85000, 85108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::clipPath()
func (q *QPaintEngineState) ClipPath() *QPainterPath {
	var __rv uintptr
	q.Drv(85000, 85109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPaintEngineState::clipRegion()
func (q *QPaintEngineState) ClipRegion() *QRegion {
	var __rv uintptr
	q.Drv(85000, 85110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QPaintEngineState::compositionMode()
func (q *QPaintEngineState) CompositionMode() QPainter_CompositionMode {
	var __rv QPainter_CompositionMode
	q.Drv(85000, 85111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::font()
func (q *QPaintEngineState) Font() *QFont {
	var __rv uintptr
	q.Drv(85000, 85112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QPaintEngineState::isClipEnabled()
func (q *QPaintEngineState) IsClipEnabled() bool {
	var __rv bool
	q.Drv(85000, 85113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::matrix()
func (q *QPaintEngineState) Matrix() *QMatrix {
	var __rv uintptr
	q.Drv(85000, 85114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPaintEngineState::opacity()
func (q *QPaintEngineState) Opacity() float64 {
	var __rv float64
	q.Drv(85000, 85115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::painter()
func (q *QPaintEngineState) Painter() *QPainter {
	var __rv uintptr
	q.Drv(85000, 85116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainter{}
	_rp.SetDriver(__rv, 87000, true)
	return _rp
}

//QPaintEngineState::pen()
func (q *QPaintEngineState) Pen() *QPen {
	var __rv uintptr
	q.Drv(85000, 85117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QPaintEngineState::penNeedsResolving()
func (q *QPaintEngineState) PenNeedsResolving() bool {
	var __rv bool
	q.Drv(85000, 85118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::renderHints()
func (q *QPaintEngineState) RenderHints() QPainter_RenderHint {
	var __rv QPainter_RenderHint
	q.Drv(85000, 85119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::state()
func (q *QPaintEngineState) State() QPaintEngine_DirtyFlag {
	var __rv QPaintEngine_DirtyFlag
	q.Drv(85000, 85120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintEngineState::transform()
func (q *QPaintEngineState) Transform() *QTransform {
	var __rv uintptr
	q.Drv(85000, 85121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//struct QPaintEvent : QPaintEvent
type QPaintEvent struct {
	QEvent
}

//QPaintEvent::QPaintEvent(QRect const&)
func NewPaintEvent(paintRect *QRect) *QPaintEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 86000, 86102, Native(paintRect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPaintEvent{}
	_p.SetDriver(__rv, 86000, true)
	return _p
}

//QPaintEvent::QPaintEvent(QRegion const&)
func NewPaintEventWithPaintregion(paintRegion *QRegion) *QPaintEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 86000, 86103, Native(paintRegion), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPaintEvent{}
	_p.SetDriver(__rv, 86000, true)
	return _p
}

//QPaintEvent::rect()
func (q *QPaintEvent) Rect() *QRect {
	var __rv uintptr
	q.Drv(86000, 86104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPaintEvent::region()
func (q *QPaintEvent) Region() *QRegion {
	var __rv uintptr
	q.Drv(86000, 86105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//enum QPainter_CompositionMode - QPainter::CompositionMode
type QPainter_CompositionMode uint32

const (
	QPainter_CompositionMode_SourceOver          QPainter_CompositionMode = 0
	QPainter_CompositionMode_DestinationOver     QPainter_CompositionMode = 1
	QPainter_CompositionMode_Clear               QPainter_CompositionMode = 2
	QPainter_CompositionMode_Source              QPainter_CompositionMode = 3
	QPainter_CompositionMode_Destination         QPainter_CompositionMode = 4
	QPainter_CompositionMode_SourceIn            QPainter_CompositionMode = 5
	QPainter_CompositionMode_DestinationIn       QPainter_CompositionMode = 6
	QPainter_CompositionMode_SourceOut           QPainter_CompositionMode = 7
	QPainter_CompositionMode_DestinationOut      QPainter_CompositionMode = 8
	QPainter_CompositionMode_SourceAtop          QPainter_CompositionMode = 9
	QPainter_CompositionMode_DestinationAtop     QPainter_CompositionMode = 10
	QPainter_CompositionMode_Xor                 QPainter_CompositionMode = 11
	QPainter_CompositionMode_Plus                QPainter_CompositionMode = 12
	QPainter_CompositionMode_Multiply            QPainter_CompositionMode = 13
	QPainter_CompositionMode_Screen              QPainter_CompositionMode = 14
	QPainter_CompositionMode_Overlay             QPainter_CompositionMode = 15
	QPainter_CompositionMode_Darken              QPainter_CompositionMode = 16
	QPainter_CompositionMode_Lighten             QPainter_CompositionMode = 17
	QPainter_CompositionMode_ColorDodge          QPainter_CompositionMode = 18
	QPainter_CompositionMode_ColorBurn           QPainter_CompositionMode = 19
	QPainter_CompositionMode_HardLight           QPainter_CompositionMode = 20
	QPainter_CompositionMode_SoftLight           QPainter_CompositionMode = 21
	QPainter_CompositionMode_Difference          QPainter_CompositionMode = 22
	QPainter_CompositionMode_Exclusion           QPainter_CompositionMode = 23
	QPainter_RasterOp_SourceOrDestination        QPainter_CompositionMode = 24
	QPainter_RasterOp_SourceAndDestination       QPainter_CompositionMode = 25
	QPainter_RasterOp_SourceXorDestination       QPainter_CompositionMode = 26
	QPainter_RasterOp_NotSourceAndNotDestination QPainter_CompositionMode = 27
	QPainter_RasterOp_NotSourceOrNotDestination  QPainter_CompositionMode = 28
	QPainter_RasterOp_NotSourceXorDestination    QPainter_CompositionMode = 29
	QPainter_RasterOp_NotSource                  QPainter_CompositionMode = 30
	QPainter_RasterOp_NotSourceAndDestination    QPainter_CompositionMode = 31
	QPainter_RasterOp_SourceAndNotDestination    QPainter_CompositionMode = 32
)

//enum QPainter_RenderHint - QPainter::RenderHint
type QPainter_RenderHint uint32

const (
	QPainter_Antialiasing            QPainter_RenderHint = 0x01
	QPainter_TextAntialiasing        QPainter_RenderHint = 0x02
	QPainter_SmoothPixmapTransform   QPainter_RenderHint = 0x04
	QPainter_HighQualityAntialiasing QPainter_RenderHint = 0x08
	QPainter_NonCosmeticDefaultPen   QPainter_RenderHint = 0x10
)

//enum QPainter_PixmapFragmentHint - QPainter::PixmapFragmentHint
type QPainter_PixmapFragmentHint uint32

const (
	QPainter_OpaqueHint QPainter_PixmapFragmentHint = 0x01
)

//struct QPainter : QPainter
type QPainter struct {
	BaseDrv
}

//QPainter::QPainter()
func NewPainter() *QPainter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 87000, 87102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainter{}
	_p.SetDriver(__rv, 87000, true)
	return _p
}

//QPainter::QPainter(QPaintDevice*)
func NewPainterWithPaintDevice(value QPaintDeviceInterface) *QPainter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 87000, 87103, unsafe.Pointer(new_pd_head(value)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainter{}
	_p.SetDriver(__rv, 87000, true)
	return _p
}

//QPainter::background()
func (q *QPainter) Background() *QBrush {
	var __rv uintptr
	q.Drv(87000, 87104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPainter::backgroundMode()
func (q *QPainter) BackgroundMode() Qt_BGMode {
	var __rv Qt_BGMode
	q.Drv(87000, 87105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::begin(QPaintDevice*)
func (q *QPainter) Begin(value QPaintDeviceInterface) bool {
	var __rv bool
	q.Drv(87000, 87106, unsafe.Pointer(new_pd_head(value)), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::beginNativePainting()
func (q *QPainter) BeginNativePainting() {
	q.Drv(87000, 87107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::boundingRect(QRect const&,int,QString const&)
func (q *QPainter) BoundingRectWithRectFlagsText(rect *QRect, flags int32, text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(87000, 87108, Native(rect), unsafe.Pointer(&flags), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPainter::boundingRect(QRectF const&,QString const&,QTextOption const&)
func (q *QPainter) BoundingRectFWithRectTextOption(rect *QRectF, text string, o *QTextOption) *QRectF {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(87000, 87109, Native(rect), unsafe.Pointer(_text), Native(o), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPainter::boundingRect(QRectF const&,int,QString const&)
func (q *QPainter) BoundingRectFWithRectFlagsText(rect *QRectF, flags int32, text string) *QRectF {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(87000, 87110, Native(rect), unsafe.Pointer(&flags), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPainter::boundingRect(int,int,int,int,int,QString const&)
func (q *QPainter) BoundingRectWithXYWidthHeightFlagsText(x int32, y int32, w int32, h int32, flags int32, text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(87000, 87111, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&flags), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPainter::brush()
func (q *QPainter) Brush() *QBrush {
	var __rv uintptr
	q.Drv(87000, 87112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPainter::brushOrigin()
func (q *QPainter) BrushOrigin() *QPoint {
	var __rv uintptr
	q.Drv(87000, 87113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QPainter::clipPath()
func (q *QPainter) ClipPath() *QPainterPath {
	var __rv uintptr
	q.Drv(87000, 87114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainter::clipRegion()
func (q *QPainter) ClipRegion() *QRegion {
	var __rv uintptr
	q.Drv(87000, 87115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QPainter::combinedMatrix()
func (q *QPainter) CombinedMatrix() *QMatrix {
	var __rv uintptr
	q.Drv(87000, 87116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPainter::combinedTransform()
func (q *QPainter) CombinedTransform() *QTransform {
	var __rv uintptr
	q.Drv(87000, 87117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QPainter::compositionMode()
func (q *QPainter) CompositionMode() QPainter_CompositionMode {
	var __rv QPainter_CompositionMode
	q.Drv(87000, 87118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::device()
func (q *QPainter) Device() *QPaintDevice {
	var __rv uintptr
	q.Drv(87000, 87119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPainter::deviceMatrix()
func (q *QPainter) DeviceMatrix() *QMatrix {
	var __rv uintptr
	q.Drv(87000, 87120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPainter::deviceTransform()
func (q *QPainter) DeviceTransform() *QTransform {
	var __rv uintptr
	q.Drv(87000, 87121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QPainter::drawArc(QRect const&,int,int)
func (q *QPainter) DrawArcWithRectStartangleSpanangle(value2 *QRect, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87122, Native(value2), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawArc(QRectF const&,int,int)
func (q *QPainter) DrawArcFWithRectStartangleSpanangle(rect *QRectF, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87123, Native(rect), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawArc(int,int,int,int,int,int)
func (q *QPainter) DrawArcWithXYWidthHeightStartangleSpanangle(x int32, y int32, w int32, h int32, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87124, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil)
}

//QPainter::drawChord(QRect const&,int,int)
func (q *QPainter) DrawChordWithRectStartangleSpanangle(value2 *QRect, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87125, Native(value2), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawChord(QRectF const&,int,int)
func (q *QPainter) DrawChordFWithRectStartangleSpanangle(rect *QRectF, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87126, Native(rect), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawChord(int,int,int,int,int,int)
func (q *QPainter) DrawChordWithXYWidthHeightStartangleSpanangle(x int32, y int32, w int32, h int32, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87127, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil)
}

//QPainter::drawConvexPolygon(QPolygon const&)
func (q *QPainter) DrawConvexPolygon(polygon *QPolygon) {
	q.Drv(87000, 87128, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawConvexPolygon(QPolygonF const&)
func (q *QPainter) DrawConvexPolygonFWithPolygon(polygon *QPolygonF) {
	q.Drv(87000, 87129, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawConvexPolygon(QPoint const*,int)
func (q *QPainter) DrawConvexPolygonWithPointsPointcount(points *QPoint, pointCount int32) {
	q.Drv(87000, 87130, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawConvexPolygon(QPointF const*,int)
func (q *QPainter) DrawConvexPolygonFWithPointsPointcount(points *QPointF, pointCount int32) {
	q.Drv(87000, 87131, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawEllipse(QRect const&)
func (q *QPainter) DrawEllipse(r *QRect) {
	q.Drv(87000, 87132, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawEllipse(QRectF const&)
func (q *QPainter) DrawEllipseFWithRectf(r *QRectF) {
	q.Drv(87000, 87133, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawEllipse(QPoint const&,int,int)
func (q *QPainter) DrawEllipseWithCenterRxRy(center *QPoint, rx int32, ry int32) {
	q.Drv(87000, 87134, Native(center), unsafe.Pointer(&rx), unsafe.Pointer(&ry), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawEllipse(QPointF const&,double,double)
func (q *QPainter) DrawEllipseFWithCenterRxRy(center *QPointF, rx float64, ry float64) {
	q.Drv(87000, 87135, Native(center), unsafe.Pointer(&rx), unsafe.Pointer(&ry), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawEllipse(int,int,int,int)
func (q *QPainter) DrawEllipseWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(87000, 87136, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QPoint const&,QImage const&)
func (q *QPainter) DrawImageWithPointImage(p *QPoint, image *QImage) {
	q.Drv(87000, 87137, Native(p), Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QPointF const&,QImage const&)
func (q *QPainter) DrawImageFWithPointfImage(p *QPointF, image *QImage) {
	q.Drv(87000, 87138, Native(p), Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QRect const&,QImage const&)
func (q *QPainter) DrawImageWithRectImage(r *QRect, image *QImage) {
	q.Drv(87000, 87139, Native(r), Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QRectF const&,QImage const&)
func (q *QPainter) DrawImageFWithRectfImage(r *QRectF, image *QImage) {
	q.Drv(87000, 87140, Native(r), Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QPoint const&,QImage const&,QRect const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPainter) DrawImageWithPointImageRectFlags(p *QPoint, image *QImage, sr *QRect, flags Qt_ImageConversionFlag) {
	q.Drv(87000, 87141, Native(p), Native(image), Native(sr), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QPointF const&,QImage const&,QRectF const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPainter) DrawImageFWithPointfImageRectfFlags(p *QPointF, image *QImage, sr *QRectF, flags Qt_ImageConversionFlag) {
	q.Drv(87000, 87142, Native(p), Native(image), Native(sr), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QRect const&,QImage const&,QRect const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPainter) DrawImageWithTargetrectImageSourcerectFlags(targetRect *QRect, image *QImage, sourceRect *QRect, flags Qt_ImageConversionFlag) {
	q.Drv(87000, 87143, Native(targetRect), Native(image), Native(sourceRect), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(QRectF const&,QImage const&,QRectF const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPainter) DrawImageFWithTargetrectImageSourcerectFlags(targetRect *QRectF, image *QImage, sourceRect *QRectF, flags Qt_ImageConversionFlag) {
	q.Drv(87000, 87144, Native(targetRect), Native(image), Native(sourceRect), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawImage(int,int,QImage const&,int,int,int,int,QFlags<Qt::ImageConversionFlag>)
func (q *QPainter) DrawImageWithXYImageSxSySwShFlags(x int32, y int32, image *QImage, sx int32, sy int32, sw int32, sh int32, flags Qt_ImageConversionFlag) {
	q.Drv(87000, 87145, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(image), unsafe.Pointer(&sx), unsafe.Pointer(&sy), unsafe.Pointer(&sw), unsafe.Pointer(&sh), unsafe.Pointer(&flags), nil, nil, nil, nil)
}

//QPainter::drawLine(QLine const&)
func (q *QPainter) DrawLine(line *QLine) {
	q.Drv(87000, 87146, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLine(QLineF const&)
func (q *QPainter) DrawLineFWithLine(line *QLineF) {
	q.Drv(87000, 87147, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLine(QPoint const&,QPoint const&)
func (q *QPainter) DrawLineWithPointPoint(p1 *QPoint, p2 *QPoint) {
	q.Drv(87000, 87148, Native(p1), Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLine(QPointF const&,QPointF const&)
func (q *QPainter) DrawLineFWithPointfPointf(p1 *QPointF, p2 *QPointF) {
	q.Drv(87000, 87149, Native(p1), Native(p2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLine(int,int,int,int)
func (q *QPainter) DrawLineWithX1Y1X2Y2(x1 int32, y1 int32, x2 int32, y2 int32) {
	q.Drv(87000, 87150, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QVector<QLine> const&)
func (q *QPainter) DrawLines(lines []*QLine) {
	q.Drv(87000, 87151, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QVector<QLineF> const&)
func (q *QPainter) DrawLinesWithLinefs(lines []*QLineF) {
	q.Drv(87000, 87152, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QVector<QPoint> const&)
func (q *QPainter) DrawLinesWithPointpairs(pointPairs []*QPoint) {
	q.Drv(87000, 87153, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QVector<QPointF> const&)
func (q *QPainter) DrawLinesWithPointfpairs(pointPairs []*QPointF) {
	q.Drv(87000, 87154, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QLine const*,int)
func (q *QPainter) DrawLinesWithLinesLinecount(lines *QLine, lineCount int32) {
	q.Drv(87000, 87155, Native(lines), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QLineF const*,int)
func (q *QPainter) DrawLinesFWithLinesLinecount(lines *QLineF, lineCount int32) {
	q.Drv(87000, 87156, Native(lines), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QPoint const*,int)
func (q *QPainter) DrawLinesWithPointpairsLinecount(pointPairs *QPoint, lineCount int32) {
	q.Drv(87000, 87157, Native(pointPairs), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawLines(QPointF const*,int)
func (q *QPainter) DrawLinesFWithPointpairsLinecount(pointPairs *QPointF, lineCount int32) {
	q.Drv(87000, 87158, Native(pointPairs), unsafe.Pointer(&lineCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPath(QPainterPath const&)
func (q *QPainter) DrawPath(path *QPainterPath) {
	q.Drv(87000, 87159, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPicture(QPoint const&,QPicture const&)
func (q *QPainter) DrawPictureWithPointPicture(p *QPoint, picture *QPicture) {
	q.Drv(87000, 87160, Native(p), Native(picture), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPicture(QPointF const&,QPicture const&)
func (q *QPainter) DrawPictureFWithPointfPicture(p *QPointF, picture *QPicture) {
	q.Drv(87000, 87161, Native(p), Native(picture), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPicture(int,int,QPicture const&)
func (q *QPainter) DrawPictureWithXYPicture(x int32, y int32, picture *QPicture) {
	q.Drv(87000, 87162, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(picture), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPie(QRect const&,int,int)
func (q *QPainter) DrawPieWithRectStartangleSpanangle(value2 *QRect, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87163, Native(value2), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPie(QRectF const&,int,int)
func (q *QPainter) DrawPieFWithRectStartangleSpanangle(rect *QRectF, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87164, Native(rect), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPie(int,int,int,int,int,int)
func (q *QPainter) DrawPieWithXYWidthHeightStartangleSpanangle(x int32, y int32, w int32, h int32, startAngle int32, spanAngle int32) {
	q.Drv(87000, 87165, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&startAngle), unsafe.Pointer(&spanAngle), nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QPoint const&,QPixmap const&)
func (q *QPainter) DrawPixmapWithPointPixmap(p *QPoint, pm *QPixmap) {
	q.Drv(87000, 87166, Native(p), Native(pm), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QPointF const&,QPixmap const&)
func (q *QPainter) DrawPixmapFWithPointfPixmap(p *QPointF, pm *QPixmap) {
	q.Drv(87000, 87167, Native(p), Native(pm), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QRect const&,QPixmap const&)
func (q *QPainter) DrawPixmapWithRectPixmap(r *QRect, pm *QPixmap) {
	q.Drv(87000, 87168, Native(r), Native(pm), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QPoint const&,QPixmap const&,QRect const&)
func (q *QPainter) DrawPixmapWithPointPixmapRect(p *QPoint, pm *QPixmap, sr *QRect) {
	q.Drv(87000, 87169, Native(p), Native(pm), Native(sr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QPointF const&,QPixmap const&,QRectF const&)
func (q *QPainter) DrawPixmapFWithPointfPixmapRectf(p *QPointF, pm *QPixmap, sr *QRectF) {
	q.Drv(87000, 87170, Native(p), Native(pm), Native(sr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QRect const&,QPixmap const&,QRect const&)
func (q *QPainter) DrawPixmapWithTargetrectPixmapSourcerect(targetRect *QRect, pixmap *QPixmap, sourceRect *QRect) {
	q.Drv(87000, 87171, Native(targetRect), Native(pixmap), Native(sourceRect), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(QRectF const&,QPixmap const&,QRectF const&)
func (q *QPainter) DrawPixmapFWithTargetrectPixmapSourcerect(targetRect *QRectF, pixmap *QPixmap, sourceRect *QRectF) {
	q.Drv(87000, 87172, Native(targetRect), Native(pixmap), Native(sourceRect), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(int,int,QPixmap const&)
func (q *QPainter) DrawPixmapWithXYPixmap(x int32, y int32, pm *QPixmap) {
	q.Drv(87000, 87173, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(pm), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(int,int,int,int,QPixmap const&)
func (q *QPainter) DrawPixmapWithXYWidthHeightPixmap(x int32, y int32, w int32, h int32, pm *QPixmap) {
	q.Drv(87000, 87174, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(pm), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(int,int,QPixmap const&,int,int,int,int)
func (q *QPainter) DrawPixmapWithXYPixmapSxSySwSh(x int32, y int32, pm *QPixmap, sx int32, sy int32, sw int32, sh int32) {
	q.Drv(87000, 87175, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(pm), unsafe.Pointer(&sx), unsafe.Pointer(&sy), unsafe.Pointer(&sw), unsafe.Pointer(&sh), nil, nil, nil, nil, nil)
}

//QPainter::drawPixmap(int,int,int,int,QPixmap const&,int,int,int,int)
func (q *QPainter) DrawPixmapWithXYWidthHeightPixmapSxSySwSh(x int32, y int32, w int32, h int32, pm *QPixmap, sx int32, sy int32, sw int32, sh int32) {
	q.Drv(87000, 87176, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(pm), unsafe.Pointer(&sx), unsafe.Pointer(&sy), unsafe.Pointer(&sw), unsafe.Pointer(&sh), nil, nil, nil)
}

//QPainter::drawPixmapFragments(QPainter::PixmapFragment const*,int,QPixmap const&,QFlags<QPainter::PixmapFragmentHint>)
func (q *QPainter) DrawPixmapFragments(fragments *QPainterPixmapFragment, fragmentCount int32, pixmap *QPixmap, hints QPainter_PixmapFragmentHint) {
	q.Drv(87000, 87177, Native(fragments), unsafe.Pointer(&fragmentCount), Native(pixmap), unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoint(QPoint const&)
func (q *QPainter) DrawPoint(p *QPoint) {
	q.Drv(87000, 87178, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoint(QPointF const&)
func (q *QPainter) DrawPointFWithPointf(pt *QPointF) {
	q.Drv(87000, 87179, Native(pt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoint(int,int)
func (q *QPainter) DrawPointWithXY(x int32, y int32) {
	q.Drv(87000, 87180, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoints(QPolygon const&)
func (q *QPainter) DrawPoints(points *QPolygon) {
	q.Drv(87000, 87181, Native(points), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoints(QPolygonF const&)
func (q *QPainter) DrawPointsFWithPoints(points *QPolygonF) {
	q.Drv(87000, 87182, Native(points), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoints(QPoint const*,int)
func (q *QPainter) DrawPointsWithPointsPointcount(points *QPoint, pointCount int32) {
	q.Drv(87000, 87183, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPoints(QPointF const*,int)
func (q *QPainter) DrawPointsFWithPointsPointcount(points *QPointF, pointCount int32) {
	q.Drv(87000, 87184, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPolygon const&)
func (q *QPainter) DrawPolygon(polygon *QPolygon) {
	q.Drv(87000, 87185, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPolygonF const&)
func (q *QPainter) DrawPolygonFWithPolygon(polygon *QPolygonF) {
	q.Drv(87000, 87186, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPolygon const&,Qt::FillRule)
func (q *QPainter) DrawPolygonWithPolygonFillrule(polygon *QPolygon, fillRule Qt_FillRule) {
	q.Drv(87000, 87187, Native(polygon), unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPolygonF const&,Qt::FillRule)
func (q *QPainter) DrawPolygonFWithPolygonFillrule(polygon *QPolygonF, fillRule Qt_FillRule) {
	q.Drv(87000, 87188, Native(polygon), unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPoint const*,int,Qt::FillRule)
func (q *QPainter) DrawPolygonWithPointsPointcountFillrule(points *QPoint, pointCount int32, fillRule Qt_FillRule) {
	q.Drv(87000, 87189, Native(points), unsafe.Pointer(&pointCount), unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolygon(QPointF const*,int,Qt::FillRule)
func (q *QPainter) DrawPolygonFWithPointsPointcountFillrule(points *QPointF, pointCount int32, fillRule Qt_FillRule) {
	q.Drv(87000, 87190, Native(points), unsafe.Pointer(&pointCount), unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolyline(QPolygon const&)
func (q *QPainter) DrawPolyline(polygon *QPolygon) {
	q.Drv(87000, 87191, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolyline(QPolygonF const&)
func (q *QPainter) DrawPolylineFWithPolyline(polyline *QPolygonF) {
	q.Drv(87000, 87192, Native(polyline), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolyline(QPoint const*,int)
func (q *QPainter) DrawPolylineWithPointsPointcount(points *QPoint, pointCount int32) {
	q.Drv(87000, 87193, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawPolyline(QPointF const*,int)
func (q *QPainter) DrawPolylineFWithPointsPointcount(points *QPointF, pointCount int32) {
	q.Drv(87000, 87194, Native(points), unsafe.Pointer(&pointCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRect(QRect const&)
func (q *QPainter) DrawRect(rect *QRect) {
	q.Drv(87000, 87195, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRect(QRectF const&)
func (q *QPainter) DrawRectFWithRect(rect *QRectF) {
	q.Drv(87000, 87196, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRect(int,int,int,int)
func (q *QPainter) DrawRectWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(87000, 87197, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRects(QVector<QRect> const&)
func (q *QPainter) DrawRects(rectangles []*QRect) {
	q.Drv(87000, 87198, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRects(QVector<QRectF> const&)
func (q *QPainter) DrawRectsWithRectanglefs(rectangles []*QRectF) {
	q.Drv(87000, 87199, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRects(QRect const*,int)
func (q *QPainter) DrawRectsWithRectsRectcount(rects *QRect, rectCount int32) {
	q.Drv(87000, 87200, Native(rects), unsafe.Pointer(&rectCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRects(QRectF const*,int)
func (q *QPainter) DrawRectsFWithRectsRectcount(rects *QRectF, rectCount int32) {
	q.Drv(87000, 87201, Native(rects), unsafe.Pointer(&rectCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundRect(QRect const&)
func (q *QPainter) DrawRoundRect(r *QRect) {
	q.Drv(87000, 87202, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundRect(QRectF const&)
func (q *QPainter) DrawRoundRectFWithRectf(r *QRectF) {
	q.Drv(87000, 87203, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundRect(QRect const&,int,int)
func (q *QPainter) DrawRoundRectWithRectXroundYround(r *QRect, xround int32, yround int32) {
	q.Drv(87000, 87204, Native(r), unsafe.Pointer(&xround), unsafe.Pointer(&yround), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundRect(QRectF const&,int,int)
func (q *QPainter) DrawRoundRectFWithRectfXroundYround(r *QRectF, xround int32, yround int32) {
	q.Drv(87000, 87205, Native(r), unsafe.Pointer(&xround), unsafe.Pointer(&yround), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundRect(int,int,int,int,int,int)
func (q *QPainter) DrawRoundRectWithXYWidthHeightInt32Int32(x int32, y int32, w int32, h int32, value2 int32, value3 int32) {
	q.Drv(87000, 87206, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundedRect(QRect const&,double,double,Qt::SizeMode)
func (q *QPainter) DrawRoundedRectWithRectXradiusYradiusMode(rect *QRect, xRadius float64, yRadius float64, mode Qt_SizeMode) {
	q.Drv(87000, 87207, Native(rect), unsafe.Pointer(&xRadius), unsafe.Pointer(&yRadius), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundedRect(QRectF const&,double,double,Qt::SizeMode)
func (q *QPainter) DrawRoundedRectFWithRectXradiusYradiusMode(rect *QRectF, xRadius float64, yRadius float64, mode Qt_SizeMode) {
	q.Drv(87000, 87208, Native(rect), unsafe.Pointer(&xRadius), unsafe.Pointer(&yRadius), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawRoundedRect(int,int,int,int,double,double,Qt::SizeMode)
func (q *QPainter) DrawRoundedRectFWithXYWidthHeightXradiusYradiusMode(x int32, y int32, w int32, h int32, xRadius float64, yRadius float64, mode Qt_SizeMode) {
	q.Drv(87000, 87209, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&xRadius), unsafe.Pointer(&yRadius), unsafe.Pointer(&mode), nil, nil, nil, nil, nil)
}

//QPainter::drawStaticText(QPoint const&,QStaticText const&)
func (q *QPainter) DrawStaticTextWithTopleftpositionStatictext(topLeftPosition *QPoint, staticText *QStaticText) {
	q.Drv(87000, 87210, Native(topLeftPosition), Native(staticText), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawStaticText(QPointF const&,QStaticText const&)
func (q *QPainter) DrawStaticTextFWithTopleftpositionStatictext(topLeftPosition *QPointF, staticText *QStaticText) {
	q.Drv(87000, 87211, Native(topLeftPosition), Native(staticText), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawStaticText(int,int,QStaticText const&)
func (q *QPainter) DrawStaticTextWithLeftTopStatictext(left int32, top int32, staticText *QStaticText) {
	q.Drv(87000, 87212, unsafe.Pointer(&left), unsafe.Pointer(&top), Native(staticText), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QPoint const&,QString const&)
func (q *QPainter) DrawTextWithPointText(p *QPoint, s string) {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	q.Drv(87000, 87213, Native(p), unsafe.Pointer(_s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QPointF const&,QString const&)
func (q *QPainter) DrawTextFWithPointfText(p *QPointF, s string) {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	q.Drv(87000, 87214, Native(p), unsafe.Pointer(_s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QRectF const&,QString const&,QTextOption const&)
func (q *QPainter) DrawTextFWithRectfTextOption(r *QRectF, text string, o *QTextOption) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(87000, 87215, Native(r), unsafe.Pointer(_text), Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(int,int,QString const&)
func (q *QPainter) DrawTextWithXYText(x int32, y int32, s string) {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	q.Drv(87000, 87216, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(_s), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QPointF const&,QString const&,int,int)
func (q *QPainter) DrawTextFWithPointfTextTfJustificationpadding(p *QPointF, str string, tf int32, justificationPadding int32) {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	q.Drv(87000, 87217, Native(p), unsafe.Pointer(_str), unsafe.Pointer(&tf), unsafe.Pointer(&justificationPadding), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QRect const&,int,QString const&,QRect*)
func (q *QPainter) DrawTextWithRectFlagsTextRect(r *QRect, flags int32, text string, br *QRect) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(87000, 87218, Native(r), unsafe.Pointer(&flags), unsafe.Pointer(_text), Native(br), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(QRectF const&,int,QString const&,QRectF*)
func (q *QPainter) DrawTextFWithRectfFlagsTextRectf(r *QRectF, flags int32, text string, br *QRectF) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(87000, 87219, Native(r), unsafe.Pointer(&flags), unsafe.Pointer(_text), Native(br), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawText(int,int,int,int,int,QString const&,QRect*)
func (q *QPainter) DrawTextWithXYWidthHeightFlagsTextRect(x int32, y int32, w int32, h int32, flags int32, text string, br *QRect) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(87000, 87220, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&flags), unsafe.Pointer(_text), Native(br), nil, nil, nil, nil, nil)
}

//QPainter::drawTextItem(QPoint const&,QTextItem const&)
func (q *QPainter) DrawTextItemWithPointTi(p *QPoint, ti *QTextItem) {
	q.Drv(87000, 87221, Native(p), Native(ti), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawTextItem(QPointF const&,QTextItem const&)
func (q *QPainter) DrawTextItemFWithPointfTi(p *QPointF, ti *QTextItem) {
	q.Drv(87000, 87222, Native(p), Native(ti), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawTextItem(int,int,QTextItem const&)
func (q *QPainter) DrawTextItemWithXYTi(x int32, y int32, ti *QTextItem) {
	q.Drv(87000, 87223, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(ti), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawTiledPixmap(QRect const&,QPixmap const&,QPoint const&)
func (q *QPainter) DrawTiledPixmapWithRectPixmapPoint(value2 *QRect, value3 *QPixmap, value4 *QPoint) {
	q.Drv(87000, 87224, Native(value2), Native(value3), Native(value4), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawTiledPixmap(QRectF const&,QPixmap const&,QPointF const&)
func (q *QPainter) DrawTiledPixmapFWithRectPixmapOffset(rect *QRectF, pm *QPixmap, offset *QPointF) {
	q.Drv(87000, 87225, Native(rect), Native(pm), Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::drawTiledPixmap(int,int,int,int,QPixmap const&,int,int)
func (q *QPainter) DrawTiledPixmapWithXYWidthHeightPixmapSxSy(x int32, y int32, w int32, h int32, value2 *QPixmap, sx int32, sy int32) {
	q.Drv(87000, 87226, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(value2), unsafe.Pointer(&sx), unsafe.Pointer(&sy), nil, nil, nil, nil, nil)
}

//QPainter::end()
func (q *QPainter) End() bool {
	var __rv bool
	q.Drv(87000, 87227, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::endNativePainting()
func (q *QPainter) EndNativePainting() {
	q.Drv(87000, 87228, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::eraseRect(QRect const&)
func (q *QPainter) EraseRect(value *QRect) {
	q.Drv(87000, 87229, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::eraseRect(QRectF const&)
func (q *QPainter) EraseRectFWithRectf(value *QRectF) {
	q.Drv(87000, 87230, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::eraseRect(int,int,int,int)
func (q *QPainter) EraseRectWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(87000, 87231, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillPath(QPainterPath const&,QBrush const&)
func (q *QPainter) FillPath(path *QPainterPath, brush *QBrush) {
	q.Drv(87000, 87232, Native(path), Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRect const&,QBrush const&)
func (q *QPainter) FillRectWithRectBrush(value2 *QRect, value3 *QBrush) {
	q.Drv(87000, 87233, Native(value2), Native(value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRect const&,QColor const&)
func (q *QPainter) FillRectWithRectColor(value2 *QRect, color *QColor) {
	q.Drv(87000, 87234, Native(value2), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRect const&,Qt::BrushStyle)
func (q *QPainter) FillRectWithRectStyle(r *QRect, style Qt_BrushStyle) {
	q.Drv(87000, 87235, Native(r), unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRect const&,Qt::GlobalColor)
func (q *QPainter) FillRectWithRectGlobalcolor(r *QRect, c Qt_GlobalColor) {
	q.Drv(87000, 87236, Native(r), unsafe.Pointer(&c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRectF const&,QBrush const&)
func (q *QPainter) FillRectFWithRectfBrush(value2 *QRectF, value3 *QBrush) {
	q.Drv(87000, 87237, Native(value2), Native(value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRectF const&,QColor const&)
func (q *QPainter) FillRectFWithRectfColor(value2 *QRectF, color *QColor) {
	q.Drv(87000, 87238, Native(value2), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRectF const&,Qt::BrushStyle)
func (q *QPainter) FillRectFWithRectfStyle(r *QRectF, style Qt_BrushStyle) {
	q.Drv(87000, 87239, Native(r), unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(QRectF const&,Qt::GlobalColor)
func (q *QPainter) FillRectFWithRectfGlobalcolor(r *QRectF, c Qt_GlobalColor) {
	q.Drv(87000, 87240, Native(r), unsafe.Pointer(&c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(int,int,int,int,QBrush const&)
func (q *QPainter) FillRectWithXYWidthHeightBrush(x int32, y int32, w int32, h int32, value2 *QBrush) {
	q.Drv(87000, 87241, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(value2), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(int,int,int,int,QColor const&)
func (q *QPainter) FillRectWithXYWidthHeightColor(x int32, y int32, w int32, h int32, color *QColor) {
	q.Drv(87000, 87242, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(color), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(int,int,int,int,Qt::BrushStyle)
func (q *QPainter) FillRectWithXYWidthHeightStyle(x int32, y int32, w int32, h int32, style Qt_BrushStyle) {
	q.Drv(87000, 87243, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::fillRect(int,int,int,int,Qt::GlobalColor)
func (q *QPainter) FillRectWithXYWidthHeightGlobalcolor(x int32, y int32, w int32, h int32, c Qt_GlobalColor) {
	q.Drv(87000, 87244, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&c), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::font()
func (q *QPainter) Font() *QFont {
	var __rv uintptr
	q.Drv(87000, 87245, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QPainter::fontInfo()
func (q *QPainter) FontInfo() *QFontInfo {
	var __rv uintptr
	q.Drv(87000, 87246, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontInfo{}
	_rp.SetDriver(__rv, 39000, true)
	return _rp
}

//QPainter::fontMetrics()
func (q *QPainter) FontMetrics() *QFontMetrics {
	var __rv uintptr
	q.Drv(87000, 87247, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontMetrics{}
	_rp.SetDriver(__rv, 40000, true)
	return _rp
}

//QPainter::hasClipping()
func (q *QPainter) HasClipping() bool {
	var __rv bool
	q.Drv(87000, 87248, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::initFrom(QWidget const*)
func (q *QPainter) InitFrom(widget QWidgetInterface) {
	q.Drv(87000, 87249, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::isActive()
func (q *QPainter) IsActive() bool {
	var __rv bool
	q.Drv(87000, 87250, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::layoutDirection()
func (q *QPainter) LayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(87000, 87251, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::matrix()
func (q *QPainter) Matrix() *QMatrix {
	var __rv uintptr
	q.Drv(87000, 87252, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPainter::matrixEnabled()
func (q *QPainter) MatrixEnabled() bool {
	var __rv bool
	q.Drv(87000, 87253, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::opacity()
func (q *QPainter) Opacity() float64 {
	var __rv float64
	q.Drv(87000, 87254, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::paintEngine()
func (q *QPainter) PaintEngine() *QPaintEngine {
	var __rv uintptr
	q.Drv(87000, 87255, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintEngine{}
	_rp.SetDriver(__rv, 84000, true)
	return _rp
}

//QPainter::pen()
func (q *QPainter) Pen() *QPen {
	var __rv uintptr
	q.Drv(87000, 87256, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QPainter::redirected(QPaintDevice const*)
func QPainterRedirected(device QPaintDeviceInterface) *QPaintDevice {
	var __rv uintptr
	DirectQtDrv(nil, 87000, 87257, unsafe.Pointer(new_pd_head(device)), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPainter::redirected(QPaintDevice const*)
func (q *QPainter) Redirected(device QPaintDeviceInterface) *QPaintDevice {
	var __rv uintptr
	q.Drv(87000, 87257, unsafe.Pointer(new_pd_head(device)), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPainter::redirected(QPaintDevice const*,QPoint*)
func QPainterRedirectedWithPaintDeviceOffset(device QPaintDeviceInterface, offset *QPoint) *QPaintDevice {
	var __rv uintptr
	DirectQtDrv(nil, 87000, 87258, unsafe.Pointer(new_pd_head(device)), Native(offset), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPainter::redirected(QPaintDevice const*,QPoint*)
func (q *QPainter) RedirectedWithPaintDeviceOffset(device QPaintDeviceInterface, offset *QPoint) *QPaintDevice {
	var __rv uintptr
	q.Drv(87000, 87258, unsafe.Pointer(new_pd_head(device)), Native(offset), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QPainter::renderHints()
func (q *QPainter) RenderHints() QPainter_RenderHint {
	var __rv QPainter_RenderHint
	q.Drv(87000, 87259, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::resetMatrix()
func (q *QPainter) ResetMatrix() {
	q.Drv(87000, 87260, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::resetTransform()
func (q *QPainter) ResetTransform() {
	q.Drv(87000, 87261, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::restore()
func (q *QPainter) Restore() {
	q.Drv(87000, 87262, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::restoreRedirected(QPaintDevice const*)
func QPainterRestoreRedirected(device QPaintDeviceInterface) {
	DirectQtDrv(nil, 87000, 87263, unsafe.Pointer(new_pd_head(device)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::restoreRedirected(QPaintDevice const*)
func (q *QPainter) RestoreRedirected(device QPaintDeviceInterface) {
	q.Drv(87000, 87263, unsafe.Pointer(new_pd_head(device)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::rotate(double)
func (q *QPainter) Rotate(a float64) {
	q.Drv(87000, 87264, unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::save()
func (q *QPainter) Save() {
	q.Drv(87000, 87265, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::scale(double,double)
func (q *QPainter) Scale(sx float64, sy float64) {
	q.Drv(87000, 87266, unsafe.Pointer(&sx), unsafe.Pointer(&sy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBackground(QBrush const&)
func (q *QPainter) SetBackground(bg *QBrush) {
	q.Drv(87000, 87267, Native(bg), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBackgroundMode(Qt::BGMode)
func (q *QPainter) SetBackgroundMode(mode Qt_BGMode) {
	q.Drv(87000, 87268, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBrush(QBrush const&)
func (q *QPainter) SetBrush(brush *QBrush) {
	q.Drv(87000, 87269, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBrush(Qt::BrushStyle)
func (q *QPainter) SetBrushWithStyle(style Qt_BrushStyle) {
	q.Drv(87000, 87270, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBrushOrigin(QPoint const&)
func (q *QPainter) SetBrushOrigin(value *QPoint) {
	q.Drv(87000, 87271, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBrushOrigin(QPointF const&)
func (q *QPainter) SetBrushOriginFWithPointf(value *QPointF) {
	q.Drv(87000, 87272, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setBrushOrigin(int,int)
func (q *QPainter) SetBrushOriginWithXY(x int32, y int32) {
	q.Drv(87000, 87273, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipPath(QPainterPath const&)
func (q *QPainter) SetClipPath(path *QPainterPath) {
	q.Drv(87000, 87274, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipPath(QPainterPath const&,Qt::ClipOperation)
func (q *QPainter) SetClipPathWithPathOp(path *QPainterPath, op Qt_ClipOperation) {
	q.Drv(87000, 87275, Native(path), unsafe.Pointer(&op), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRect(QRect const&)
func (q *QPainter) SetClipRect(value *QRect) {
	q.Drv(87000, 87276, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRect(QRectF const&)
func (q *QPainter) SetClipRectFWithRectf(value *QRectF) {
	q.Drv(87000, 87277, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRect(QRect const&,Qt::ClipOperation)
func (q *QPainter) SetClipRectWithRectOp(value2 *QRect, op Qt_ClipOperation) {
	q.Drv(87000, 87278, Native(value2), unsafe.Pointer(&op), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRect(QRectF const&,Qt::ClipOperation)
func (q *QPainter) SetClipRectFWithRectfOp(value2 *QRectF, op Qt_ClipOperation) {
	q.Drv(87000, 87279, Native(value2), unsafe.Pointer(&op), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRect(int,int,int,int,Qt::ClipOperation)
func (q *QPainter) SetClipRectWithXYWidthHeightOp(x int32, y int32, w int32, h int32, op Qt_ClipOperation) {
	q.Drv(87000, 87280, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&op), nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRegion(QRegion const&)
func (q *QPainter) SetClipRegion(value *QRegion) {
	q.Drv(87000, 87281, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipRegion(QRegion const&,Qt::ClipOperation)
func (q *QPainter) SetClipRegionWithRegionOp(value2 *QRegion, op Qt_ClipOperation) {
	q.Drv(87000, 87282, Native(value2), unsafe.Pointer(&op), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setClipping(bool)
func (q *QPainter) SetClipping(enable bool) {
	q.Drv(87000, 87283, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setCompositionMode(QPainter::CompositionMode)
func (q *QPainter) SetCompositionMode(mode QPainter_CompositionMode) {
	q.Drv(87000, 87284, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setFont(QFont const&)
func (q *QPainter) SetFont(f *QFont) {
	q.Drv(87000, 87285, Native(f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setLayoutDirection(Qt::LayoutDirection)
func (q *QPainter) SetLayoutDirection(direction Qt_LayoutDirection) {
	q.Drv(87000, 87286, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setMatrix(QMatrix const&)
func (q *QPainter) SetMatrix(matrix *QMatrix) {
	q.Drv(87000, 87287, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setMatrix(QMatrix const&,bool)
func (q *QPainter) SetMatrixWithMatrixCombine(matrix *QMatrix, combine bool) {
	q.Drv(87000, 87288, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setMatrixEnabled(bool)
func (q *QPainter) SetMatrixEnabled(enabled bool) {
	q.Drv(87000, 87289, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setOpacity(double)
func (q *QPainter) SetOpacity(opacity float64) {
	q.Drv(87000, 87290, unsafe.Pointer(&opacity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setPen(QColor const&)
func (q *QPainter) SetPen(color *QColor) {
	q.Drv(87000, 87291, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setPen(QPen const&)
func (q *QPainter) SetPenWithPen(pen *QPen) {
	q.Drv(87000, 87292, Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setPen(Qt::PenStyle)
func (q *QPainter) SetPenWithStyle(style Qt_PenStyle) {
	q.Drv(87000, 87293, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRedirected(QPaintDevice const*,QPaintDevice*,QPoint const&)
func QPainterSetRedirected(device QPaintDeviceInterface, replacement QPaintDeviceInterface, offset *QPoint) {
	DirectQtDrv(nil, 87000, 87294, unsafe.Pointer(new_pd_head(device)), unsafe.Pointer(new_pd_head(replacement)), Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRedirected(QPaintDevice const*,QPaintDevice*,QPoint const&)
func (q *QPainter) SetRedirected(device QPaintDeviceInterface, replacement QPaintDeviceInterface, offset *QPoint) {
	q.Drv(87000, 87294, unsafe.Pointer(new_pd_head(device)), unsafe.Pointer(new_pd_head(replacement)), Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRenderHint(QPainter::RenderHint)
func (q *QPainter) SetRenderHint(hint QPainter_RenderHint) {
	q.Drv(87000, 87295, unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRenderHint(QPainter::RenderHint,bool)
func (q *QPainter) SetRenderHintWithHintOn(hint QPainter_RenderHint, on bool) {
	q.Drv(87000, 87296, unsafe.Pointer(&hint), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRenderHints(QFlags<QPainter::RenderHint>)
func (q *QPainter) SetRenderHints(hints QPainter_RenderHint) {
	q.Drv(87000, 87297, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setRenderHints(QFlags<QPainter::RenderHint>,bool)
func (q *QPainter) SetRenderHintsWithHintsOn(hints QPainter_RenderHint, on bool) {
	q.Drv(87000, 87298, unsafe.Pointer(&hints), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setTransform(QTransform const&)
func (q *QPainter) SetTransform(transform *QTransform) {
	q.Drv(87000, 87299, Native(transform), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setTransform(QTransform const&,bool)
func (q *QPainter) SetTransformWithTransformCombine(transform *QTransform, combine bool) {
	q.Drv(87000, 87300, Native(transform), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setViewTransformEnabled(bool)
func (q *QPainter) SetViewTransformEnabled(enable bool) {
	q.Drv(87000, 87301, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setViewport(QRect const&)
func (q *QPainter) SetViewport(viewport *QRect) {
	q.Drv(87000, 87302, Native(viewport), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setViewport(int,int,int,int)
func (q *QPainter) SetViewportWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(87000, 87303, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWindow(QRect const&)
func (q *QPainter) SetWindow(window *QRect) {
	q.Drv(87000, 87304, Native(window), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWindow(int,int,int,int)
func (q *QPainter) SetWindowWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(87000, 87305, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWorldMatrix(QMatrix const&)
func (q *QPainter) SetWorldMatrix(matrix *QMatrix) {
	q.Drv(87000, 87306, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWorldMatrix(QMatrix const&,bool)
func (q *QPainter) SetWorldMatrixWithMatrixCombine(matrix *QMatrix, combine bool) {
	q.Drv(87000, 87307, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWorldMatrixEnabled(bool)
func (q *QPainter) SetWorldMatrixEnabled(enabled bool) {
	q.Drv(87000, 87308, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWorldTransform(QTransform const&)
func (q *QPainter) SetWorldTransform(matrix *QTransform) {
	q.Drv(87000, 87309, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::setWorldTransform(QTransform const&,bool)
func (q *QPainter) SetWorldTransformWithTransformCombine(matrix *QTransform, combine bool) {
	q.Drv(87000, 87310, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::shear(double,double)
func (q *QPainter) Shear(sh float64, sv float64) {
	q.Drv(87000, 87311, unsafe.Pointer(&sh), unsafe.Pointer(&sv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::strokePath(QPainterPath const&,QPen const&)
func (q *QPainter) StrokePath(path *QPainterPath, pen *QPen) {
	q.Drv(87000, 87312, Native(path), Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::testRenderHint(QPainter::RenderHint)
func (q *QPainter) TestRenderHint(hint QPainter_RenderHint) bool {
	var __rv bool
	q.Drv(87000, 87313, unsafe.Pointer(&hint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::transform()
func (q *QPainter) Transform() *QTransform {
	var __rv uintptr
	q.Drv(87000, 87314, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QPainter::translate(QPoint const&)
func (q *QPainter) Translate(offset *QPoint) {
	q.Drv(87000, 87315, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::translate(QPointF const&)
func (q *QPainter) TranslateFWithOffset(offset *QPointF) {
	q.Drv(87000, 87316, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::translate(double,double)
func (q *QPainter) TranslateFWithDxDy(dx float64, dy float64) {
	q.Drv(87000, 87317, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainter::viewTransformEnabled()
func (q *QPainter) ViewTransformEnabled() bool {
	var __rv bool
	q.Drv(87000, 87318, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::viewport()
func (q *QPainter) Viewport() *QRect {
	var __rv uintptr
	q.Drv(87000, 87319, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPainter::window()
func (q *QPainter) Window() *QRect {
	var __rv uintptr
	q.Drv(87000, 87320, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPainter::worldMatrix()
func (q *QPainter) WorldMatrix() *QMatrix {
	var __rv uintptr
	q.Drv(87000, 87321, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPainter::worldMatrixEnabled()
func (q *QPainter) WorldMatrixEnabled() bool {
	var __rv bool
	q.Drv(87000, 87322, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainter::worldTransform()
func (q *QPainter) WorldTransform() *QTransform {
	var __rv uintptr
	q.Drv(87000, 87323, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//struct QPainterPixmapFragment : QPainter::PixmapFragment
type QPainterPixmapFragment struct {
	BaseDrv
}

//QPainter::PixmapFragment::PixmapFragment()
func NewPainterPixmapFragment() *QPainterPixmapFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 88000, 88102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPixmapFragment{}
	_p.SetDriver(__rv, 88000, true)
	return _p
}

//QPainter::PixmapFragment::create(QPointF const&,QRectF const&,double,double,double,double)
func QPainterPixmapFragmentCreate(pos *QPointF, sourceRect *QRectF, scaleX float64, scaleY float64, rotation float64, opacity float64) *QPainterPixmapFragment {
	var __rv uintptr
	DirectQtDrv(nil, 88000, 88103, Native(pos), Native(sourceRect), unsafe.Pointer(&scaleX), unsafe.Pointer(&scaleY), unsafe.Pointer(&rotation), unsafe.Pointer(&opacity), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPixmapFragment{}
	_rp.SetDriver(__rv, 88000, true)
	return _rp
}

//QPainter::PixmapFragment::create(QPointF const&,QRectF const&,double,double,double,double)
func (q *QPainterPixmapFragment) Create(pos *QPointF, sourceRect *QRectF, scaleX float64, scaleY float64, rotation float64, opacity float64) *QPainterPixmapFragment {
	var __rv uintptr
	q.Drv(88000, 88103, Native(pos), Native(sourceRect), unsafe.Pointer(&scaleX), unsafe.Pointer(&scaleY), unsafe.Pointer(&rotation), unsafe.Pointer(&opacity), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPixmapFragment{}
	_rp.SetDriver(__rv, 88000, true)
	return _rp
}

//enum QPainterPath_ElementType - QPainterPath::ElementType
type QPainterPath_ElementType uint32

const (
	QPainterPath_MoveToElement      QPainterPath_ElementType = 0
	QPainterPath_LineToElement      QPainterPath_ElementType = 1
	QPainterPath_CurveToElement     QPainterPath_ElementType = 2
	QPainterPath_CurveToDataElement QPainterPath_ElementType = 3
)

//struct QPainterPath : QPainterPath
type QPainterPath struct {
	BaseDrv
}

//QPainterPath::QPainterPath()
func NewPainterPath() *QPainterPath {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 89000, 89102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPath{}
	_p.SetDriver(__rv, 89000, true)
	return _p
}

//QPainterPath::QPainterPath(QPainterPath const&)
func NewPainterPathCopy(other *QPainterPath) *QPainterPath {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 89000, 89103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPath{}
	_p.SetDriver(__rv, 89000, true)
	return _p
}

//QPainterPath::QPainterPath(QPointF const&)
func NewPainterPathWithStartpoint(startPoint *QPointF) *QPainterPath {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 89000, 89104, Native(startPoint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPath{}
	_p.SetDriver(__rv, 89000, true)
	return _p
}

//QPainterPath::addEllipse(QRectF const&)
func (q *QPainterPath) AddEllipse(rect *QRectF) {
	q.Drv(89000, 89105, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addEllipse(QPointF const&,double,double)
func (q *QPainterPath) AddEllipseFWithCenterRxRy(center *QPointF, rx float64, ry float64) {
	q.Drv(89000, 89106, Native(center), unsafe.Pointer(&rx), unsafe.Pointer(&ry), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addEllipse(double,double,double,double)
func (q *QPainterPath) AddEllipseFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(89000, 89107, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addPath(QPainterPath const&)
func (q *QPainterPath) AddPath(path *QPainterPath) {
	q.Drv(89000, 89108, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addPolygon(QPolygonF const&)
func (q *QPainterPath) AddPolygon(polygon *QPolygonF) {
	q.Drv(89000, 89109, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRect(QRectF const&)
func (q *QPainterPath) AddRect(rect *QRectF) {
	q.Drv(89000, 89110, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRect(double,double,double,double)
func (q *QPainterPath) AddRectFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(89000, 89111, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRegion(QRegion const&)
func (q *QPainterPath) AddRegion(region *QRegion) {
	q.Drv(89000, 89112, Native(region), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundRect(QRectF const&,int)
func (q *QPainterPath) AddRoundRectFWithRectRoundness(rect *QRectF, roundness int32) {
	q.Drv(89000, 89113, Native(rect), unsafe.Pointer(&roundness), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundRect(QRectF const&,int,int)
func (q *QPainterPath) AddRoundRectFWithRectXrndYrnd(rect *QRectF, xRnd int32, yRnd int32) {
	q.Drv(89000, 89114, Native(rect), unsafe.Pointer(&xRnd), unsafe.Pointer(&yRnd), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundRect(double,double,double,double,int)
func (q *QPainterPath) AddRoundRectFWithXYWidthHeightRoundness(x float64, y float64, w float64, h float64, roundness int32) {
	q.Drv(89000, 89115, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&roundness), nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundRect(double,double,double,double,int,int)
func (q *QPainterPath) AddRoundRectFWithXYWidthHeightXrndYrnd(x float64, y float64, w float64, h float64, xRnd int32, yRnd int32) {
	q.Drv(89000, 89116, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&xRnd), unsafe.Pointer(&yRnd), nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundedRect(QRectF const&,double,double,Qt::SizeMode)
func (q *QPainterPath) AddRoundedRectFWithRectXradiusYradiusMode(rect *QRectF, xRadius float64, yRadius float64, mode Qt_SizeMode) {
	q.Drv(89000, 89117, Native(rect), unsafe.Pointer(&xRadius), unsafe.Pointer(&yRadius), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addRoundedRect(double,double,double,double,double,double,Qt::SizeMode)
func (q *QPainterPath) AddRoundedRectFWithXYWidthHeightXradiusYradiusMode(x float64, y float64, w float64, h float64, xRadius float64, yRadius float64, mode Qt_SizeMode) {
	q.Drv(89000, 89118, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&xRadius), unsafe.Pointer(&yRadius), unsafe.Pointer(&mode), nil, nil, nil, nil, nil)
}

//QPainterPath::addText(QPointF const&,QFont const&,QString const&)
func (q *QPainterPath) AddTextFWithPointFText(point *QPointF, f *QFont, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(89000, 89119, Native(point), Native(f), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::addText(double,double,QFont const&,QString const&)
func (q *QPainterPath) AddTextFWithXYFText(x float64, y float64, f *QFont, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(89000, 89120, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(f), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::angleAtPercent(double)
func (q *QPainterPath) AngleAtPercent(t float64) float64 {
	var __rv float64
	q.Drv(89000, 89121, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::arcMoveTo(QRectF const&,double)
func (q *QPainterPath) ArcMoveToFWithRectAngle(rect *QRectF, angle float64) {
	q.Drv(89000, 89122, Native(rect), unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::arcMoveTo(double,double,double,double,double)
func (q *QPainterPath) ArcMoveToFWithXYWidthHeightAngle(x float64, y float64, w float64, h float64, angle float64) {
	q.Drv(89000, 89123, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::arcTo(QRectF const&,double,double)
func (q *QPainterPath) ArcToFWithRectStartangleArclength(rect *QRectF, startAngle float64, arcLength float64) {
	q.Drv(89000, 89124, Native(rect), unsafe.Pointer(&startAngle), unsafe.Pointer(&arcLength), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::arcTo(double,double,double,double,double,double)
func (q *QPainterPath) ArcToFWithXYWidthHeightStartangleArclength(x float64, y float64, w float64, h float64, startAngle float64, arcLength float64) {
	q.Drv(89000, 89125, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&startAngle), unsafe.Pointer(&arcLength), nil, nil, nil, nil, nil, nil)
}

//QPainterPath::boundingRect()
func (q *QPainterPath) BoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(89000, 89126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPainterPath::closeSubpath()
func (q *QPainterPath) CloseSubpath() {
	q.Drv(89000, 89127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::connectPath(QPainterPath const&)
func (q *QPainterPath) ConnectPath(path *QPainterPath) {
	q.Drv(89000, 89128, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::contains(QPainterPath const&)
func (q *QPainterPath) Contains(p *QPainterPath) bool {
	var __rv bool
	q.Drv(89000, 89129, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::contains(QPointF const&)
func (q *QPainterPath) ContainsFWithPointf(pt *QPointF) bool {
	var __rv bool
	q.Drv(89000, 89130, Native(pt), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::contains(QRectF const&)
func (q *QPainterPath) ContainsFWithRect(rect *QRectF) bool {
	var __rv bool
	q.Drv(89000, 89131, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::controlPointRect()
func (q *QPainterPath) ControlPointRect() *QRectF {
	var __rv uintptr
	q.Drv(89000, 89132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPainterPath::cubicTo(QPointF const&,QPointF const&,QPointF const&)
func (q *QPainterPath) CubicToFWithCtrlpt1Ctrlpt2Endpt(ctrlPt1 *QPointF, ctrlPt2 *QPointF, endPt *QPointF) {
	q.Drv(89000, 89133, Native(ctrlPt1), Native(ctrlPt2), Native(endPt), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::cubicTo(double,double,double,double,double,double)
func (q *QPainterPath) CubicToFWithCtrlpt1xCtrlpt1yCtrlpt2xCtrlpt2yEndptxEndpty(ctrlPt1x float64, ctrlPt1y float64, ctrlPt2x float64, ctrlPt2y float64, endPtx float64, endPty float64) {
	q.Drv(89000, 89134, unsafe.Pointer(&ctrlPt1x), unsafe.Pointer(&ctrlPt1y), unsafe.Pointer(&ctrlPt2x), unsafe.Pointer(&ctrlPt2y), unsafe.Pointer(&endPtx), unsafe.Pointer(&endPty), nil, nil, nil, nil, nil, nil)
}

//QPainterPath::currentPosition()
func (q *QPainterPath) CurrentPosition() *QPointF {
	var __rv uintptr
	q.Drv(89000, 89135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPainterPath::elementAt(int)
func (q *QPainterPath) ElementAt(i int32) *QPainterPathElement {
	var __rv uintptr
	q.Drv(89000, 89136, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPathElement{}
	_rp.SetDriver(__rv, 90000, true)
	return _rp
}

//QPainterPath::elementCount()
func (q *QPainterPath) ElementCount() int32 {
	var __rv int32
	q.Drv(89000, 89137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::fillRule()
func (q *QPainterPath) FillRule() Qt_FillRule {
	var __rv Qt_FillRule
	q.Drv(89000, 89138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::intersected(QPainterPath const&)
func (q *QPainterPath) Intersected(r *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89139, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::intersects(QPainterPath const&)
func (q *QPainterPath) Intersects(p *QPainterPath) bool {
	var __rv bool
	q.Drv(89000, 89140, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::intersects(QRectF const&)
func (q *QPainterPath) IntersectsFWithRect(rect *QRectF) bool {
	var __rv bool
	q.Drv(89000, 89141, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::isEmpty()
func (q *QPainterPath) IsEmpty() bool {
	var __rv bool
	q.Drv(89000, 89142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::length()
func (q *QPainterPath) Length() float64 {
	var __rv float64
	q.Drv(89000, 89143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::lineTo(QPointF const&)
func (q *QPainterPath) LineTo(p *QPointF) {
	q.Drv(89000, 89144, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::lineTo(double,double)
func (q *QPainterPath) LineToFWithXY(x float64, y float64) {
	q.Drv(89000, 89145, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::moveTo(QPointF const&)
func (q *QPainterPath) MoveTo(p *QPointF) {
	q.Drv(89000, 89146, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::moveTo(double,double)
func (q *QPainterPath) MoveToFWithXY(x float64, y float64) {
	q.Drv(89000, 89147, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::percentAtLength(double)
func (q *QPainterPath) PercentAtLength(t float64) float64 {
	var __rv float64
	q.Drv(89000, 89148, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::pointAtPercent(double)
func (q *QPainterPath) PointAtPercent(t float64) *QPointF {
	var __rv uintptr
	q.Drv(89000, 89149, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPainterPath::quadTo(QPointF const&,QPointF const&)
func (q *QPainterPath) QuadToFWithCtrlptEndpt(ctrlPt *QPointF, endPt *QPointF) {
	q.Drv(89000, 89150, Native(ctrlPt), Native(endPt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::quadTo(double,double,double,double)
func (q *QPainterPath) QuadToFWithCtrlptxCtrlptyEndptxEndpty(ctrlPtx float64, ctrlPty float64, endPtx float64, endPty float64) {
	q.Drv(89000, 89151, unsafe.Pointer(&ctrlPtx), unsafe.Pointer(&ctrlPty), unsafe.Pointer(&endPtx), unsafe.Pointer(&endPty), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::setElementPositionAt(int,double,double)
func (q *QPainterPath) SetElementPositionAt(i int32, x float64, y float64) {
	q.Drv(89000, 89152, unsafe.Pointer(&i), unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::setFillRule(Qt::FillRule)
func (q *QPainterPath) SetFillRule(fillRule Qt_FillRule) {
	q.Drv(89000, 89153, unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::simplified()
func (q *QPainterPath) Simplified() *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::slopeAtPercent(double)
func (q *QPainterPath) SlopeAtPercent(t float64) float64 {
	var __rv float64
	q.Drv(89000, 89155, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::subtracted(QPainterPath const&)
func (q *QPainterPath) Subtracted(r *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89156, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::subtractedInverted(QPainterPath const&)
func (q *QPainterPath) SubtractedInverted(r *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89157, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::toFillPolygon()
func (q *QPainterPath) ToFillPolygon() *QPolygonF {
	var __rv uintptr
	q.Drv(89000, 89158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPainterPath::toFillPolygon(QMatrix const&)
func (q *QPainterPath) ToFillPolygonWithMatrix(matrix *QMatrix) *QPolygonF {
	var __rv uintptr
	q.Drv(89000, 89159, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPainterPath::toFillPolygon(QTransform const&)
func (q *QPainterPath) ToFillPolygonWithTransform(matrix *QTransform) *QPolygonF {
	var __rv uintptr
	q.Drv(89000, 89160, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPainterPath::toFillPolygons()
func (q *QPainterPath) ToFillPolygons() []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::toFillPolygons(QMatrix const&)
func (q *QPainterPath) ToFillPolygonsWithMatrix(matrix *QMatrix) []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89162, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::toFillPolygons(QTransform const&)
func (q *QPainterPath) ToFillPolygonsWithTransform(matrix *QTransform) []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89163, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::toReversed()
func (q *QPainterPath) ToReversed() *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::toSubpathPolygons()
func (q *QPainterPath) ToSubpathPolygons() []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::toSubpathPolygons(QMatrix const&)
func (q *QPainterPath) ToSubpathPolygonsWithMatrix(matrix *QMatrix) []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89166, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::toSubpathPolygons(QTransform const&)
func (q *QPainterPath) ToSubpathPolygonsWithTransform(matrix *QTransform) []*QPolygonF {
	var __rv []*QPolygonF
	q.Drv(89000, 89167, Native(matrix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::translate(QPointF const&)
func (q *QPainterPath) Translate(offset *QPointF) {
	q.Drv(89000, 89168, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::translate(double,double)
func (q *QPainterPath) TranslateFWithDxDy(dx float64, dy float64) {
	q.Drv(89000, 89169, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPath::translated(QPointF const&)
func (q *QPainterPath) Translated(offset *QPointF) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89170, Native(offset), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::translated(double,double)
func (q *QPainterPath) TranslatedFWithDxDy(dx float64, dy float64) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89171, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPath::united(QPainterPath const&)
func (q *QPainterPath) United(r *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(89000, 89172, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//struct QPainterPathElement : QPainterPath::Element
type QPainterPathElement struct {
	BaseDrv
}

//QPainterPath::Element::Element()
func NewPainterPathElement() *QPainterPathElement {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 90000, 90102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPathElement{}
	_p.SetDriver(__rv, 90000, true)
	return _p
}

//QPainterPath::Element::isCurveTo()
func (q *QPainterPathElement) IsCurveTo() bool {
	var __rv bool
	q.Drv(90000, 90103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::Element::isLineTo()
func (q *QPainterPathElement) IsLineTo() bool {
	var __rv bool
	q.Drv(90000, 90104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPath::Element::isMoveTo()
func (q *QPainterPathElement) IsMoveTo() bool {
	var __rv bool
	q.Drv(90000, 90105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPainterPathStroker : QPainterPathStroker
type QPainterPathStroker struct {
	BaseDrv
}

//QPainterPathStroker::QPainterPathStroker()
func NewPainterPathStroker() *QPainterPathStroker {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 91000, 91102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPainterPathStroker{}
	_p.SetDriver(__rv, 91000, true)
	return _p
}

//QPainterPathStroker::capStyle()
func (q *QPainterPathStroker) CapStyle() Qt_PenCapStyle {
	var __rv Qt_PenCapStyle
	q.Drv(91000, 91103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::createStroke(QPainterPath const&)
func (q *QPainterPathStroker) CreateStroke(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(91000, 91104, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QPainterPathStroker::curveThreshold()
func (q *QPainterPathStroker) CurveThreshold() float64 {
	var __rv float64
	q.Drv(91000, 91105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::dashOffset()
func (q *QPainterPathStroker) DashOffset() float64 {
	var __rv float64
	q.Drv(91000, 91106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::dashPattern()
func (q *QPainterPathStroker) DashPattern() []float64 {
	var __rv []float64
	q.Drv(91000, 91107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::joinStyle()
func (q *QPainterPathStroker) JoinStyle() Qt_PenJoinStyle {
	var __rv Qt_PenJoinStyle
	q.Drv(91000, 91108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::miterLimit()
func (q *QPainterPathStroker) MiterLimit() float64 {
	var __rv float64
	q.Drv(91000, 91109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPainterPathStroker::setCapStyle(Qt::PenCapStyle)
func (q *QPainterPathStroker) SetCapStyle(style Qt_PenCapStyle) {
	q.Drv(91000, 91110, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setCurveThreshold(double)
func (q *QPainterPathStroker) SetCurveThreshold(threshold float64) {
	q.Drv(91000, 91111, unsafe.Pointer(&threshold), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setDashOffset(double)
func (q *QPainterPathStroker) SetDashOffset(offset float64) {
	q.Drv(91000, 91112, unsafe.Pointer(&offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setDashPattern(QVector<qreal> const&)
func (q *QPainterPathStroker) SetDashPattern(dashPattern []float64) {
	_dashPattern := NewCDoubleArrayHead(dashPattern)
	defer FreeCDoubleArrayHead(_dashPattern)
	q.Drv(91000, 91113, unsafe.Pointer(_dashPattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setDashPattern(Qt::PenStyle)
func (q *QPainterPathStroker) SetDashPatternWithPenstyle(value Qt_PenStyle) {
	q.Drv(91000, 91114, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setJoinStyle(Qt::PenJoinStyle)
func (q *QPainterPathStroker) SetJoinStyle(style Qt_PenJoinStyle) {
	q.Drv(91000, 91115, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setMiterLimit(double)
func (q *QPainterPathStroker) SetMiterLimit(length float64) {
	q.Drv(91000, 91116, unsafe.Pointer(&length), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::setWidth(double)
func (q *QPainterPathStroker) SetWidth(width float64) {
	q.Drv(91000, 91117, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPainterPathStroker::width()
func (q *QPainterPathStroker) Width() float64 {
	var __rv float64
	q.Drv(91000, 91118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QPalette_ColorGroup - QPalette::ColorGroup
type QPalette_ColorGroup uint32

const (
	QPalette_Active       QPalette_ColorGroup = 0
	QPalette_Disabled     QPalette_ColorGroup = 1
	QPalette_Inactive     QPalette_ColorGroup = 2
	QPalette_NColorGroups QPalette_ColorGroup = 3
	QPalette_Current      QPalette_ColorGroup = 4
	QPalette_All          QPalette_ColorGroup = 5
	QPalette_Normal       QPalette_ColorGroup = QPalette_Active
)

//enum QPalette_ColorRole - QPalette::ColorRole
type QPalette_ColorRole uint32

const (
	QPalette_WindowText      QPalette_ColorRole = 0
	QPalette_Button          QPalette_ColorRole = 1
	QPalette_Light           QPalette_ColorRole = 2
	QPalette_Midlight        QPalette_ColorRole = 3
	QPalette_Dark            QPalette_ColorRole = 4
	QPalette_Mid             QPalette_ColorRole = 5
	QPalette_Text            QPalette_ColorRole = 6
	QPalette_BrightText      QPalette_ColorRole = 7
	QPalette_ButtonText      QPalette_ColorRole = 8
	QPalette_Base            QPalette_ColorRole = 9
	QPalette_Window          QPalette_ColorRole = 10
	QPalette_Shadow          QPalette_ColorRole = 11
	QPalette_Highlight       QPalette_ColorRole = 12
	QPalette_HighlightedText QPalette_ColorRole = 13
	QPalette_Link            QPalette_ColorRole = 14
	QPalette_LinkVisited     QPalette_ColorRole = 15
	QPalette_AlternateBase   QPalette_ColorRole = 16
	QPalette_NoRole          QPalette_ColorRole = 17
	QPalette_ToolTipBase     QPalette_ColorRole = 18
	QPalette_ToolTipText     QPalette_ColorRole = 19
	QPalette_NColorRoles     QPalette_ColorRole = QPalette_ToolTipText + 1
	QPalette_Foreground      QPalette_ColorRole = QPalette_WindowText
	QPalette_Background      QPalette_ColorRole = QPalette_Window
)

//struct QPalette : QPalette
type QPalette struct {
	BaseDrv
}

//QPalette::QPalette()
func NewPalette() *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(QColor const&)
func NewPaletteWithColor(button *QColor) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92103, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(QPalette const&)
func NewPaletteCopy(palette *QPalette) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92104, Native(palette), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(Qt::GlobalColor)
func NewPaletteWithGlobalcolor(button Qt_GlobalColor) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92105, unsafe.Pointer(&button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(QColor const&,QColor const&)
func NewPaletteWithColorColor(button *QColor, window *QColor) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92106, Native(button), Native(window), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(QColor const&,QColor const&,QColor const&,QColor const&,QColor const&,QColor const&,QColor const&)
func NewPaletteWithColorColorColorColorColorColorColor(windowText *QColor, window *QColor, light *QColor, dark *QColor, mid *QColor, text *QColor, base *QColor) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92107, Native(windowText), Native(window), Native(light), Native(dark), Native(mid), Native(text), Native(base), nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::QPalette(QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&)
func NewPaletteWithWindowtextButtonLightDarkMidTextBright_textBaseWindow(windowText *QBrush, button *QBrush, light *QBrush, dark *QBrush, mid *QBrush, text *QBrush, bright_text *QBrush, base *QBrush, window *QBrush) *QPalette {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 92000, 92108, Native(windowText), Native(button), Native(light), Native(dark), Native(mid), Native(text), Native(bright_text), Native(base), Native(window), nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPalette{}
	_p.SetDriver(__rv, 92000, true)
	return _p
}

//QPalette::alternateBase()
func (q *QPalette) AlternateBase() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::background()
func (q *QPalette) Background() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::base()
func (q *QPalette) Base() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::brightText()
func (q *QPalette) BrightText() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::brush(QPalette::ColorRole)
func (q *QPalette) Brush(cr QPalette_ColorRole) *QBrush {
	var __rv uintptr
	q.Drv(92000, 92113, unsafe.Pointer(&cr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::brush(QPalette::ColorGroup,QPalette::ColorRole)
func (q *QPalette) BrushWithCgCr(cg QPalette_ColorGroup, cr QPalette_ColorRole) *QBrush {
	var __rv uintptr
	q.Drv(92000, 92114, unsafe.Pointer(&cg), unsafe.Pointer(&cr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::button()
func (q *QPalette) Button() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::buttonText()
func (q *QPalette) ButtonText() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::cacheKey()
func (q *QPalette) CacheKey() int64 {
	var __rv int64
	q.Drv(92000, 92117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::color(QPalette::ColorRole)
func (q *QPalette) Color(cr QPalette_ColorRole) *QColor {
	var __rv uintptr
	q.Drv(92000, 92118, unsafe.Pointer(&cr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QPalette::color(QPalette::ColorGroup,QPalette::ColorRole)
func (q *QPalette) ColorWithCgCr(cg QPalette_ColorGroup, cr QPalette_ColorRole) *QColor {
	var __rv uintptr
	q.Drv(92000, 92119, unsafe.Pointer(&cg), unsafe.Pointer(&cr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QPalette::currentColorGroup()
func (q *QPalette) CurrentColorGroup() QPalette_ColorGroup {
	var __rv QPalette_ColorGroup
	q.Drv(92000, 92120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::dark()
func (q *QPalette) Dark() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::foreground()
func (q *QPalette) Foreground() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::highlight()
func (q *QPalette) Highlight() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::highlightedText()
func (q *QPalette) HighlightedText() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::isBrushSet(QPalette::ColorGroup,QPalette::ColorRole)
func (q *QPalette) IsBrushSet(cg QPalette_ColorGroup, cr QPalette_ColorRole) bool {
	var __rv bool
	q.Drv(92000, 92125, unsafe.Pointer(&cg), unsafe.Pointer(&cr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::isCopyOf(QPalette const&)
func (q *QPalette) IsCopyOf(p *QPalette) bool {
	var __rv bool
	q.Drv(92000, 92126, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::isEqual(QPalette::ColorGroup,QPalette::ColorGroup)
func (q *QPalette) IsEqual(cr1 QPalette_ColorGroup, cr2 QPalette_ColorGroup) bool {
	var __rv bool
	q.Drv(92000, 92127, unsafe.Pointer(&cr1), unsafe.Pointer(&cr2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::light()
func (q *QPalette) Light() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::link()
func (q *QPalette) Link() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::linkVisited()
func (q *QPalette) LinkVisited() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::mid()
func (q *QPalette) Mid() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::midlight()
func (q *QPalette) Midlight() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::resolve()
func (q *QPalette) Resolve() uint32 {
	var __rv uint32
	q.Drv(92000, 92133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPalette::resolve(QPalette const&)
func (q *QPalette) ResolveWithPalette(value *QPalette) *QPalette {
	var __rv uintptr
	q.Drv(92000, 92134, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QPalette::resolve(unsigned int)
func (q *QPalette) ResolveWithMask(mask uint32) {
	q.Drv(92000, 92135, unsafe.Pointer(&mask), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::setBrush(QPalette::ColorRole,QBrush const&)
func (q *QPalette) SetBrushWithCrBrush(cr QPalette_ColorRole, brush *QBrush) {
	q.Drv(92000, 92136, unsafe.Pointer(&cr), Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::setBrush(QPalette::ColorGroup,QPalette::ColorRole,QBrush const&)
func (q *QPalette) SetBrushWithCgCrBrush(cg QPalette_ColorGroup, cr QPalette_ColorRole, brush *QBrush) {
	q.Drv(92000, 92137, unsafe.Pointer(&cg), unsafe.Pointer(&cr), Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::setColor(QPalette::ColorRole,QColor const&)
func (q *QPalette) SetColorWithCrColor(cr QPalette_ColorRole, color *QColor) {
	q.Drv(92000, 92138, unsafe.Pointer(&cr), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::setColor(QPalette::ColorGroup,QPalette::ColorRole,QColor const&)
func (q *QPalette) SetColorWithCgCrColor(cg QPalette_ColorGroup, cr QPalette_ColorRole, color *QColor) {
	q.Drv(92000, 92139, unsafe.Pointer(&cg), unsafe.Pointer(&cr), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::setColorGroup(QPalette::ColorGroup,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&,QBrush const&)
func (q *QPalette) SetColorGroup(cr QPalette_ColorGroup, windowText *QBrush, button *QBrush, light *QBrush, dark *QBrush, mid *QBrush, text *QBrush, bright_text *QBrush, base *QBrush, window *QBrush) {
	q.Drv(92000, 92140, unsafe.Pointer(&cr), Native(windowText), Native(button), Native(light), Native(dark), Native(mid), Native(text), Native(bright_text), Native(base), Native(window), nil, nil)
}

//QPalette::setCurrentColorGroup(QPalette::ColorGroup)
func (q *QPalette) SetCurrentColorGroup(cg QPalette_ColorGroup) {
	q.Drv(92000, 92141, unsafe.Pointer(&cg), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPalette::shadow()
func (q *QPalette) Shadow() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::text()
func (q *QPalette) Text() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::toolTipBase()
func (q *QPalette) ToolTipBase() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::toolTipText()
func (q *QPalette) ToolTipText() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::window()
func (q *QPalette) Window() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPalette::windowText()
func (q *QPalette) WindowText() *QBrush {
	var __rv uintptr
	q.Drv(92000, 92147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//struct QPen : QPen
type QPen struct {
	BaseDrv
}

//QPen::QPen()
func NewPen() *QPen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 93000, 93102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPen{}
	_p.SetDriver(__rv, 93000, true)
	return _p
}

//QPen::QPen(QColor const&)
func NewPenWithColor(color *QColor) *QPen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 93000, 93103, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPen{}
	_p.SetDriver(__rv, 93000, true)
	return _p
}

//QPen::QPen(QPen const&)
func NewPenCopy(pen *QPen) *QPen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 93000, 93104, Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPen{}
	_p.SetDriver(__rv, 93000, true)
	return _p
}

//QPen::QPen(Qt::PenStyle)
func NewPenWithPenstyle(value Qt_PenStyle) *QPen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 93000, 93105, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPen{}
	_p.SetDriver(__rv, 93000, true)
	return _p
}

//QPen::QPen(QBrush const&,double,Qt::PenStyle,Qt::PenCapStyle,Qt::PenJoinStyle)
func NewPenWithBrushWidthSCJ(brush *QBrush, width float64, s Qt_PenStyle, c Qt_PenCapStyle, j Qt_PenJoinStyle) *QPen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 93000, 93106, Native(brush), unsafe.Pointer(&width), unsafe.Pointer(&s), unsafe.Pointer(&c), unsafe.Pointer(&j), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPen{}
	_p.SetDriver(__rv, 93000, true)
	return _p
}

//QPen::brush()
func (q *QPen) Brush() *QBrush {
	var __rv uintptr
	q.Drv(93000, 93107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QPen::capStyle()
func (q *QPen) CapStyle() Qt_PenCapStyle {
	var __rv Qt_PenCapStyle
	q.Drv(93000, 93108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::color()
func (q *QPen) Color() *QColor {
	var __rv uintptr
	q.Drv(93000, 93109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QPen::dashOffset()
func (q *QPen) DashOffset() float64 {
	var __rv float64
	q.Drv(93000, 93110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::dashPattern()
func (q *QPen) DashPattern() []float64 {
	var __rv []float64
	q.Drv(93000, 93111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::isCosmetic()
func (q *QPen) IsCosmetic() bool {
	var __rv bool
	q.Drv(93000, 93112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::isDetached()
func (q *QPen) IsDetached() bool {
	var __rv bool
	q.Drv(93000, 93113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::isSolid()
func (q *QPen) IsSolid() bool {
	var __rv bool
	q.Drv(93000, 93114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::joinStyle()
func (q *QPen) JoinStyle() Qt_PenJoinStyle {
	var __rv Qt_PenJoinStyle
	q.Drv(93000, 93115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::miterLimit()
func (q *QPen) MiterLimit() float64 {
	var __rv float64
	q.Drv(93000, 93116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::setBrush(QBrush const&)
func (q *QPen) SetBrush(brush *QBrush) {
	q.Drv(93000, 93117, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setCapStyle(Qt::PenCapStyle)
func (q *QPen) SetCapStyle(pcs Qt_PenCapStyle) {
	q.Drv(93000, 93118, unsafe.Pointer(&pcs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setColor(QColor const&)
func (q *QPen) SetColor(color *QColor) {
	q.Drv(93000, 93119, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setCosmetic(bool)
func (q *QPen) SetCosmetic(cosmetic bool) {
	q.Drv(93000, 93120, unsafe.Pointer(&cosmetic), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setDashOffset(double)
func (q *QPen) SetDashOffset(doffset float64) {
	q.Drv(93000, 93121, unsafe.Pointer(&doffset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setDashPattern(QVector<qreal> const&)
func (q *QPen) SetDashPattern(pattern []float64) {
	_pattern := NewCDoubleArrayHead(pattern)
	defer FreeCDoubleArrayHead(_pattern)
	q.Drv(93000, 93122, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setJoinStyle(Qt::PenJoinStyle)
func (q *QPen) SetJoinStyle(pcs Qt_PenJoinStyle) {
	q.Drv(93000, 93123, unsafe.Pointer(&pcs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setMiterLimit(double)
func (q *QPen) SetMiterLimit(limit float64) {
	q.Drv(93000, 93124, unsafe.Pointer(&limit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setStyle(Qt::PenStyle)
func (q *QPen) SetStyle(value Qt_PenStyle) {
	q.Drv(93000, 93125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setWidth(int)
func (q *QPen) SetWidth(width int32) {
	q.Drv(93000, 93126, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::setWidthF(double)
func (q *QPen) SetWidthF(width float64) {
	q.Drv(93000, 93127, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPen::style()
func (q *QPen) Style() Qt_PenStyle {
	var __rv Qt_PenStyle
	q.Drv(93000, 93128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::width()
func (q *QPen) Width() int32 {
	var __rv int32
	q.Drv(93000, 93129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPen::widthF()
func (q *QPen) WidthF() float64 {
	var __rv float64
	q.Drv(93000, 93130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPersistentModelIndex : QPersistentModelIndex
type QPersistentModelIndex struct {
	BaseDrv
}

//QPersistentModelIndex::QPersistentModelIndex()
func NewPersistentModelIndex() *QPersistentModelIndex {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 94000, 94102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPersistentModelIndex{}
	_p.SetDriver(__rv, 94000, true)
	return _p
}

//QPersistentModelIndex::QPersistentModelIndex(QModelIndex const&)
func NewPersistentModelIndexWithIndex(index *QModelIndex) *QPersistentModelIndex {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 94000, 94103, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPersistentModelIndex{}
	_p.SetDriver(__rv, 94000, true)
	return _p
}

//QPersistentModelIndex::QPersistentModelIndex(QPersistentModelIndex const&)
func NewPersistentModelIndexCopy(other *QPersistentModelIndex) *QPersistentModelIndex {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 94000, 94104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPersistentModelIndex{}
	_p.SetDriver(__rv, 94000, true)
	return _p
}

//QPersistentModelIndex::child(int,int)
func (q *QPersistentModelIndex) Child(row int32, column int32) *QModelIndex {
	var __rv uintptr
	q.Drv(94000, 94105, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QPersistentModelIndex::column()
func (q *QPersistentModelIndex) Column() int32 {
	var __rv int32
	q.Drv(94000, 94106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::data()
func (q *QPersistentModelIndex) Data() *QVariant {
	var __rv uintptr
	q.Drv(94000, 94107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QPersistentModelIndex::data(int)
func (q *QPersistentModelIndex) DataWithRole(role int32) *QVariant {
	var __rv uintptr
	q.Drv(94000, 94108, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QPersistentModelIndex::flags()
func (q *QPersistentModelIndex) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(94000, 94109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::internalId()
func (q *QPersistentModelIndex) InternalId() int64 {
	var __rv int64
	q.Drv(94000, 94110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::internalPointer()
func (q *QPersistentModelIndex) InternalPointer() uintptr {
	var __rv uintptr
	q.Drv(94000, 94111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::isValid()
func (q *QPersistentModelIndex) IsValid() bool {
	var __rv bool
	q.Drv(94000, 94112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::model()
func (q *QPersistentModelIndex) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(94000, 94113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QPersistentModelIndex::parent()
func (q *QPersistentModelIndex) Parent() *QModelIndex {
	var __rv uintptr
	q.Drv(94000, 94114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QPersistentModelIndex::row()
func (q *QPersistentModelIndex) Row() int32 {
	var __rv int32
	q.Drv(94000, 94115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPersistentModelIndex::sibling(int,int)
func (q *QPersistentModelIndex) Sibling(row int32, column int32) *QModelIndex {
	var __rv uintptr
	q.Drv(94000, 94116, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//struct QPicture : QPicture
type QPicture struct {
	QPaintDevice
}

//QPicture::QPicture()
func NewPicture() *QPicture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 95000, 95102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPicture{}
	_p.SetDriver(__rv, 95000, true)
	return _p
}

//QPicture::QPicture(QPicture const&)
func NewPictureCopy(value *QPicture) *QPicture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 95000, 95103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPicture{}
	_p.SetDriver(__rv, 95000, true)
	return _p
}

//QPicture::QPicture(int)
func NewPictureWithFormatversion(formatVersion int32) *QPicture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 95000, 95104, unsafe.Pointer(&formatVersion), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPicture{}
	_p.SetDriver(__rv, 95000, true)
	return _p
}

//QPicture::boundingRect()
func (q *QPicture) BoundingRect() *QRect {
	var __rv uintptr
	q.Drv(95000, 95105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPicture::data()
func (q *QPicture) Data() string {
	var __rv C.string_head
	q.Drv(95000, 95106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPicture::detach()
func (q *QPicture) Detach() {
	q.Drv(95000, 95107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPicture::inputFormatList()
func QPictureInputFormatList() []string {
	var __rv []string
	DirectQtDrv(nil, 95000, 95108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::inputFormatList()
func (q *QPicture) InputFormatList() []string {
	var __rv []string
	q.Drv(95000, 95108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::inputFormats()
func QPictureInputFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 95000, 95109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::inputFormats()
func (q *QPicture) InputFormats() [][]byte {
	var __rv [][]byte
	q.Drv(95000, 95109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::isDetached()
func (q *QPicture) IsDetached() bool {
	var __rv bool
	q.Drv(95000, 95110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::isNull()
func (q *QPicture) IsNull() bool {
	var __rv bool
	q.Drv(95000, 95111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::load(QIODevice*)
func (q *QPicture) Load(dev QIODeviceInterface) bool {
	var __rv bool
	q.Drv(95000, 95112, Native(dev), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::load(QString const&)
func (q *QPicture) LoadWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(95000, 95113, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::load(QIODevice*,char const*)
func (q *QPicture) LoadWithDevFormat(dev QIODeviceInterface, format string) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(95000, 95114, Native(dev), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::load(QString const&,char const*)
func (q *QPicture) LoadWithFilenameFormat(fileName string, format string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(95000, 95115, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::outputFormatList()
func QPictureOutputFormatList() []string {
	var __rv []string
	DirectQtDrv(nil, 95000, 95116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::outputFormatList()
func (q *QPicture) OutputFormatList() []string {
	var __rv []string
	q.Drv(95000, 95116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::outputFormats()
func QPictureOutputFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 95000, 95117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::outputFormats()
func (q *QPicture) OutputFormats() [][]byte {
	var __rv [][]byte
	q.Drv(95000, 95117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::pictureFormat(QString const&)
func QPicturePictureFormat(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	DirectQtDrv(nil, 95000, 95118, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPicture::pictureFormat(QString const&)
func (q *QPicture) PictureFormat(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(95000, 95118, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPicture::play(QPainter*)
func (q *QPicture) Play(p *QPainter) bool {
	var __rv bool
	q.Drv(95000, 95119, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::save(QIODevice*)
func (q *QPicture) Save(dev QIODeviceInterface) bool {
	var __rv bool
	q.Drv(95000, 95120, Native(dev), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::save(QString const&)
func (q *QPicture) SaveWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(95000, 95121, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::save(QIODevice*,char const*)
func (q *QPicture) SaveWithDevFormat(dev QIODeviceInterface, format string) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(95000, 95122, Native(dev), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::save(QString const&,char const*)
func (q *QPicture) SaveWithFilenameFormat(fileName string, format string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(95000, 95123, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPicture::setBoundingRect(QRect const&)
func (q *QPicture) SetBoundingRect(r *QRect) {
	q.Drv(95000, 95124, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPicture::setData(char const*,unsigned int)
func (q *QPicture) SetData(data string, size uint32) {
	_data := NewCStringHead(data)
	defer FreeCStringHead(_data)
	q.Drv(95000, 95125, unsafe.Pointer(_data), unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPicture::size()
func (q *QPicture) Size() uint32 {
	var __rv uint32
	q.Drv(95000, 95126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPictureIO : QPictureIO
type QPictureIO struct {
	BaseDrv
}

//QPictureIO::QPictureIO()
func NewPictureIO() *QPictureIO {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 96000, 96102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPictureIO{}
	_p.SetDriver(__rv, 96000, true)
	return _p
}

//QPictureIO::QPictureIO(QIODevice*,char const*)
func NewPictureIOWithIodeviceFormat(ioDevice QIODeviceInterface, format string) *QPictureIO {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 96000, 96103, Native(ioDevice), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPictureIO{}
	_p.SetDriver(__rv, 96000, true)
	return _p
}

//QPictureIO::QPictureIO(QString const&,char const*)
func NewPictureIOWithFilenameFormat(fileName string, format string) *QPictureIO {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 96000, 96104, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPictureIO{}
	_p.SetDriver(__rv, 96000, true)
	return _p
}

//QPictureIO::description()
func (q *QPictureIO) Description() string {
	var __rv C.string_head
	q.Drv(96000, 96105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPictureIO::fileName()
func (q *QPictureIO) FileName() string {
	var __rv C.string_head
	q.Drv(96000, 96106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPictureIO::format()
func (q *QPictureIO) Format() string {
	var __rv C.string_head
	q.Drv(96000, 96107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPictureIO::gamma()
func (q *QPictureIO) Gamma() float32 {
	var __rv float32
	q.Drv(96000, 96108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::inputFormats()
func QPictureIOInputFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 96000, 96109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::inputFormats()
func (q *QPictureIO) InputFormats() [][]byte {
	var __rv [][]byte
	q.Drv(96000, 96109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::ioDevice()
func (q *QPictureIO) IoDevice() *QIODevice {
	var __rv uintptr
	q.Drv(96000, 96110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QPictureIO::outputFormats()
func QPictureIOOutputFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 96000, 96111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::outputFormats()
func (q *QPictureIO) OutputFormats() [][]byte {
	var __rv [][]byte
	q.Drv(96000, 96111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::parameters()
func (q *QPictureIO) Parameters() string {
	var __rv C.string_head
	q.Drv(96000, 96112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPictureIO::picture()
func (q *QPictureIO) Picture() *QPicture {
	var __rv uintptr
	q.Drv(96000, 96113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPicture{}
	_rp.SetDriver(__rv, 95000, true)
	return _rp
}

//QPictureIO::pictureFormat(QIODevice*)
func QPictureIOPictureFormat(value QIODeviceInterface) []byte {
	var __rv []byte
	DirectQtDrv(nil, 96000, 96114, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::pictureFormat(QIODevice*)
func (q *QPictureIO) PictureFormat(value QIODeviceInterface) []byte {
	var __rv []byte
	q.Drv(96000, 96114, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::pictureFormat(QString const&)
func QPictureIOPictureFormatWithFilename(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	DirectQtDrv(nil, 96000, 96115, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::pictureFormat(QString const&)
func (q *QPictureIO) PictureFormatWithFilename(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	q.Drv(96000, 96115, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::quality()
func (q *QPictureIO) Quality() int32 {
	var __rv int32
	q.Drv(96000, 96116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::read()
func (q *QPictureIO) Read() bool {
	var __rv bool
	q.Drv(96000, 96117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::setDescription(QString const&)
func (q *QPictureIO) SetDescription(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(96000, 96118, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setFileName(QString const&)
func (q *QPictureIO) SetFileName(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(96000, 96119, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setFormat(char const*)
func (q *QPictureIO) SetFormat(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(96000, 96120, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setGamma(float)
func (q *QPictureIO) SetGamma(value float32) {
	q.Drv(96000, 96121, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setIODevice(QIODevice*)
func (q *QPictureIO) SetIODevice(value QIODeviceInterface) {
	q.Drv(96000, 96122, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setParameters(char const*)
func (q *QPictureIO) SetParameters(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(96000, 96123, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setPicture(QPicture const&)
func (q *QPictureIO) SetPicture(value *QPicture) {
	q.Drv(96000, 96124, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setQuality(int)
func (q *QPictureIO) SetQuality(value int32) {
	q.Drv(96000, 96125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::setStatus(int)
func (q *QPictureIO) SetStatus(value int32) {
	q.Drv(96000, 96126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPictureIO::status()
func (q *QPictureIO) Status() int32 {
	var __rv int32
	q.Drv(96000, 96127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPictureIO::write()
func (q *QPictureIO) Write() bool {
	var __rv bool
	q.Drv(96000, 96128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QPixmap_HBitmapFormat - QPixmap::HBitmapFormat
type QPixmap_HBitmapFormat uint32

const (
	QPixmap_NoAlpha            QPixmap_HBitmapFormat = 0
	QPixmap_PremultipliedAlpha QPixmap_HBitmapFormat = 1
	QPixmap_Alpha              QPixmap_HBitmapFormat = 2
)

//enum QPixmap_Type - QPixmap::Type
type QPixmap_Type uint32

const (
	QPixmap_PixmapType QPixmap_Type = 0
	QPixmap_BitmapType QPixmap_Type = 1
)

//struct QPixmap : QPixmap
type QPixmap struct {
	QPaintDevice
}

//QPixmap::QPixmap()
func NewPixmap() *QPixmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::QPixmap(QPixmap const&)
func NewPixmapCopy(value *QPixmap) *QPixmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97103, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::QPixmap(QSize const&)
func NewPixmapWithSize(value *QSize) *QPixmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97104, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::QPixmap(char const*[])
func NewPixmapWithXpm(xpm []string) *QPixmap {
	_xpm, _xpm_size := NewCSArray(xpm)
	defer FreeCSArray(_xpm, _xpm_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97105, unsafe.Pointer(&_xpm[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::QPixmap(int,int)
func NewPixmapWithWidthHeight(w int32, h int32) *QPixmap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97106, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::QPixmap(QString const&,char const*,QFlags<Qt::ImageConversionFlag>)
func NewPixmapWithFilenameFormatFlags(fileName string, format string, flags Qt_ImageConversionFlag) *QPixmap {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 97000, 97107, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmap{}
	_p.SetDriver(__rv, 97000, true)
	return _p
}

//QPixmap::cacheKey()
func (q *QPixmap) CacheKey() int64 {
	var __rv int64
	q.Drv(97000, 97108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::convertFromImage(QImage const&)
func (q *QPixmap) ConvertFromImage(img *QImage) bool {
	var __rv bool
	q.Drv(97000, 97109, Native(img), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::convertFromImage(QImage const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) ConvertFromImageWithImgFlags(img *QImage, flags Qt_ImageConversionFlag) bool {
	var __rv bool
	q.Drv(97000, 97110, Native(img), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::copy()
func (q *QPixmap) Copy() *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::copy(QRect const&)
func (q *QPixmap) CopyWithRect(rect *QRect) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97112, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::copy(int,int,int,int)
func (q *QPixmap) CopyWithXYWidthHeight(x int32, y int32, width int32, height int32) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97113, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&width), unsafe.Pointer(&height), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::createHeuristicMask(bool)
func (q *QPixmap) CreateHeuristicMask(clipTight bool) *QBitmap {
	var __rv uintptr
	q.Drv(97000, 97114, unsafe.Pointer(&clipTight), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QPixmap::createMaskFromColor(QColor const&)
func (q *QPixmap) CreateMaskFromColor(maskColor *QColor) *QBitmap {
	var __rv uintptr
	q.Drv(97000, 97115, Native(maskColor), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QPixmap::createMaskFromColor(QColor const&,Qt::MaskMode)
func (q *QPixmap) CreateMaskFromColorWithColorMode(maskColor *QColor, mode Qt_MaskMode) *QBitmap {
	var __rv uintptr
	q.Drv(97000, 97116, Native(maskColor), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QPixmap::defaultDepth()
func QPixmapDefaultDepth() int32 {
	var __rv int32
	DirectQtDrv(nil, 97000, 97117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::defaultDepth()
func (q *QPixmap) DefaultDepth() int32 {
	var __rv int32
	q.Drv(97000, 97117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::depth()
func (q *QPixmap) Depth() int32 {
	var __rv int32
	q.Drv(97000, 97118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::detach()
func (q *QPixmap) Detach() {
	q.Drv(97000, 97119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::fill()
func (q *QPixmap) Fill() {
	q.Drv(97000, 97120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::fill(QColor const&)
func (q *QPixmap) FillWithColor(fillColor *QColor) {
	q.Drv(97000, 97121, Native(fillColor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::fill(QWidget const*,QPoint const&)
func (q *QPixmap) FillWithWidgetOfs(widget QWidgetInterface, ofs *QPoint) {
	q.Drv(97000, 97122, Native(widget), Native(ofs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::fill(QWidget const*,int,int)
func (q *QPixmap) FillWithWidgetXofsYofs(widget QWidgetInterface, xofs int32, yofs int32) {
	q.Drv(97000, 97123, Native(widget), unsafe.Pointer(&xofs), unsafe.Pointer(&yofs), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::fromImage(QImage const&)
func QPixmapFromImage(image *QImage) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97124, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImage(QImage const&)
func (q *QPixmap) FromImage(image *QImage) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97124, Native(image), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImage(QImage const&,QFlags<Qt::ImageConversionFlag>)
func QPixmapFromImageWithImageFlags(image *QImage, flags Qt_ImageConversionFlag) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97125, Native(image), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImage(QImage const&,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) FromImageWithImageFlags(image *QImage, flags Qt_ImageConversionFlag) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97125, Native(image), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImageReader(QImageReader*)
func QPixmapFromImageReader(imageReader *QImageReader) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97126, Native(imageReader), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImageReader(QImageReader*)
func (q *QPixmap) FromImageReader(imageReader *QImageReader) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97126, Native(imageReader), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImageReader(QImageReader*,QFlags<Qt::ImageConversionFlag>)
func QPixmapFromImageReaderWithImagereaderFlags(imageReader *QImageReader, flags Qt_ImageConversionFlag) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97127, Native(imageReader), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::fromImageReader(QImageReader*,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) FromImageReaderWithImagereaderFlags(imageReader *QImageReader, flags Qt_ImageConversionFlag) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97127, Native(imageReader), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*)
func QPixmapGrabWidget(widget QWidgetInterface) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97128, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*)
func (q *QPixmap) GrabWidget(widget QWidgetInterface) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97128, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*,QRect const&)
func QPixmapGrabWidgetWithWidgetRect(widget QWidgetInterface, rect *QRect) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97129, Native(widget), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*,QRect const&)
func (q *QPixmap) GrabWidgetWithWidgetRect(widget QWidgetInterface, rect *QRect) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97129, Native(widget), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*,int,int,int,int)
func QPixmapGrabWidgetWithWidgetXYWidthHeight(widget QWidgetInterface, x int32, y int32, w int32, h int32) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97130, Native(widget), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::grabWidget(QWidget*,int,int,int,int)
func (q *QPixmap) GrabWidgetWithWidgetXYWidthHeight(widget QWidgetInterface, x int32, y int32, w int32, h int32) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97130, Native(widget), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::hasAlpha()
func (q *QPixmap) HasAlpha() bool {
	var __rv bool
	q.Drv(97000, 97131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::hasAlphaChannel()
func (q *QPixmap) HasAlphaChannel() bool {
	var __rv bool
	q.Drv(97000, 97132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::height()
func (q *QPixmap) Height() int32 {
	var __rv int32
	q.Drv(97000, 97133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::isDetached()
func (q *QPixmap) IsDetached() bool {
	var __rv bool
	q.Drv(97000, 97134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::isNull()
func (q *QPixmap) IsNull() bool {
	var __rv bool
	q.Drv(97000, 97135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::isQBitmap()
func (q *QPixmap) IsQBitmap() bool {
	var __rv bool
	q.Drv(97000, 97136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::load(QString const&)
func (q *QPixmap) Load(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(97000, 97137, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::load(QString const&,char const*,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) LoadWithFilenameFormatFlags(fileName string, format string, flags Qt_ImageConversionFlag) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(97000, 97138, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::loadFromData(QByteArray const&)
func (q *QPixmap) LoadFromData(data []byte) bool {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv bool
	q.Drv(97000, 97139, unsafe.Pointer(_data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::loadFromData(QByteArray const&,char const*,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) LoadFromDataWithDataFormatFlags(data []byte, format string, flags Qt_ImageConversionFlag) bool {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(97000, 97140, unsafe.Pointer(_data), unsafe.Pointer(_format), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::loadFromData(unsigned char const*,unsigned int,char const*,QFlags<Qt::ImageConversionFlag>)
func (q *QPixmap) LoadFromDataWithBufLenFormatFlags(buf *byte, len uint32, format string, flags Qt_ImageConversionFlag) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(97000, 97141, unsafe.Pointer(&buf), unsafe.Pointer(&len), unsafe.Pointer(_format), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::mask()
func (q *QPixmap) Mask() *QBitmap {
	var __rv uintptr
	q.Drv(97000, 97142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBitmap{}
	_rp.SetDriver(__rv, 8000, true)
	return _rp
}

//QPixmap::rect()
func (q *QPixmap) Rect() *QRect {
	var __rv uintptr
	q.Drv(97000, 97143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPixmap::save(QIODevice*)
func (q *QPixmap) Save(device QIODeviceInterface) bool {
	var __rv bool
	q.Drv(97000, 97144, Native(device), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::save(QString const&)
func (q *QPixmap) SaveWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(97000, 97145, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::save(QIODevice*,char const*,int)
func (q *QPixmap) SaveWithDeviceFormatQuality(device QIODeviceInterface, format string, quality int32) bool {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(97000, 97146, Native(device), unsafe.Pointer(_format), unsafe.Pointer(&quality), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::save(QString const&,char const*,int)
func (q *QPixmap) SaveWithFilenameFormatQuality(fileName string, format string, quality int32) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv bool
	q.Drv(97000, 97147, unsafe.Pointer(_fileName), unsafe.Pointer(_format), unsafe.Pointer(&quality), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmap::scaled(QSize const&)
func (q *QPixmap) Scaled(s *QSize) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97148, Native(s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaled(QSize const&,Qt::AspectRatioMode,Qt::TransformationMode)
func (q *QPixmap) ScaledWithSizeAspectmodeMode(s *QSize, aspectMode Qt_AspectRatioMode, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97149, Native(s), unsafe.Pointer(&aspectMode), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaled(int,int,Qt::AspectRatioMode,Qt::TransformationMode)
func (q *QPixmap) ScaledWithWidthHeightAspectmodeMode(w int32, h int32, aspectMode Qt_AspectRatioMode, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97150, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&aspectMode), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaledToHeight(int)
func (q *QPixmap) ScaledToHeight(h int32) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97151, unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaledToHeight(int,Qt::TransformationMode)
func (q *QPixmap) ScaledToHeightWithHeightMode(h int32, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97152, unsafe.Pointer(&h), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaledToWidth(int)
func (q *QPixmap) ScaledToWidth(w int32) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97153, unsafe.Pointer(&w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scaledToWidth(int,Qt::TransformationMode)
func (q *QPixmap) ScaledToWidthWithWidthMode(w int32, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97154, unsafe.Pointer(&w), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::scroll(int,int,QRect const&,QRegion*)
func (q *QPixmap) ScrollWithDxDyRectExposed(dx int32, dy int32, rect *QRect, exposed *QRegion) {
	q.Drv(97000, 97155, unsafe.Pointer(&dx), unsafe.Pointer(&dy), Native(rect), Native(exposed), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::scroll(int,int,int,int,int,int,QRegion*)
func (q *QPixmap) ScrollWithDxDyXYWidthHeightExposed(dx int32, dy int32, x int32, y int32, width int32, height int32, exposed *QRegion) {
	q.Drv(97000, 97156, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&width), unsafe.Pointer(&height), Native(exposed), nil, nil, nil, nil, nil)
}

//QPixmap::setMask(QBitmap const&)
func (q *QPixmap) SetMask(value *QBitmap) {
	q.Drv(97000, 97157, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmap::size()
func (q *QPixmap) Size() *QSize {
	var __rv uintptr
	q.Drv(97000, 97158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QPixmap::toImage()
func (q *QPixmap) ToImage() *QImage {
	var __rv uintptr
	q.Drv(97000, 97159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QPixmap::transformed(QMatrix const&)
func (q *QPixmap) Transformed(value *QMatrix) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97160, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::transformed(QTransform const&)
func (q *QPixmap) TransformedWithTransform(value *QTransform) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97161, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::transformed(QMatrix const&,Qt::TransformationMode)
func (q *QPixmap) TransformedWithMatrixMode(value2 *QMatrix, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97162, Native(value2), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::transformed(QTransform const&,Qt::TransformationMode)
func (q *QPixmap) TransformedWithTransformMode(value2 *QTransform, mode Qt_TransformationMode) *QPixmap {
	var __rv uintptr
	q.Drv(97000, 97163, Native(value2), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmap::trueMatrix(QMatrix const&,int,int)
func QPixmapTrueMatrixWithMWidthHeight(m *QMatrix, w int32, h int32) *QMatrix {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97164, Native(m), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPixmap::trueMatrix(QMatrix const&,int,int)
func (q *QPixmap) TrueMatrixWithMWidthHeight(m *QMatrix, w int32, h int32) *QMatrix {
	var __rv uintptr
	q.Drv(97000, 97164, Native(m), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QPixmap::trueMatrix(QTransform const&,int,int)
func QPixmapTrueMatrixWithTransformWidthHeight(m *QTransform, w int32, h int32) *QTransform {
	var __rv uintptr
	DirectQtDrv(nil, 97000, 97165, Native(m), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QPixmap::trueMatrix(QTransform const&,int,int)
func (q *QPixmap) TrueMatrixWithTransformWidthHeight(m *QTransform, w int32, h int32) *QTransform {
	var __rv uintptr
	q.Drv(97000, 97165, Native(m), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QPixmap::width()
func (q *QPixmap) Width() int32 {
	var __rv int32
	q.Drv(97000, 97166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPixmapCache : QPixmapCache
type QPixmapCache struct {
	BaseDrv
}

//QPixmapCache::QPixmapCache()
func NewPixmapCache() *QPixmapCache {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 98000, 98102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmapCache{}
	_p.SetDriver(__rv, 98000, true)
	return _p
}

//QPixmapCache::cacheLimit()
func QPixmapCacheCacheLimit() int32 {
	var __rv int32
	DirectQtDrv(nil, 98000, 98103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::cacheLimit()
func (q *QPixmapCache) CacheLimit() int32 {
	var __rv int32
	q.Drv(98000, 98103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::clear()
func QPixmapCacheClear() {
	DirectQtDrv(nil, 98000, 98104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::clear()
func (q *QPixmapCache) Clear() {
	q.Drv(98000, 98104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::find(QString const&)
func QPixmapCacheFind(key string) *QPixmap {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	DirectQtDrv(nil, 98000, 98105, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmapCache::find(QString const&)
func (q *QPixmapCache) Find(key string) *QPixmap {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	q.Drv(98000, 98105, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QPixmapCache::find(QPixmapCache::Key const&,QPixmap*)
func QPixmapCacheFindWithPixmapCacheKeyPixmap(key *QPixmapCacheKey, pixmap *QPixmap) bool {
	var __rv bool
	DirectQtDrv(nil, 98000, 98106, Native(key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::find(QPixmapCache::Key const&,QPixmap*)
func (q *QPixmapCache) FindWithPixmapCacheKeyPixmap(key *QPixmapCacheKey, pixmap *QPixmap) bool {
	var __rv bool
	q.Drv(98000, 98106, Native(key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::find(QString const&,QPixmap&)
func QPixmapCacheFindWithKeyPixmap(key string, pixmap *QPixmap) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	DirectQtDrv(nil, 98000, 98107, unsafe.Pointer(_key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::find(QString const&,QPixmap&)
func (q *QPixmapCache) FindWithKeyPixmap(key string, pixmap *QPixmap) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	q.Drv(98000, 98107, unsafe.Pointer(_key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::insert(QPixmap const&)
func QPixmapCacheInsert(pixmap *QPixmap) *QPixmapCacheKey {
	var __rv uintptr
	DirectQtDrv(nil, 98000, 98108, Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmapCacheKey{}
	_rp.SetDriver(__rv, 99000, true)
	return _rp
}

//QPixmapCache::insert(QPixmap const&)
func (q *QPixmapCache) Insert(pixmap *QPixmap) *QPixmapCacheKey {
	var __rv uintptr
	q.Drv(98000, 98108, Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmapCacheKey{}
	_rp.SetDriver(__rv, 99000, true)
	return _rp
}

//QPixmapCache::insert(QString const&,QPixmap const&)
func QPixmapCacheInsertWithKeyPixmap(key string, pixmap *QPixmap) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	DirectQtDrv(nil, 98000, 98109, unsafe.Pointer(_key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::insert(QString const&,QPixmap const&)
func (q *QPixmapCache) InsertWithKeyPixmap(key string, pixmap *QPixmap) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	q.Drv(98000, 98109, unsafe.Pointer(_key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::remove(QPixmapCache::Key const&)
func QPixmapCacheRemove(key *QPixmapCacheKey) {
	DirectQtDrv(nil, 98000, 98110, Native(key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::remove(QPixmapCache::Key const&)
func (q *QPixmapCache) Remove(key *QPixmapCacheKey) {
	q.Drv(98000, 98110, Native(key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::remove(QString const&)
func QPixmapCacheRemoveWithKey(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	DirectQtDrv(nil, 98000, 98111, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::remove(QString const&)
func (q *QPixmapCache) RemoveWithKey(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(98000, 98111, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::replace(QPixmapCache::Key const&,QPixmap const&)
func QPixmapCacheReplace(key *QPixmapCacheKey, pixmap *QPixmap) bool {
	var __rv bool
	DirectQtDrv(nil, 98000, 98112, Native(key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::replace(QPixmapCache::Key const&,QPixmap const&)
func (q *QPixmapCache) Replace(key *QPixmapCacheKey, pixmap *QPixmap) bool {
	var __rv bool
	q.Drv(98000, 98112, Native(key), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPixmapCache::setCacheLimit(int)
func QPixmapCacheSetCacheLimit(value int32) {
	DirectQtDrv(nil, 98000, 98113, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPixmapCache::setCacheLimit(int)
func (q *QPixmapCache) SetCacheLimit(value int32) {
	q.Drv(98000, 98113, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QPixmapCacheKey : QPixmapCache::Key
type QPixmapCacheKey struct {
	BaseDrv
}

//QPixmapCache::Key::Key()
func NewPixmapCacheKey() *QPixmapCacheKey {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 99000, 99102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmapCacheKey{}
	_p.SetDriver(__rv, 99000, true)
	return _p
}

//QPixmapCache::Key::Key(QPixmapCache::Key const&)
func NewPixmapCacheKeyCopy(other *QPixmapCacheKey) *QPixmapCacheKey {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 99000, 99103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPixmapCacheKey{}
	_p.SetDriver(__rv, 99000, true)
	return _p
}

//struct QPoint : QPoint
type QPoint struct {
	BaseDrv
}

//QPoint::QPoint()
func NewPoint() *QPoint {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 100000, 100102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPoint{}
	_p.SetDriver(__rv, 100000, true)
	return _p
}

//QPoint::QPoint(int,int)
func NewPointWithXposYpos(xpos int32, ypos int32) *QPoint {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 100000, 100103, unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPoint{}
	_p.SetDriver(__rv, 100000, true)
	return _p
}

//QPoint::isNull()
func (q *QPoint) IsNull() bool {
	var __rv bool
	q.Drv(100000, 100104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPoint::manhattanLength()
func (q *QPoint) ManhattanLength() int32 {
	var __rv int32
	q.Drv(100000, 100105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPoint::rx()
func (q *QPoint) Rx() *int32 {
	var __rv *int32
	q.Drv(100000, 100106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPoint::ry()
func (q *QPoint) Ry() *int32 {
	var __rv *int32
	q.Drv(100000, 100107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPoint::setX(int)
func (q *QPoint) SetX(x int32) {
	q.Drv(100000, 100108, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPoint::setY(int)
func (q *QPoint) SetY(y int32) {
	q.Drv(100000, 100109, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPoint::x()
func (q *QPoint) X() int32 {
	var __rv int32
	q.Drv(100000, 100110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPoint::y()
func (q *QPoint) Y() int32 {
	var __rv int32
	q.Drv(100000, 100111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPointF : QPointF
type QPointF struct {
	BaseDrv
}

//QPointF::QPointF()
func NewPointF() *QPointF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 101000, 101102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPointF{}
	_p.SetDriver(__rv, 101000, true)
	return _p
}

//QPointF::QPointF(QPoint const&)
func NewPointFWithPoint(p *QPoint) *QPointF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 101000, 101103, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPointF{}
	_p.SetDriver(__rv, 101000, true)
	return _p
}

//QPointF::QPointF(double,double)
func NewPointFWithXposYpos(xpos float64, ypos float64) *QPointF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 101000, 101104, unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPointF{}
	_p.SetDriver(__rv, 101000, true)
	return _p
}

//QPointF::isNull()
func (q *QPointF) IsNull() bool {
	var __rv bool
	q.Drv(101000, 101105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPointF::manhattanLength()
func (q *QPointF) ManhattanLength() float64 {
	var __rv float64
	q.Drv(101000, 101106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPointF::rx()
func (q *QPointF) Rx() *float64 {
	var __rv *float64
	q.Drv(101000, 101107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPointF::ry()
func (q *QPointF) Ry() *float64 {
	var __rv *float64
	q.Drv(101000, 101108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPointF::setX(double)
func (q *QPointF) SetX(x float64) {
	q.Drv(101000, 101109, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPointF::setY(double)
func (q *QPointF) SetY(y float64) {
	q.Drv(101000, 101110, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPointF::toPoint()
func (q *QPointF) ToPoint() *QPoint {
	var __rv uintptr
	q.Drv(101000, 101111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QPointF::x()
func (q *QPointF) X() float64 {
	var __rv float64
	q.Drv(101000, 101112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPointF::y()
func (q *QPointF) Y() float64 {
	var __rv float64
	q.Drv(101000, 101113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPolygon : QPolygon
type QPolygon struct {
	BaseDrv
}

//QPolygon::QPolygon()
func NewPolygon() *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::QPolygon(QPolygon const&)
func NewPolygonCopy(a *QPolygon) *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102103, Native(a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::QPolygon(QVector<QPoint> const&)
func NewPolygonWithPointarray(v []*QPoint) *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::QPolygon(int)
func NewPolygonWithSize(size int32) *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102105, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::QPolygon(QRect const&,bool)
func NewPolygonWithRectClosed(r *QRect, closed bool) *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102106, Native(r), unsafe.Pointer(&closed), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::QPolygon(int,int const*)
func NewPolygonWithNpointsPoints(nPoints int32, points *int) *QPolygon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 102000, 102107, unsafe.Pointer(&nPoints), unsafe.Pointer(&points), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygon{}
	_p.SetDriver(__rv, 102000, true)
	return _p
}

//QPolygon::boundingRect()
func (q *QPolygon) BoundingRect() *QRect {
	var __rv uintptr
	q.Drv(102000, 102108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPolygon::containsPoint(QPoint const&,Qt::FillRule)
func (q *QPolygon) ContainsPoint(pt *QPoint, fillRule Qt_FillRule) bool {
	var __rv bool
	q.Drv(102000, 102109, Native(pt), unsafe.Pointer(&fillRule), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPolygon::intersected(QPolygon const&)
func (q *QPolygon) Intersected(r *QPolygon) *QPolygon {
	var __rv uintptr
	q.Drv(102000, 102110, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QPolygon::point(int)
func (q *QPolygon) Point(i int32) *QPoint {
	var __rv uintptr
	q.Drv(102000, 102111, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QPolygon::point(int,int*,int*)
func (q *QPolygon) PointWithInt32XY(i int32, x *int32, y *int32) {
	q.Drv(102000, 102112, unsafe.Pointer(&i), unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygon::setPoint(int,QPoint const&)
func (q *QPolygon) SetPointWithIndexPoint(index int32, p *QPoint) {
	q.Drv(102000, 102113, unsafe.Pointer(&index), Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygon::setPoint(int,int,int)
func (q *QPolygon) SetPointWithIndexXY(index int32, x int32, y int32) {
	q.Drv(102000, 102114, unsafe.Pointer(&index), unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygon::subtracted(QPolygon const&)
func (q *QPolygon) Subtracted(r *QPolygon) *QPolygon {
	var __rv uintptr
	q.Drv(102000, 102115, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QPolygon::translate(QPoint const&)
func (q *QPolygon) Translate(offset *QPoint) {
	q.Drv(102000, 102116, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygon::translate(int,int)
func (q *QPolygon) TranslateWithDxDy(dx int32, dy int32) {
	q.Drv(102000, 102117, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygon::translated(QPoint const&)
func (q *QPolygon) Translated(offset *QPoint) *QPolygon {
	var __rv uintptr
	q.Drv(102000, 102118, Native(offset), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QPolygon::translated(int,int)
func (q *QPolygon) TranslatedWithDxDy(dx int32, dy int32) *QPolygon {
	var __rv uintptr
	q.Drv(102000, 102119, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QPolygon::united(QPolygon const&)
func (q *QPolygon) United(r *QPolygon) *QPolygon {
	var __rv uintptr
	q.Drv(102000, 102120, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//struct QPolygonF : QPolygonF
type QPolygonF struct {
	BaseDrv
}

//QPolygonF::QPolygonF()
func NewPolygonF() *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::QPolygonF(QPolygon const&)
func NewPolygonFWithPolygon(a *QPolygon) *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103103, Native(a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::QPolygonF(QPolygonF const&)
func NewPolygonFCopy(a *QPolygonF) *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103104, Native(a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::QPolygonF(QRectF const&)
func NewPolygonFWithRectf(r *QRectF) *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103105, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::QPolygonF(QVector<QPointF> const&)
func NewPolygonFWithPointfarray(v []*QPointF) *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::QPolygonF(int)
func NewPolygonFWithSize(size int32) *QPolygonF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 103000, 103107, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPolygonF{}
	_p.SetDriver(__rv, 103000, true)
	return _p
}

//QPolygonF::boundingRect()
func (q *QPolygonF) BoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(103000, 103108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPolygonF::containsPoint(QPointF const&,Qt::FillRule)
func (q *QPolygonF) ContainsPoint(pt *QPointF, fillRule Qt_FillRule) bool {
	var __rv bool
	q.Drv(103000, 103109, Native(pt), unsafe.Pointer(&fillRule), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPolygonF::intersected(QPolygonF const&)
func (q *QPolygonF) Intersected(r *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(103000, 103110, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPolygonF::isClosed()
func (q *QPolygonF) IsClosed() bool {
	var __rv bool
	q.Drv(103000, 103111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPolygonF::subtracted(QPolygonF const&)
func (q *QPolygonF) Subtracted(r *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(103000, 103112, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPolygonF::toPolygon()
func (q *QPolygonF) ToPolygon() *QPolygon {
	var __rv uintptr
	q.Drv(103000, 103113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QPolygonF::translate(QPointF const&)
func (q *QPolygonF) Translate(offset *QPointF) {
	q.Drv(103000, 103114, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygonF::translate(double,double)
func (q *QPolygonF) TranslateFWithDxDy(dx float64, dy float64) {
	q.Drv(103000, 103115, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPolygonF::translated(QPointF const&)
func (q *QPolygonF) Translated(offset *QPointF) *QPolygonF {
	var __rv uintptr
	q.Drv(103000, 103116, Native(offset), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPolygonF::translated(double,double)
func (q *QPolygonF) TranslatedFWithDxDy(dx float64, dy float64) *QPolygonF {
	var __rv uintptr
	q.Drv(103000, 103117, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QPolygonF::united(QPolygonF const&)
func (q *QPolygonF) United(r *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(103000, 103118, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//enum QPrintEngine_PrintEnginePropertyKey - QPrintEngine::PrintEnginePropertyKey
type QPrintEngine_PrintEnginePropertyKey uint32

const (
	QPrintEngine_PPK_CollateCopies             QPrintEngine_PrintEnginePropertyKey = 0
	QPrintEngine_PPK_ColorMode                 QPrintEngine_PrintEnginePropertyKey = 1
	QPrintEngine_PPK_Creator                   QPrintEngine_PrintEnginePropertyKey = 2
	QPrintEngine_PPK_DocumentName              QPrintEngine_PrintEnginePropertyKey = 3
	QPrintEngine_PPK_FullPage                  QPrintEngine_PrintEnginePropertyKey = 4
	QPrintEngine_PPK_NumberOfCopies            QPrintEngine_PrintEnginePropertyKey = 5
	QPrintEngine_PPK_Orientation               QPrintEngine_PrintEnginePropertyKey = 6
	QPrintEngine_PPK_OutputFileName            QPrintEngine_PrintEnginePropertyKey = 7
	QPrintEngine_PPK_PageOrder                 QPrintEngine_PrintEnginePropertyKey = 8
	QPrintEngine_PPK_PageRect                  QPrintEngine_PrintEnginePropertyKey = 9
	QPrintEngine_PPK_PageSize                  QPrintEngine_PrintEnginePropertyKey = 10
	QPrintEngine_PPK_PaperRect                 QPrintEngine_PrintEnginePropertyKey = 11
	QPrintEngine_PPK_PaperSource               QPrintEngine_PrintEnginePropertyKey = 12
	QPrintEngine_PPK_PrinterName               QPrintEngine_PrintEnginePropertyKey = 13
	QPrintEngine_PPK_PrinterProgram            QPrintEngine_PrintEnginePropertyKey = 14
	QPrintEngine_PPK_Resolution                QPrintEngine_PrintEnginePropertyKey = 15
	QPrintEngine_PPK_SelectionOption           QPrintEngine_PrintEnginePropertyKey = 16
	QPrintEngine_PPK_SupportedResolutions      QPrintEngine_PrintEnginePropertyKey = 17
	QPrintEngine_PPK_WindowsPageSize           QPrintEngine_PrintEnginePropertyKey = 18
	QPrintEngine_PPK_FontEmbedding             QPrintEngine_PrintEnginePropertyKey = 19
	QPrintEngine_PPK_SuppressSystemPrintStatus QPrintEngine_PrintEnginePropertyKey = 20
	QPrintEngine_PPK_Duplex                    QPrintEngine_PrintEnginePropertyKey = 21
	QPrintEngine_PPK_PaperSources              QPrintEngine_PrintEnginePropertyKey = 22
	QPrintEngine_PPK_CustomPaperSize           QPrintEngine_PrintEnginePropertyKey = 23
	QPrintEngine_PPK_PageMargins               QPrintEngine_PrintEnginePropertyKey = 24
	QPrintEngine_PPK_CopyCount                 QPrintEngine_PrintEnginePropertyKey = 25
	QPrintEngine_PPK_SupportsMultipleCopies    QPrintEngine_PrintEnginePropertyKey = 26
	QPrintEngine_PPK_PaperSize                 QPrintEngine_PrintEnginePropertyKey = QPrintEngine_PPK_PageSize
	QPrintEngine_PPK_CustomBase                QPrintEngine_PrintEnginePropertyKey = 0xff00
)

//struct QPrintEngine : QPrintEngine
type QPrintEngine struct {
	BaseDrv
}

//QPrintEngine::abort()
func (q *QPrintEngine) Abort() bool {
	var __rv bool
	q.Drv(104000, 104102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintEngine::metric(QPaintDevice::PaintDeviceMetric)
func (q *QPrintEngine) Metric(value QPaintDevice_PaintDeviceMetric) int32 {
	var __rv int32
	q.Drv(104000, 104103, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintEngine::newPage()
func (q *QPrintEngine) NewPage() bool {
	var __rv bool
	q.Drv(104000, 104104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintEngine::printerState()
func (q *QPrintEngine) PrinterState() QPrinter_PrinterState {
	var __rv QPrinter_PrinterState
	q.Drv(104000, 104105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintEngine::property(QPrintEngine::PrintEnginePropertyKey)
func (q *QPrintEngine) Property(key QPrintEngine_PrintEnginePropertyKey) *QVariant {
	var __rv uintptr
	q.Drv(104000, 104106, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QPrintEngine::setProperty(QPrintEngine::PrintEnginePropertyKey,QVariant const&)
func (q *QPrintEngine) SetProperty(key QPrintEngine_PrintEnginePropertyKey, value *QVariant) {
	q.Drv(104000, 104107, unsafe.Pointer(&key), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QPrinter_OutputFormat - QPrinter::OutputFormat
type QPrinter_OutputFormat uint32

const (
	QPrinter_NativeFormat     QPrinter_OutputFormat = 0
	QPrinter_PdfFormat        QPrinter_OutputFormat = 1
	QPrinter_PostScriptFormat QPrinter_OutputFormat = 2
)

//enum QPrinter_DuplexMode - QPrinter::DuplexMode
type QPrinter_DuplexMode uint32

const (
	QPrinter_DuplexNone      QPrinter_DuplexMode = 0
	QPrinter_DuplexAuto      QPrinter_DuplexMode = 0
	QPrinter_DuplexLongSide  QPrinter_DuplexMode = 1
	QPrinter_DuplexShortSide QPrinter_DuplexMode = 2
)

//enum QPrinter_PrintRange - QPrinter::PrintRange
type QPrinter_PrintRange uint32

const (
	QPrinter_AllPages    QPrinter_PrintRange = 0
	QPrinter_Selection   QPrinter_PrintRange = 1
	QPrinter_PageRange   QPrinter_PrintRange = 2
	QPrinter_CurrentPage QPrinter_PrintRange = 3
)

//enum QPrinter_Unit - QPrinter::Unit
type QPrinter_Unit uint32

const (
	QPrinter_Millimeter  QPrinter_Unit = 0
	QPrinter_Point       QPrinter_Unit = 1
	QPrinter_Inch        QPrinter_Unit = 2
	QPrinter_Pica        QPrinter_Unit = 3
	QPrinter_Didot       QPrinter_Unit = 4
	QPrinter_Cicero      QPrinter_Unit = 5
	QPrinter_DevicePixel QPrinter_Unit = 6
)

//enum QPrinter_PrinterMode - QPrinter::PrinterMode
type QPrinter_PrinterMode uint32

const (
	QPrinter_ScreenResolution  QPrinter_PrinterMode = 0
	QPrinter_PrinterResolution QPrinter_PrinterMode = 1
	QPrinter_HighResolution    QPrinter_PrinterMode = 2
)

//enum QPrinter_Orientation - QPrinter::Orientation
type QPrinter_Orientation uint32

const (
	QPrinter_Portrait  QPrinter_Orientation = 0
	QPrinter_Landscape QPrinter_Orientation = 1
)

//enum QPrinter_PrinterState - QPrinter::PrinterState
type QPrinter_PrinterState uint32

const (
	QPrinter_Idle    QPrinter_PrinterState = 0
	QPrinter_Active  QPrinter_PrinterState = 1
	QPrinter_Aborted QPrinter_PrinterState = 2
	QPrinter_Error   QPrinter_PrinterState = 3
)

//enum QPrinter_ColorMode - QPrinter::ColorMode
type QPrinter_ColorMode uint32

const (
	QPrinter_GrayScale QPrinter_ColorMode = 0
	QPrinter_Color     QPrinter_ColorMode = 1
)

//enum QPrinter_PaperSource - QPrinter::PaperSource
type QPrinter_PaperSource uint32

const (
	QPrinter_OnlyOne        QPrinter_PaperSource = 0
	QPrinter_Lower          QPrinter_PaperSource = 1
	QPrinter_Middle         QPrinter_PaperSource = 2
	QPrinter_Manual         QPrinter_PaperSource = 3
	QPrinter_Envelope       QPrinter_PaperSource = 4
	QPrinter_EnvelopeManual QPrinter_PaperSource = 5
	QPrinter_Auto           QPrinter_PaperSource = 6
	QPrinter_Tractor        QPrinter_PaperSource = 7
	QPrinter_SmallFormat    QPrinter_PaperSource = 8
	QPrinter_LargeFormat    QPrinter_PaperSource = 9
	QPrinter_LargeCapacity  QPrinter_PaperSource = 10
	QPrinter_Cassette       QPrinter_PaperSource = 11
	QPrinter_FormSource     QPrinter_PaperSource = 12
	QPrinter_MaxPageSource  QPrinter_PaperSource = 13
)

//enum QPrinter_PageOrder - QPrinter::PageOrder
type QPrinter_PageOrder uint32

const (
	QPrinter_FirstPageFirst QPrinter_PageOrder = 0
	QPrinter_LastPageFirst  QPrinter_PageOrder = 1
)

//enum QPrinter_PageSize - QPrinter::PageSize
type QPrinter_PageSize uint32

const (
	QPrinter_A4         QPrinter_PageSize = 0
	QPrinter_B5         QPrinter_PageSize = 1
	QPrinter_Letter     QPrinter_PageSize = 2
	QPrinter_Legal      QPrinter_PageSize = 3
	QPrinter_Executive  QPrinter_PageSize = 4
	QPrinter_A0         QPrinter_PageSize = 5
	QPrinter_A1         QPrinter_PageSize = 6
	QPrinter_A2         QPrinter_PageSize = 7
	QPrinter_A3         QPrinter_PageSize = 8
	QPrinter_A5         QPrinter_PageSize = 9
	QPrinter_A6         QPrinter_PageSize = 10
	QPrinter_A7         QPrinter_PageSize = 11
	QPrinter_A8         QPrinter_PageSize = 12
	QPrinter_A9         QPrinter_PageSize = 13
	QPrinter_B0         QPrinter_PageSize = 14
	QPrinter_B1         QPrinter_PageSize = 15
	QPrinter_B10        QPrinter_PageSize = 16
	QPrinter_B2         QPrinter_PageSize = 17
	QPrinter_B3         QPrinter_PageSize = 18
	QPrinter_B4         QPrinter_PageSize = 19
	QPrinter_B6         QPrinter_PageSize = 20
	QPrinter_B7         QPrinter_PageSize = 21
	QPrinter_B8         QPrinter_PageSize = 22
	QPrinter_B9         QPrinter_PageSize = 23
	QPrinter_C5E        QPrinter_PageSize = 24
	QPrinter_Comm10E    QPrinter_PageSize = 25
	QPrinter_DLE        QPrinter_PageSize = 26
	QPrinter_Folio      QPrinter_PageSize = 27
	QPrinter_Ledger     QPrinter_PageSize = 28
	QPrinter_Tabloid    QPrinter_PageSize = 29
	QPrinter_Custom     QPrinter_PageSize = 30
	QPrinter_NPageSize  QPrinter_PageSize = QPrinter_Custom
	QPrinter_NPaperSize QPrinter_PageSize = QPrinter_Custom
)

//enum QPrinter_PaperSize - QPrinter::PaperSize
type QPrinter_PaperSize uint32

const (
	QPrinter_PaperSize_A4         QPrinter_PaperSize = 0
	QPrinter_PaperSize_B5         QPrinter_PaperSize = 1
	QPrinter_PaperSize_Letter     QPrinter_PaperSize = 2
	QPrinter_PaperSize_Legal      QPrinter_PaperSize = 3
	QPrinter_PaperSize_Executive  QPrinter_PaperSize = 4
	QPrinter_PaperSize_A0         QPrinter_PaperSize = 5
	QPrinter_PaperSize_A1         QPrinter_PaperSize = 6
	QPrinter_PaperSize_A2         QPrinter_PaperSize = 7
	QPrinter_PaperSize_A3         QPrinter_PaperSize = 8
	QPrinter_PaperSize_A5         QPrinter_PaperSize = 9
	QPrinter_PaperSize_A6         QPrinter_PaperSize = 10
	QPrinter_PaperSize_A7         QPrinter_PaperSize = 11
	QPrinter_PaperSize_A8         QPrinter_PaperSize = 12
	QPrinter_PaperSize_A9         QPrinter_PaperSize = 13
	QPrinter_PaperSize_B0         QPrinter_PaperSize = 14
	QPrinter_PaperSize_B1         QPrinter_PaperSize = 15
	QPrinter_PaperSize_B10        QPrinter_PaperSize = 16
	QPrinter_PaperSize_B2         QPrinter_PaperSize = 17
	QPrinter_PaperSize_B3         QPrinter_PaperSize = 18
	QPrinter_PaperSize_B4         QPrinter_PaperSize = 19
	QPrinter_PaperSize_B6         QPrinter_PaperSize = 20
	QPrinter_PaperSize_B7         QPrinter_PaperSize = 21
	QPrinter_PaperSize_B8         QPrinter_PaperSize = 22
	QPrinter_PaperSize_B9         QPrinter_PaperSize = 23
	QPrinter_PaperSize_C5E        QPrinter_PaperSize = 24
	QPrinter_PaperSize_Comm10E    QPrinter_PaperSize = 25
	QPrinter_PaperSize_DLE        QPrinter_PaperSize = 26
	QPrinter_PaperSize_Folio      QPrinter_PaperSize = 27
	QPrinter_PaperSize_Ledger     QPrinter_PaperSize = 28
	QPrinter_PaperSize_Tabloid    QPrinter_PaperSize = 29
	QPrinter_PaperSize_Custom     QPrinter_PaperSize = 30
	QPrinter_PaperSize_NPageSize  QPrinter_PaperSize = QPrinter_PaperSize(QPrinter_Custom)
	QPrinter_PaperSize_NPaperSize QPrinter_PaperSize = QPrinter_PaperSize(QPrinter_Custom)
)

//struct QPrinter : QPrinter
type QPrinter struct {
	QPaintDevice
}

//QPrinter::QPrinter()
func NewPrinter() *QPrinter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 105000, 105102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinter{}
	_p.SetDriver(__rv, 105000, true)
	return _p
}

//QPrinter::QPrinter(QPrinter::PrinterMode)
func NewPrinterWithMode(mode QPrinter_PrinterMode) *QPrinter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 105000, 105103, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinter{}
	_p.SetDriver(__rv, 105000, true)
	return _p
}

//QPrinter::QPrinter(QPrinterInfo const&,QPrinter::PrinterMode)
func NewPrinterWithPrinterMode(printer *QPrinterInfo, mode QPrinter_PrinterMode) *QPrinter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 105000, 105104, Native(printer), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinter{}
	_p.SetDriver(__rv, 105000, true)
	return _p
}

//QPrinter::abort()
func (q *QPrinter) Abort() bool {
	var __rv bool
	q.Drv(105000, 105105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::actualNumCopies()
func (q *QPrinter) ActualNumCopies() int32 {
	var __rv int32
	q.Drv(105000, 105106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::collateCopies()
func (q *QPrinter) CollateCopies() bool {
	var __rv bool
	q.Drv(105000, 105107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::colorMode()
func (q *QPrinter) ColorMode() QPrinter_ColorMode {
	var __rv QPrinter_ColorMode
	q.Drv(105000, 105108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::copyCount()
func (q *QPrinter) CopyCount() int32 {
	var __rv int32
	q.Drv(105000, 105109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::creator()
func (q *QPrinter) Creator() string {
	var __rv C.string_head
	q.Drv(105000, 105110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinter::docName()
func (q *QPrinter) DocName() string {
	var __rv C.string_head
	q.Drv(105000, 105111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinter::doubleSidedPrinting()
func (q *QPrinter) DoubleSidedPrinting() bool {
	var __rv bool
	q.Drv(105000, 105112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::duplex()
func (q *QPrinter) Duplex() QPrinter_DuplexMode {
	var __rv QPrinter_DuplexMode
	q.Drv(105000, 105113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::fontEmbeddingEnabled()
func (q *QPrinter) FontEmbeddingEnabled() bool {
	var __rv bool
	q.Drv(105000, 105114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::fromPage()
func (q *QPrinter) FromPage() int32 {
	var __rv int32
	q.Drv(105000, 105115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::fullPage()
func (q *QPrinter) FullPage() bool {
	var __rv bool
	q.Drv(105000, 105116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::getPageMargins(double*,double*,double*,double*,QPrinter::Unit)
func (q *QPrinter) GetPageMargins(left *float64, top *float64, right *float64, bottom *float64, unit QPrinter_Unit) {
	q.Drv(105000, 105117, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), unsafe.Pointer(&unit), nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::isValid()
func (q *QPrinter) IsValid() bool {
	var __rv bool
	q.Drv(105000, 105118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::newPage()
func (q *QPrinter) NewPage() bool {
	var __rv bool
	q.Drv(105000, 105119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::numCopies()
func (q *QPrinter) NumCopies() int32 {
	var __rv int32
	q.Drv(105000, 105120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::orientation()
func (q *QPrinter) Orientation() QPrinter_Orientation {
	var __rv QPrinter_Orientation
	q.Drv(105000, 105121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::outputFileName()
func (q *QPrinter) OutputFileName() string {
	var __rv C.string_head
	q.Drv(105000, 105122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinter::outputFormat()
func (q *QPrinter) OutputFormat() QPrinter_OutputFormat {
	var __rv QPrinter_OutputFormat
	q.Drv(105000, 105123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::pageOrder()
func (q *QPrinter) PageOrder() QPrinter_PageOrder {
	var __rv QPrinter_PageOrder
	q.Drv(105000, 105124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::pageRect()
func (q *QPrinter) PageRect() *QRect {
	var __rv uintptr
	q.Drv(105000, 105125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPrinter::pageRect(QPrinter::Unit)
func (q *QPrinter) PageRectWithUnit(value QPrinter_Unit) *QRectF {
	var __rv uintptr
	q.Drv(105000, 105126, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPrinter::pageSize()
func (q *QPrinter) PageSize() QPrinter_PageSize {
	var __rv QPrinter_PageSize
	q.Drv(105000, 105127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::paperRect()
func (q *QPrinter) PaperRect() *QRect {
	var __rv uintptr
	q.Drv(105000, 105128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPrinter::paperRect(QPrinter::Unit)
func (q *QPrinter) PaperRectWithUnit(value QPrinter_Unit) *QRectF {
	var __rv uintptr
	q.Drv(105000, 105129, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPrinter::paperSize()
func (q *QPrinter) PaperSize() QPrinter_PageSize {
	var __rv QPrinter_PageSize
	q.Drv(105000, 105130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::paperSize(QPrinter::Unit)
func (q *QPrinter) PaperSizeWithUnit(unit QPrinter_Unit) *QSizeF {
	var __rv uintptr
	q.Drv(105000, 105131, unsafe.Pointer(&unit), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QPrinter::paperSource()
func (q *QPrinter) PaperSource() QPrinter_PaperSource {
	var __rv QPrinter_PaperSource
	q.Drv(105000, 105132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::printEngine()
func (q *QPrinter) PrintEngine() *QPrintEngine {
	var __rv uintptr
	q.Drv(105000, 105133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPrintEngine{}
	_rp.SetDriver(__rv, 104000, true)
	return _rp
}

//QPrinter::printProgram()
func (q *QPrinter) PrintProgram() string {
	var __rv C.string_head
	q.Drv(105000, 105134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinter::printRange()
func (q *QPrinter) PrintRange() QPrinter_PrintRange {
	var __rv QPrinter_PrintRange
	q.Drv(105000, 105135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::printerName()
func (q *QPrinter) PrinterName() string {
	var __rv C.string_head
	q.Drv(105000, 105136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinter::printerState()
func (q *QPrinter) PrinterState() QPrinter_PrinterState {
	var __rv QPrinter_PrinterState
	q.Drv(105000, 105137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::resolution()
func (q *QPrinter) Resolution() int32 {
	var __rv int32
	q.Drv(105000, 105138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::setCollateCopies(bool)
func (q *QPrinter) SetCollateCopies(collate bool) {
	q.Drv(105000, 105139, unsafe.Pointer(&collate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setColorMode(QPrinter::ColorMode)
func (q *QPrinter) SetColorMode(value QPrinter_ColorMode) {
	q.Drv(105000, 105140, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setCopyCount(int)
func (q *QPrinter) SetCopyCount(value int32) {
	q.Drv(105000, 105141, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setCreator(QString const&)
func (q *QPrinter) SetCreator(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(105000, 105142, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setDocName(QString const&)
func (q *QPrinter) SetDocName(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(105000, 105143, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setDoubleSidedPrinting(bool)
func (q *QPrinter) SetDoubleSidedPrinting(enable bool) {
	q.Drv(105000, 105144, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setDuplex(QPrinter::DuplexMode)
func (q *QPrinter) SetDuplex(duplex QPrinter_DuplexMode) {
	q.Drv(105000, 105145, unsafe.Pointer(&duplex), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setFontEmbeddingEnabled(bool)
func (q *QPrinter) SetFontEmbeddingEnabled(enable bool) {
	q.Drv(105000, 105146, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setFromTo(int,int)
func (q *QPrinter) SetFromTo(fromPage int32, toPage int32) {
	q.Drv(105000, 105147, unsafe.Pointer(&fromPage), unsafe.Pointer(&toPage), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setFullPage(bool)
func (q *QPrinter) SetFullPage(value bool) {
	q.Drv(105000, 105148, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setNumCopies(int)
func (q *QPrinter) SetNumCopies(value int32) {
	q.Drv(105000, 105149, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setOrientation(QPrinter::Orientation)
func (q *QPrinter) SetOrientation(value QPrinter_Orientation) {
	q.Drv(105000, 105150, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setOutputFileName(QString const&)
func (q *QPrinter) SetOutputFileName(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(105000, 105151, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setOutputFormat(QPrinter::OutputFormat)
func (q *QPrinter) SetOutputFormat(format QPrinter_OutputFormat) {
	q.Drv(105000, 105152, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPageMargins(double,double,double,double,QPrinter::Unit)
func (q *QPrinter) SetPageMargins(left float64, top float64, right float64, bottom float64, unit QPrinter_Unit) {
	q.Drv(105000, 105153, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), unsafe.Pointer(&unit), nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPageOrder(QPrinter::PageOrder)
func (q *QPrinter) SetPageOrder(value QPrinter_PageOrder) {
	q.Drv(105000, 105154, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPageSize(QPrinter::PageSize)
func (q *QPrinter) SetPageSize(value QPrinter_PageSize) {
	q.Drv(105000, 105155, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPaperSize(QPrinter::PageSize)
func (q *QPrinter) SetPaperSize(value QPrinter_PageSize) {
	q.Drv(105000, 105156, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPaperSize(QSizeF const&,QPrinter::Unit)
func (q *QPrinter) SetPaperSizeFWithPapersizeUnit(paperSize *QSizeF, unit QPrinter_Unit) {
	q.Drv(105000, 105157, Native(paperSize), unsafe.Pointer(&unit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPaperSource(QPrinter::PaperSource)
func (q *QPrinter) SetPaperSource(value QPrinter_PaperSource) {
	q.Drv(105000, 105158, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPrintProgram(QString const&)
func (q *QPrinter) SetPrintProgram(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(105000, 105159, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPrintRange(QPrinter::PrintRange)
func (q *QPrinter) SetPrintRange(_range QPrinter_PrintRange) {
	q.Drv(105000, 105160, unsafe.Pointer(&_range), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setPrinterName(QString const&)
func (q *QPrinter) SetPrinterName(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(105000, 105161, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::setResolution(int)
func (q *QPrinter) SetResolution(value int32) {
	q.Drv(105000, 105162, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrinter::supportedResolutions()
func (q *QPrinter) SupportedResolutions() []int32 {
	var __rv []int32
	q.Drv(105000, 105163, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::supportsMultipleCopies()
func (q *QPrinter) SupportsMultipleCopies() bool {
	var __rv bool
	q.Drv(105000, 105164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinter::toPage()
func (q *QPrinter) ToPage() int32 {
	var __rv int32
	q.Drv(105000, 105165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPrinterInfo : QPrinterInfo
type QPrinterInfo struct {
	BaseDrv
}

//QPrinterInfo::QPrinterInfo()
func NewPrinterInfo() *QPrinterInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 106000, 106102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinterInfo{}
	_p.SetDriver(__rv, 106000, true)
	return _p
}

//QPrinterInfo::QPrinterInfo(QPrinter const&)
func NewPrinterInfoWithPrinter(printer *QPrinter) *QPrinterInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 106000, 106103, Native(printer), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinterInfo{}
	_p.SetDriver(__rv, 106000, true)
	return _p
}

//QPrinterInfo::QPrinterInfo(QPrinterInfo const&)
func NewPrinterInfoCopy(src *QPrinterInfo) *QPrinterInfo {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 106000, 106104, Native(src), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrinterInfo{}
	_p.SetDriver(__rv, 106000, true)
	return _p
}

//QPrinterInfo::availablePrinters()
func QPrinterInfoAvailablePrinters() []*QPrinterInfo {
	var __rv []*QPrinterInfo
	DirectQtDrv(nil, 106000, 106105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinterInfo::availablePrinters()
func (q *QPrinterInfo) AvailablePrinters() []*QPrinterInfo {
	var __rv []*QPrinterInfo
	q.Drv(106000, 106105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinterInfo::defaultPrinter()
func QPrinterInfoDefaultPrinter() *QPrinterInfo {
	var __rv uintptr
	DirectQtDrv(nil, 106000, 106106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPrinterInfo{}
	_rp.SetDriver(__rv, 106000, true)
	return _rp
}

//QPrinterInfo::defaultPrinter()
func (q *QPrinterInfo) DefaultPrinter() *QPrinterInfo {
	var __rv uintptr
	q.Drv(106000, 106106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPrinterInfo{}
	_rp.SetDriver(__rv, 106000, true)
	return _rp
}

//QPrinterInfo::isDefault()
func (q *QPrinterInfo) IsDefault() bool {
	var __rv bool
	q.Drv(106000, 106107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinterInfo::isNull()
func (q *QPrinterInfo) IsNull() bool {
	var __rv bool
	q.Drv(106000, 106108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrinterInfo::printerName()
func (q *QPrinterInfo) PrinterName() string {
	var __rv C.string_head
	q.Drv(106000, 106109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPrinterInfo::supportedPaperSizes()
func (q *QPrinterInfo) SupportedPaperSizes() []QPrinter_PaperSize {
	var __rv []QPrinter_PaperSize
	q.Drv(106000, 106110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QProcessEnvironment : QProcessEnvironment
type QProcessEnvironment struct {
	BaseDrv
}

//QProcessEnvironment::QProcessEnvironment()
func NewProcessEnvironment() *QProcessEnvironment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 107000, 107102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProcessEnvironment{}
	_p.SetDriver(__rv, 107000, true)
	return _p
}

//QProcessEnvironment::QProcessEnvironment(QProcessEnvironment const&)
func NewProcessEnvironmentCopy(other *QProcessEnvironment) *QProcessEnvironment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 107000, 107103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProcessEnvironment{}
	_p.SetDriver(__rv, 107000, true)
	return _p
}

//QProcessEnvironment::clear()
func (q *QProcessEnvironment) Clear() {
	q.Drv(107000, 107104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcessEnvironment::contains(QString const&)
func (q *QProcessEnvironment) Contains(name string) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	q.Drv(107000, 107105, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcessEnvironment::insert(QString const&,QString const&)
func (q *QProcessEnvironment) Insert(name string, value string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(107000, 107106, unsafe.Pointer(_name), unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcessEnvironment::isEmpty()
func (q *QProcessEnvironment) IsEmpty() bool {
	var __rv bool
	q.Drv(107000, 107107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcessEnvironment::remove(QString const&)
func (q *QProcessEnvironment) Remove(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(107000, 107108, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcessEnvironment::systemEnvironment()
func QProcessEnvironmentSystemEnvironment() *QProcessEnvironment {
	var __rv uintptr
	DirectQtDrv(nil, 107000, 107109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QProcessEnvironment{}
	_rp.SetDriver(__rv, 107000, true)
	return _rp
}

//QProcessEnvironment::systemEnvironment()
func (q *QProcessEnvironment) SystemEnvironment() *QProcessEnvironment {
	var __rv uintptr
	q.Drv(107000, 107109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QProcessEnvironment{}
	_rp.SetDriver(__rv, 107000, true)
	return _rp
}

//QProcessEnvironment::toStringList()
func (q *QProcessEnvironment) ToStringList() []string {
	var __rv []string
	q.Drv(107000, 107110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcessEnvironment::value(QString const&)
func (q *QProcessEnvironment) Value(name string) string {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv C.string_head
	q.Drv(107000, 107111, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QProcessEnvironment::value(QString const&,QString const&)
func (q *QProcessEnvironment) ValueWithNameDefaultvalue(name string, defaultValue string) string {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	_defaultValue := NewCStringHead(defaultValue)
	defer FreeCStringHead(_defaultValue)
	var __rv C.string_head
	q.Drv(107000, 107112, unsafe.Pointer(_name), unsafe.Pointer(_defaultValue), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QQuaternion : QQuaternion
type QQuaternion struct {
	BaseDrv
}

//QQuaternion::QQuaternion()
func NewQuaternion() *QQuaternion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 108000, 108102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QQuaternion{}
	_p.SetDriver(__rv, 108000, true)
	return _p
}

//QQuaternion::QQuaternion(QVector4D const&)
func NewQuaternionWithVector4d(vector *QVector4D) *QQuaternion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 108000, 108103, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QQuaternion{}
	_p.SetDriver(__rv, 108000, true)
	return _p
}

//QQuaternion::QQuaternion(double,QVector3D const&)
func NewQuaternionWithScalarVector3d(scalar float64, vector *QVector3D) *QQuaternion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 108000, 108104, unsafe.Pointer(&scalar), Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QQuaternion{}
	_p.SetDriver(__rv, 108000, true)
	return _p
}

//QQuaternion::QQuaternion(double,double,double,double)
func NewQuaternionWithScalarXposYposZpos(scalar float64, xpos float64, ypos float64, zpos float64) *QQuaternion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 108000, 108105, unsafe.Pointer(&scalar), unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), unsafe.Pointer(&zpos), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QQuaternion{}
	_p.SetDriver(__rv, 108000, true)
	return _p
}

//QQuaternion::conjugate()
func (q *QQuaternion) Conjugate() *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::fromAxisAndAngle(QVector3D const&,double)
func QQuaternionFromAxisAndAngleFWithVector3dAngle(axis *QVector3D, angle float64) *QQuaternion {
	var __rv uintptr
	DirectQtDrv(nil, 108000, 108107, Native(axis), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::fromAxisAndAngle(QVector3D const&,double)
func (q *QQuaternion) FromAxisAndAngleFWithVector3dAngle(axis *QVector3D, angle float64) *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108107, Native(axis), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::fromAxisAndAngle(double,double,double,double)
func QQuaternionFromAxisAndAngleFWithXYZAngle(x float64, y float64, z float64, angle float64) *QQuaternion {
	var __rv uintptr
	DirectQtDrv(nil, 108000, 108108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&z), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::fromAxisAndAngle(double,double,double,double)
func (q *QQuaternion) FromAxisAndAngleFWithXYZAngle(x float64, y float64, z float64, angle float64) *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&z), unsafe.Pointer(&angle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::isIdentity()
func (q *QQuaternion) IsIdentity() bool {
	var __rv bool
	q.Drv(108000, 108109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::isNull()
func (q *QQuaternion) IsNull() bool {
	var __rv bool
	q.Drv(108000, 108110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::length()
func (q *QQuaternion) Length() float64 {
	var __rv float64
	q.Drv(108000, 108111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::lengthSquared()
func (q *QQuaternion) LengthSquared() float64 {
	var __rv float64
	q.Drv(108000, 108112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::nlerp(QQuaternion const&,QQuaternion const&,double)
func QQuaternionNlerp(q1 *QQuaternion, q2 *QQuaternion, t float64) *QQuaternion {
	var __rv uintptr
	DirectQtDrv(nil, 108000, 108113, Native(q1), Native(q2), unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::nlerp(QQuaternion const&,QQuaternion const&,double)
func (q *QQuaternion) Nlerp(q1 *QQuaternion, q2 *QQuaternion, t float64) *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108113, Native(q1), Native(q2), unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::normalize()
func (q *QQuaternion) Normalize() {
	q.Drv(108000, 108114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::normalized()
func (q *QQuaternion) Normalized() *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::rotatedVector(QVector3D const&)
func (q *QQuaternion) RotatedVector(vector *QVector3D) *QVector3D {
	var __rv uintptr
	q.Drv(108000, 108116, Native(vector), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QQuaternion::scalar()
func (q *QQuaternion) Scalar() float64 {
	var __rv float64
	q.Drv(108000, 108117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::setScalar(double)
func (q *QQuaternion) SetScalar(scalar float64) {
	q.Drv(108000, 108118, unsafe.Pointer(&scalar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::setVector(QVector3D const&)
func (q *QQuaternion) SetVector(vector *QVector3D) {
	q.Drv(108000, 108119, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::setVector(double,double,double)
func (q *QQuaternion) SetVectorFWithXYZ(x float64, y float64, z float64) {
	q.Drv(108000, 108120, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&z), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::setX(double)
func (q *QQuaternion) SetX(x float64) {
	q.Drv(108000, 108121, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::setY(double)
func (q *QQuaternion) SetY(y float64) {
	q.Drv(108000, 108122, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::setZ(double)
func (q *QQuaternion) SetZ(z float64) {
	q.Drv(108000, 108123, unsafe.Pointer(&z), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QQuaternion::slerp(QQuaternion const&,QQuaternion const&,double)
func QQuaternionSlerp(q1 *QQuaternion, q2 *QQuaternion, t float64) *QQuaternion {
	var __rv uintptr
	DirectQtDrv(nil, 108000, 108124, Native(q1), Native(q2), unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::slerp(QQuaternion const&,QQuaternion const&,double)
func (q *QQuaternion) Slerp(q1 *QQuaternion, q2 *QQuaternion, t float64) *QQuaternion {
	var __rv uintptr
	q.Drv(108000, 108124, Native(q1), Native(q2), unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QQuaternion{}
	_rp.SetDriver(__rv, 108000, true)
	return _rp
}

//QQuaternion::toVector4D()
func (q *QQuaternion) ToVector4D() *QVector4D {
	var __rv uintptr
	q.Drv(108000, 108125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector4D{}
	_rp.SetDriver(__rv, 188000, true)
	return _rp
}

//QQuaternion::vector()
func (q *QQuaternion) Vector() *QVector3D {
	var __rv uintptr
	q.Drv(108000, 108126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QQuaternion::x()
func (q *QQuaternion) X() float64 {
	var __rv float64
	q.Drv(108000, 108127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::y()
func (q *QQuaternion) Y() float64 {
	var __rv float64
	q.Drv(108000, 108128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QQuaternion::z()
func (q *QQuaternion) Z() float64 {
	var __rv float64
	q.Drv(108000, 108129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QRadialGradient : QRadialGradient
type QRadialGradient struct {
	QGradient
}

//QRadialGradient::QRadialGradient()
func NewRadialGradient() *QRadialGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 109000, 109102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadialGradient{}
	_p.SetDriver(__rv, 109000, true)
	return _p
}

//QRadialGradient::QRadialGradient(QPointF const&,double)
func NewRadialGradientWithCenterRadius(center *QPointF, radius float64) *QRadialGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 109000, 109103, Native(center), unsafe.Pointer(&radius), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadialGradient{}
	_p.SetDriver(__rv, 109000, true)
	return _p
}

//QRadialGradient::QRadialGradient(QPointF const&,double,QPointF const&)
func NewRadialGradientWithCenterRadiusFocalpoint(center *QPointF, radius float64, focalPoint *QPointF) *QRadialGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 109000, 109104, Native(center), unsafe.Pointer(&radius), Native(focalPoint), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadialGradient{}
	_p.SetDriver(__rv, 109000, true)
	return _p
}

//QRadialGradient::QRadialGradient(double,double,double)
func NewRadialGradientWithCxCyRadius(cx float64, cy float64, radius float64) *QRadialGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 109000, 109105, unsafe.Pointer(&cx), unsafe.Pointer(&cy), unsafe.Pointer(&radius), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadialGradient{}
	_p.SetDriver(__rv, 109000, true)
	return _p
}

//QRadialGradient::QRadialGradient(double,double,double,double,double)
func NewRadialGradientWithCxCyRadiusFxFy(cx float64, cy float64, radius float64, fx float64, fy float64) *QRadialGradient {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 109000, 109106, unsafe.Pointer(&cx), unsafe.Pointer(&cy), unsafe.Pointer(&radius), unsafe.Pointer(&fx), unsafe.Pointer(&fy), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadialGradient{}
	_p.SetDriver(__rv, 109000, true)
	return _p
}

//QRadialGradient::center()
func (q *QRadialGradient) Center() *QPointF {
	var __rv uintptr
	q.Drv(109000, 109107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRadialGradient::focalPoint()
func (q *QRadialGradient) FocalPoint() *QPointF {
	var __rv uintptr
	q.Drv(109000, 109108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRadialGradient::radius()
func (q *QRadialGradient) Radius() float64 {
	var __rv float64
	q.Drv(109000, 109109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRadialGradient::setCenter(QPointF const&)
func (q *QRadialGradient) SetCenter(center *QPointF) {
	q.Drv(109000, 109110, Native(center), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRadialGradient::setCenter(double,double)
func (q *QRadialGradient) SetCenterFWithXY(x float64, y float64) {
	q.Drv(109000, 109111, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRadialGradient::setFocalPoint(QPointF const&)
func (q *QRadialGradient) SetFocalPoint(focalPoint *QPointF) {
	q.Drv(109000, 109112, Native(focalPoint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRadialGradient::setFocalPoint(double,double)
func (q *QRadialGradient) SetFocalPointFWithXY(x float64, y float64) {
	q.Drv(109000, 109113, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRadialGradient::setRadius(double)
func (q *QRadialGradient) SetRadius(radius float64) {
	q.Drv(109000, 109114, unsafe.Pointer(&radius), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QReadLocker : QReadLocker
type QReadLocker struct {
	BaseDrv
}

//QReadLocker::relock()
func (q *QReadLocker) Relock() {
	q.Drv(110000, 110102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QReadLocker::unlock()
func (q *QReadLocker) Unlock() {
	q.Drv(110000, 110103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QRect : QRect
type QRect struct {
	BaseDrv
}

//QRect::QRect()
func NewRect() *QRect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 111000, 111102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRect{}
	_p.SetDriver(__rv, 111000, true)
	return _p
}

//QRect::QRect(QRect const&)
func NewRectCopy(other *QRect) *QRect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 111000, 111103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRect{}
	_p.SetDriver(__rv, 111000, true)
	return _p
}

//QRect::QRect(QPoint const&,QPoint const&)
func NewRectWithTopleftBottomright(topleft *QPoint, bottomright *QPoint) *QRect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 111000, 111104, Native(topleft), Native(bottomright), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRect{}
	_p.SetDriver(__rv, 111000, true)
	return _p
}

//QRect::QRect(QPoint const&,QSize const&)
func NewRectWithTopleftSize(topleft *QPoint, size *QSize) *QRect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 111000, 111105, Native(topleft), Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRect{}
	_p.SetDriver(__rv, 111000, true)
	return _p
}

//QRect::QRect(int,int,int,int)
func NewRectWithLeftTopWidthHeight(left int32, top int32, width int32, height int32) *QRect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 111000, 111106, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&width), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRect{}
	_p.SetDriver(__rv, 111000, true)
	return _p
}

//QRect::adjust(int,int,int,int)
func (q *QRect) Adjust(x1 int32, y1 int32, x2 int32, y2 int32) {
	q.Drv(111000, 111107, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::adjusted(int,int,int,int)
func (q *QRect) Adjusted(x1 int32, y1 int32, x2 int32, y2 int32) *QRect {
	var __rv uintptr
	q.Drv(111000, 111108, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::bottom()
func (q *QRect) Bottom() int32 {
	var __rv int32
	q.Drv(111000, 111109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::bottomLeft()
func (q *QRect) BottomLeft() *QPoint {
	var __rv uintptr
	q.Drv(111000, 111110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QRect::bottomRight()
func (q *QRect) BottomRight() *QPoint {
	var __rv uintptr
	q.Drv(111000, 111111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QRect::center()
func (q *QRect) Center() *QPoint {
	var __rv uintptr
	q.Drv(111000, 111112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QRect::contains(QPoint const&)
func (q *QRect) Contains(p *QPoint) bool {
	var __rv bool
	q.Drv(111000, 111113, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::contains(QRect const&)
func (q *QRect) ContainsWithRect(r *QRect) bool {
	var __rv bool
	q.Drv(111000, 111114, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::contains(QPoint const&,bool)
func (q *QRect) ContainsWithPointProper(p *QPoint, proper bool) bool {
	var __rv bool
	q.Drv(111000, 111115, Native(p), unsafe.Pointer(&proper), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::contains(QRect const&,bool)
func (q *QRect) ContainsWithRectProper(r *QRect, proper bool) bool {
	var __rv bool
	q.Drv(111000, 111116, Native(r), unsafe.Pointer(&proper), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::contains(int,int)
func (q *QRect) ContainsWithXY(x int32, y int32) bool {
	var __rv bool
	q.Drv(111000, 111117, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::contains(int,int,bool)
func (q *QRect) ContainsWithXYProper(x int32, y int32, proper bool) bool {
	var __rv bool
	q.Drv(111000, 111118, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&proper), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::getCoords(int*,int*,int*,int*)
func (q *QRect) GetCoords(x1 *int32, y1 *int32, x2 *int32, y2 *int32) {
	q.Drv(111000, 111119, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::getRect(int*,int*,int*,int*)
func (q *QRect) GetRect(x *int32, y *int32, w *int32, h *int32) {
	q.Drv(111000, 111120, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::height()
func (q *QRect) Height() int32 {
	var __rv int32
	q.Drv(111000, 111121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::intersected(QRect const&)
func (q *QRect) Intersected(other *QRect) *QRect {
	var __rv uintptr
	q.Drv(111000, 111122, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::intersects(QRect const&)
func (q *QRect) Intersects(r *QRect) bool {
	var __rv bool
	q.Drv(111000, 111123, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::isEmpty()
func (q *QRect) IsEmpty() bool {
	var __rv bool
	q.Drv(111000, 111124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::isNull()
func (q *QRect) IsNull() bool {
	var __rv bool
	q.Drv(111000, 111125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::isValid()
func (q *QRect) IsValid() bool {
	var __rv bool
	q.Drv(111000, 111126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::left()
func (q *QRect) Left() int32 {
	var __rv int32
	q.Drv(111000, 111127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::moveBottom(int)
func (q *QRect) MoveBottom(pos int32) {
	q.Drv(111000, 111128, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveBottomLeft(QPoint const&)
func (q *QRect) MoveBottomLeft(p *QPoint) {
	q.Drv(111000, 111129, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveBottomRight(QPoint const&)
func (q *QRect) MoveBottomRight(p *QPoint) {
	q.Drv(111000, 111130, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveCenter(QPoint const&)
func (q *QRect) MoveCenter(p *QPoint) {
	q.Drv(111000, 111131, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveLeft(int)
func (q *QRect) MoveLeft(pos int32) {
	q.Drv(111000, 111132, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveRight(int)
func (q *QRect) MoveRight(pos int32) {
	q.Drv(111000, 111133, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveTo(QPoint const&)
func (q *QRect) MoveTo(p *QPoint) {
	q.Drv(111000, 111134, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveTo(int,int)
func (q *QRect) MoveToWithXY(x int32, y int32) {
	q.Drv(111000, 111135, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveTop(int)
func (q *QRect) MoveTop(pos int32) {
	q.Drv(111000, 111136, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveTopLeft(QPoint const&)
func (q *QRect) MoveTopLeft(p *QPoint) {
	q.Drv(111000, 111137, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::moveTopRight(QPoint const&)
func (q *QRect) MoveTopRight(p *QPoint) {
	q.Drv(111000, 111138, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::normalized()
func (q *QRect) Normalized() *QRect {
	var __rv uintptr
	q.Drv(111000, 111139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::right()
func (q *QRect) Right() int32 {
	var __rv int32
	q.Drv(111000, 111140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::setBottom(int)
func (q *QRect) SetBottom(pos int32) {
	q.Drv(111000, 111141, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setBottomLeft(QPoint const&)
func (q *QRect) SetBottomLeft(p *QPoint) {
	q.Drv(111000, 111142, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setBottomRight(QPoint const&)
func (q *QRect) SetBottomRight(p *QPoint) {
	q.Drv(111000, 111143, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setCoords(int,int,int,int)
func (q *QRect) SetCoords(x1 int32, y1 int32, x2 int32, y2 int32) {
	q.Drv(111000, 111144, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setHeight(int)
func (q *QRect) SetHeight(h int32) {
	q.Drv(111000, 111145, unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setLeft(int)
func (q *QRect) SetLeft(pos int32) {
	q.Drv(111000, 111146, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setRect(int,int,int,int)
func (q *QRect) SetRect(x int32, y int32, w int32, h int32) {
	q.Drv(111000, 111147, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setRight(int)
func (q *QRect) SetRight(pos int32) {
	q.Drv(111000, 111148, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setSize(QSize const&)
func (q *QRect) SetSize(s *QSize) {
	q.Drv(111000, 111149, Native(s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setTop(int)
func (q *QRect) SetTop(pos int32) {
	q.Drv(111000, 111150, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setTopLeft(QPoint const&)
func (q *QRect) SetTopLeft(p *QPoint) {
	q.Drv(111000, 111151, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setTopRight(QPoint const&)
func (q *QRect) SetTopRight(p *QPoint) {
	q.Drv(111000, 111152, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setWidth(int)
func (q *QRect) SetWidth(w int32) {
	q.Drv(111000, 111153, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setX(int)
func (q *QRect) SetX(x int32) {
	q.Drv(111000, 111154, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::setY(int)
func (q *QRect) SetY(y int32) {
	q.Drv(111000, 111155, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::size()
func (q *QRect) Size() *QSize {
	var __rv uintptr
	q.Drv(111000, 111156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QRect::top()
func (q *QRect) Top() int32 {
	var __rv int32
	q.Drv(111000, 111157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::topLeft()
func (q *QRect) TopLeft() *QPoint {
	var __rv uintptr
	q.Drv(111000, 111158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QRect::topRight()
func (q *QRect) TopRight() *QPoint {
	var __rv uintptr
	q.Drv(111000, 111159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QRect::translate(QPoint const&)
func (q *QRect) Translate(p *QPoint) {
	q.Drv(111000, 111160, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::translate(int,int)
func (q *QRect) TranslateWithDxDy(dx int32, dy int32) {
	q.Drv(111000, 111161, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRect::translated(QPoint const&)
func (q *QRect) Translated(p *QPoint) *QRect {
	var __rv uintptr
	q.Drv(111000, 111162, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::translated(int,int)
func (q *QRect) TranslatedWithDxDy(dx int32, dy int32) *QRect {
	var __rv uintptr
	q.Drv(111000, 111163, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::united(QRect const&)
func (q *QRect) United(other *QRect) *QRect {
	var __rv uintptr
	q.Drv(111000, 111164, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRect::width()
func (q *QRect) Width() int32 {
	var __rv int32
	q.Drv(111000, 111165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::x()
func (q *QRect) X() int32 {
	var __rv int32
	q.Drv(111000, 111166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRect::y()
func (q *QRect) Y() int32 {
	var __rv int32
	q.Drv(111000, 111167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QRectF : QRectF
type QRectF struct {
	BaseDrv
}

//QRectF::QRectF()
func NewRectF() *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::QRectF(QRect const&)
func NewRectFWithRect(rect *QRect) *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112103, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::QRectF(QRectF const&)
func NewRectFCopy(other *QRectF) *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::QRectF(QPointF const&,QPointF const&)
func NewRectFWithTopleftBottomright(topleft *QPointF, bottomRight *QPointF) *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112105, Native(topleft), Native(bottomRight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::QRectF(QPointF const&,QSizeF const&)
func NewRectFWithTopleftSize(topleft *QPointF, size *QSizeF) *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112106, Native(topleft), Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::QRectF(double,double,double,double)
func NewRectFWithLeftTopWidthHeight(left float64, top float64, width float64, height float64) *QRectF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 112000, 112107, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&width), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRectF{}
	_p.SetDriver(__rv, 112000, true)
	return _p
}

//QRectF::adjust(double,double,double,double)
func (q *QRectF) Adjust(x1 float64, y1 float64, x2 float64, y2 float64) {
	q.Drv(112000, 112108, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::adjusted(double,double,double,double)
func (q *QRectF) Adjusted(x1 float64, y1 float64, x2 float64, y2 float64) *QRectF {
	var __rv uintptr
	q.Drv(112000, 112109, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::bottom()
func (q *QRectF) Bottom() float64 {
	var __rv float64
	q.Drv(112000, 112110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::bottomLeft()
func (q *QRectF) BottomLeft() *QPointF {
	var __rv uintptr
	q.Drv(112000, 112111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRectF::bottomRight()
func (q *QRectF) BottomRight() *QPointF {
	var __rv uintptr
	q.Drv(112000, 112112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRectF::center()
func (q *QRectF) Center() *QPointF {
	var __rv uintptr
	q.Drv(112000, 112113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRectF::contains(QPointF const&)
func (q *QRectF) Contains(p *QPointF) bool {
	var __rv bool
	q.Drv(112000, 112114, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::contains(QRectF const&)
func (q *QRectF) ContainsFWithRectf(r *QRectF) bool {
	var __rv bool
	q.Drv(112000, 112115, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::contains(double,double)
func (q *QRectF) ContainsFWithXY(x float64, y float64) bool {
	var __rv bool
	q.Drv(112000, 112116, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::getCoords(double*,double*,double*,double*)
func (q *QRectF) GetCoords(x1 *float64, y1 *float64, x2 *float64, y2 *float64) {
	q.Drv(112000, 112117, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::getRect(double*,double*,double*,double*)
func (q *QRectF) GetRect(x *float64, y *float64, w *float64, h *float64) {
	q.Drv(112000, 112118, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::height()
func (q *QRectF) Height() float64 {
	var __rv float64
	q.Drv(112000, 112119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::intersected(QRectF const&)
func (q *QRectF) Intersected(other *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(112000, 112120, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::intersects(QRectF const&)
func (q *QRectF) Intersects(r *QRectF) bool {
	var __rv bool
	q.Drv(112000, 112121, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::isEmpty()
func (q *QRectF) IsEmpty() bool {
	var __rv bool
	q.Drv(112000, 112122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::isNull()
func (q *QRectF) IsNull() bool {
	var __rv bool
	q.Drv(112000, 112123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::isValid()
func (q *QRectF) IsValid() bool {
	var __rv bool
	q.Drv(112000, 112124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::left()
func (q *QRectF) Left() float64 {
	var __rv float64
	q.Drv(112000, 112125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::moveBottom(double)
func (q *QRectF) MoveBottom(pos float64) {
	q.Drv(112000, 112126, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveBottomLeft(QPointF const&)
func (q *QRectF) MoveBottomLeft(p *QPointF) {
	q.Drv(112000, 112127, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveBottomRight(QPointF const&)
func (q *QRectF) MoveBottomRight(p *QPointF) {
	q.Drv(112000, 112128, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveCenter(QPointF const&)
func (q *QRectF) MoveCenter(p *QPointF) {
	q.Drv(112000, 112129, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveLeft(double)
func (q *QRectF) MoveLeft(pos float64) {
	q.Drv(112000, 112130, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveRight(double)
func (q *QRectF) MoveRight(pos float64) {
	q.Drv(112000, 112131, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveTo(QPointF const&)
func (q *QRectF) MoveTo(p *QPointF) {
	q.Drv(112000, 112132, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveTo(double,double)
func (q *QRectF) MoveToFWithXFloat64(x float64, t float64) {
	q.Drv(112000, 112133, unsafe.Pointer(&x), unsafe.Pointer(&t), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveTop(double)
func (q *QRectF) MoveTop(pos float64) {
	q.Drv(112000, 112134, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveTopLeft(QPointF const&)
func (q *QRectF) MoveTopLeft(p *QPointF) {
	q.Drv(112000, 112135, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::moveTopRight(QPointF const&)
func (q *QRectF) MoveTopRight(p *QPointF) {
	q.Drv(112000, 112136, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::normalized()
func (q *QRectF) Normalized() *QRectF {
	var __rv uintptr
	q.Drv(112000, 112137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::right()
func (q *QRectF) Right() float64 {
	var __rv float64
	q.Drv(112000, 112138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::setBottom(double)
func (q *QRectF) SetBottom(pos float64) {
	q.Drv(112000, 112139, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setBottomLeft(QPointF const&)
func (q *QRectF) SetBottomLeft(p *QPointF) {
	q.Drv(112000, 112140, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setBottomRight(QPointF const&)
func (q *QRectF) SetBottomRight(p *QPointF) {
	q.Drv(112000, 112141, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setCoords(double,double,double,double)
func (q *QRectF) SetCoords(x1 float64, y1 float64, x2 float64, y2 float64) {
	q.Drv(112000, 112142, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setHeight(double)
func (q *QRectF) SetHeight(h float64) {
	q.Drv(112000, 112143, unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setLeft(double)
func (q *QRectF) SetLeft(pos float64) {
	q.Drv(112000, 112144, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setRect(double,double,double,double)
func (q *QRectF) SetRect(x float64, y float64, w float64, h float64) {
	q.Drv(112000, 112145, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setRight(double)
func (q *QRectF) SetRight(pos float64) {
	q.Drv(112000, 112146, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setSize(QSizeF const&)
func (q *QRectF) SetSize(s *QSizeF) {
	q.Drv(112000, 112147, Native(s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setTop(double)
func (q *QRectF) SetTop(pos float64) {
	q.Drv(112000, 112148, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setTopLeft(QPointF const&)
func (q *QRectF) SetTopLeft(p *QPointF) {
	q.Drv(112000, 112149, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setTopRight(QPointF const&)
func (q *QRectF) SetTopRight(p *QPointF) {
	q.Drv(112000, 112150, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setWidth(double)
func (q *QRectF) SetWidth(w float64) {
	q.Drv(112000, 112151, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setX(double)
func (q *QRectF) SetX(pos float64) {
	q.Drv(112000, 112152, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::setY(double)
func (q *QRectF) SetY(pos float64) {
	q.Drv(112000, 112153, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::size()
func (q *QRectF) Size() *QSizeF {
	var __rv uintptr
	q.Drv(112000, 112154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QRectF::toAlignedRect()
func (q *QRectF) ToAlignedRect() *QRect {
	var __rv uintptr
	q.Drv(112000, 112155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRectF::toRect()
func (q *QRectF) ToRect() *QRect {
	var __rv uintptr
	q.Drv(112000, 112156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRectF::top()
func (q *QRectF) Top() float64 {
	var __rv float64
	q.Drv(112000, 112157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::topLeft()
func (q *QRectF) TopLeft() *QPointF {
	var __rv uintptr
	q.Drv(112000, 112158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRectF::topRight()
func (q *QRectF) TopRight() *QPointF {
	var __rv uintptr
	q.Drv(112000, 112159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QRectF::translate(QPointF const&)
func (q *QRectF) Translate(p *QPointF) {
	q.Drv(112000, 112160, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::translate(double,double)
func (q *QRectF) TranslateFWithDxDy(dx float64, dy float64) {
	q.Drv(112000, 112161, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRectF::translated(QPointF const&)
func (q *QRectF) Translated(p *QPointF) *QRectF {
	var __rv uintptr
	q.Drv(112000, 112162, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::translated(double,double)
func (q *QRectF) TranslatedFWithDxDy(dx float64, dy float64) *QRectF {
	var __rv uintptr
	q.Drv(112000, 112163, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::united(QRectF const&)
func (q *QRectF) United(other *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(112000, 112164, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QRectF::width()
func (q *QRectF) Width() float64 {
	var __rv float64
	q.Drv(112000, 112165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::x()
func (q *QRectF) X() float64 {
	var __rv float64
	q.Drv(112000, 112166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRectF::y()
func (q *QRectF) Y() float64 {
	var __rv float64
	q.Drv(112000, 112167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QRegExp_PatternSyntax - QRegExp::PatternSyntax
type QRegExp_PatternSyntax uint32

const (
	QRegExp_RegExp         QRegExp_PatternSyntax = 0
	QRegExp_Wildcard       QRegExp_PatternSyntax = 1
	QRegExp_FixedString    QRegExp_PatternSyntax = 2
	QRegExp_RegExp2        QRegExp_PatternSyntax = 3
	QRegExp_WildcardUnix   QRegExp_PatternSyntax = 4
	QRegExp_W3CXmlSchema11 QRegExp_PatternSyntax = 5
)

//enum QRegExp_CaretMode - QRegExp::CaretMode
type QRegExp_CaretMode uint32

const (
	QRegExp_CaretAtZero    QRegExp_CaretMode = 0
	QRegExp_CaretAtOffset  QRegExp_CaretMode = 1
	QRegExp_CaretWontMatch QRegExp_CaretMode = 2
)

//struct QRegExp : QRegExp
type QRegExp struct {
	BaseDrv
}

//QRegExp::QRegExp()
func NewRegExp() *QRegExp {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 113000, 113102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExp{}
	_p.SetDriver(__rv, 113000, true)
	return _p
}

//QRegExp::QRegExp(QRegExp const&)
func NewRegExpCopy(rx *QRegExp) *QRegExp {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 113000, 113103, Native(rx), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExp{}
	_p.SetDriver(__rv, 113000, true)
	return _p
}

//QRegExp::QRegExp(QString const&,Qt::CaseSensitivity,QRegExp::PatternSyntax)
func NewRegExpWithPatternCsSyntax(pattern string, cs Qt_CaseSensitivity, syntax QRegExp_PatternSyntax) *QRegExp {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 113000, 113104, unsafe.Pointer(_pattern), unsafe.Pointer(&cs), unsafe.Pointer(&syntax), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExp{}
	_p.SetDriver(__rv, 113000, true)
	return _p
}

//QRegExp::cap()
func (q *QRegExp) Cap() string {
	var __rv C.string_head
	q.Drv(113000, 113105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::cap(int)
func (q *QRegExp) CapWithNth(nth int32) string {
	var __rv C.string_head
	q.Drv(113000, 113106, unsafe.Pointer(&nth), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::captureCount()
func (q *QRegExp) CaptureCount() int32 {
	var __rv int32
	q.Drv(113000, 113107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::capturedTexts()
func (q *QRegExp) CapturedTexts() []string {
	var __rv []string
	q.Drv(113000, 113108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::caseSensitivity()
func (q *QRegExp) CaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(113000, 113109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::errorString()
func (q *QRegExp) ErrorString() string {
	var __rv C.string_head
	q.Drv(113000, 113110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::escape(QString const&)
func QRegExpEscape(str string) string {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv C.string_head
	DirectQtDrv(nil, 113000, 113111, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::escape(QString const&)
func (q *QRegExp) Escape(str string) string {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv C.string_head
	q.Drv(113000, 113111, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::exactMatch(QString const&)
func (q *QRegExp) ExactMatch(str string) bool {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv bool
	q.Drv(113000, 113112, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::indexIn(QString const&)
func (q *QRegExp) IndexIn(str string) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(113000, 113113, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::indexIn(QString const&,int,QRegExp::CaretMode)
func (q *QRegExp) IndexInWithTextOffsetCaretmode(str string, offset int32, caretMode QRegExp_CaretMode) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(113000, 113114, unsafe.Pointer(_str), unsafe.Pointer(&offset), unsafe.Pointer(&caretMode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::isEmpty()
func (q *QRegExp) IsEmpty() bool {
	var __rv bool
	q.Drv(113000, 113115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::isMinimal()
func (q *QRegExp) IsMinimal() bool {
	var __rv bool
	q.Drv(113000, 113116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::isValid()
func (q *QRegExp) IsValid() bool {
	var __rv bool
	q.Drv(113000, 113117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::lastIndexIn(QString const&)
func (q *QRegExp) LastIndexIn(str string) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(113000, 113118, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::lastIndexIn(QString const&,int,QRegExp::CaretMode)
func (q *QRegExp) LastIndexInWithTextOffsetCaretmode(str string, offset int32, caretMode QRegExp_CaretMode) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(113000, 113119, unsafe.Pointer(_str), unsafe.Pointer(&offset), unsafe.Pointer(&caretMode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::matchedLength()
func (q *QRegExp) MatchedLength() int32 {
	var __rv int32
	q.Drv(113000, 113120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::pattern()
func (q *QRegExp) Pattern() string {
	var __rv C.string_head
	q.Drv(113000, 113121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QRegExp::patternSyntax()
func (q *QRegExp) PatternSyntax() QRegExp_PatternSyntax {
	var __rv QRegExp_PatternSyntax
	q.Drv(113000, 113122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::pos()
func (q *QRegExp) Pos() int32 {
	var __rv int32
	q.Drv(113000, 113123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::pos(int)
func (q *QRegExp) PosWithNth(nth int32) int32 {
	var __rv int32
	q.Drv(113000, 113124, unsafe.Pointer(&nth), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegExp::setCaseSensitivity(Qt::CaseSensitivity)
func (q *QRegExp) SetCaseSensitivity(cs Qt_CaseSensitivity) {
	q.Drv(113000, 113125, unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegExp::setMinimal(bool)
func (q *QRegExp) SetMinimal(minimal bool) {
	q.Drv(113000, 113126, unsafe.Pointer(&minimal), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegExp::setPattern(QString const&)
func (q *QRegExp) SetPattern(pattern string) {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	q.Drv(113000, 113127, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegExp::setPatternSyntax(QRegExp::PatternSyntax)
func (q *QRegExp) SetPatternSyntax(syntax QRegExp_PatternSyntax) {
	q.Drv(113000, 113128, unsafe.Pointer(&syntax), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QRegion_RegionType - QRegion::RegionType
type QRegion_RegionType uint32

const (
	QRegion_Rectangle QRegion_RegionType = 0
	QRegion_Ellipse   QRegion_RegionType = 1
)

//struct QRegion : QRegion
type QRegion struct {
	BaseDrv
}

//QRegion::QRegion()
func NewRegion() *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::QRegion(QBitmap const&)
func NewRegionWithBitmap(bitmap *QBitmap) *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114103, Native(bitmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::QRegion(QRegion const&)
func NewRegionCopy(region *QRegion) *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114104, Native(region), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::QRegion(QPolygon const&,Qt::FillRule)
func NewRegionWithPolygonFillrule(pa *QPolygon, fillRule Qt_FillRule) *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114105, Native(pa), unsafe.Pointer(&fillRule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::QRegion(QRect const&,QRegion::RegionType)
func NewRegionWithRectType(r *QRect, t QRegion_RegionType) *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114106, Native(r), unsafe.Pointer(&t), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::QRegion(int,int,int,int,QRegion::RegionType)
func NewRegionWithXYWidthHeightType(x int32, y int32, w int32, h int32, t QRegion_RegionType) *QRegion {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 114000, 114107, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&t), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegion{}
	_p.SetDriver(__rv, 114000, true)
	return _p
}

//QRegion::boundingRect()
func (q *QRegion) BoundingRect() *QRect {
	var __rv uintptr
	q.Drv(114000, 114108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QRegion::contains(QPoint const&)
func (q *QRegion) Contains(p *QPoint) bool {
	var __rv bool
	q.Drv(114000, 114109, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::contains(QRect const&)
func (q *QRegion) ContainsWithRect(r *QRect) bool {
	var __rv bool
	q.Drv(114000, 114110, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::intersected(QRect const&)
func (q *QRegion) Intersected(r *QRect) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114111, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::intersected(QRegion const&)
func (q *QRegion) IntersectedWithRegion(r *QRegion) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114112, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::intersects(QRect const&)
func (q *QRegion) Intersects(r *QRect) bool {
	var __rv bool
	q.Drv(114000, 114113, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::intersects(QRegion const&)
func (q *QRegion) IntersectsWithRegion(r *QRegion) bool {
	var __rv bool
	q.Drv(114000, 114114, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::isEmpty()
func (q *QRegion) IsEmpty() bool {
	var __rv bool
	q.Drv(114000, 114115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::rectCount()
func (q *QRegion) RectCount() int32 {
	var __rv int32
	q.Drv(114000, 114116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::rects()
func (q *QRegion) Rects() []*QRect {
	var __rv []*QRect
	q.Drv(114000, 114117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QRegion::setRects(QRect const*,int)
func (q *QRegion) SetRects(ar []*QRect) {
	q.Drv(114000, 114118, unsafe.Pointer(&ar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegion::subtracted(QRegion const&)
func (q *QRegion) Subtracted(r *QRegion) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114119, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::translate(QPoint const&)
func (q *QRegion) Translate(p *QPoint) {
	q.Drv(114000, 114120, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegion::translate(int,int)
func (q *QRegion) TranslateWithDxDy(dx int32, dy int32) {
	q.Drv(114000, 114121, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRegion::translated(QPoint const&)
func (q *QRegion) Translated(p *QPoint) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114122, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::translated(int,int)
func (q *QRegion) TranslatedWithDxDy(dx int32, dy int32) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114123, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::united(QRect const&)
func (q *QRegion) United(r *QRect) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114124, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::united(QRegion const&)
func (q *QRegion) UnitedWithRegion(r *QRegion) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114125, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QRegion::xored(QRegion const&)
func (q *QRegion) Xored(r *QRegion) *QRegion {
	var __rv uintptr
	q.Drv(114000, 114126, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//struct QResHelp : QResHelp
type QResHelp struct {
	BaseDrv
}

//QResHelp::registerResourceData(int,uchar const*,uchar const*,uchar const*)
func QResHelpRegisterResourceData(version int32, tree *byte, name *byte, data *byte) bool {
	var __rv bool
	DirectQtDrv(nil, 115000, 115102, unsafe.Pointer(&version), unsafe.Pointer(&tree), unsafe.Pointer(&name), unsafe.Pointer(&data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResHelp::registerResourceData(int,uchar const*,uchar const*,uchar const*)
func (q *QResHelp) RegisterResourceData(version int32, tree *byte, name *byte, data *byte) bool {
	var __rv bool
	q.Drv(115000, 115102, unsafe.Pointer(&version), unsafe.Pointer(&tree), unsafe.Pointer(&name), unsafe.Pointer(&data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResHelp::unregisterResourceData(int,uchar const*,uchar const*,uchar const*)
func QResHelpUnregisterResourceData(version int32, tree *byte, name *byte, data *byte) bool {
	var __rv bool
	DirectQtDrv(nil, 115000, 115103, unsafe.Pointer(&version), unsafe.Pointer(&tree), unsafe.Pointer(&name), unsafe.Pointer(&data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResHelp::unregisterResourceData(int,uchar const*,uchar const*,uchar const*)
func (q *QResHelp) UnregisterResourceData(version int32, tree *byte, name *byte, data *byte) bool {
	var __rv bool
	q.Drv(115000, 115103, unsafe.Pointer(&version), unsafe.Pointer(&tree), unsafe.Pointer(&name), unsafe.Pointer(&data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QResizeEvent : QResizeEvent
type QResizeEvent struct {
	QEvent
}

//QResizeEvent::QResizeEvent(QSize const&,QSize const&)
func NewResizeEvent(size *QSize, oldSize *QSize) *QResizeEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 116000, 116102, Native(size), Native(oldSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QResizeEvent{}
	_p.SetDriver(__rv, 116000, true)
	return _p
}

//QResizeEvent::oldSize()
func (q *QResizeEvent) OldSize() *QSize {
	var __rv uintptr
	q.Drv(116000, 116103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QResizeEvent::size()
func (q *QResizeEvent) Size() *QSize {
	var __rv uintptr
	q.Drv(116000, 116104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//struct QResource : QResource
type QResource struct {
	BaseDrv
}

//QResource::QResource()
func NewResource() *QResource {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 117000, 117102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QResource{}
	_p.SetDriver(__rv, 117000, true)
	return _p
}

//QResource::QResource(QString const&,QLocale const&)
func NewResourceWithFilenameLocale(file string, locale *QLocale) *QResource {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 117000, 117103, unsafe.Pointer(_file), Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QResource{}
	_p.SetDriver(__rv, 117000, true)
	return _p
}

//QResource::absoluteFilePath()
func (q *QResource) AbsoluteFilePath() string {
	var __rv C.string_head
	q.Drv(117000, 117104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QResource::addSearchPath(QString const&)
func QResourceAddSearchPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	DirectQtDrv(nil, 117000, 117105, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QResource::addSearchPath(QString const&)
func (q *QResource) AddSearchPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(117000, 117105, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QResource::data()
func (q *QResource) Data() *byte {
	var __rv *byte
	q.Drv(117000, 117106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::fileName()
func (q *QResource) FileName() string {
	var __rv C.string_head
	q.Drv(117000, 117107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QResource::isCompressed()
func (q *QResource) IsCompressed() bool {
	var __rv bool
	q.Drv(117000, 117108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::isValid()
func (q *QResource) IsValid() bool {
	var __rv bool
	q.Drv(117000, 117109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::locale()
func (q *QResource) Locale() *QLocale {
	var __rv uintptr
	q.Drv(117000, 117110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QResource::registerResource(QString const&)
func QResourceRegisterResource(rccFilename string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	var __rv bool
	DirectQtDrv(nil, 117000, 117111, unsafe.Pointer(_rccFilename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(QString const&)
func (q *QResource) RegisterResource(rccFilename string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	var __rv bool
	q.Drv(117000, 117111, unsafe.Pointer(_rccFilename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(unsigned char const*)
func QResourceRegisterResourceWithRccdata(rccData *byte) bool {
	var __rv bool
	DirectQtDrv(nil, 117000, 117112, unsafe.Pointer(&rccData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(unsigned char const*)
func (q *QResource) RegisterResourceWithRccdata(rccData *byte) bool {
	var __rv bool
	q.Drv(117000, 117112, unsafe.Pointer(&rccData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(QString const&,QString const&)
func QResourceRegisterResourceWithRccfilenameResourceroot(rccFilename string, resourceRoot string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	DirectQtDrv(nil, 117000, 117113, unsafe.Pointer(_rccFilename), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(QString const&,QString const&)
func (q *QResource) RegisterResourceWithRccfilenameResourceroot(rccFilename string, resourceRoot string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	q.Drv(117000, 117113, unsafe.Pointer(_rccFilename), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(unsigned char const*,QString const&)
func QResourceRegisterResourceWithRccdataResourceroot(rccData *byte, resourceRoot string) bool {
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	DirectQtDrv(nil, 117000, 117114, unsafe.Pointer(&rccData), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::registerResource(unsigned char const*,QString const&)
func (q *QResource) RegisterResourceWithRccdataResourceroot(rccData *byte, resourceRoot string) bool {
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	q.Drv(117000, 117114, unsafe.Pointer(&rccData), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::searchPaths()
func QResourceSearchPaths() []string {
	var __rv []string
	DirectQtDrv(nil, 117000, 117115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::searchPaths()
func (q *QResource) SearchPaths() []string {
	var __rv []string
	q.Drv(117000, 117115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::setFileName(QString const&)
func (q *QResource) SetFileName(file string) {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	q.Drv(117000, 117116, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QResource::setLocale(QLocale const&)
func (q *QResource) SetLocale(locale *QLocale) {
	q.Drv(117000, 117117, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QResource::size()
func (q *QResource) Size() int64 {
	var __rv int64
	q.Drv(117000, 117118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(QString const&)
func QResourceUnregisterResource(rccFilename string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	var __rv bool
	DirectQtDrv(nil, 117000, 117119, unsafe.Pointer(_rccFilename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(QString const&)
func (q *QResource) UnregisterResource(rccFilename string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	var __rv bool
	q.Drv(117000, 117119, unsafe.Pointer(_rccFilename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(unsigned char const*)
func QResourceUnregisterResourceWithRccdata(rccData *byte) bool {
	var __rv bool
	DirectQtDrv(nil, 117000, 117120, unsafe.Pointer(&rccData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(unsigned char const*)
func (q *QResource) UnregisterResourceWithRccdata(rccData *byte) bool {
	var __rv bool
	q.Drv(117000, 117120, unsafe.Pointer(&rccData), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(QString const&,QString const&)
func QResourceUnregisterResourceWithRccfilenameResourceroot(rccFilename string, resourceRoot string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	DirectQtDrv(nil, 117000, 117121, unsafe.Pointer(_rccFilename), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(QString const&,QString const&)
func (q *QResource) UnregisterResourceWithRccfilenameResourceroot(rccFilename string, resourceRoot string) bool {
	_rccFilename := NewCStringHead(rccFilename)
	defer FreeCStringHead(_rccFilename)
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	q.Drv(117000, 117121, unsafe.Pointer(_rccFilename), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(unsigned char const*,QString const&)
func QResourceUnregisterResourceWithRccdataResourceroot(rccData *byte, resourceRoot string) bool {
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	DirectQtDrv(nil, 117000, 117122, unsafe.Pointer(&rccData), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QResource::unregisterResource(unsigned char const*,QString const&)
func (q *QResource) UnregisterResourceWithRccdataResourceroot(rccData *byte, resourceRoot string) bool {
	_resourceRoot := NewCStringHead(resourceRoot)
	defer FreeCStringHead(_resourceRoot)
	var __rv bool
	q.Drv(117000, 117122, unsafe.Pointer(&rccData), unsafe.Pointer(_resourceRoot), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QShortcutEvent : QShortcutEvent
type QShortcutEvent struct {
	QEvent
}

//QShortcutEvent::QShortcutEvent(QKeySequence const&,int,bool)
func NewShortcutEvent(key *QKeySequence, id int32, ambiguous bool) *QShortcutEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 118000, 118102, Native(key), unsafe.Pointer(&id), unsafe.Pointer(&ambiguous), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QShortcutEvent{}
	_p.SetDriver(__rv, 118000, true)
	return _p
}

//QShortcutEvent::isAmbiguous()
func (q *QShortcutEvent) IsAmbiguous() bool {
	var __rv bool
	q.Drv(118000, 118103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QShortcutEvent::key()
func (q *QShortcutEvent) Key() *QKeySequence {
	var __rv uintptr
	q.Drv(118000, 118104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QShortcutEvent::shortcutId()
func (q *QShortcutEvent) ShortcutId() int32 {
	var __rv int32
	q.Drv(118000, 118105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QShowEvent : QShowEvent
type QShowEvent struct {
	QEvent
}

//QShowEvent::QShowEvent()
func NewShowEvent() *QShowEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 119000, 119102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QShowEvent{}
	_p.SetDriver(__rv, 119000, true)
	return _p
}

//struct QSize : QSize
type QSize struct {
	BaseDrv
}

//QSize::QSize()
func NewSize() *QSize {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 120000, 120102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSize{}
	_p.SetDriver(__rv, 120000, true)
	return _p
}

//QSize::QSize(QSize const&)
func NewSizeCopy(other *QSize) *QSize {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 120000, 120103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSize{}
	_p.SetDriver(__rv, 120000, true)
	return _p
}

//QSize::QSize(int,int)
func NewSizeWithWidthHeight(w int32, h int32) *QSize {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 120000, 120104, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSize{}
	_p.SetDriver(__rv, 120000, true)
	return _p
}

//QSize::boundedTo(QSize const&)
func (q *QSize) BoundedTo(value *QSize) *QSize {
	var __rv uintptr
	q.Drv(120000, 120105, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QSize::expandedTo(QSize const&)
func (q *QSize) ExpandedTo(value *QSize) *QSize {
	var __rv uintptr
	q.Drv(120000, 120106, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QSize::height()
func (q *QSize) Height() int32 {
	var __rv int32
	q.Drv(120000, 120107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::isEmpty()
func (q *QSize) IsEmpty() bool {
	var __rv bool
	q.Drv(120000, 120108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::isNull()
func (q *QSize) IsNull() bool {
	var __rv bool
	q.Drv(120000, 120109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::isValid()
func (q *QSize) IsValid() bool {
	var __rv bool
	q.Drv(120000, 120110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::rheight()
func (q *QSize) Rheight() *int32 {
	var __rv *int32
	q.Drv(120000, 120111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::rwidth()
func (q *QSize) Rwidth() *int32 {
	var __rv *int32
	q.Drv(120000, 120112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSize::scale(QSize const&,Qt::AspectRatioMode)
func (q *QSize) ScaleWithSizeMode(s *QSize, mode Qt_AspectRatioMode) {
	q.Drv(120000, 120113, Native(s), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSize::scale(int,int,Qt::AspectRatioMode)
func (q *QSize) ScaleWithWidthHeightMode(w int32, h int32, mode Qt_AspectRatioMode) {
	q.Drv(120000, 120114, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSize::setHeight(int)
func (q *QSize) SetHeight(h int32) {
	q.Drv(120000, 120115, unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSize::setWidth(int)
func (q *QSize) SetWidth(w int32) {
	q.Drv(120000, 120116, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSize::transpose()
func (q *QSize) Transpose() {
	q.Drv(120000, 120117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSize::width()
func (q *QSize) Width() int32 {
	var __rv int32
	q.Drv(120000, 120118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSizeF : QSizeF
type QSizeF struct {
	BaseDrv
}

//QSizeF::QSizeF()
func NewSizeF() *QSizeF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 121000, 121102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizeF{}
	_p.SetDriver(__rv, 121000, true)
	return _p
}

//QSizeF::QSizeF(QSize const&)
func NewSizeFWithSize(sz *QSize) *QSizeF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 121000, 121103, Native(sz), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizeF{}
	_p.SetDriver(__rv, 121000, true)
	return _p
}

//QSizeF::QSizeF(QSizeF const&)
func NewSizeFCopy(other *QSizeF) *QSizeF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 121000, 121104, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizeF{}
	_p.SetDriver(__rv, 121000, true)
	return _p
}

//QSizeF::QSizeF(double,double)
func NewSizeFWithWidthHeight(w float64, h float64) *QSizeF {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 121000, 121105, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizeF{}
	_p.SetDriver(__rv, 121000, true)
	return _p
}

//QSizeF::boundedTo(QSizeF const&)
func (q *QSizeF) BoundedTo(value *QSizeF) *QSizeF {
	var __rv uintptr
	q.Drv(121000, 121106, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QSizeF::expandedTo(QSizeF const&)
func (q *QSizeF) ExpandedTo(value *QSizeF) *QSizeF {
	var __rv uintptr
	q.Drv(121000, 121107, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QSizeF::height()
func (q *QSizeF) Height() float64 {
	var __rv float64
	q.Drv(121000, 121108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::isEmpty()
func (q *QSizeF) IsEmpty() bool {
	var __rv bool
	q.Drv(121000, 121109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::isNull()
func (q *QSizeF) IsNull() bool {
	var __rv bool
	q.Drv(121000, 121110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::isValid()
func (q *QSizeF) IsValid() bool {
	var __rv bool
	q.Drv(121000, 121111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::rheight()
func (q *QSizeF) Rheight() *float64 {
	var __rv *float64
	q.Drv(121000, 121112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::rwidth()
func (q *QSizeF) Rwidth() *float64 {
	var __rv *float64
	q.Drv(121000, 121113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizeF::scale(QSizeF const&,Qt::AspectRatioMode)
func (q *QSizeF) ScaleFWithSizefMode(s *QSizeF, mode Qt_AspectRatioMode) {
	q.Drv(121000, 121114, Native(s), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizeF::scale(double,double,Qt::AspectRatioMode)
func (q *QSizeF) ScaleFWithWidthHeightMode(w float64, h float64, mode Qt_AspectRatioMode) {
	q.Drv(121000, 121115, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizeF::setHeight(double)
func (q *QSizeF) SetHeight(h float64) {
	q.Drv(121000, 121116, unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizeF::setWidth(double)
func (q *QSizeF) SetWidth(w float64) {
	q.Drv(121000, 121117, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizeF::toSize()
func (q *QSizeF) ToSize() *QSize {
	var __rv uintptr
	q.Drv(121000, 121118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QSizeF::transpose()
func (q *QSizeF) Transpose() {
	q.Drv(121000, 121119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizeF::width()
func (q *QSizeF) Width() float64 {
	var __rv float64
	q.Drv(121000, 121120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QSizePolicy_ControlType - QSizePolicy::ControlType
type QSizePolicy_ControlType uint32

const (
	QSizePolicy_DefaultType QSizePolicy_ControlType = 0x00000001
	QSizePolicy_ButtonBox   QSizePolicy_ControlType = 0x00000002
	QSizePolicy_CheckBox    QSizePolicy_ControlType = 0x00000004
	QSizePolicy_ComboBox    QSizePolicy_ControlType = 0x00000008
	QSizePolicy_Frame       QSizePolicy_ControlType = 0x00000010
	QSizePolicy_GroupBox    QSizePolicy_ControlType = 0x00000020
	QSizePolicy_Label       QSizePolicy_ControlType = 0x00000040
	QSizePolicy_Line        QSizePolicy_ControlType = 0x00000080
	QSizePolicy_LineEdit    QSizePolicy_ControlType = 0x00000100
	QSizePolicy_PushButton  QSizePolicy_ControlType = 0x00000200
	QSizePolicy_RadioButton QSizePolicy_ControlType = 0x00000400
	QSizePolicy_Slider      QSizePolicy_ControlType = 0x00000800
	QSizePolicy_SpinBox     QSizePolicy_ControlType = 0x00001000
	QSizePolicy_TabWidget   QSizePolicy_ControlType = 0x00002000
	QSizePolicy_ToolButton  QSizePolicy_ControlType = 0x00004000
)

//enum QSizePolicy_PolicyFlag - QSizePolicy::PolicyFlag
type QSizePolicy_PolicyFlag uint32

const (
	QSizePolicy_GrowFlag   QSizePolicy_PolicyFlag = 1
	QSizePolicy_ExpandFlag QSizePolicy_PolicyFlag = 2
	QSizePolicy_ShrinkFlag QSizePolicy_PolicyFlag = 4
	QSizePolicy_IgnoreFlag QSizePolicy_PolicyFlag = 8
)

//enum QSizePolicy_SizePolicyMasks - QSizePolicy::SizePolicyMasks
type QSizePolicy_SizePolicyMasks uint32

const (
	QSizePolicy_HSize       QSizePolicy_SizePolicyMasks = 4
	QSizePolicy_HMask       QSizePolicy_SizePolicyMasks = 0x0f
	QSizePolicy_VMask       QSizePolicy_SizePolicyMasks = QSizePolicy_HMask << QSizePolicy_HSize
	QSizePolicy_CTShift     QSizePolicy_SizePolicyMasks = 9
	QSizePolicy_CTSize      QSizePolicy_SizePolicyMasks = 5
	QSizePolicy_WFHShift    QSizePolicy_SizePolicyMasks = QSizePolicy_CTShift + QSizePolicy_CTSize
	QSizePolicy_CTMask      QSizePolicy_SizePolicyMasks = ((0x1 << QSizePolicy_CTSize) - 1) << QSizePolicy_CTShift
	QSizePolicy_UnusedShift QSizePolicy_SizePolicyMasks = QSizePolicy_CTShift + QSizePolicy_CTSize
	QSizePolicy_UnusedSize  QSizePolicy_SizePolicyMasks = 2
)

//enum QSizePolicy_Policy - QSizePolicy::Policy
type QSizePolicy_Policy uint32

const (
	QSizePolicy_Fixed            QSizePolicy_Policy = 0
	QSizePolicy_Minimum          QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_GrowFlag)
	QSizePolicy_Maximum          QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_ShrinkFlag)
	QSizePolicy_Preferred        QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_GrowFlag) | QSizePolicy_Policy(QSizePolicy_ShrinkFlag)
	QSizePolicy_MinimumExpanding QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_GrowFlag) | QSizePolicy_Policy(QSizePolicy_ExpandFlag)
	QSizePolicy_Expanding        QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_GrowFlag) | QSizePolicy_Policy(QSizePolicy_ShrinkFlag) | QSizePolicy_Policy(QSizePolicy_ExpandFlag)
	QSizePolicy_Ignored          QSizePolicy_Policy = QSizePolicy_Policy(QSizePolicy_ShrinkFlag) | QSizePolicy_Policy(QSizePolicy_GrowFlag) | QSizePolicy_Policy(QSizePolicy_IgnoreFlag)
)

//struct QSizePolicy : QSizePolicy
type QSizePolicy struct {
	BaseDrv
}

//QSizePolicy::QSizePolicy()
func NewSizePolicy() *QSizePolicy {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 122000, 122102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizePolicy{}
	_p.SetDriver(__rv, 122000, true)
	return _p
}

//QSizePolicy::QSizePolicy(QSizePolicy const&)
func NewSizePolicyCopy(other *QSizePolicy) *QSizePolicy {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 122000, 122103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizePolicy{}
	_p.SetDriver(__rv, 122000, true)
	return _p
}

//QSizePolicy::QSizePolicy(QSizePolicy::Policy,QSizePolicy::Policy)
func NewSizePolicyWithHorizontalVertical(horizontal QSizePolicy_Policy, vertical QSizePolicy_Policy) *QSizePolicy {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 122000, 122104, unsafe.Pointer(&horizontal), unsafe.Pointer(&vertical), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizePolicy{}
	_p.SetDriver(__rv, 122000, true)
	return _p
}

//QSizePolicy::QSizePolicy(QSizePolicy::Policy,QSizePolicy::Policy,QSizePolicy::ControlType)
func NewSizePolicyWithHorizontalVerticalType(horizontal QSizePolicy_Policy, vertical QSizePolicy_Policy, _type QSizePolicy_ControlType) *QSizePolicy {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 122000, 122105, unsafe.Pointer(&horizontal), unsafe.Pointer(&vertical), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizePolicy{}
	_p.SetDriver(__rv, 122000, true)
	return _p
}

//QSizePolicy::controlType()
func (q *QSizePolicy) ControlType() QSizePolicy_ControlType {
	var __rv QSizePolicy_ControlType
	q.Drv(122000, 122106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::expandingDirections()
func (q *QSizePolicy) ExpandingDirections() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(122000, 122107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::hasHeightForWidth()
func (q *QSizePolicy) HasHeightForWidth() bool {
	var __rv bool
	q.Drv(122000, 122108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::horizontalPolicy()
func (q *QSizePolicy) HorizontalPolicy() QSizePolicy_Policy {
	var __rv QSizePolicy_Policy
	q.Drv(122000, 122109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::horizontalStretch()
func (q *QSizePolicy) HorizontalStretch() int32 {
	var __rv int32
	q.Drv(122000, 122110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::setControlType(QSizePolicy::ControlType)
func (q *QSizePolicy) SetControlType(_type QSizePolicy_ControlType) {
	q.Drv(122000, 122111, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::setHeightForWidth(bool)
func (q *QSizePolicy) SetHeightForWidth(b bool) {
	q.Drv(122000, 122112, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::setHorizontalPolicy(QSizePolicy::Policy)
func (q *QSizePolicy) SetHorizontalPolicy(d QSizePolicy_Policy) {
	q.Drv(122000, 122113, unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::setHorizontalStretch(unsigned char)
func (q *QSizePolicy) SetHorizontalStretch(stretchFactor byte) {
	q.Drv(122000, 122114, unsafe.Pointer(&stretchFactor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::setVerticalPolicy(QSizePolicy::Policy)
func (q *QSizePolicy) SetVerticalPolicy(d QSizePolicy_Policy) {
	q.Drv(122000, 122115, unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::setVerticalStretch(unsigned char)
func (q *QSizePolicy) SetVerticalStretch(stretchFactor byte) {
	q.Drv(122000, 122116, unsafe.Pointer(&stretchFactor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::transpose()
func (q *QSizePolicy) Transpose() {
	q.Drv(122000, 122117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSizePolicy::verticalPolicy()
func (q *QSizePolicy) VerticalPolicy() QSizePolicy_Policy {
	var __rv QSizePolicy_Policy
	q.Drv(122000, 122118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSizePolicy::verticalStretch()
func (q *QSizePolicy) VerticalStretch() int32 {
	var __rv int32
	q.Drv(122000, 122119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSpacerItem : QSpacerItem
type QSpacerItem struct {
	QLayoutItem
}

//QSpacerItem::QSpacerItem(int,int,QSizePolicy::Policy,QSizePolicy::Policy)
func NewSpacerItem(w int32, h int32, hData QSizePolicy_Policy, vData QSizePolicy_Policy) *QSpacerItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 123000, 123102, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&hData), unsafe.Pointer(&vData), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSpacerItem{}
	_p.SetDriver(__rv, 123000, true)
	return _p
}

//QSpacerItem::changeSize(int,int,QSizePolicy::Policy,QSizePolicy::Policy)
func (q *QSpacerItem) ChangeSize(w int32, h int32, hData QSizePolicy_Policy, vData QSizePolicy_Policy) {
	q.Drv(123000, 123103, unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&hData), unsafe.Pointer(&vData), nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QStandardItem_ItemType - QStandardItem::ItemType
type QStandardItem_ItemType uint32

const (
	QStandardItem_Type     QStandardItem_ItemType = 0
	QStandardItem_UserType QStandardItem_ItemType = 1000
)

//struct QStandardItem : QStandardItem
type QStandardItem struct {
	BaseDrv
}

//QStandardItem::QStandardItem()
func NewStandardItem() *QStandardItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 124000, 124102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItem{}
	_p.SetDriver(__rv, 124000, true)
	return _p
}

//QStandardItem::QStandardItem(QString const&)
func NewStandardItemWithText(text string) *QStandardItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 124000, 124103, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItem{}
	_p.SetDriver(__rv, 124000, true)
	return _p
}

//QStandardItem::QStandardItem(QIcon const&,QString const&)
func NewStandardItemWithIconText(icon *QIcon, text string) *QStandardItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 124000, 124104, Native(icon), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItem{}
	_p.SetDriver(__rv, 124000, true)
	return _p
}

//QStandardItem::QStandardItem(int,int)
func NewStandardItemWithRowsColumns(rows int32, columns int32) *QStandardItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 124000, 124105, unsafe.Pointer(&rows), unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItem{}
	_p.SetDriver(__rv, 124000, true)
	return _p
}

//QStandardItem::accessibleDescription()
func (q *QStandardItem) AccessibleDescription() string {
	var __rv C.string_head
	q.Drv(124000, 124106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStandardItem::accessibleText()
func (q *QStandardItem) AccessibleText() string {
	var __rv C.string_head
	q.Drv(124000, 124107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStandardItem::appendColumn(QList<QStandardItem*> const&)
func (q *QStandardItem) AppendColumn(items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124108, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::appendRow(QList<QStandardItem*> const&)
func (q *QStandardItem) AppendRow(items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124109, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::appendRow(QStandardItem*)
func (q *QStandardItem) AppendRowWithItem(item *QStandardItem) {
	q.Drv(124000, 124110, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::appendRows(QList<QStandardItem*> const&)
func (q *QStandardItem) AppendRows(items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124111, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::background()
func (q *QStandardItem) Background() *QBrush {
	var __rv uintptr
	q.Drv(124000, 124112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QStandardItem::checkState()
func (q *QStandardItem) CheckState() Qt_CheckState {
	var __rv Qt_CheckState
	q.Drv(124000, 124113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::child(int)
func (q *QStandardItem) Child(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124114, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::child(int,int)
func (q *QStandardItem) ChildWithRowColumn(row int32, column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124115, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::clone()
func (q *QStandardItem) Clone() *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::column()
func (q *QStandardItem) Column() int32 {
	var __rv int32
	q.Drv(124000, 124117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::columnCount()
func (q *QStandardItem) ColumnCount() int32 {
	var __rv int32
	q.Drv(124000, 124118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::data()
func (q *QStandardItem) Data() *QVariant {
	var __rv uintptr
	q.Drv(124000, 124119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QStandardItem::data(int)
func (q *QStandardItem) DataWithRole(role int32) *QVariant {
	var __rv uintptr
	q.Drv(124000, 124120, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QStandardItem::flags()
func (q *QStandardItem) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(124000, 124121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::font()
func (q *QStandardItem) Font() *QFont {
	var __rv uintptr
	q.Drv(124000, 124122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QStandardItem::foreground()
func (q *QStandardItem) Foreground() *QBrush {
	var __rv uintptr
	q.Drv(124000, 124123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QStandardItem::hasChildren()
func (q *QStandardItem) HasChildren() bool {
	var __rv bool
	q.Drv(124000, 124124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::icon()
func (q *QStandardItem) Icon() *QIcon {
	var __rv uintptr
	q.Drv(124000, 124125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QStandardItem::index()
func (q *QStandardItem) Index() *QModelIndex {
	var __rv uintptr
	q.Drv(124000, 124126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QStandardItem::insertColumn(int,QList<QStandardItem*> const&)
func (q *QStandardItem) InsertColumn(column int32, items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124127, unsafe.Pointer(&column), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::insertColumns(int,int)
func (q *QStandardItem) InsertColumns(column int32, count int32) {
	q.Drv(124000, 124128, unsafe.Pointer(&column), unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::insertRow(int,QList<QStandardItem*> const&)
func (q *QStandardItem) InsertRowWithRowItems(row int32, items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124129, unsafe.Pointer(&row), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::insertRow(int,QStandardItem*)
func (q *QStandardItem) InsertRowWithRowItem(row int32, item *QStandardItem) {
	q.Drv(124000, 124130, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::insertRows(int,QList<QStandardItem*> const&)
func (q *QStandardItem) InsertRowsWithRowItems(row int32, items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(124000, 124131, unsafe.Pointer(&row), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::insertRows(int,int)
func (q *QStandardItem) InsertRowsWithRowCount(row int32, count int32) {
	q.Drv(124000, 124132, unsafe.Pointer(&row), unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::isCheckable()
func (q *QStandardItem) IsCheckable() bool {
	var __rv bool
	q.Drv(124000, 124133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isDragEnabled()
func (q *QStandardItem) IsDragEnabled() bool {
	var __rv bool
	q.Drv(124000, 124134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isDropEnabled()
func (q *QStandardItem) IsDropEnabled() bool {
	var __rv bool
	q.Drv(124000, 124135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isEditable()
func (q *QStandardItem) IsEditable() bool {
	var __rv bool
	q.Drv(124000, 124136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isEnabled()
func (q *QStandardItem) IsEnabled() bool {
	var __rv bool
	q.Drv(124000, 124137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isSelectable()
func (q *QStandardItem) IsSelectable() bool {
	var __rv bool
	q.Drv(124000, 124138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::isTristate()
func (q *QStandardItem) IsTristate() bool {
	var __rv bool
	q.Drv(124000, 124139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::model()
func (q *QStandardItem) Model() *QStandardItemModel {
	var __rv uintptr
	q.Drv(124000, 124140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItemModel{}
	_rp.SetDriver(__rv, 354000, false)
	return _rp
}

//QStandardItem::parent()
func (q *QStandardItem) Parent() *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::removeColumn(int)
func (q *QStandardItem) RemoveColumn(column int32) {
	q.Drv(124000, 124142, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::removeColumns(int,int)
func (q *QStandardItem) RemoveColumns(column int32, count int32) {
	q.Drv(124000, 124143, unsafe.Pointer(&column), unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::removeRow(int)
func (q *QStandardItem) RemoveRow(row int32) {
	q.Drv(124000, 124144, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::removeRows(int,int)
func (q *QStandardItem) RemoveRows(row int32, count int32) {
	q.Drv(124000, 124145, unsafe.Pointer(&row), unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::row()
func (q *QStandardItem) Row() int32 {
	var __rv int32
	q.Drv(124000, 124146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::rowCount()
func (q *QStandardItem) RowCount() int32 {
	var __rv int32
	q.Drv(124000, 124147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::setAccessibleDescription(QString const&)
func (q *QStandardItem) SetAccessibleDescription(accessibleDescription string) {
	_accessibleDescription := NewCStringHead(accessibleDescription)
	defer FreeCStringHead(_accessibleDescription)
	q.Drv(124000, 124148, unsafe.Pointer(_accessibleDescription), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setAccessibleText(QString const&)
func (q *QStandardItem) SetAccessibleText(accessibleText string) {
	_accessibleText := NewCStringHead(accessibleText)
	defer FreeCStringHead(_accessibleText)
	q.Drv(124000, 124149, unsafe.Pointer(_accessibleText), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setBackground(QBrush const&)
func (q *QStandardItem) SetBackground(brush *QBrush) {
	q.Drv(124000, 124150, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setCheckState(Qt::CheckState)
func (q *QStandardItem) SetCheckState(checkState Qt_CheckState) {
	q.Drv(124000, 124151, unsafe.Pointer(&checkState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setCheckable(bool)
func (q *QStandardItem) SetCheckable(checkable bool) {
	q.Drv(124000, 124152, unsafe.Pointer(&checkable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setChild(int,QStandardItem*)
func (q *QStandardItem) SetChildWithRowItem(row int32, item *QStandardItem) {
	q.Drv(124000, 124153, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setChild(int,int,QStandardItem*)
func (q *QStandardItem) SetChildWithRowColumnItem(row int32, column int32, item *QStandardItem) {
	q.Drv(124000, 124154, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setColumnCount(int)
func (q *QStandardItem) SetColumnCount(columns int32) {
	q.Drv(124000, 124155, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setData(QVariant const&)
func (q *QStandardItem) SetData(value *QVariant) {
	q.Drv(124000, 124156, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setData(QVariant const&,int)
func (q *QStandardItem) SetDataWithValueRole(value *QVariant, role int32) {
	q.Drv(124000, 124157, Native(value), unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setDragEnabled(bool)
func (q *QStandardItem) SetDragEnabled(dragEnabled bool) {
	q.Drv(124000, 124158, unsafe.Pointer(&dragEnabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setDropEnabled(bool)
func (q *QStandardItem) SetDropEnabled(dropEnabled bool) {
	q.Drv(124000, 124159, unsafe.Pointer(&dropEnabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setEditable(bool)
func (q *QStandardItem) SetEditable(editable bool) {
	q.Drv(124000, 124160, unsafe.Pointer(&editable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setEnabled(bool)
func (q *QStandardItem) SetEnabled(enabled bool) {
	q.Drv(124000, 124161, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setFlags(QFlags<Qt::ItemFlag>)
func (q *QStandardItem) SetFlags(flags Qt_ItemFlag) {
	q.Drv(124000, 124162, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setFont(QFont const&)
func (q *QStandardItem) SetFont(font *QFont) {
	q.Drv(124000, 124163, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setForeground(QBrush const&)
func (q *QStandardItem) SetForeground(brush *QBrush) {
	q.Drv(124000, 124164, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setIcon(QIcon const&)
func (q *QStandardItem) SetIcon(icon *QIcon) {
	q.Drv(124000, 124165, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setRowCount(int)
func (q *QStandardItem) SetRowCount(rows int32) {
	q.Drv(124000, 124166, unsafe.Pointer(&rows), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setSelectable(bool)
func (q *QStandardItem) SetSelectable(selectable bool) {
	q.Drv(124000, 124167, unsafe.Pointer(&selectable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setSizeHint(QSize const&)
func (q *QStandardItem) SetSizeHint(sizeHint *QSize) {
	q.Drv(124000, 124168, Native(sizeHint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setStatusTip(QString const&)
func (q *QStandardItem) SetStatusTip(statusTip string) {
	_statusTip := NewCStringHead(statusTip)
	defer FreeCStringHead(_statusTip)
	q.Drv(124000, 124169, unsafe.Pointer(_statusTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setText(QString const&)
func (q *QStandardItem) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(124000, 124170, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setTextAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QStandardItem) SetTextAlignment(textAlignment Qt_AlignmentFlag) {
	q.Drv(124000, 124171, unsafe.Pointer(&textAlignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setToolTip(QString const&)
func (q *QStandardItem) SetToolTip(toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(124000, 124172, unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setTristate(bool)
func (q *QStandardItem) SetTristate(tristate bool) {
	q.Drv(124000, 124173, unsafe.Pointer(&tristate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::setWhatsThis(QString const&)
func (q *QStandardItem) SetWhatsThis(whatsThis string) {
	_whatsThis := NewCStringHead(whatsThis)
	defer FreeCStringHead(_whatsThis)
	q.Drv(124000, 124174, unsafe.Pointer(_whatsThis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::sizeHint()
func (q *QStandardItem) SizeHint() *QSize {
	var __rv uintptr
	q.Drv(124000, 124175, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QStandardItem::sortChildren(int)
func (q *QStandardItem) SortChildren(column int32) {
	q.Drv(124000, 124176, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::sortChildren(int,Qt::SortOrder)
func (q *QStandardItem) SortChildrenWithColumnOrder(column int32, order Qt_SortOrder) {
	q.Drv(124000, 124177, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItem::statusTip()
func (q *QStandardItem) StatusTip() string {
	var __rv C.string_head
	q.Drv(124000, 124178, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStandardItem::takeChild(int)
func (q *QStandardItem) TakeChild(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124179, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::takeChild(int,int)
func (q *QStandardItem) TakeChildWithRowColumn(row int32, column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(124000, 124180, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItem::takeColumn(int)
func (q *QStandardItem) TakeColumn(column int32) []*QStandardItem {
	var __rv []*QStandardItem
	q.Drv(124000, 124181, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::takeRow(int)
func (q *QStandardItem) TakeRow(row int32) []*QStandardItem {
	var __rv []*QStandardItem
	q.Drv(124000, 124182, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::text()
func (q *QStandardItem) Text() string {
	var __rv C.string_head
	q.Drv(124000, 124183, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStandardItem::textAlignment()
func (q *QStandardItem) TextAlignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(124000, 124184, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::toolTip()
func (q *QStandardItem) ToolTip() string {
	var __rv C.string_head
	q.Drv(124000, 124185, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStandardItem::type()
func (q *QStandardItem) Type() int32 {
	var __rv int32
	q.Drv(124000, 124186, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItem::whatsThis()
func (q *QStandardItem) WhatsThis() string {
	var __rv C.string_head
	q.Drv(124000, 124187, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QStateMachineSignalEvent : QStateMachine::SignalEvent
type QStateMachineSignalEvent struct {
	QEvent
}

//QStateMachine::SignalEvent::SignalEvent(QObject*,int,QList<QVariant> const&)
func NewStateMachineSignalEvent(sender QObjectInterface, signalIndex int32, arguments []*QVariant) *QStateMachineSignalEvent {
	_arguments := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&arguments)))
	defer FreeCNoObjectArrayHead(_arguments)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 125000, 125102, Native(sender), unsafe.Pointer(&signalIndex), unsafe.Pointer(_arguments), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStateMachineSignalEvent{}
	_p.SetDriver(__rv, 125000, true)
	return _p
}

//QStateMachine::SignalEvent::arguments()
func (q *QStateMachineSignalEvent) Arguments() []*QVariant {
	var __rv []*QVariant
	q.Drv(125000, 125103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::SignalEvent::sender()
func (q *QStateMachineSignalEvent) Sender() *QObject {
	var __rv uintptr
	q.Drv(125000, 125104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QStateMachine::SignalEvent::signalIndex()
func (q *QStateMachineSignalEvent) SignalIndex() int32 {
	var __rv int32
	q.Drv(125000, 125105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QStateMachineWrappedEvent : QStateMachine::WrappedEvent
type QStateMachineWrappedEvent struct {
	QEvent
}

//QStateMachine::WrappedEvent::WrappedEvent(QObject*,QEvent*)
func NewStateMachineWrappedEvent(object QObjectInterface, event *QEvent) *QStateMachineWrappedEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 126000, 126102, Native(object), Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStateMachineWrappedEvent{}
	_p.SetDriver(__rv, 126000, true)
	return _p
}

//QStateMachine::WrappedEvent::event()
func (q *QStateMachineWrappedEvent) Event() *QEvent {
	var __rv uintptr
	q.Drv(126000, 126103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QEvent{}
	_rp.SetDriver(__rv, 31000, true)
	return _rp
}

//QStateMachine::WrappedEvent::object()
func (q *QStateMachineWrappedEvent) Object() *QObject {
	var __rv uintptr
	q.Drv(126000, 126104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//enum QStaticText_PerformanceHint - QStaticText::PerformanceHint
type QStaticText_PerformanceHint uint32

const (
	QStaticText_ModerateCaching   QStaticText_PerformanceHint = 0
	QStaticText_AggressiveCaching QStaticText_PerformanceHint = 1
)

//struct QStaticText : QStaticText
type QStaticText struct {
	BaseDrv
}

//QStaticText::QStaticText()
func NewStaticText() *QStaticText {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 127000, 127102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStaticText{}
	_p.SetDriver(__rv, 127000, true)
	return _p
}

//QStaticText::QStaticText(QStaticText const&)
func NewStaticTextCopy(other *QStaticText) *QStaticText {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 127000, 127103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStaticText{}
	_p.SetDriver(__rv, 127000, true)
	return _p
}

//QStaticText::QStaticText(QString const&)
func NewStaticTextWithText(text string) *QStaticText {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 127000, 127104, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStaticText{}
	_p.SetDriver(__rv, 127000, true)
	return _p
}

//QStaticText::performanceHint()
func (q *QStaticText) PerformanceHint() QStaticText_PerformanceHint {
	var __rv QStaticText_PerformanceHint
	q.Drv(127000, 127105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStaticText::prepare()
func (q *QStaticText) Prepare() {
	q.Drv(127000, 127106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::prepare(QTransform const&,QFont const&)
func (q *QStaticText) PrepareWithTransformFont(matrix *QTransform, font *QFont) {
	q.Drv(127000, 127107, Native(matrix), Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::setPerformanceHint(QStaticText::PerformanceHint)
func (q *QStaticText) SetPerformanceHint(performanceHint QStaticText_PerformanceHint) {
	q.Drv(127000, 127108, unsafe.Pointer(&performanceHint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::setText(QString const&)
func (q *QStaticText) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(127000, 127109, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::setTextFormat(Qt::TextFormat)
func (q *QStaticText) SetTextFormat(textFormat Qt_TextFormat) {
	q.Drv(127000, 127110, unsafe.Pointer(&textFormat), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::setTextOption(QTextOption const&)
func (q *QStaticText) SetTextOption(textOption *QTextOption) {
	q.Drv(127000, 127111, Native(textOption), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::setTextWidth(double)
func (q *QStaticText) SetTextWidth(textWidth float64) {
	q.Drv(127000, 127112, unsafe.Pointer(&textWidth), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStaticText::size()
func (q *QStaticText) Size() *QSizeF {
	var __rv uintptr
	q.Drv(127000, 127113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QStaticText::text()
func (q *QStaticText) Text() string {
	var __rv C.string_head
	q.Drv(127000, 127114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStaticText::textFormat()
func (q *QStaticText) TextFormat() Qt_TextFormat {
	var __rv Qt_TextFormat
	q.Drv(127000, 127115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStaticText::textOption()
func (q *QStaticText) TextOption() *QTextOption {
	var __rv uintptr
	q.Drv(127000, 127116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextOption{}
	_rp.SetDriver(__rv, 166000, true)
	return _rp
}

//QStaticText::textWidth()
func (q *QStaticText) TextWidth() float64 {
	var __rv float64
	q.Drv(127000, 127117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QStatusTipEvent : QStatusTipEvent
type QStatusTipEvent struct {
	QEvent
}

//QStatusTipEvent::QStatusTipEvent(QString const&)
func NewStatusTipEvent(tip string) *QStatusTipEvent {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 128000, 128102, unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStatusTipEvent{}
	_p.SetDriver(__rv, 128000, true)
	return _p
}

//QStatusTipEvent::tip()
func (q *QStatusTipEvent) Tip() string {
	var __rv C.string_head
	q.Drv(128000, 128103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QStringMatcher : QStringMatcher
type QStringMatcher struct {
	BaseDrv
}

//QStringMatcher::QStringMatcher()
func NewStringMatcher() *QStringMatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 129000, 129102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringMatcher{}
	_p.SetDriver(__rv, 129000, true)
	return _p
}

//QStringMatcher::QStringMatcher(QStringMatcher const&)
func NewStringMatcherCopy(other *QStringMatcher) *QStringMatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 129000, 129103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringMatcher{}
	_p.SetDriver(__rv, 129000, true)
	return _p
}

//QStringMatcher::QStringMatcher(QString const&,Qt::CaseSensitivity)
func NewStringMatcherWithPatternCs(pattern string, cs Qt_CaseSensitivity) *QStringMatcher {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 129000, 129104, unsafe.Pointer(_pattern), unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringMatcher{}
	_p.SetDriver(__rv, 129000, true)
	return _p
}

//QStringMatcher::QStringMatcher(QChar const*,int,Qt::CaseSensitivity)
func NewStringMatcherWithUcLenCs(uc *rune, len int32, cs Qt_CaseSensitivity) *QStringMatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 129000, 129105, unsafe.Pointer(&uc), unsafe.Pointer(&len), unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringMatcher{}
	_p.SetDriver(__rv, 129000, true)
	return _p
}

//QStringMatcher::caseSensitivity()
func (q *QStringMatcher) CaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(129000, 129106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStringMatcher::indexIn(QString const&)
func (q *QStringMatcher) IndexIn(str string) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(129000, 129107, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStringMatcher::indexIn(QString const&,int)
func (q *QStringMatcher) IndexInWithTextIfrom(str string, from int32) int32 {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv int32
	q.Drv(129000, 129108, unsafe.Pointer(_str), unsafe.Pointer(&from), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStringMatcher::indexIn(QChar const*,int,int)
func (q *QStringMatcher) IndexInWithStrLengthIfrom(str *rune, length int32, from int32) int32 {
	var __rv int32
	q.Drv(129000, 129109, unsafe.Pointer(&str), unsafe.Pointer(&length), unsafe.Pointer(&from), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStringMatcher::pattern()
func (q *QStringMatcher) Pattern() string {
	var __rv C.string_head
	q.Drv(129000, 129110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStringMatcher::setCaseSensitivity(Qt::CaseSensitivity)
func (q *QStringMatcher) SetCaseSensitivity(cs Qt_CaseSensitivity) {
	q.Drv(129000, 129111, unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStringMatcher::setPattern(QString const&)
func (q *QStringMatcher) SetPattern(pattern string) {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	q.Drv(129000, 129112, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QStringVariantMap : QStringVariantMap
type QStringVariantMap struct {
	BaseDrv
}

//QStringVariantMap::QStringVariantMap()
func NewStringVariantMap() *QStringVariantMap {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 130000, 130102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringVariantMap{}
	_p.SetDriver(__rv, 130000, true)
	return _p
}

//QStringVariantMap::insert(QString const&,QVariant const&)
func (q *QStringVariantMap) Insert(k string, v *QVariant) {
	_k := NewCStringHead(k)
	defer FreeCStringHead(_k)
	q.Drv(130000, 130103, unsafe.Pointer(_k), Native(v), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStringVariantMap::keys()
func (q *QStringVariantMap) Keys() []string {
	var __rv []string
	q.Drv(130000, 130104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStringVariantMap::value(QString const&)
func (q *QStringVariantMap) Value(key string) *QVariant {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	q.Drv(130000, 130105, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//map to QStringVariantMap
func ToStringVariantMap(m map[string]*QVariant) *QStringVariantMap {
	p := NewStringVariantMap()
	for k, v := range m {
		p.Insert(k, v)
	}
	return p
}

//map from QStringVariantMap
func FromStringVariantMap(p *QStringVariantMap) map[string]*QVariant {
	m := make(map[string]*QVariant)
	for _, k := range p.Keys() {
		m[k] = p.Value(k)
	}
	return m
}

//struct QStyleFactory : QStyleFactory
type QStyleFactory struct {
	BaseDrv
}

//QStyleFactory::QStyleFactory()
func NewStyleFactory() *QStyleFactory {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 131000, 131102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyleFactory{}
	_p.SetDriver(__rv, 131000, true)
	return _p
}

//QStyleFactory::create(QString const&)
func QStyleFactoryCreate(value string) *QStyle {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv uintptr
	DirectQtDrv(nil, 131000, 131103, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QStyleFactory::create(QString const&)
func (q *QStyleFactory) Create(value string) *QStyle {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv uintptr
	q.Drv(131000, 131103, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QStyleFactory::keys()
func QStyleFactoryKeys() []string {
	var __rv []string
	DirectQtDrv(nil, 131000, 131104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyleFactory::keys()
func (q *QStyleFactory) Keys() []string {
	var __rv []string
	q.Drv(131000, 131104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QStyleHintReturn_HintReturnType - QStyleHintReturn::HintReturnType
type QStyleHintReturn_HintReturnType uint32

const (
	QStyleHintReturn_SH_Default QStyleHintReturn_HintReturnType = 0xf000
	QStyleHintReturn_SH_Mask    QStyleHintReturn_HintReturnType = 0xf000 + 1
	QStyleHintReturn_SH_Variant QStyleHintReturn_HintReturnType = 0xf000 + 1 + 1
)

//enum QStyleHintReturn_StyleOptionVersion - QStyleHintReturn::StyleOptionVersion
type QStyleHintReturn_StyleOptionVersion uint32

const (
	QStyleHintReturn_Version QStyleHintReturn_StyleOptionVersion = 1
)

//enum QStyleHintReturn_StyleOptionType - QStyleHintReturn::StyleOptionType
type QStyleHintReturn_StyleOptionType uint32

const (
	QStyleHintReturn_Type QStyleHintReturn_StyleOptionType = QStyleHintReturn_StyleOptionType(QStyleHintReturn_SH_Default)
)

//struct QStyleHintReturn : QStyleHintReturn
type QStyleHintReturn struct {
	BaseDrv
}

//QStyleHintReturn::QStyleHintReturn()
func NewStyleHintReturn() *QStyleHintReturn {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 132000, 132102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyleHintReturn{}
	_p.SetDriver(__rv, 132000, true)
	return _p
}

//QStyleHintReturn::QStyleHintReturn(int,int)
func NewStyleHintReturnWithVersionType(version int32, _type int32) *QStyleHintReturn {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 132000, 132103, unsafe.Pointer(&version), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyleHintReturn{}
	_p.SetDriver(__rv, 132000, true)
	return _p
}

//enum QStyleHintReturnMask_StyleOptionVersion - QStyleHintReturnMask::StyleOptionVersion
type QStyleHintReturnMask_StyleOptionVersion uint32

const (
	QStyleHintReturnMask_Version QStyleHintReturnMask_StyleOptionVersion = 1
)

//enum QStyleHintReturnMask_StyleOptionType - QStyleHintReturnMask::StyleOptionType
type QStyleHintReturnMask_StyleOptionType uint32

const (
	QStyleHintReturnMask_Type QStyleHintReturnMask_StyleOptionType = QStyleHintReturnMask_StyleOptionType(QStyleHintReturn_SH_Mask)
)

//struct QStyleHintReturnMask : QStyleHintReturnMask
type QStyleHintReturnMask struct {
	QStyleHintReturn
}

//QStyleHintReturnMask::QStyleHintReturnMask()
func NewStyleHintReturnMask() *QStyleHintReturnMask {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 133000, 133102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyleHintReturnMask{}
	_p.SetDriver(__rv, 133000, true)
	return _p
}

//enum QStyleHintReturnVariant_StyleOptionVersion - QStyleHintReturnVariant::StyleOptionVersion
type QStyleHintReturnVariant_StyleOptionVersion uint32

const (
	QStyleHintReturnVariant_Version QStyleHintReturnVariant_StyleOptionVersion = 1
)

//enum QStyleHintReturnVariant_StyleOptionType - QStyleHintReturnVariant::StyleOptionType
type QStyleHintReturnVariant_StyleOptionType uint32

const (
	QStyleHintReturnVariant_Type QStyleHintReturnVariant_StyleOptionType = QStyleHintReturnVariant_StyleOptionType(QStyleHintReturn_SH_Variant)
)

//struct QStyleHintReturnVariant : QStyleHintReturnVariant
type QStyleHintReturnVariant struct {
	QStyleHintReturn
}

//QStyleHintReturnVariant::QStyleHintReturnVariant()
func NewStyleHintReturnVariant() *QStyleHintReturnVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 134000, 134102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyleHintReturnVariant{}
	_p.SetDriver(__rv, 134000, true)
	return _p
}

//struct QStylePainter : QStylePainter
type QStylePainter struct {
	QPainter
}

//QStylePainter::QStylePainter()
func NewStylePainter() *QStylePainter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 135000, 135102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStylePainter{}
	_p.SetDriver(__rv, 135000, true)
	return _p
}

//QStylePainter::QStylePainter(QWidget*)
func NewStylePainterWithWidget(w QWidgetInterface) *QStylePainter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 135000, 135103, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStylePainter{}
	_p.SetDriver(__rv, 135000, true)
	return _p
}

//QStylePainter::QStylePainter(QPaintDevice*,QWidget*)
func NewStylePainterWithPaintDeviceWidget(pd QPaintDeviceInterface, w QWidgetInterface) *QStylePainter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 135000, 135104, unsafe.Pointer(new_pd_head(pd)), Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStylePainter{}
	_p.SetDriver(__rv, 135000, true)
	return _p
}

//QStylePainter::begin(QWidget*)
func (q *QStylePainter) Begin(w QWidgetInterface) bool {
	var __rv bool
	q.Drv(135000, 135105, Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStylePainter::begin(QPaintDevice*,QWidget*)
func (q *QStylePainter) BeginWithPaintDeviceWidget(pd QPaintDeviceInterface, w QWidgetInterface) bool {
	var __rv bool
	q.Drv(135000, 135106, unsafe.Pointer(new_pd_head(pd)), Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStylePainter::drawItemPixmap(QRect const&,int,QPixmap const&)
func (q *QStylePainter) DrawItemPixmap(r *QRect, flags int32, pixmap *QPixmap) {
	q.Drv(135000, 135107, Native(r), unsafe.Pointer(&flags), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStylePainter::drawItemText(QRect const&,int,QPalette const&,bool,QString const&,QPalette::ColorRole)
func (q *QStylePainter) DrawItemText(r *QRect, flags int32, pal *QPalette, enabled bool, text string, textRole QPalette_ColorRole) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(135000, 135108, Native(r), unsafe.Pointer(&flags), Native(pal), unsafe.Pointer(&enabled), unsafe.Pointer(_text), unsafe.Pointer(&textRole), nil, nil, nil, nil, nil, nil)
}

//QStylePainter::style()
func (q *QStylePainter) Style() *QStyle {
	var __rv uintptr
	q.Drv(135000, 135109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//enum QTableWidgetItem_ItemType - QTableWidgetItem::ItemType
type QTableWidgetItem_ItemType uint32

const (
	QTableWidgetItem_Type     QTableWidgetItem_ItemType = 0
	QTableWidgetItem_UserType QTableWidgetItem_ItemType = 1000
)

//struct QTableWidgetItem : QTableWidgetItem
type QTableWidgetItem struct {
	BaseDrv
}

//QTableWidgetItem::QTableWidgetItem()
func NewTableWidgetItem() *QTableWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 136000, 136102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetItem{}
	_p.SetDriver(__rv, 136000, true)
	return _p
}

//QTableWidgetItem::QTableWidgetItem(QTableWidgetItem const&)
func NewTableWidgetItemCopy(other *QTableWidgetItem) *QTableWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 136000, 136103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetItem{}
	_p.SetDriver(__rv, 136000, true)
	return _p
}

//QTableWidgetItem::QTableWidgetItem(int)
func NewTableWidgetItemWithType(_type int32) *QTableWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 136000, 136104, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetItem{}
	_p.SetDriver(__rv, 136000, true)
	return _p
}

//QTableWidgetItem::QTableWidgetItem(QString const&,int)
func NewTableWidgetItemWithTextType(text string, _type int32) *QTableWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 136000, 136105, unsafe.Pointer(_text), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetItem{}
	_p.SetDriver(__rv, 136000, true)
	return _p
}

//QTableWidgetItem::QTableWidgetItem(QIcon const&,QString const&,int)
func NewTableWidgetItemWithIconTextType(icon *QIcon, text string, _type int32) *QTableWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 136000, 136106, Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetItem{}
	_p.SetDriver(__rv, 136000, true)
	return _p
}

//QTableWidgetItem::background()
func (q *QTableWidgetItem) Background() *QBrush {
	var __rv uintptr
	q.Drv(136000, 136107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTableWidgetItem::backgroundColor()
func (q *QTableWidgetItem) BackgroundColor() *QColor {
	var __rv uintptr
	q.Drv(136000, 136108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTableWidgetItem::checkState()
func (q *QTableWidgetItem) CheckState() Qt_CheckState {
	var __rv Qt_CheckState
	q.Drv(136000, 136109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::clone()
func (q *QTableWidgetItem) Clone() *QTableWidgetItem {
	var __rv uintptr
	q.Drv(136000, 136110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidgetItem::column()
func (q *QTableWidgetItem) Column() int32 {
	var __rv int32
	q.Drv(136000, 136111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::data(int)
func (q *QTableWidgetItem) Data(role int32) *QVariant {
	var __rv uintptr
	q.Drv(136000, 136112, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTableWidgetItem::flags()
func (q *QTableWidgetItem) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(136000, 136113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::font()
func (q *QTableWidgetItem) Font() *QFont {
	var __rv uintptr
	q.Drv(136000, 136114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTableWidgetItem::foreground()
func (q *QTableWidgetItem) Foreground() *QBrush {
	var __rv uintptr
	q.Drv(136000, 136115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTableWidgetItem::icon()
func (q *QTableWidgetItem) Icon() *QIcon {
	var __rv uintptr
	q.Drv(136000, 136116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QTableWidgetItem::isSelected()
func (q *QTableWidgetItem) IsSelected() bool {
	var __rv bool
	q.Drv(136000, 136117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::row()
func (q *QTableWidgetItem) Row() int32 {
	var __rv int32
	q.Drv(136000, 136118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::setBackground(QBrush const&)
func (q *QTableWidgetItem) SetBackground(brush *QBrush) {
	q.Drv(136000, 136119, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setBackgroundColor(QColor const&)
func (q *QTableWidgetItem) SetBackgroundColor(color *QColor) {
	q.Drv(136000, 136120, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setCheckState(Qt::CheckState)
func (q *QTableWidgetItem) SetCheckState(state Qt_CheckState) {
	q.Drv(136000, 136121, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setData(int,QVariant const&)
func (q *QTableWidgetItem) SetData(role int32, value *QVariant) {
	q.Drv(136000, 136122, unsafe.Pointer(&role), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setFlags(QFlags<Qt::ItemFlag>)
func (q *QTableWidgetItem) SetFlags(flags Qt_ItemFlag) {
	q.Drv(136000, 136123, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setFont(QFont const&)
func (q *QTableWidgetItem) SetFont(font *QFont) {
	q.Drv(136000, 136124, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setForeground(QBrush const&)
func (q *QTableWidgetItem) SetForeground(brush *QBrush) {
	q.Drv(136000, 136125, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setIcon(QIcon const&)
func (q *QTableWidgetItem) SetIcon(icon *QIcon) {
	q.Drv(136000, 136126, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setSelected(bool)
func (q *QTableWidgetItem) SetSelected(_select bool) {
	q.Drv(136000, 136127, unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setSizeHint(QSize const&)
func (q *QTableWidgetItem) SetSizeHint(size *QSize) {
	q.Drv(136000, 136128, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setStatusTip(QString const&)
func (q *QTableWidgetItem) SetStatusTip(statusTip string) {
	_statusTip := NewCStringHead(statusTip)
	defer FreeCStringHead(_statusTip)
	q.Drv(136000, 136129, unsafe.Pointer(_statusTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setText(QString const&)
func (q *QTableWidgetItem) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(136000, 136130, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setTextAlignment(int)
func (q *QTableWidgetItem) SetTextAlignment(alignment int32) {
	q.Drv(136000, 136131, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setTextColor(QColor const&)
func (q *QTableWidgetItem) SetTextColor(color *QColor) {
	q.Drv(136000, 136132, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setToolTip(QString const&)
func (q *QTableWidgetItem) SetToolTip(toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(136000, 136133, unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::setWhatsThis(QString const&)
func (q *QTableWidgetItem) SetWhatsThis(whatsThis string) {
	_whatsThis := NewCStringHead(whatsThis)
	defer FreeCStringHead(_whatsThis)
	q.Drv(136000, 136134, unsafe.Pointer(_whatsThis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidgetItem::sizeHint()
func (q *QTableWidgetItem) SizeHint() *QSize {
	var __rv uintptr
	q.Drv(136000, 136135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QTableWidgetItem::statusTip()
func (q *QTableWidgetItem) StatusTip() string {
	var __rv C.string_head
	q.Drv(136000, 136136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTableWidgetItem::tableWidget()
func (q *QTableWidgetItem) TableWidget() *QTableWidget {
	var __rv uintptr
	q.Drv(136000, 136137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidget{}
	_rp.SetDriver(__rv, 368000, false)
	return _rp
}

//QTableWidgetItem::text()
func (q *QTableWidgetItem) Text() string {
	var __rv C.string_head
	q.Drv(136000, 136138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTableWidgetItem::textAlignment()
func (q *QTableWidgetItem) TextAlignment() int32 {
	var __rv int32
	q.Drv(136000, 136139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::textColor()
func (q *QTableWidgetItem) TextColor() *QColor {
	var __rv uintptr
	q.Drv(136000, 136140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTableWidgetItem::toolTip()
func (q *QTableWidgetItem) ToolTip() string {
	var __rv C.string_head
	q.Drv(136000, 136141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTableWidgetItem::type()
func (q *QTableWidgetItem) Type() int32 {
	var __rv int32
	q.Drv(136000, 136142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetItem::whatsThis()
func (q *QTableWidgetItem) WhatsThis() string {
	var __rv C.string_head
	q.Drv(136000, 136143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTableWidgetSelectionRange : QTableWidgetSelectionRange
type QTableWidgetSelectionRange struct {
	BaseDrv
}

//QTableWidgetSelectionRange::QTableWidgetSelectionRange()
func NewTableWidgetSelectionRange() *QTableWidgetSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 137000, 137102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetSelectionRange{}
	_p.SetDriver(__rv, 137000, true)
	return _p
}

//QTableWidgetSelectionRange::QTableWidgetSelectionRange(QTableWidgetSelectionRange const&)
func NewTableWidgetSelectionRangeCopy(other *QTableWidgetSelectionRange) *QTableWidgetSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 137000, 137103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetSelectionRange{}
	_p.SetDriver(__rv, 137000, true)
	return _p
}

//QTableWidgetSelectionRange::QTableWidgetSelectionRange(int,int,int,int)
func NewTableWidgetSelectionRangeWithTopLeftBottomRight(top int32, left int32, bottom int32, right int32) *QTableWidgetSelectionRange {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 137000, 137104, unsafe.Pointer(&top), unsafe.Pointer(&left), unsafe.Pointer(&bottom), unsafe.Pointer(&right), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidgetSelectionRange{}
	_p.SetDriver(__rv, 137000, true)
	return _p
}

//QTableWidgetSelectionRange::bottomRow()
func (q *QTableWidgetSelectionRange) BottomRow() int32 {
	var __rv int32
	q.Drv(137000, 137105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetSelectionRange::columnCount()
func (q *QTableWidgetSelectionRange) ColumnCount() int32 {
	var __rv int32
	q.Drv(137000, 137106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetSelectionRange::leftColumn()
func (q *QTableWidgetSelectionRange) LeftColumn() int32 {
	var __rv int32
	q.Drv(137000, 137107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetSelectionRange::rightColumn()
func (q *QTableWidgetSelectionRange) RightColumn() int32 {
	var __rv int32
	q.Drv(137000, 137108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetSelectionRange::rowCount()
func (q *QTableWidgetSelectionRange) RowCount() int32 {
	var __rv int32
	q.Drv(137000, 137109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidgetSelectionRange::topRow()
func (q *QTableWidgetSelectionRange) TopRow() int32 {
	var __rv int32
	q.Drv(137000, 137110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTabletEvent_TabletDevice - QTabletEvent::TabletDevice
type QTabletEvent_TabletDevice uint32

const (
	QTabletEvent_NoDevice       QTabletEvent_TabletDevice = 0
	QTabletEvent_Puck           QTabletEvent_TabletDevice = 1
	QTabletEvent_Stylus         QTabletEvent_TabletDevice = 2
	QTabletEvent_Airbrush       QTabletEvent_TabletDevice = 3
	QTabletEvent_FourDMouse     QTabletEvent_TabletDevice = 4
	QTabletEvent_XFreeEraser    QTabletEvent_TabletDevice = 5
	QTabletEvent_RotationStylus QTabletEvent_TabletDevice = 6
)

//enum QTabletEvent_PointerType - QTabletEvent::PointerType
type QTabletEvent_PointerType uint32

const (
	QTabletEvent_UnknownPointer QTabletEvent_PointerType = 0
	QTabletEvent_Pen            QTabletEvent_PointerType = 1
	QTabletEvent_Cursor         QTabletEvent_PointerType = 2
	QTabletEvent_Eraser         QTabletEvent_PointerType = 3
)

//struct QTabletEvent : QTabletEvent
type QTabletEvent struct {
	QInputEvent
}

//QTabletEvent::device()
func (q *QTabletEvent) Device() QTabletEvent_TabletDevice {
	var __rv QTabletEvent_TabletDevice
	q.Drv(138000, 138102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::globalPos()
func (q *QTabletEvent) GlobalPos() *QPoint {
	var __rv uintptr
	q.Drv(138000, 138103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QTabletEvent::globalX()
func (q *QTabletEvent) GlobalX() int32 {
	var __rv int32
	q.Drv(138000, 138104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::globalY()
func (q *QTabletEvent) GlobalY() int32 {
	var __rv int32
	q.Drv(138000, 138105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::hiResGlobalX()
func (q *QTabletEvent) HiResGlobalX() float64 {
	var __rv float64
	q.Drv(138000, 138106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::hiResGlobalY()
func (q *QTabletEvent) HiResGlobalY() float64 {
	var __rv float64
	q.Drv(138000, 138107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::pointerType()
func (q *QTabletEvent) PointerType() QTabletEvent_PointerType {
	var __rv QTabletEvent_PointerType
	q.Drv(138000, 138108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::pos()
func (q *QTabletEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(138000, 138109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QTabletEvent::pressure()
func (q *QTabletEvent) Pressure() float64 {
	var __rv float64
	q.Drv(138000, 138110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::rotation()
func (q *QTabletEvent) Rotation() float64 {
	var __rv float64
	q.Drv(138000, 138111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::tangentialPressure()
func (q *QTabletEvent) TangentialPressure() float64 {
	var __rv float64
	q.Drv(138000, 138112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::uniqueId()
func (q *QTabletEvent) UniqueId() int64 {
	var __rv int64
	q.Drv(138000, 138113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::x()
func (q *QTabletEvent) X() int32 {
	var __rv int32
	q.Drv(138000, 138114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::xTilt()
func (q *QTabletEvent) XTilt() int32 {
	var __rv int32
	q.Drv(138000, 138115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::y()
func (q *QTabletEvent) Y() int32 {
	var __rv int32
	q.Drv(138000, 138116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::yTilt()
func (q *QTabletEvent) YTilt() int32 {
	var __rv int32
	q.Drv(138000, 138117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabletEvent::z()
func (q *QTabletEvent) Z() int32 {
	var __rv int32
	q.Drv(138000, 138118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextBlock : QTextBlock
type QTextBlock struct {
	BaseDrv
}

//QTextBlock::QTextBlock()
func NewTextBlock() *QTextBlock {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 139000, 139102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlock{}
	_p.SetDriver(__rv, 139000, true)
	return _p
}

//QTextBlock::QTextBlock(QTextBlock const&)
func NewTextBlockCopy(o *QTextBlock) *QTextBlock {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 139000, 139103, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlock{}
	_p.SetDriver(__rv, 139000, true)
	return _p
}

//QTextBlock::begin()
func (q *QTextBlock) Begin() *QTextBlockiterator {
	var __rv uintptr
	q.Drv(139000, 139104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockiterator{}
	_rp.SetDriver(__rv, 140000, true)
	return _rp
}

//QTextBlock::blockFormat()
func (q *QTextBlock) BlockFormat() *QTextBlockFormat {
	var __rv uintptr
	q.Drv(139000, 139105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockFormat{}
	_rp.SetDriver(__rv, 141000, true)
	return _rp
}

//QTextBlock::blockFormatIndex()
func (q *QTextBlock) BlockFormatIndex() int32 {
	var __rv int32
	q.Drv(139000, 139106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::blockNumber()
func (q *QTextBlock) BlockNumber() int32 {
	var __rv int32
	q.Drv(139000, 139107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::charFormat()
func (q *QTextBlock) CharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(139000, 139108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextBlock::charFormatIndex()
func (q *QTextBlock) CharFormatIndex() int32 {
	var __rv int32
	q.Drv(139000, 139109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::clearLayout()
func (q *QTextBlock) ClearLayout() {
	q.Drv(139000, 139110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::contains(int)
func (q *QTextBlock) Contains(position int32) bool {
	var __rv bool
	q.Drv(139000, 139111, unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::document()
func (q *QTextBlock) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(139000, 139112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextBlock::end()
func (q *QTextBlock) End() *QTextBlockiterator {
	var __rv uintptr
	q.Drv(139000, 139113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockiterator{}
	_rp.SetDriver(__rv, 140000, true)
	return _rp
}

//QTextBlock::firstLineNumber()
func (q *QTextBlock) FirstLineNumber() int32 {
	var __rv int32
	q.Drv(139000, 139114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::fragmentIndex()
func (q *QTextBlock) FragmentIndex() int32 {
	var __rv int32
	q.Drv(139000, 139115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::isValid()
func (q *QTextBlock) IsValid() bool {
	var __rv bool
	q.Drv(139000, 139116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::isVisible()
func (q *QTextBlock) IsVisible() bool {
	var __rv bool
	q.Drv(139000, 139117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::layout()
func (q *QTextBlock) Layout() *QTextLayout {
	var __rv uintptr
	q.Drv(139000, 139118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLayout{}
	_rp.SetDriver(__rv, 160000, true)
	return _rp
}

//QTextBlock::length()
func (q *QTextBlock) Length() int32 {
	var __rv int32
	q.Drv(139000, 139119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::lineCount()
func (q *QTextBlock) LineCount() int32 {
	var __rv int32
	q.Drv(139000, 139120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::next()
func (q *QTextBlock) Next() *QTextBlock {
	var __rv uintptr
	q.Drv(139000, 139121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextBlock::position()
func (q *QTextBlock) Position() int32 {
	var __rv int32
	q.Drv(139000, 139122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::previous()
func (q *QTextBlock) Previous() *QTextBlock {
	var __rv uintptr
	q.Drv(139000, 139123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextBlock::revision()
func (q *QTextBlock) Revision() int32 {
	var __rv int32
	q.Drv(139000, 139124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::setLineCount(int)
func (q *QTextBlock) SetLineCount(count int32) {
	q.Drv(139000, 139125, unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::setRevision(int)
func (q *QTextBlock) SetRevision(rev int32) {
	q.Drv(139000, 139126, unsafe.Pointer(&rev), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::setUserData(QTextBlockUserData*)
func (q *QTextBlock) SetUserData(data *QTextBlockUserData) {
	q.Drv(139000, 139127, Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::setUserState(int)
func (q *QTextBlock) SetUserState(state int32) {
	q.Drv(139000, 139128, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::setVisible(bool)
func (q *QTextBlock) SetVisible(visible bool) {
	q.Drv(139000, 139129, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlock::text()
func (q *QTextBlock) Text() string {
	var __rv C.string_head
	q.Drv(139000, 139130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextBlock::textDirection()
func (q *QTextBlock) TextDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(139000, 139131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::textList()
func (q *QTextBlock) TextList() *QTextList {
	var __rv uintptr
	q.Drv(139000, 139132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextBlock::userData()
func (q *QTextBlock) UserData() *QTextBlockUserData {
	var __rv uintptr
	q.Drv(139000, 139133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockUserData{}
	_rp.SetDriver(__rv, 142000, true)
	return _rp
}

//QTextBlock::userState()
func (q *QTextBlock) UserState() int32 {
	var __rv int32
	q.Drv(139000, 139134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextBlockiterator : QTextBlock::iterator
type QTextBlockiterator struct {
	BaseDrv
}

//QTextBlock::iterator::atEnd()
func (q *QTextBlockiterator) AtEnd() bool {
	var __rv bool
	q.Drv(140000, 140102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlock::iterator::fragment()
func (q *QTextBlockiterator) Fragment() *QTextFragment {
	var __rv uintptr
	q.Drv(140000, 140103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFragment{}
	_rp.SetDriver(__rv, 154000, true)
	return _rp
}

//QTextBlock::iterator::iterator()
func NewTextBlockiterator() *QTextBlockiterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 140000, 140104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlockiterator{}
	_p.SetDriver(__rv, 140000, true)
	return _p
}

//QTextBlock::iterator::iterator(QTextBlock::iterator const&)
func NewTextBlockiteratorCopy(o *QTextBlockiterator) *QTextBlockiterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 140000, 140105, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlockiterator{}
	_p.SetDriver(__rv, 140000, true)
	return _p
}

//struct QTextBlockFormat : QTextBlockFormat
type QTextBlockFormat struct {
	QTextFormat
}

//QTextBlockFormat::QTextBlockFormat()
func NewTextBlockFormat() *QTextBlockFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 141000, 141102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlockFormat{}
	_p.SetDriver(__rv, 141000, true)
	return _p
}

//QTextBlockFormat::alignment()
func (q *QTextBlockFormat) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(141000, 141103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::bottomMargin()
func (q *QTextBlockFormat) BottomMargin() float64 {
	var __rv float64
	q.Drv(141000, 141104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::indent()
func (q *QTextBlockFormat) Indent() int32 {
	var __rv int32
	q.Drv(141000, 141105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::isValid()
func (q *QTextBlockFormat) IsValid() bool {
	var __rv bool
	q.Drv(141000, 141106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::leftMargin()
func (q *QTextBlockFormat) LeftMargin() float64 {
	var __rv float64
	q.Drv(141000, 141107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::nonBreakableLines()
func (q *QTextBlockFormat) NonBreakableLines() bool {
	var __rv bool
	q.Drv(141000, 141108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::pageBreakPolicy()
func (q *QTextBlockFormat) PageBreakPolicy() QTextFormat_PageBreakFlag {
	var __rv QTextFormat_PageBreakFlag
	q.Drv(141000, 141109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::rightMargin()
func (q *QTextBlockFormat) RightMargin() float64 {
	var __rv float64
	q.Drv(141000, 141110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QTextBlockFormat) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(141000, 141111, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setBottomMargin(double)
func (q *QTextBlockFormat) SetBottomMargin(margin float64) {
	q.Drv(141000, 141112, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setIndent(int)
func (q *QTextBlockFormat) SetIndent(indent int32) {
	q.Drv(141000, 141113, unsafe.Pointer(&indent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setLeftMargin(double)
func (q *QTextBlockFormat) SetLeftMargin(margin float64) {
	q.Drv(141000, 141114, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setNonBreakableLines(bool)
func (q *QTextBlockFormat) SetNonBreakableLines(b bool) {
	q.Drv(141000, 141115, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setPageBreakPolicy(QFlags<QTextFormat::PageBreakFlag>)
func (q *QTextBlockFormat) SetPageBreakPolicy(flags QTextFormat_PageBreakFlag) {
	q.Drv(141000, 141116, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setRightMargin(double)
func (q *QTextBlockFormat) SetRightMargin(margin float64) {
	q.Drv(141000, 141117, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setTabPositions(QList<QTextOption::Tab> const&)
func (q *QTextBlockFormat) SetTabPositions(tabs []*QTextOptionTab) {
	_tabs := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&tabs)))
	defer FreeCNoObjectArrayHead(_tabs)
	q.Drv(141000, 141118, unsafe.Pointer(_tabs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setTextIndent(double)
func (q *QTextBlockFormat) SetTextIndent(aindent float64) {
	q.Drv(141000, 141119, unsafe.Pointer(&aindent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::setTopMargin(double)
func (q *QTextBlockFormat) SetTopMargin(margin float64) {
	q.Drv(141000, 141120, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockFormat::tabPositions()
func (q *QTextBlockFormat) TabPositions() []*QTextOptionTab {
	var __rv []*QTextOptionTab
	q.Drv(141000, 141121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::textIndent()
func (q *QTextBlockFormat) TextIndent() float64 {
	var __rv float64
	q.Drv(141000, 141122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockFormat::topMargin()
func (q *QTextBlockFormat) TopMargin() float64 {
	var __rv float64
	q.Drv(141000, 141123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextBlockUserData : QTextBlockUserData
type QTextBlockUserData struct {
	BaseDrv
}

//QTextBlockUserData::QTextBlockUserData()
func NewTextBlockUserData() *QTextBlockUserData {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 142000, 142102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBlockUserData{}
	_p.SetDriver(__rv, 142000, true)
	return _p
}

//enum QTextBoundaryFinder_BoundaryReason - QTextBoundaryFinder::BoundaryReason
type QTextBoundaryFinder_BoundaryReason uint32

const (
	QTextBoundaryFinder_NotAtBoundary QTextBoundaryFinder_BoundaryReason = 0
	QTextBoundaryFinder_StartWord     QTextBoundaryFinder_BoundaryReason = 1
	QTextBoundaryFinder_EndWord       QTextBoundaryFinder_BoundaryReason = 2
)

//enum QTextBoundaryFinder_BoundaryType - QTextBoundaryFinder::BoundaryType
type QTextBoundaryFinder_BoundaryType uint32

const (
	QTextBoundaryFinder_Grapheme QTextBoundaryFinder_BoundaryType = 0
	QTextBoundaryFinder_Word     QTextBoundaryFinder_BoundaryType = 1
	QTextBoundaryFinder_Line     QTextBoundaryFinder_BoundaryType = 2
	QTextBoundaryFinder_Sentence QTextBoundaryFinder_BoundaryType = 3
)

//struct QTextBoundaryFinder : QTextBoundaryFinder
type QTextBoundaryFinder struct {
	BaseDrv
}

//QTextBoundaryFinder::QTextBoundaryFinder()
func NewTextBoundaryFinder() *QTextBoundaryFinder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 143000, 143102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBoundaryFinder{}
	_p.SetDriver(__rv, 143000, true)
	return _p
}

//QTextBoundaryFinder::QTextBoundaryFinder(QTextBoundaryFinder const&)
func NewTextBoundaryFinderCopy(other *QTextBoundaryFinder) *QTextBoundaryFinder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 143000, 143103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBoundaryFinder{}
	_p.SetDriver(__rv, 143000, true)
	return _p
}

//QTextBoundaryFinder::QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType,QString const&)
func NewTextBoundaryFinderWithTypeString(_type QTextBoundaryFinder_BoundaryType, string string) *QTextBoundaryFinder {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 143000, 143104, unsafe.Pointer(&_type), unsafe.Pointer(_string), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBoundaryFinder{}
	_p.SetDriver(__rv, 143000, true)
	return _p
}

//QTextBoundaryFinder::QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType,QChar const*,int,unsigned char*,int)
func NewTextBoundaryFinderWithTypeCharsLengthBufferBuffersize(_type QTextBoundaryFinder_BoundaryType, chars *rune, length int32, buffer *byte, bufferSize int32) *QTextBoundaryFinder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 143000, 143105, unsafe.Pointer(&_type), unsafe.Pointer(&chars), unsafe.Pointer(&length), unsafe.Pointer(&buffer), unsafe.Pointer(&bufferSize), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBoundaryFinder{}
	_p.SetDriver(__rv, 143000, true)
	return _p
}

//QTextBoundaryFinder::boundaryReasons()
func (q *QTextBoundaryFinder) BoundaryReasons() QTextBoundaryFinder_BoundaryReason {
	var __rv QTextBoundaryFinder_BoundaryReason
	q.Drv(143000, 143106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::isAtBoundary()
func (q *QTextBoundaryFinder) IsAtBoundary() bool {
	var __rv bool
	q.Drv(143000, 143107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::isValid()
func (q *QTextBoundaryFinder) IsValid() bool {
	var __rv bool
	q.Drv(143000, 143108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::position()
func (q *QTextBoundaryFinder) Position() int32 {
	var __rv int32
	q.Drv(143000, 143109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::setPosition(int)
func (q *QTextBoundaryFinder) SetPosition(position int32) {
	q.Drv(143000, 143110, unsafe.Pointer(&position), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBoundaryFinder::string()
func (q *QTextBoundaryFinder) String() string {
	var __rv C.string_head
	q.Drv(143000, 143111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextBoundaryFinder::toEnd()
func (q *QTextBoundaryFinder) ToEnd() {
	q.Drv(143000, 143112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBoundaryFinder::toNextBoundary()
func (q *QTextBoundaryFinder) ToNextBoundary() int32 {
	var __rv int32
	q.Drv(143000, 143113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::toPreviousBoundary()
func (q *QTextBoundaryFinder) ToPreviousBoundary() int32 {
	var __rv int32
	q.Drv(143000, 143114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBoundaryFinder::toStart()
func (q *QTextBoundaryFinder) ToStart() {
	q.Drv(143000, 143115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBoundaryFinder::type()
func (q *QTextBoundaryFinder) Type() QTextBoundaryFinder_BoundaryType {
	var __rv QTextBoundaryFinder_BoundaryType
	q.Drv(143000, 143116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextCharFormat_VerticalAlignment - QTextCharFormat::VerticalAlignment
type QTextCharFormat_VerticalAlignment uint32

const (
	QTextCharFormat_AlignNormal      QTextCharFormat_VerticalAlignment = 0
	QTextCharFormat_AlignSuperScript QTextCharFormat_VerticalAlignment = 0
	QTextCharFormat_AlignSubScript   QTextCharFormat_VerticalAlignment = 1
	QTextCharFormat_AlignMiddle      QTextCharFormat_VerticalAlignment = 2
	QTextCharFormat_AlignTop         QTextCharFormat_VerticalAlignment = 3
	QTextCharFormat_AlignBottom      QTextCharFormat_VerticalAlignment = 4
)

//enum QTextCharFormat_UnderlineStyle - QTextCharFormat::UnderlineStyle
type QTextCharFormat_UnderlineStyle uint32

const (
	QTextCharFormat_NoUnderline         QTextCharFormat_UnderlineStyle = 0
	QTextCharFormat_SingleUnderline     QTextCharFormat_UnderlineStyle = 1
	QTextCharFormat_DashUnderline       QTextCharFormat_UnderlineStyle = 2
	QTextCharFormat_DotLine             QTextCharFormat_UnderlineStyle = 3
	QTextCharFormat_DashDotLine         QTextCharFormat_UnderlineStyle = 4
	QTextCharFormat_DashDotDotLine      QTextCharFormat_UnderlineStyle = 5
	QTextCharFormat_WaveUnderline       QTextCharFormat_UnderlineStyle = 6
	QTextCharFormat_SpellCheckUnderline QTextCharFormat_UnderlineStyle = 7
)

//struct QTextCharFormat : QTextCharFormat
type QTextCharFormat struct {
	QTextFormat
}

//QTextCharFormat::QTextCharFormat()
func NewTextCharFormat() *QTextCharFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 144000, 144102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCharFormat{}
	_p.SetDriver(__rv, 144000, true)
	return _p
}

//QTextCharFormat::anchorHref()
func (q *QTextCharFormat) AnchorHref() string {
	var __rv C.string_head
	q.Drv(144000, 144103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCharFormat::anchorName()
func (q *QTextCharFormat) AnchorName() string {
	var __rv C.string_head
	q.Drv(144000, 144104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCharFormat::anchorNames()
func (q *QTextCharFormat) AnchorNames() []string {
	var __rv []string
	q.Drv(144000, 144105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::font()
func (q *QTextCharFormat) Font() *QFont {
	var __rv uintptr
	q.Drv(144000, 144106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTextCharFormat::fontCapitalization()
func (q *QTextCharFormat) FontCapitalization() QFont_Capitalization {
	var __rv QFont_Capitalization
	q.Drv(144000, 144107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontFamily()
func (q *QTextCharFormat) FontFamily() string {
	var __rv C.string_head
	q.Drv(144000, 144108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCharFormat::fontFixedPitch()
func (q *QTextCharFormat) FontFixedPitch() bool {
	var __rv bool
	q.Drv(144000, 144109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontItalic()
func (q *QTextCharFormat) FontItalic() bool {
	var __rv bool
	q.Drv(144000, 144110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontKerning()
func (q *QTextCharFormat) FontKerning() bool {
	var __rv bool
	q.Drv(144000, 144111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontLetterSpacing()
func (q *QTextCharFormat) FontLetterSpacing() float64 {
	var __rv float64
	q.Drv(144000, 144112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontOverline()
func (q *QTextCharFormat) FontOverline() bool {
	var __rv bool
	q.Drv(144000, 144113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontPointSize()
func (q *QTextCharFormat) FontPointSize() float64 {
	var __rv float64
	q.Drv(144000, 144114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontStrikeOut()
func (q *QTextCharFormat) FontStrikeOut() bool {
	var __rv bool
	q.Drv(144000, 144115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontStyleHint()
func (q *QTextCharFormat) FontStyleHint() QFont_StyleHint {
	var __rv QFont_StyleHint
	q.Drv(144000, 144116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontStyleStrategy()
func (q *QTextCharFormat) FontStyleStrategy() QFont_StyleStrategy {
	var __rv QFont_StyleStrategy
	q.Drv(144000, 144117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontUnderline()
func (q *QTextCharFormat) FontUnderline() bool {
	var __rv bool
	q.Drv(144000, 144118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontWeight()
func (q *QTextCharFormat) FontWeight() int32 {
	var __rv int32
	q.Drv(144000, 144119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::fontWordSpacing()
func (q *QTextCharFormat) FontWordSpacing() float64 {
	var __rv float64
	q.Drv(144000, 144120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::isAnchor()
func (q *QTextCharFormat) IsAnchor() bool {
	var __rv bool
	q.Drv(144000, 144121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::isValid()
func (q *QTextCharFormat) IsValid() bool {
	var __rv bool
	q.Drv(144000, 144122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::setAnchor(bool)
func (q *QTextCharFormat) SetAnchor(anchor bool) {
	q.Drv(144000, 144123, unsafe.Pointer(&anchor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setAnchorHref(QString const&)
func (q *QTextCharFormat) SetAnchorHref(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(144000, 144124, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setAnchorName(QString const&)
func (q *QTextCharFormat) SetAnchorName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(144000, 144125, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setAnchorNames(QStringList const&)
func (q *QTextCharFormat) SetAnchorNames(names []string) {
	_names, _names_size := NewCSArray(names)
	defer FreeCSArray(_names, _names_size)
	q.Drv(144000, 144126, unsafe.Pointer(&_names[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFont(QFont const&)
func (q *QTextCharFormat) SetFont(font *QFont) {
	q.Drv(144000, 144127, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontCapitalization(QFont::Capitalization)
func (q *QTextCharFormat) SetFontCapitalization(capitalization QFont_Capitalization) {
	q.Drv(144000, 144128, unsafe.Pointer(&capitalization), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontFamily(QString const&)
func (q *QTextCharFormat) SetFontFamily(family string) {
	_family := NewCStringHead(family)
	defer FreeCStringHead(_family)
	q.Drv(144000, 144129, unsafe.Pointer(_family), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontFixedPitch(bool)
func (q *QTextCharFormat) SetFontFixedPitch(fixedPitch bool) {
	q.Drv(144000, 144130, unsafe.Pointer(&fixedPitch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontItalic(bool)
func (q *QTextCharFormat) SetFontItalic(italic bool) {
	q.Drv(144000, 144131, unsafe.Pointer(&italic), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontKerning(bool)
func (q *QTextCharFormat) SetFontKerning(enable bool) {
	q.Drv(144000, 144132, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontLetterSpacing(double)
func (q *QTextCharFormat) SetFontLetterSpacing(spacing float64) {
	q.Drv(144000, 144133, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontOverline(bool)
func (q *QTextCharFormat) SetFontOverline(overline bool) {
	q.Drv(144000, 144134, unsafe.Pointer(&overline), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontPointSize(double)
func (q *QTextCharFormat) SetFontPointSize(size float64) {
	q.Drv(144000, 144135, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontStrikeOut(bool)
func (q *QTextCharFormat) SetFontStrikeOut(strikeOut bool) {
	q.Drv(144000, 144136, unsafe.Pointer(&strikeOut), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontStyleHint(QFont::StyleHint)
func (q *QTextCharFormat) SetFontStyleHint(hint QFont_StyleHint) {
	q.Drv(144000, 144137, unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontStyleHint(QFont::StyleHint,QFont::StyleStrategy)
func (q *QTextCharFormat) SetFontStyleHintWithHintStrategy(hint QFont_StyleHint, strategy QFont_StyleStrategy) {
	q.Drv(144000, 144138, unsafe.Pointer(&hint), unsafe.Pointer(&strategy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontStyleStrategy(QFont::StyleStrategy)
func (q *QTextCharFormat) SetFontStyleStrategy(strategy QFont_StyleStrategy) {
	q.Drv(144000, 144139, unsafe.Pointer(&strategy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontUnderline(bool)
func (q *QTextCharFormat) SetFontUnderline(underline bool) {
	q.Drv(144000, 144140, unsafe.Pointer(&underline), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontWeight(int)
func (q *QTextCharFormat) SetFontWeight(weight int32) {
	q.Drv(144000, 144141, unsafe.Pointer(&weight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setFontWordSpacing(double)
func (q *QTextCharFormat) SetFontWordSpacing(spacing float64) {
	q.Drv(144000, 144142, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setTableCellColumnSpan(int)
func (q *QTextCharFormat) SetTableCellColumnSpan(tableCellColumnSpan int32) {
	q.Drv(144000, 144143, unsafe.Pointer(&tableCellColumnSpan), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setTableCellRowSpan(int)
func (q *QTextCharFormat) SetTableCellRowSpan(tableCellRowSpan int32) {
	q.Drv(144000, 144144, unsafe.Pointer(&tableCellRowSpan), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setTextOutline(QPen const&)
func (q *QTextCharFormat) SetTextOutline(pen *QPen) {
	q.Drv(144000, 144145, Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setToolTip(QString const&)
func (q *QTextCharFormat) SetToolTip(tip string) {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	q.Drv(144000, 144146, unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setUnderlineColor(QColor const&)
func (q *QTextCharFormat) SetUnderlineColor(color *QColor) {
	q.Drv(144000, 144147, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setUnderlineStyle(QTextCharFormat::UnderlineStyle)
func (q *QTextCharFormat) SetUnderlineStyle(style QTextCharFormat_UnderlineStyle) {
	q.Drv(144000, 144148, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::setVerticalAlignment(QTextCharFormat::VerticalAlignment)
func (q *QTextCharFormat) SetVerticalAlignment(alignment QTextCharFormat_VerticalAlignment) {
	q.Drv(144000, 144149, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCharFormat::tableCellColumnSpan()
func (q *QTextCharFormat) TableCellColumnSpan() int32 {
	var __rv int32
	q.Drv(144000, 144150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::tableCellRowSpan()
func (q *QTextCharFormat) TableCellRowSpan() int32 {
	var __rv int32
	q.Drv(144000, 144151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::textOutline()
func (q *QTextCharFormat) TextOutline() *QPen {
	var __rv uintptr
	q.Drv(144000, 144152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QTextCharFormat::toolTip()
func (q *QTextCharFormat) ToolTip() string {
	var __rv C.string_head
	q.Drv(144000, 144153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCharFormat::underlineColor()
func (q *QTextCharFormat) UnderlineColor() *QColor {
	var __rv uintptr
	q.Drv(144000, 144154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTextCharFormat::underlineStyle()
func (q *QTextCharFormat) UnderlineStyle() QTextCharFormat_UnderlineStyle {
	var __rv QTextCharFormat_UnderlineStyle
	q.Drv(144000, 144155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCharFormat::verticalAlignment()
func (q *QTextCharFormat) VerticalAlignment() QTextCharFormat_VerticalAlignment {
	var __rv QTextCharFormat_VerticalAlignment
	q.Drv(144000, 144156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextCodec_ConversionFlag - QTextCodec::ConversionFlag
type QTextCodec_ConversionFlag uint32

const (
	QTextCodec_DefaultConversion    QTextCodec_ConversionFlag = 0
	QTextCodec_ConvertInvalidToNull QTextCodec_ConversionFlag = 0x80000000
	QTextCodec_IgnoreHeader         QTextCodec_ConversionFlag = 0x1
	QTextCodec_FreeFunction         QTextCodec_ConversionFlag = 0x2
)

//struct QTextCodec : QTextCodec
type QTextCodec struct {
	BaseDrv
}

//QTextCodec::aliases()
func (q *QTextCodec) Aliases() [][]byte {
	var __rv [][]byte
	q.Drv(145000, 145102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::availableCodecs()
func QTextCodecAvailableCodecs() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 145000, 145103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::availableCodecs()
func (q *QTextCodec) AvailableCodecs() [][]byte {
	var __rv [][]byte
	q.Drv(145000, 145103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::availableMibs()
func QTextCodecAvailableMibs() []int32 {
	var __rv []int32
	DirectQtDrv(nil, 145000, 145104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::availableMibs()
func (q *QTextCodec) AvailableMibs() []int32 {
	var __rv []int32
	q.Drv(145000, 145104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::canEncode(QChar)
func (q *QTextCodec) CanEncode(value rune) bool {
	var __rv bool
	q.Drv(145000, 145105, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::canEncode(QString const&)
func (q *QTextCodec) CanEncodeWithString(value string) bool {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv bool
	q.Drv(145000, 145106, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::codecForHtml(QByteArray const&)
func QTextCodecCodecForHtml(ba []byte) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145107, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForHtml(QByteArray const&)
func (q *QTextCodec) CodecForHtml(ba []byte) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	q.Drv(145000, 145107, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForHtml(QByteArray const&,QTextCodec*)
func QTextCodecCodecForHtmlWithBaDefaultcodec(ba []byte, defaultCodec *QTextCodec) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145108, unsafe.Pointer(_ba), Native(defaultCodec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForHtml(QByteArray const&,QTextCodec*)
func (q *QTextCodec) CodecForHtmlWithBaDefaultcodec(ba []byte, defaultCodec *QTextCodec) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	q.Drv(145000, 145108, unsafe.Pointer(_ba), Native(defaultCodec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForLocale()
func QTextCodecCodecForLocale() *QTextCodec {
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForLocale()
func (q *QTextCodec) CodecForLocale() *QTextCodec {
	var __rv uintptr
	q.Drv(145000, 145109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForMib(int)
func QTextCodecCodecForMib(mib int32) *QTextCodec {
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145110, unsafe.Pointer(&mib), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForMib(int)
func (q *QTextCodec) CodecForMib(mib int32) *QTextCodec {
	var __rv uintptr
	q.Drv(145000, 145110, unsafe.Pointer(&mib), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForName(QByteArray const&)
func QTextCodecCodecForName(name []byte) *QTextCodec {
	_name := NewCByteArrayHead(name)
	defer FreeCByteArrayHead(_name)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145111, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForName(QByteArray const&)
func (q *QTextCodec) CodecForName(name []byte) *QTextCodec {
	_name := NewCByteArrayHead(name)
	defer FreeCByteArrayHead(_name)
	var __rv uintptr
	q.Drv(145000, 145111, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForName(char const*)
func QTextCodecCodecForNameWithName(name string) *QTextCodec {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145112, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForName(char const*)
func (q *QTextCodec) CodecForNameWithName(name string) *QTextCodec {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(145000, 145112, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForUtfText(QByteArray const&)
func QTextCodecCodecForUtfText(ba []byte) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145113, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForUtfText(QByteArray const&)
func (q *QTextCodec) CodecForUtfText(ba []byte) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	q.Drv(145000, 145113, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForUtfText(QByteArray const&,QTextCodec*)
func QTextCodecCodecForUtfTextWithBaDefaultcodec(ba []byte, defaultCodec *QTextCodec) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	DirectQtDrv(nil, 145000, 145114, unsafe.Pointer(_ba), Native(defaultCodec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::codecForUtfText(QByteArray const&,QTextCodec*)
func (q *QTextCodec) CodecForUtfTextWithBaDefaultcodec(ba []byte, defaultCodec *QTextCodec) *QTextCodec {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv uintptr
	q.Drv(145000, 145114, unsafe.Pointer(_ba), Native(defaultCodec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextCodec::fromUnicode(QString const&)
func (q *QTextCodec) FromUnicode(uc string) []byte {
	_uc := NewCStringHead(uc)
	defer FreeCStringHead(_uc)
	var __rv []byte
	q.Drv(145000, 145115, unsafe.Pointer(_uc), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::fromUnicode(QChar const*,int,QTextCodec::ConverterState*)
func (q *QTextCodec) FromUnicodeWithInLengthState(in *rune, length int32, state *QTextCodecConverterState) []byte {
	var __rv []byte
	q.Drv(145000, 145116, unsafe.Pointer(&in), unsafe.Pointer(&length), Native(state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::makeDecoder()
func (q *QTextCodec) MakeDecoder() *QTextDecoder {
	var __rv uintptr
	q.Drv(145000, 145117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDecoder{}
	_rp.SetDriver(__rv, 148000, true)
	return _rp
}

//QTextCodec::makeDecoder(QFlags<QTextCodec::ConversionFlag>)
func (q *QTextCodec) MakeDecoderWithFlags(flags QTextCodec_ConversionFlag) *QTextDecoder {
	var __rv uintptr
	q.Drv(145000, 145118, unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDecoder{}
	_rp.SetDriver(__rv, 148000, true)
	return _rp
}

//QTextCodec::makeEncoder()
func (q *QTextCodec) MakeEncoder() *QTextEncoder {
	var __rv uintptr
	q.Drv(145000, 145119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextEncoder{}
	_rp.SetDriver(__rv, 152000, true)
	return _rp
}

//QTextCodec::makeEncoder(QFlags<QTextCodec::ConversionFlag>)
func (q *QTextCodec) MakeEncoderWithFlags(flags QTextCodec_ConversionFlag) *QTextEncoder {
	var __rv uintptr
	q.Drv(145000, 145120, unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextEncoder{}
	_rp.SetDriver(__rv, 152000, true)
	return _rp
}

//QTextCodec::mibEnum()
func (q *QTextCodec) MibEnum() int32 {
	var __rv int32
	q.Drv(145000, 145121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::name()
func (q *QTextCodec) Name() []byte {
	var __rv []byte
	q.Drv(145000, 145122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCodec::setCodecForLocale(QTextCodec*)
func QTextCodecSetCodecForLocale(c *QTextCodec) {
	DirectQtDrv(nil, 145000, 145123, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCodec::setCodecForLocale(QTextCodec*)
func (q *QTextCodec) SetCodecForLocale(c *QTextCodec) {
	q.Drv(145000, 145123, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCodec::toUnicode(QByteArray const&)
func (q *QTextCodec) ToUnicode(value []byte) string {
	_value := NewCByteArrayHead(value)
	defer FreeCByteArrayHead(_value)
	var __rv C.string_head
	q.Drv(145000, 145124, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCodec::toUnicode(char const*)
func (q *QTextCodec) ToUnicodeWithChars(chars string) string {
	_chars := NewCStringHead(chars)
	defer FreeCStringHead(_chars)
	var __rv C.string_head
	q.Drv(145000, 145125, unsafe.Pointer(_chars), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTextCodecConverterState : QTextCodec::ConverterState
type QTextCodecConverterState struct {
	BaseDrv
}

//QTextCodec::ConverterState::ConverterState()
func NewTextCodecConverterState() *QTextCodecConverterState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 146000, 146102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCodecConverterState{}
	_p.SetDriver(__rv, 146000, true)
	return _p
}

//QTextCodec::ConverterState::ConverterState(QFlags<QTextCodec::ConversionFlag>)
func NewTextCodecConverterStateWithConversionflag(f QTextCodec_ConversionFlag) *QTextCodecConverterState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 146000, 146103, unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCodecConverterState{}
	_p.SetDriver(__rv, 146000, true)
	return _p
}

//enum QTextCursor_MoveMode - QTextCursor::MoveMode
type QTextCursor_MoveMode uint32

const (
	QTextCursor_MoveAnchor QTextCursor_MoveMode = 0
	QTextCursor_KeepAnchor QTextCursor_MoveMode = 1
)

//enum QTextCursor_MoveOperation - QTextCursor::MoveOperation
type QTextCursor_MoveOperation uint32

const (
	QTextCursor_NoMove            QTextCursor_MoveOperation = 0
	QTextCursor_Start             QTextCursor_MoveOperation = 1
	QTextCursor_Up                QTextCursor_MoveOperation = 2
	QTextCursor_StartOfLine       QTextCursor_MoveOperation = 3
	QTextCursor_StartOfBlock      QTextCursor_MoveOperation = 4
	QTextCursor_StartOfWord       QTextCursor_MoveOperation = 5
	QTextCursor_PreviousBlock     QTextCursor_MoveOperation = 6
	QTextCursor_PreviousCharacter QTextCursor_MoveOperation = 7
	QTextCursor_PreviousWord      QTextCursor_MoveOperation = 8
	QTextCursor_Left              QTextCursor_MoveOperation = 9
	QTextCursor_WordLeft          QTextCursor_MoveOperation = 10
	QTextCursor_End               QTextCursor_MoveOperation = 11
	QTextCursor_Down              QTextCursor_MoveOperation = 12
	QTextCursor_EndOfLine         QTextCursor_MoveOperation = 13
	QTextCursor_EndOfWord         QTextCursor_MoveOperation = 14
	QTextCursor_EndOfBlock        QTextCursor_MoveOperation = 15
	QTextCursor_NextBlock         QTextCursor_MoveOperation = 16
	QTextCursor_NextCharacter     QTextCursor_MoveOperation = 17
	QTextCursor_NextWord          QTextCursor_MoveOperation = 18
	QTextCursor_Right             QTextCursor_MoveOperation = 19
	QTextCursor_WordRight         QTextCursor_MoveOperation = 20
	QTextCursor_NextCell          QTextCursor_MoveOperation = 21
	QTextCursor_PreviousCell      QTextCursor_MoveOperation = 22
	QTextCursor_NextRow           QTextCursor_MoveOperation = 23
	QTextCursor_PreviousRow       QTextCursor_MoveOperation = 24
)

//enum QTextCursor_SelectionType - QTextCursor::SelectionType
type QTextCursor_SelectionType uint32

const (
	QTextCursor_WordUnderCursor  QTextCursor_SelectionType = 0
	QTextCursor_LineUnderCursor  QTextCursor_SelectionType = 1
	QTextCursor_BlockUnderCursor QTextCursor_SelectionType = 2
	QTextCursor_Document         QTextCursor_SelectionType = 3
)

//struct QTextCursor : QTextCursor
type QTextCursor struct {
	BaseDrv
}

//QTextCursor::QTextCursor()
func NewTextCursor() *QTextCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 147000, 147102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCursor{}
	_p.SetDriver(__rv, 147000, true)
	return _p
}

//QTextCursor::QTextCursor(QTextBlock const&)
func NewTextCursorWithBlock(block *QTextBlock) *QTextCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 147000, 147103, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCursor{}
	_p.SetDriver(__rv, 147000, true)
	return _p
}

//QTextCursor::QTextCursor(QTextCursor const&)
func NewTextCursorCopy(cursor *QTextCursor) *QTextCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 147000, 147104, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCursor{}
	_p.SetDriver(__rv, 147000, true)
	return _p
}

//QTextCursor::QTextCursor(QTextDocument*)
func NewTextCursorWithDocument(document *QTextDocument) *QTextCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 147000, 147105, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCursor{}
	_p.SetDriver(__rv, 147000, true)
	return _p
}

//QTextCursor::QTextCursor(QTextFrame*)
func NewTextCursorWithFrame(frame *QTextFrame) *QTextCursor {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 147000, 147106, Native(frame), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextCursor{}
	_p.SetDriver(__rv, 147000, true)
	return _p
}

//QTextCursor::anchor()
func (q *QTextCursor) Anchor() int32 {
	var __rv int32
	q.Drv(147000, 147107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::atBlockEnd()
func (q *QTextCursor) AtBlockEnd() bool {
	var __rv bool
	q.Drv(147000, 147108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::atBlockStart()
func (q *QTextCursor) AtBlockStart() bool {
	var __rv bool
	q.Drv(147000, 147109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::atEnd()
func (q *QTextCursor) AtEnd() bool {
	var __rv bool
	q.Drv(147000, 147110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::atStart()
func (q *QTextCursor) AtStart() bool {
	var __rv bool
	q.Drv(147000, 147111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::beginEditBlock()
func (q *QTextCursor) BeginEditBlock() {
	q.Drv(147000, 147112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::block()
func (q *QTextCursor) Block() *QTextBlock {
	var __rv uintptr
	q.Drv(147000, 147113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextCursor::blockCharFormat()
func (q *QTextCursor) BlockCharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(147000, 147114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextCursor::blockFormat()
func (q *QTextCursor) BlockFormat() *QTextBlockFormat {
	var __rv uintptr
	q.Drv(147000, 147115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockFormat{}
	_rp.SetDriver(__rv, 141000, true)
	return _rp
}

//QTextCursor::blockNumber()
func (q *QTextCursor) BlockNumber() int32 {
	var __rv int32
	q.Drv(147000, 147116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::charFormat()
func (q *QTextCursor) CharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(147000, 147117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextCursor::clearSelection()
func (q *QTextCursor) ClearSelection() {
	q.Drv(147000, 147118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::columnNumber()
func (q *QTextCursor) ColumnNumber() int32 {
	var __rv int32
	q.Drv(147000, 147119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::createList(QTextListFormat const&)
func (q *QTextCursor) CreateList(format *QTextListFormat) *QTextList {
	var __rv uintptr
	q.Drv(147000, 147120, Native(format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextCursor::createList(QTextListFormat::Style)
func (q *QTextCursor) CreateListWithStyle(style QTextListFormat_Style) *QTextList {
	var __rv uintptr
	q.Drv(147000, 147121, unsafe.Pointer(&style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextCursor::currentFrame()
func (q *QTextCursor) CurrentFrame() *QTextFrame {
	var __rv uintptr
	q.Drv(147000, 147122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextCursor::currentList()
func (q *QTextCursor) CurrentList() *QTextList {
	var __rv uintptr
	q.Drv(147000, 147123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextCursor::currentTable()
func (q *QTextCursor) CurrentTable() *QTextTable {
	var __rv uintptr
	q.Drv(147000, 147124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTable{}
	_rp.SetDriver(__rv, 379000, false)
	return _rp
}

//QTextCursor::deleteChar()
func (q *QTextCursor) DeleteChar() {
	q.Drv(147000, 147125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::deletePreviousChar()
func (q *QTextCursor) DeletePreviousChar() {
	q.Drv(147000, 147126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::document()
func (q *QTextCursor) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(147000, 147127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextCursor::endEditBlock()
func (q *QTextCursor) EndEditBlock() {
	q.Drv(147000, 147128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::hasComplexSelection()
func (q *QTextCursor) HasComplexSelection() bool {
	var __rv bool
	q.Drv(147000, 147129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::hasSelection()
func (q *QTextCursor) HasSelection() bool {
	var __rv bool
	q.Drv(147000, 147130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::insertBlock()
func (q *QTextCursor) InsertBlock() {
	q.Drv(147000, 147131, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertBlock(QTextBlockFormat const&)
func (q *QTextCursor) InsertBlockWithFormat(format *QTextBlockFormat) {
	q.Drv(147000, 147132, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertBlock(QTextBlockFormat const&,QTextCharFormat const&)
func (q *QTextCursor) InsertBlockWithFormatCharformat(format *QTextBlockFormat, charFormat *QTextCharFormat) {
	q.Drv(147000, 147133, Native(format), Native(charFormat), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertFragment(QTextDocumentFragment const&)
func (q *QTextCursor) InsertFragment(fragment *QTextDocumentFragment) {
	q.Drv(147000, 147134, Native(fragment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertFrame(QTextFrameFormat const&)
func (q *QTextCursor) InsertFrame(format *QTextFrameFormat) *QTextFrame {
	var __rv uintptr
	q.Drv(147000, 147135, Native(format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextCursor::insertHtml(QString const&)
func (q *QTextCursor) InsertHtml(html string) {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	q.Drv(147000, 147136, unsafe.Pointer(_html), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertImage(QImage const&)
func (q *QTextCursor) InsertImage(image *QImage) {
	q.Drv(147000, 147137, Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertImage(QString const&)
func (q *QTextCursor) InsertImageWithName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(147000, 147138, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertImage(QTextImageFormat const&)
func (q *QTextCursor) InsertImageWithFormat(format *QTextImageFormat) {
	q.Drv(147000, 147139, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertImage(QImage const&,QString const&)
func (q *QTextCursor) InsertImageWithImageName(image *QImage, name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(147000, 147140, Native(image), unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertImage(QTextImageFormat const&,QTextFrameFormat::Position)
func (q *QTextCursor) InsertImageWithFormatAlignment(format *QTextImageFormat, alignment QTextFrameFormat_Position) {
	q.Drv(147000, 147141, Native(format), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertList(QTextListFormat const&)
func (q *QTextCursor) InsertList(format *QTextListFormat) *QTextList {
	var __rv uintptr
	q.Drv(147000, 147142, Native(format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextCursor::insertList(QTextListFormat::Style)
func (q *QTextCursor) InsertListWithStyle(style QTextListFormat_Style) *QTextList {
	var __rv uintptr
	q.Drv(147000, 147143, unsafe.Pointer(&style), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextList{}
	_rp.SetDriver(__rv, 377000, false)
	return _rp
}

//QTextCursor::insertTable(int,int)
func (q *QTextCursor) InsertTableWithRowsCols(rows int32, cols int32) *QTextTable {
	var __rv uintptr
	q.Drv(147000, 147144, unsafe.Pointer(&rows), unsafe.Pointer(&cols), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTable{}
	_rp.SetDriver(__rv, 379000, false)
	return _rp
}

//QTextCursor::insertTable(int,int,QTextTableFormat const&)
func (q *QTextCursor) InsertTableWithRowsColsFormat(rows int32, cols int32, format *QTextTableFormat) *QTextTable {
	var __rv uintptr
	q.Drv(147000, 147145, unsafe.Pointer(&rows), unsafe.Pointer(&cols), Native(format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTable{}
	_rp.SetDriver(__rv, 379000, false)
	return _rp
}

//QTextCursor::insertText(QString const&)
func (q *QTextCursor) InsertText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(147000, 147146, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::insertText(QString const&,QTextCharFormat const&)
func (q *QTextCursor) InsertTextWithTextFormat(text string, format *QTextCharFormat) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(147000, 147147, unsafe.Pointer(_text), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::isCopyOf(QTextCursor const&)
func (q *QTextCursor) IsCopyOf(other *QTextCursor) bool {
	var __rv bool
	q.Drv(147000, 147148, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::isNull()
func (q *QTextCursor) IsNull() bool {
	var __rv bool
	q.Drv(147000, 147149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::joinPreviousEditBlock()
func (q *QTextCursor) JoinPreviousEditBlock() {
	q.Drv(147000, 147150, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::keepPositionOnInsert()
func (q *QTextCursor) KeepPositionOnInsert() bool {
	var __rv bool
	q.Drv(147000, 147151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::mergeBlockCharFormat(QTextCharFormat const&)
func (q *QTextCursor) MergeBlockCharFormat(modifier *QTextCharFormat) {
	q.Drv(147000, 147152, Native(modifier), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::mergeBlockFormat(QTextBlockFormat const&)
func (q *QTextCursor) MergeBlockFormat(modifier *QTextBlockFormat) {
	q.Drv(147000, 147153, Native(modifier), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::mergeCharFormat(QTextCharFormat const&)
func (q *QTextCursor) MergeCharFormat(modifier *QTextCharFormat) {
	q.Drv(147000, 147154, Native(modifier), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::movePosition(QTextCursor::MoveOperation)
func (q *QTextCursor) MovePosition(op QTextCursor_MoveOperation) bool {
	var __rv bool
	q.Drv(147000, 147155, unsafe.Pointer(&op), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::movePosition(QTextCursor::MoveOperation,QTextCursor::MoveMode,int)
func (q *QTextCursor) MovePositionWithOpMovemodeInt32(op QTextCursor_MoveOperation, value2 QTextCursor_MoveMode, n int32) bool {
	var __rv bool
	q.Drv(147000, 147156, unsafe.Pointer(&op), unsafe.Pointer(&value2), unsafe.Pointer(&n), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::position()
func (q *QTextCursor) Position() int32 {
	var __rv int32
	q.Drv(147000, 147157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::positionInBlock()
func (q *QTextCursor) PositionInBlock() int32 {
	var __rv int32
	q.Drv(147000, 147158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::removeSelectedText()
func (q *QTextCursor) RemoveSelectedText() {
	q.Drv(147000, 147159, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::select(QTextCursor::SelectionType)
func (q *QTextCursor) Select(selection QTextCursor_SelectionType) {
	q.Drv(147000, 147160, unsafe.Pointer(&selection), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::selectedTableCells(int*,int*,int*,int*)
func (q *QTextCursor) SelectedTableCells(firstRow *int32, numRows *int32, firstColumn *int32, numColumns *int32) {
	q.Drv(147000, 147161, unsafe.Pointer(&firstRow), unsafe.Pointer(&numRows), unsafe.Pointer(&firstColumn), unsafe.Pointer(&numColumns), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::selectedText()
func (q *QTextCursor) SelectedText() string {
	var __rv C.string_head
	q.Drv(147000, 147162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextCursor::selection()
func (q *QTextCursor) Selection() *QTextDocumentFragment {
	var __rv uintptr
	q.Drv(147000, 147163, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextCursor::selectionEnd()
func (q *QTextCursor) SelectionEnd() int32 {
	var __rv int32
	q.Drv(147000, 147164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::selectionStart()
func (q *QTextCursor) SelectionStart() int32 {
	var __rv int32
	q.Drv(147000, 147165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::setBlockCharFormat(QTextCharFormat const&)
func (q *QTextCursor) SetBlockCharFormat(format *QTextCharFormat) {
	q.Drv(147000, 147166, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setBlockFormat(QTextBlockFormat const&)
func (q *QTextCursor) SetBlockFormat(format *QTextBlockFormat) {
	q.Drv(147000, 147167, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setCharFormat(QTextCharFormat const&)
func (q *QTextCursor) SetCharFormat(format *QTextCharFormat) {
	q.Drv(147000, 147168, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setKeepPositionOnInsert(bool)
func (q *QTextCursor) SetKeepPositionOnInsert(b bool) {
	q.Drv(147000, 147169, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setPosition(int)
func (q *QTextCursor) SetPosition(pos int32) {
	q.Drv(147000, 147170, unsafe.Pointer(&pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setPosition(int,QTextCursor::MoveMode)
func (q *QTextCursor) SetPositionWithPosMode(pos int32, mode QTextCursor_MoveMode) {
	q.Drv(147000, 147171, unsafe.Pointer(&pos), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setVerticalMovementX(int)
func (q *QTextCursor) SetVerticalMovementX(x int32) {
	q.Drv(147000, 147172, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::setVisualNavigation(bool)
func (q *QTextCursor) SetVisualNavigation(b bool) {
	q.Drv(147000, 147173, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextCursor::verticalMovementX()
func (q *QTextCursor) VerticalMovementX() int32 {
	var __rv int32
	q.Drv(147000, 147174, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextCursor::visualNavigation()
func (q *QTextCursor) VisualNavigation() bool {
	var __rv bool
	q.Drv(147000, 147175, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextDecoder : QTextDecoder
type QTextDecoder struct {
	BaseDrv
}

//QTextDecoder::QTextDecoder(QTextCodec const*)
func NewTextDecoder(codec *QTextCodec) *QTextDecoder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 148000, 148102, Native(codec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDecoder{}
	_p.SetDriver(__rv, 148000, true)
	return _p
}

//QTextDecoder::QTextDecoder(QTextCodec const*,QFlags<QTextCodec::ConversionFlag>)
func NewTextDecoderWithCodecFlags(codec *QTextCodec, flags QTextCodec_ConversionFlag) *QTextDecoder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 148000, 148103, Native(codec), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDecoder{}
	_p.SetDriver(__rv, 148000, true)
	return _p
}

//QTextDecoder::hasFailure()
func (q *QTextDecoder) HasFailure() bool {
	var __rv bool
	q.Drv(148000, 148104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDecoder::toUnicode(QByteArray const&)
func (q *QTextDecoder) ToUnicode(ba []byte) string {
	_ba := NewCByteArrayHead(ba)
	defer FreeCByteArrayHead(_ba)
	var __rv C.string_head
	q.Drv(148000, 148105, unsafe.Pointer(_ba), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTextDocumentFragment : QTextDocumentFragment
type QTextDocumentFragment struct {
	BaseDrv
}

//QTextDocumentFragment::QTextDocumentFragment()
func NewTextDocumentFragment() *QTextDocumentFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 149000, 149102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentFragment{}
	_p.SetDriver(__rv, 149000, true)
	return _p
}

//QTextDocumentFragment::QTextDocumentFragment(QTextCursor const&)
func NewTextDocumentFragmentWithRange(_range *QTextCursor) *QTextDocumentFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 149000, 149103, Native(_range), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentFragment{}
	_p.SetDriver(__rv, 149000, true)
	return _p
}

//QTextDocumentFragment::QTextDocumentFragment(QTextDocument const*)
func NewTextDocumentFragmentWithDocument(document *QTextDocument) *QTextDocumentFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 149000, 149104, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentFragment{}
	_p.SetDriver(__rv, 149000, true)
	return _p
}

//QTextDocumentFragment::QTextDocumentFragment(QTextDocumentFragment const&)
func NewTextDocumentFragmentCopy(rhs *QTextDocumentFragment) *QTextDocumentFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 149000, 149105, Native(rhs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentFragment{}
	_p.SetDriver(__rv, 149000, true)
	return _p
}

//QTextDocumentFragment::fromHtml(QString const&)
func QTextDocumentFragmentFromHtml(html string) *QTextDocumentFragment {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	var __rv uintptr
	DirectQtDrv(nil, 149000, 149106, unsafe.Pointer(_html), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::fromHtml(QString const&)
func (q *QTextDocumentFragment) FromHtml(html string) *QTextDocumentFragment {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	var __rv uintptr
	q.Drv(149000, 149106, unsafe.Pointer(_html), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::fromHtml(QString const&,QTextDocument const*)
func QTextDocumentFragmentFromHtmlWithHtmlResourceprovider(html string, resourceProvider *QTextDocument) *QTextDocumentFragment {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	var __rv uintptr
	DirectQtDrv(nil, 149000, 149107, unsafe.Pointer(_html), Native(resourceProvider), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::fromHtml(QString const&,QTextDocument const*)
func (q *QTextDocumentFragment) FromHtmlWithHtmlResourceprovider(html string, resourceProvider *QTextDocument) *QTextDocumentFragment {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	var __rv uintptr
	q.Drv(149000, 149107, unsafe.Pointer(_html), Native(resourceProvider), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::fromPlainText(QString const&)
func QTextDocumentFragmentFromPlainText(plainText string) *QTextDocumentFragment {
	_plainText := NewCStringHead(plainText)
	defer FreeCStringHead(_plainText)
	var __rv uintptr
	DirectQtDrv(nil, 149000, 149108, unsafe.Pointer(_plainText), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::fromPlainText(QString const&)
func (q *QTextDocumentFragment) FromPlainText(plainText string) *QTextDocumentFragment {
	_plainText := NewCStringHead(plainText)
	defer FreeCStringHead(_plainText)
	var __rv uintptr
	q.Drv(149000, 149108, unsafe.Pointer(_plainText), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocumentFragment{}
	_rp.SetDriver(__rv, 149000, true)
	return _rp
}

//QTextDocumentFragment::isEmpty()
func (q *QTextDocumentFragment) IsEmpty() bool {
	var __rv bool
	q.Drv(149000, 149109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocumentFragment::toHtml()
func (q *QTextDocumentFragment) ToHtml() string {
	var __rv C.string_head
	q.Drv(149000, 149110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocumentFragment::toHtml(QByteArray const&)
func (q *QTextDocumentFragment) ToHtmlWithEncoding(encoding []byte) string {
	_encoding := NewCByteArrayHead(encoding)
	defer FreeCByteArrayHead(_encoding)
	var __rv C.string_head
	q.Drv(149000, 149111, unsafe.Pointer(_encoding), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocumentFragment::toPlainText()
func (q *QTextDocumentFragment) ToPlainText() string {
	var __rv C.string_head
	q.Drv(149000, 149112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTextDocumentWriter : QTextDocumentWriter
type QTextDocumentWriter struct {
	BaseDrv
}

//QTextDocumentWriter::QTextDocumentWriter()
func NewTextDocumentWriter() *QTextDocumentWriter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 150000, 150102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentWriter{}
	_p.SetDriver(__rv, 150000, true)
	return _p
}

//QTextDocumentWriter::QTextDocumentWriter(QIODevice*,QByteArray const&)
func NewTextDocumentWriterWithDeviceFormat(device QIODeviceInterface, format []byte) *QTextDocumentWriter {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 150000, 150103, Native(device), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentWriter{}
	_p.SetDriver(__rv, 150000, true)
	return _p
}

//QTextDocumentWriter::QTextDocumentWriter(QString const&,QByteArray const&)
func NewTextDocumentWriterWithFilenameFormat(fileName string, format []byte) *QTextDocumentWriter {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 150000, 150104, unsafe.Pointer(_fileName), unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocumentWriter{}
	_p.SetDriver(__rv, 150000, true)
	return _p
}

//QTextDocumentWriter::codec()
func (q *QTextDocumentWriter) Codec() *QTextCodec {
	var __rv uintptr
	q.Drv(150000, 150105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QTextDocumentWriter::device()
func (q *QTextDocumentWriter) Device() *QIODevice {
	var __rv uintptr
	q.Drv(150000, 150106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QTextDocumentWriter::fileName()
func (q *QTextDocumentWriter) FileName() string {
	var __rv C.string_head
	q.Drv(150000, 150107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocumentWriter::format()
func (q *QTextDocumentWriter) Format() []byte {
	var __rv []byte
	q.Drv(150000, 150108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocumentWriter::setCodec(QTextCodec*)
func (q *QTextDocumentWriter) SetCodec(codec *QTextCodec) {
	q.Drv(150000, 150109, Native(codec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocumentWriter::setDevice(QIODevice*)
func (q *QTextDocumentWriter) SetDevice(device QIODeviceInterface) {
	q.Drv(150000, 150110, Native(device), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocumentWriter::setFileName(QString const&)
func (q *QTextDocumentWriter) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(150000, 150111, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocumentWriter::setFormat(QByteArray const&)
func (q *QTextDocumentWriter) SetFormat(format []byte) {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	q.Drv(150000, 150112, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocumentWriter::supportedDocumentFormats()
func QTextDocumentWriterSupportedDocumentFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 150000, 150113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocumentWriter::supportedDocumentFormats()
func (q *QTextDocumentWriter) SupportedDocumentFormats() [][]byte {
	var __rv [][]byte
	q.Drv(150000, 150113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocumentWriter::write(QTextDocument const*)
func (q *QTextDocumentWriter) Write(document *QTextDocument) bool {
	var __rv bool
	q.Drv(150000, 150114, Native(document), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocumentWriter::write(QTextDocumentFragment const&)
func (q *QTextDocumentWriter) WriteWithFragment(fragment *QTextDocumentFragment) bool {
	var __rv bool
	q.Drv(150000, 150115, Native(fragment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextEditExtraSelection : QTextEdit::ExtraSelection
type QTextEditExtraSelection struct {
	BaseDrv
}

//struct QTextEncoder : QTextEncoder
type QTextEncoder struct {
	BaseDrv
}

//QTextEncoder::QTextEncoder(QTextCodec const*)
func NewTextEncoder(codec *QTextCodec) *QTextEncoder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 152000, 152102, Native(codec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextEncoder{}
	_p.SetDriver(__rv, 152000, true)
	return _p
}

//QTextEncoder::QTextEncoder(QTextCodec const*,QFlags<QTextCodec::ConversionFlag>)
func NewTextEncoderWithCodecFlags(codec *QTextCodec, flags QTextCodec_ConversionFlag) *QTextEncoder {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 152000, 152103, Native(codec), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextEncoder{}
	_p.SetDriver(__rv, 152000, true)
	return _p
}

//QTextEncoder::fromUnicode(QString const&)
func (q *QTextEncoder) FromUnicode(str string) []byte {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	var __rv []byte
	q.Drv(152000, 152104, unsafe.Pointer(_str), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEncoder::fromUnicode(QChar const*,int)
func (q *QTextEncoder) FromUnicodeWithUcLen(uc *rune, len int32) []byte {
	var __rv []byte
	q.Drv(152000, 152105, unsafe.Pointer(&uc), unsafe.Pointer(&len), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEncoder::hasFailure()
func (q *QTextEncoder) HasFailure() bool {
	var __rv bool
	q.Drv(152000, 152106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextFormat_Property - QTextFormat::Property
type QTextFormat_Property uint32

const (
	QTextFormat_ObjectIndex                       QTextFormat_Property = 0x0
	QTextFormat_CssFloat                          QTextFormat_Property = 0x0800
	QTextFormat_LayoutDirection                   QTextFormat_Property = 0x0801
	QTextFormat_OutlinePen                        QTextFormat_Property = 0x810
	QTextFormat_BackgroundBrush                   QTextFormat_Property = 0x820
	QTextFormat_ForegroundBrush                   QTextFormat_Property = 0x821
	QTextFormat_BackgroundImageUrl                QTextFormat_Property = 0x823
	QTextFormat_BlockAlignment                    QTextFormat_Property = 0x1010
	QTextFormat_BlockTopMargin                    QTextFormat_Property = 0x1030
	QTextFormat_BlockBottomMargin                 QTextFormat_Property = 0x1031
	QTextFormat_BlockLeftMargin                   QTextFormat_Property = 0x1032
	QTextFormat_BlockRightMargin                  QTextFormat_Property = 0x1033
	QTextFormat_TextIndent                        QTextFormat_Property = 0x1034
	QTextFormat_TabPositions                      QTextFormat_Property = 0x1035
	QTextFormat_BlockIndent                       QTextFormat_Property = 0x1040
	QTextFormat_BlockNonBreakableLines            QTextFormat_Property = 0x1050
	QTextFormat_BlockTrailingHorizontalRulerWidth QTextFormat_Property = 0x1060
	QTextFormat_FirstFontProperty                 QTextFormat_Property = 0x1FE0
	QTextFormat_FontCapitalization                QTextFormat_Property = QTextFormat_FirstFontProperty
	QTextFormat_FontLetterSpacing                 QTextFormat_Property = 0x1FE1
	QTextFormat_FontWordSpacing                   QTextFormat_Property = 0x1FE2
	QTextFormat_FontStyleHint                     QTextFormat_Property = 0x1FE3
	QTextFormat_FontStyleStrategy                 QTextFormat_Property = 0x1FE4
	QTextFormat_FontKerning                       QTextFormat_Property = 0x1FE5
	QTextFormat_FontFamily                        QTextFormat_Property = 0x2000
	QTextFormat_FontPointSize                     QTextFormat_Property = 0x2001
	QTextFormat_FontSizeAdjustment                QTextFormat_Property = 0x2002
	QTextFormat_FontSizeIncrement                 QTextFormat_Property = QTextFormat_FontSizeAdjustment
	QTextFormat_FontWeight                        QTextFormat_Property = 0x2003
	QTextFormat_FontItalic                        QTextFormat_Property = 0x2004
	QTextFormat_FontUnderline                     QTextFormat_Property = 0x2005
	QTextFormat_FontOverline                      QTextFormat_Property = 0x2006
	QTextFormat_FontStrikeOut                     QTextFormat_Property = 0x2007
	QTextFormat_FontFixedPitch                    QTextFormat_Property = 0x2008
	QTextFormat_FontPixelSize                     QTextFormat_Property = 0x2009
	QTextFormat_LastFontProperty                  QTextFormat_Property = QTextFormat_FontPixelSize
	QTextFormat_TextUnderlineColor                QTextFormat_Property = 0x2010
	QTextFormat_TextVerticalAlignment             QTextFormat_Property = 0x2021
	QTextFormat_TextOutline                       QTextFormat_Property = 0x2022
	QTextFormat_TextUnderlineStyle                QTextFormat_Property = 0x2023
	QTextFormat_TextToolTip                       QTextFormat_Property = 0x2024
	QTextFormat_IsAnchor                          QTextFormat_Property = 0x2030
	QTextFormat_AnchorHref                        QTextFormat_Property = 0x2031
	QTextFormat_AnchorName                        QTextFormat_Property = 0x2032
	QTextFormat_ObjectType                        QTextFormat_Property = 0x2f00
	QTextFormat_ListStyle                         QTextFormat_Property = 0x3000
	QTextFormat_ListIndent                        QTextFormat_Property = 0x3001
	QTextFormat_FrameBorder                       QTextFormat_Property = 0x4000
	QTextFormat_FrameMargin                       QTextFormat_Property = 0x4001
	QTextFormat_FramePadding                      QTextFormat_Property = 0x4002
	QTextFormat_FrameWidth                        QTextFormat_Property = 0x4003
	QTextFormat_FrameHeight                       QTextFormat_Property = 0x4004
	QTextFormat_FrameTopMargin                    QTextFormat_Property = 0x4005
	QTextFormat_FrameBottomMargin                 QTextFormat_Property = 0x4006
	QTextFormat_FrameLeftMargin                   QTextFormat_Property = 0x4007
	QTextFormat_FrameRightMargin                  QTextFormat_Property = 0x4008
	QTextFormat_FrameBorderBrush                  QTextFormat_Property = 0x4009
	QTextFormat_FrameBorderStyle                  QTextFormat_Property = 0x4010
	QTextFormat_TableColumns                      QTextFormat_Property = 0x4100
	QTextFormat_TableColumnWidthConstraints       QTextFormat_Property = 0x4101
	QTextFormat_TableCellSpacing                  QTextFormat_Property = 0x4102
	QTextFormat_TableCellPadding                  QTextFormat_Property = 0x4103
	QTextFormat_TableHeaderRowCount               QTextFormat_Property = 0x4104
	QTextFormat_TableCellRowSpan                  QTextFormat_Property = 0x4810
	QTextFormat_TableCellColumnSpan               QTextFormat_Property = 0x4811
	QTextFormat_TableCellTopPadding               QTextFormat_Property = 0x4812
	QTextFormat_TableCellBottomPadding            QTextFormat_Property = 0x4813
	QTextFormat_TableCellLeftPadding              QTextFormat_Property = 0x4814
	QTextFormat_TableCellRightPadding             QTextFormat_Property = 0x4815
	QTextFormat_ImageName                         QTextFormat_Property = 0x5000
	QTextFormat_ImageWidth                        QTextFormat_Property = 0x5010
	QTextFormat_ImageHeight                       QTextFormat_Property = 0x5011
	QTextFormat_FullWidthSelection                QTextFormat_Property = 0x06000
	QTextFormat_PageBreakPolicy                   QTextFormat_Property = 0x7000
	QTextFormat_UserProperty                      QTextFormat_Property = 0x100000
)

//enum QTextFormat_FormatType - QTextFormat::FormatType
type QTextFormat_FormatType int32

const (
	QTextFormat_InvalidFormat QTextFormat_FormatType = -1
	QTextFormat_BlockFormat   QTextFormat_FormatType = 1
	QTextFormat_CharFormat    QTextFormat_FormatType = 2
	QTextFormat_ListFormat    QTextFormat_FormatType = 3
	QTextFormat_TableFormat   QTextFormat_FormatType = 4
	QTextFormat_FrameFormat   QTextFormat_FormatType = 5
	QTextFormat_UserFormat    QTextFormat_FormatType = 100
)

//enum QTextFormat_ObjectTypes - QTextFormat::ObjectTypes
type QTextFormat_ObjectTypes uint32

const (
	QTextFormat_NoObject        QTextFormat_ObjectTypes = 0
	QTextFormat_ImageObject     QTextFormat_ObjectTypes = 1
	QTextFormat_TableObject     QTextFormat_ObjectTypes = 2
	QTextFormat_TableCellObject QTextFormat_ObjectTypes = 3
	QTextFormat_UserObject      QTextFormat_ObjectTypes = 0x1000
)

//enum QTextFormat_PageBreakFlag - QTextFormat::PageBreakFlag
type QTextFormat_PageBreakFlag uint32

const (
	QTextFormat_PageBreak_Auto         QTextFormat_PageBreakFlag = 0
	QTextFormat_PageBreak_AlwaysBefore QTextFormat_PageBreakFlag = 0x001
	QTextFormat_PageBreak_AlwaysAfter  QTextFormat_PageBreakFlag = 0x010
)

//struct QTextFormat : QTextFormat
type QTextFormat struct {
	BaseDrv
}

//QTextFormat::QTextFormat()
func NewTextFormat() *QTextFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 153000, 153102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFormat{}
	_p.SetDriver(__rv, 153000, true)
	return _p
}

//QTextFormat::QTextFormat(QTextFormat const&)
func NewTextFormatCopy(rhs *QTextFormat) *QTextFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 153000, 153103, Native(rhs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFormat{}
	_p.SetDriver(__rv, 153000, true)
	return _p
}

//QTextFormat::QTextFormat(int)
func NewTextFormatWithType(_type int32) *QTextFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 153000, 153104, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFormat{}
	_p.SetDriver(__rv, 153000, true)
	return _p
}

//QTextFormat::background()
func (q *QTextFormat) Background() *QBrush {
	var __rv uintptr
	q.Drv(153000, 153105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTextFormat::boolProperty(int)
func (q *QTextFormat) BoolProperty(propertyId int32) bool {
	var __rv bool
	q.Drv(153000, 153106, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::brushProperty(int)
func (q *QTextFormat) BrushProperty(propertyId int32) *QBrush {
	var __rv uintptr
	q.Drv(153000, 153107, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTextFormat::clearBackground()
func (q *QTextFormat) ClearBackground() {
	q.Drv(153000, 153108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::clearForeground()
func (q *QTextFormat) ClearForeground() {
	q.Drv(153000, 153109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::clearProperty(int)
func (q *QTextFormat) ClearProperty(propertyId int32) {
	q.Drv(153000, 153110, unsafe.Pointer(&propertyId), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::colorProperty(int)
func (q *QTextFormat) ColorProperty(propertyId int32) *QColor {
	var __rv uintptr
	q.Drv(153000, 153111, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTextFormat::doubleProperty(int)
func (q *QTextFormat) DoubleProperty(propertyId int32) float64 {
	var __rv float64
	q.Drv(153000, 153112, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::foreground()
func (q *QTextFormat) Foreground() *QBrush {
	var __rv uintptr
	q.Drv(153000, 153113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTextFormat::hasProperty(int)
func (q *QTextFormat) HasProperty(propertyId int32) bool {
	var __rv bool
	q.Drv(153000, 153114, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::intProperty(int)
func (q *QTextFormat) IntProperty(propertyId int32) int32 {
	var __rv int32
	q.Drv(153000, 153115, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isBlockFormat()
func (q *QTextFormat) IsBlockFormat() bool {
	var __rv bool
	q.Drv(153000, 153116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isCharFormat()
func (q *QTextFormat) IsCharFormat() bool {
	var __rv bool
	q.Drv(153000, 153117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isFrameFormat()
func (q *QTextFormat) IsFrameFormat() bool {
	var __rv bool
	q.Drv(153000, 153118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isImageFormat()
func (q *QTextFormat) IsImageFormat() bool {
	var __rv bool
	q.Drv(153000, 153119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isListFormat()
func (q *QTextFormat) IsListFormat() bool {
	var __rv bool
	q.Drv(153000, 153120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isTableCellFormat()
func (q *QTextFormat) IsTableCellFormat() bool {
	var __rv bool
	q.Drv(153000, 153121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isTableFormat()
func (q *QTextFormat) IsTableFormat() bool {
	var __rv bool
	q.Drv(153000, 153122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::isValid()
func (q *QTextFormat) IsValid() bool {
	var __rv bool
	q.Drv(153000, 153123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::layoutDirection()
func (q *QTextFormat) LayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(153000, 153124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::lengthProperty(int)
func (q *QTextFormat) LengthProperty(propertyId int32) *QTextLength {
	var __rv uintptr
	q.Drv(153000, 153125, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLength{}
	_rp.SetDriver(__rv, 162000, true)
	return _rp
}

//QTextFormat::lengthVectorProperty(int)
func (q *QTextFormat) LengthVectorProperty(propertyId int32) []*QTextLength {
	var __rv []*QTextLength
	q.Drv(153000, 153126, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::merge(QTextFormat const&)
func (q *QTextFormat) Merge(other *QTextFormat) {
	q.Drv(153000, 153127, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::objectIndex()
func (q *QTextFormat) ObjectIndex() int32 {
	var __rv int32
	q.Drv(153000, 153128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::objectType()
func (q *QTextFormat) ObjectType() int32 {
	var __rv int32
	q.Drv(153000, 153129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::penProperty(int)
func (q *QTextFormat) PenProperty(propertyId int32) *QPen {
	var __rv uintptr
	q.Drv(153000, 153130, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QTextFormat::properties()
func (q *QTextFormat) Properties() map[int32]*QVariant {
	var __rv uintptr
	q.Drv(153000, 153131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIntVariantMap{}
	_rp.SetDriver(__rv, 60000, true)
	defer _rp.Delete()
	return FromIntVariantMap(_rp)
}

//QTextFormat::property(int)
func (q *QTextFormat) Property(propertyId int32) *QVariant {
	var __rv uintptr
	q.Drv(153000, 153132, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTextFormat::propertyCount()
func (q *QTextFormat) PropertyCount() int32 {
	var __rv int32
	q.Drv(153000, 153133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFormat::setBackground(QBrush const&)
func (q *QTextFormat) SetBackground(brush *QBrush) {
	q.Drv(153000, 153134, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setForeground(QBrush const&)
func (q *QTextFormat) SetForeground(brush *QBrush) {
	q.Drv(153000, 153135, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setLayoutDirection(Qt::LayoutDirection)
func (q *QTextFormat) SetLayoutDirection(direction Qt_LayoutDirection) {
	q.Drv(153000, 153136, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setObjectIndex(int)
func (q *QTextFormat) SetObjectIndex(object int32) {
	q.Drv(153000, 153137, unsafe.Pointer(&object), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setObjectType(int)
func (q *QTextFormat) SetObjectType(_type int32) {
	q.Drv(153000, 153138, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setProperty(int,QVariant const&)
func (q *QTextFormat) SetPropertyWithPropertyidValue(propertyId int32, value *QVariant) {
	q.Drv(153000, 153139, unsafe.Pointer(&propertyId), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::setProperty(int,QVector<QTextLength> const&)
func (q *QTextFormat) SetPropertyWithPropertyidLengths(propertyId int32, lengths []*QTextLength) {
	q.Drv(153000, 153140, unsafe.Pointer(&propertyId), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFormat::stringProperty(int)
func (q *QTextFormat) StringProperty(propertyId int32) string {
	var __rv C.string_head
	q.Drv(153000, 153141, unsafe.Pointer(&propertyId), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextFormat::toBlockFormat()
func (q *QTextFormat) ToBlockFormat() *QTextBlockFormat {
	var __rv uintptr
	q.Drv(153000, 153142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockFormat{}
	_rp.SetDriver(__rv, 141000, true)
	return _rp
}

//QTextFormat::toCharFormat()
func (q *QTextFormat) ToCharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(153000, 153143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextFormat::toFrameFormat()
func (q *QTextFormat) ToFrameFormat() *QTextFrameFormat {
	var __rv uintptr
	q.Drv(153000, 153144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameFormat{}
	_rp.SetDriver(__rv, 156000, true)
	return _rp
}

//QTextFormat::toImageFormat()
func (q *QTextFormat) ToImageFormat() *QTextImageFormat {
	var __rv uintptr
	q.Drv(153000, 153145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextImageFormat{}
	_rp.SetDriver(__rv, 157000, true)
	return _rp
}

//QTextFormat::toListFormat()
func (q *QTextFormat) ToListFormat() *QTextListFormat {
	var __rv uintptr
	q.Drv(153000, 153146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextListFormat{}
	_rp.SetDriver(__rv, 164000, true)
	return _rp
}

//QTextFormat::toTableCellFormat()
func (q *QTextFormat) ToTableCellFormat() *QTextTableCellFormat {
	var __rv uintptr
	q.Drv(153000, 153147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableCellFormat{}
	_rp.SetDriver(__rv, 169000, true)
	return _rp
}

//QTextFormat::toTableFormat()
func (q *QTextFormat) ToTableFormat() *QTextTableFormat {
	var __rv uintptr
	q.Drv(153000, 153148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableFormat{}
	_rp.SetDriver(__rv, 170000, true)
	return _rp
}

//QTextFormat::type()
func (q *QTextFormat) Type() int32 {
	var __rv int32
	q.Drv(153000, 153149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextFragment : QTextFragment
type QTextFragment struct {
	BaseDrv
}

//QTextFragment::QTextFragment()
func NewTextFragment() *QTextFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 154000, 154102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFragment{}
	_p.SetDriver(__rv, 154000, true)
	return _p
}

//QTextFragment::QTextFragment(QTextFragment const&)
func NewTextFragmentCopy(o *QTextFragment) *QTextFragment {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 154000, 154103, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFragment{}
	_p.SetDriver(__rv, 154000, true)
	return _p
}

//QTextFragment::charFormat()
func (q *QTextFragment) CharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(154000, 154104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextFragment::charFormatIndex()
func (q *QTextFragment) CharFormatIndex() int32 {
	var __rv int32
	q.Drv(154000, 154105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFragment::contains(int)
func (q *QTextFragment) Contains(position int32) bool {
	var __rv bool
	q.Drv(154000, 154106, unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFragment::isValid()
func (q *QTextFragment) IsValid() bool {
	var __rv bool
	q.Drv(154000, 154107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFragment::length()
func (q *QTextFragment) Length() int32 {
	var __rv int32
	q.Drv(154000, 154108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFragment::position()
func (q *QTextFragment) Position() int32 {
	var __rv int32
	q.Drv(154000, 154109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFragment::text()
func (q *QTextFragment) Text() string {
	var __rv C.string_head
	q.Drv(154000, 154110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTextFrameiterator : QTextFrame::iterator
type QTextFrameiterator struct {
	BaseDrv
}

//QTextFrame::iterator::atEnd()
func (q *QTextFrameiterator) AtEnd() bool {
	var __rv bool
	q.Drv(155000, 155102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrame::iterator::currentBlock()
func (q *QTextFrameiterator) CurrentBlock() *QTextBlock {
	var __rv uintptr
	q.Drv(155000, 155103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextFrame::iterator::currentFrame()
func (q *QTextFrameiterator) CurrentFrame() *QTextFrame {
	var __rv uintptr
	q.Drv(155000, 155104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextFrame::iterator::iterator()
func NewTextFrameiterator() *QTextFrameiterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 155000, 155105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFrameiterator{}
	_p.SetDriver(__rv, 155000, true)
	return _p
}

//QTextFrame::iterator::iterator(QTextFrame::iterator const&)
func NewTextFrameiteratorCopy(o *QTextFrameiterator) *QTextFrameiterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 155000, 155106, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFrameiterator{}
	_p.SetDriver(__rv, 155000, true)
	return _p
}

//QTextFrame::iterator::parentFrame()
func (q *QTextFrameiterator) ParentFrame() *QTextFrame {
	var __rv uintptr
	q.Drv(155000, 155107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//enum QTextFrameFormat_Position - QTextFrameFormat::Position
type QTextFrameFormat_Position uint32

const (
	QTextFrameFormat_InFlow     QTextFrameFormat_Position = 0
	QTextFrameFormat_FloatLeft  QTextFrameFormat_Position = 1
	QTextFrameFormat_FloatRight QTextFrameFormat_Position = 2
)

//enum QTextFrameFormat_BorderStyle - QTextFrameFormat::BorderStyle
type QTextFrameFormat_BorderStyle uint32

const (
	QTextFrameFormat_BorderStyle_None       QTextFrameFormat_BorderStyle = 0
	QTextFrameFormat_BorderStyle_Dotted     QTextFrameFormat_BorderStyle = 1
	QTextFrameFormat_BorderStyle_Dashed     QTextFrameFormat_BorderStyle = 2
	QTextFrameFormat_BorderStyle_Solid      QTextFrameFormat_BorderStyle = 3
	QTextFrameFormat_BorderStyle_Double     QTextFrameFormat_BorderStyle = 4
	QTextFrameFormat_BorderStyle_DotDash    QTextFrameFormat_BorderStyle = 5
	QTextFrameFormat_BorderStyle_DotDotDash QTextFrameFormat_BorderStyle = 6
	QTextFrameFormat_BorderStyle_Groove     QTextFrameFormat_BorderStyle = 7
	QTextFrameFormat_BorderStyle_Ridge      QTextFrameFormat_BorderStyle = 8
	QTextFrameFormat_BorderStyle_Inset      QTextFrameFormat_BorderStyle = 9
	QTextFrameFormat_BorderStyle_Outset     QTextFrameFormat_BorderStyle = 10
)

//struct QTextFrameFormat : QTextFrameFormat
type QTextFrameFormat struct {
	QTextFormat
}

//QTextFrameFormat::QTextFrameFormat()
func NewTextFrameFormat() *QTextFrameFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 156000, 156102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFrameFormat{}
	_p.SetDriver(__rv, 156000, true)
	return _p
}

//QTextFrameFormat::border()
func (q *QTextFrameFormat) Border() float64 {
	var __rv float64
	q.Drv(156000, 156103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::borderBrush()
func (q *QTextFrameFormat) BorderBrush() *QBrush {
	var __rv uintptr
	q.Drv(156000, 156104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTextFrameFormat::borderStyle()
func (q *QTextFrameFormat) BorderStyle() QTextFrameFormat_BorderStyle {
	var __rv QTextFrameFormat_BorderStyle
	q.Drv(156000, 156105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::bottomMargin()
func (q *QTextFrameFormat) BottomMargin() float64 {
	var __rv float64
	q.Drv(156000, 156106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::height()
func (q *QTextFrameFormat) Height() *QTextLength {
	var __rv uintptr
	q.Drv(156000, 156107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLength{}
	_rp.SetDriver(__rv, 162000, true)
	return _rp
}

//QTextFrameFormat::isValid()
func (q *QTextFrameFormat) IsValid() bool {
	var __rv bool
	q.Drv(156000, 156108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::leftMargin()
func (q *QTextFrameFormat) LeftMargin() float64 {
	var __rv float64
	q.Drv(156000, 156109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::margin()
func (q *QTextFrameFormat) Margin() float64 {
	var __rv float64
	q.Drv(156000, 156110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::padding()
func (q *QTextFrameFormat) Padding() float64 {
	var __rv float64
	q.Drv(156000, 156111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::pageBreakPolicy()
func (q *QTextFrameFormat) PageBreakPolicy() QTextFormat_PageBreakFlag {
	var __rv QTextFormat_PageBreakFlag
	q.Drv(156000, 156112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::position()
func (q *QTextFrameFormat) Position() QTextFrameFormat_Position {
	var __rv QTextFrameFormat_Position
	q.Drv(156000, 156113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::rightMargin()
func (q *QTextFrameFormat) RightMargin() float64 {
	var __rv float64
	q.Drv(156000, 156114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::setBorder(double)
func (q *QTextFrameFormat) SetBorder(border float64) {
	q.Drv(156000, 156115, unsafe.Pointer(&border), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setBorderBrush(QBrush const&)
func (q *QTextFrameFormat) SetBorderBrush(brush *QBrush) {
	q.Drv(156000, 156116, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setBorderStyle(QTextFrameFormat::BorderStyle)
func (q *QTextFrameFormat) SetBorderStyle(style QTextFrameFormat_BorderStyle) {
	q.Drv(156000, 156117, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setBottomMargin(double)
func (q *QTextFrameFormat) SetBottomMargin(margin float64) {
	q.Drv(156000, 156118, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setHeight(QTextLength const&)
func (q *QTextFrameFormat) SetHeight(height *QTextLength) {
	q.Drv(156000, 156119, Native(height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setHeight(double)
func (q *QTextFrameFormat) SetHeightFWithHeight(height float64) {
	q.Drv(156000, 156120, unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setLeftMargin(double)
func (q *QTextFrameFormat) SetLeftMargin(margin float64) {
	q.Drv(156000, 156121, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setMargin(double)
func (q *QTextFrameFormat) SetMargin(margin float64) {
	q.Drv(156000, 156122, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setPadding(double)
func (q *QTextFrameFormat) SetPadding(padding float64) {
	q.Drv(156000, 156123, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setPageBreakPolicy(QFlags<QTextFormat::PageBreakFlag>)
func (q *QTextFrameFormat) SetPageBreakPolicy(flags QTextFormat_PageBreakFlag) {
	q.Drv(156000, 156124, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setPosition(QTextFrameFormat::Position)
func (q *QTextFrameFormat) SetPosition(f QTextFrameFormat_Position) {
	q.Drv(156000, 156125, unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setRightMargin(double)
func (q *QTextFrameFormat) SetRightMargin(margin float64) {
	q.Drv(156000, 156126, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setTopMargin(double)
func (q *QTextFrameFormat) SetTopMargin(margin float64) {
	q.Drv(156000, 156127, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setWidth(QTextLength const&)
func (q *QTextFrameFormat) SetWidth(length *QTextLength) {
	q.Drv(156000, 156128, Native(length), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::setWidth(double)
func (q *QTextFrameFormat) SetWidthFWithWidth(width float64) {
	q.Drv(156000, 156129, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextFrameFormat::topMargin()
func (q *QTextFrameFormat) TopMargin() float64 {
	var __rv float64
	q.Drv(156000, 156130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrameFormat::width()
func (q *QTextFrameFormat) Width() *QTextLength {
	var __rv uintptr
	q.Drv(156000, 156131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLength{}
	_rp.SetDriver(__rv, 162000, true)
	return _rp
}

//struct QTextImageFormat : QTextImageFormat
type QTextImageFormat struct {
	QTextCharFormat
}

//QTextImageFormat::QTextImageFormat()
func NewTextImageFormat() *QTextImageFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 157000, 157102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextImageFormat{}
	_p.SetDriver(__rv, 157000, true)
	return _p
}

//QTextImageFormat::height()
func (q *QTextImageFormat) Height() float64 {
	var __rv float64
	q.Drv(157000, 157103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextImageFormat::isValid()
func (q *QTextImageFormat) IsValid() bool {
	var __rv bool
	q.Drv(157000, 157104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextImageFormat::name()
func (q *QTextImageFormat) Name() string {
	var __rv C.string_head
	q.Drv(157000, 157105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextImageFormat::setHeight(double)
func (q *QTextImageFormat) SetHeight(height float64) {
	q.Drv(157000, 157106, unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextImageFormat::setName(QString const&)
func (q *QTextImageFormat) SetName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(157000, 157107, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextImageFormat::setWidth(double)
func (q *QTextImageFormat) SetWidth(width float64) {
	q.Drv(157000, 157108, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextImageFormat::width()
func (q *QTextImageFormat) Width() float64 {
	var __rv float64
	q.Drv(157000, 157109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextInlineObject : QTextInlineObject
type QTextInlineObject struct {
	BaseDrv
}

//QTextInlineObject::QTextInlineObject()
func NewTextInlineObject() *QTextInlineObject {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 158000, 158102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextInlineObject{}
	_p.SetDriver(__rv, 158000, true)
	return _p
}

//QTextInlineObject::ascent()
func (q *QTextInlineObject) Ascent() float64 {
	var __rv float64
	q.Drv(158000, 158103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::descent()
func (q *QTextInlineObject) Descent() float64 {
	var __rv float64
	q.Drv(158000, 158104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::format()
func (q *QTextInlineObject) Format() *QTextFormat {
	var __rv uintptr
	q.Drv(158000, 158105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFormat{}
	_rp.SetDriver(__rv, 153000, true)
	return _rp
}

//QTextInlineObject::formatIndex()
func (q *QTextInlineObject) FormatIndex() int32 {
	var __rv int32
	q.Drv(158000, 158106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::height()
func (q *QTextInlineObject) Height() float64 {
	var __rv float64
	q.Drv(158000, 158107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::isValid()
func (q *QTextInlineObject) IsValid() bool {
	var __rv bool
	q.Drv(158000, 158108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::rect()
func (q *QTextInlineObject) Rect() *QRectF {
	var __rv uintptr
	q.Drv(158000, 158109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTextInlineObject::setAscent(double)
func (q *QTextInlineObject) SetAscent(a float64) {
	q.Drv(158000, 158110, unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextInlineObject::setDescent(double)
func (q *QTextInlineObject) SetDescent(d float64) {
	q.Drv(158000, 158111, unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextInlineObject::setWidth(double)
func (q *QTextInlineObject) SetWidth(w float64) {
	q.Drv(158000, 158112, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextInlineObject::textDirection()
func (q *QTextInlineObject) TextDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(158000, 158113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::textPosition()
func (q *QTextInlineObject) TextPosition() int32 {
	var __rv int32
	q.Drv(158000, 158114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextInlineObject::width()
func (q *QTextInlineObject) Width() float64 {
	var __rv float64
	q.Drv(158000, 158115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextItem_RenderFlag - QTextItem::RenderFlag
type QTextItem_RenderFlag uint32

const (
	QTextItem_RightToLeft QTextItem_RenderFlag = 0x1
	QTextItem_Overline    QTextItem_RenderFlag = 0x10
	QTextItem_Underline   QTextItem_RenderFlag = 0x20
	QTextItem_StrikeOut   QTextItem_RenderFlag = 0x40
	QTextItem_Dummy       QTextItem_RenderFlag = 0xffffffff
)

//struct QTextItem : QTextItem
type QTextItem struct {
	BaseDrv
}

//QTextItem::QTextItem()
func NewTextItem() *QTextItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 159000, 159102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextItem{}
	_p.SetDriver(__rv, 159000, true)
	return _p
}

//QTextItem::ascent()
func (q *QTextItem) Ascent() float64 {
	var __rv float64
	q.Drv(159000, 159103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextItem::descent()
func (q *QTextItem) Descent() float64 {
	var __rv float64
	q.Drv(159000, 159104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextItem::font()
func (q *QTextItem) Font() *QFont {
	var __rv uintptr
	q.Drv(159000, 159105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTextItem::renderFlags()
func (q *QTextItem) RenderFlags() QTextItem_RenderFlag {
	var __rv QTextItem_RenderFlag
	q.Drv(159000, 159106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextItem::text()
func (q *QTextItem) Text() string {
	var __rv C.string_head
	q.Drv(159000, 159107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextItem::width()
func (q *QTextItem) Width() float64 {
	var __rv float64
	q.Drv(159000, 159108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextLayout_CursorMode - QTextLayout::CursorMode
type QTextLayout_CursorMode uint32

const (
	QTextLayout_SkipCharacters QTextLayout_CursorMode = 0
	QTextLayout_SkipWords      QTextLayout_CursorMode = 1
)

//struct QTextLayout : QTextLayout
type QTextLayout struct {
	BaseDrv
}

//QTextLayout::QTextLayout()
func NewTextLayout() *QTextLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 160000, 160102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLayout{}
	_p.SetDriver(__rv, 160000, true)
	return _p
}

//QTextLayout::QTextLayout(QString const&)
func NewTextLayoutWithText(text string) *QTextLayout {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 160000, 160103, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLayout{}
	_p.SetDriver(__rv, 160000, true)
	return _p
}

//QTextLayout::QTextLayout(QTextBlock const&)
func NewTextLayoutWithTextblock(b *QTextBlock) *QTextLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 160000, 160104, Native(b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLayout{}
	_p.SetDriver(__rv, 160000, true)
	return _p
}

//QTextLayout::QTextLayout(QString const&,QFont const&,QPaintDevice*)
func NewTextLayoutWithTextFontPaintDevice(text string, font *QFont, paintdevice QPaintDeviceInterface) *QTextLayout {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 160000, 160105, unsafe.Pointer(_text), Native(font), unsafe.Pointer(new_pd_head(paintdevice)), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLayout{}
	_p.SetDriver(__rv, 160000, true)
	return _p
}

//QTextLayout::additionalFormats()
func (q *QTextLayout) AdditionalFormats() []*QTextLayoutFormatRange {
	var __rv []*QTextLayoutFormatRange
	q.Drv(160000, 160106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::beginLayout()
func (q *QTextLayout) BeginLayout() {
	q.Drv(160000, 160107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::boundingRect()
func (q *QTextLayout) BoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(160000, 160108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTextLayout::cacheEnabled()
func (q *QTextLayout) CacheEnabled() bool {
	var __rv bool
	q.Drv(160000, 160109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::clearAdditionalFormats()
func (q *QTextLayout) ClearAdditionalFormats() {
	q.Drv(160000, 160110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::clearLayout()
func (q *QTextLayout) ClearLayout() {
	q.Drv(160000, 160111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::createLine()
func (q *QTextLayout) CreateLine() *QTextLine {
	var __rv uintptr
	q.Drv(160000, 160112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLine{}
	_rp.SetDriver(__rv, 163000, true)
	return _rp
}

//QTextLayout::draw(QPainter*,QPointF const&,QVector<QTextLayout::FormatRange> const&,QRectF const&)
func (q *QTextLayout) Draw(p *QPainter, pos *QPointF, selections []*QTextLayoutFormatRange, clip *QRectF) {
	_selections := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&selections)))
	defer FreeCNoObjectArrayHead(_selections)
	q.Drv(160000, 160113, Native(p), Native(pos), unsafe.Pointer(_selections), Native(clip), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::drawCursor(QPainter*,QPointF const&,int)
func (q *QTextLayout) DrawCursorFWithPPosCursorposition(p *QPainter, pos *QPointF, cursorPosition int32) {
	q.Drv(160000, 160114, Native(p), Native(pos), unsafe.Pointer(&cursorPosition), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::drawCursor(QPainter*,QPointF const&,int,int)
func (q *QTextLayout) DrawCursorFWithPPosCursorpositionWidth(p *QPainter, pos *QPointF, cursorPosition int32, width int32) {
	q.Drv(160000, 160115, Native(p), Native(pos), unsafe.Pointer(&cursorPosition), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::endLayout()
func (q *QTextLayout) EndLayout() {
	q.Drv(160000, 160116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::font()
func (q *QTextLayout) Font() *QFont {
	var __rv uintptr
	q.Drv(160000, 160117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTextLayout::isValidCursorPosition(int)
func (q *QTextLayout) IsValidCursorPosition(pos int32) bool {
	var __rv bool
	q.Drv(160000, 160118, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::lineAt(int)
func (q *QTextLayout) LineAt(i int32) *QTextLine {
	var __rv uintptr
	q.Drv(160000, 160119, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLine{}
	_rp.SetDriver(__rv, 163000, true)
	return _rp
}

//QTextLayout::lineCount()
func (q *QTextLayout) LineCount() int32 {
	var __rv int32
	q.Drv(160000, 160120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::lineForTextPosition(int)
func (q *QTextLayout) LineForTextPosition(pos int32) *QTextLine {
	var __rv uintptr
	q.Drv(160000, 160121, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextLine{}
	_rp.SetDriver(__rv, 163000, true)
	return _rp
}

//QTextLayout::maximumWidth()
func (q *QTextLayout) MaximumWidth() float64 {
	var __rv float64
	q.Drv(160000, 160122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::minimumWidth()
func (q *QTextLayout) MinimumWidth() float64 {
	var __rv float64
	q.Drv(160000, 160123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::nextCursorPosition(int)
func (q *QTextLayout) NextCursorPosition(oldPos int32) int32 {
	var __rv int32
	q.Drv(160000, 160124, unsafe.Pointer(&oldPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::nextCursorPosition(int,QTextLayout::CursorMode)
func (q *QTextLayout) NextCursorPositionWithOldposMode(oldPos int32, mode QTextLayout_CursorMode) int32 {
	var __rv int32
	q.Drv(160000, 160125, unsafe.Pointer(&oldPos), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::position()
func (q *QTextLayout) Position() *QPointF {
	var __rv uintptr
	q.Drv(160000, 160126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTextLayout::preeditAreaPosition()
func (q *QTextLayout) PreeditAreaPosition() int32 {
	var __rv int32
	q.Drv(160000, 160127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::preeditAreaText()
func (q *QTextLayout) PreeditAreaText() string {
	var __rv C.string_head
	q.Drv(160000, 160128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextLayout::previousCursorPosition(int)
func (q *QTextLayout) PreviousCursorPosition(oldPos int32) int32 {
	var __rv int32
	q.Drv(160000, 160129, unsafe.Pointer(&oldPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::previousCursorPosition(int,QTextLayout::CursorMode)
func (q *QTextLayout) PreviousCursorPositionWithOldposMode(oldPos int32, mode QTextLayout_CursorMode) int32 {
	var __rv int32
	q.Drv(160000, 160130, unsafe.Pointer(&oldPos), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLayout::setAdditionalFormats(QList<QTextLayout::FormatRange> const&)
func (q *QTextLayout) SetAdditionalFormats(overrides []*QTextLayoutFormatRange) {
	_overrides := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&overrides)))
	defer FreeCNoObjectArrayHead(_overrides)
	q.Drv(160000, 160131, unsafe.Pointer(_overrides), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setCacheEnabled(bool)
func (q *QTextLayout) SetCacheEnabled(enable bool) {
	q.Drv(160000, 160132, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setFlags(int)
func (q *QTextLayout) SetFlags(flags int32) {
	q.Drv(160000, 160133, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setFont(QFont const&)
func (q *QTextLayout) SetFont(f *QFont) {
	q.Drv(160000, 160134, Native(f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setPosition(QPointF const&)
func (q *QTextLayout) SetPosition(p *QPointF) {
	q.Drv(160000, 160135, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setPreeditArea(int,QString const&)
func (q *QTextLayout) SetPreeditArea(position int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(160000, 160136, unsafe.Pointer(&position), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setText(QString const&)
func (q *QTextLayout) SetText(string string) {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	q.Drv(160000, 160137, unsafe.Pointer(_string), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::setTextOption(QTextOption const&)
func (q *QTextLayout) SetTextOption(option *QTextOption) {
	q.Drv(160000, 160138, Native(option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLayout::text()
func (q *QTextLayout) Text() string {
	var __rv C.string_head
	q.Drv(160000, 160139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextLayout::textOption()
func (q *QTextLayout) TextOption() *QTextOption {
	var __rv uintptr
	q.Drv(160000, 160140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextOption{}
	_rp.SetDriver(__rv, 166000, true)
	return _rp
}

//struct QTextLayoutFormatRange : QTextLayout::FormatRange
type QTextLayoutFormatRange struct {
	BaseDrv
}

//enum QTextLength_Type - QTextLength::Type
type QTextLength_Type uint32

const (
	QTextLength_VariableLength   QTextLength_Type = 0
	QTextLength_FixedLength      QTextLength_Type = 0
	QTextLength_PercentageLength QTextLength_Type = 1
)

//struct QTextLength : QTextLength
type QTextLength struct {
	BaseDrv
}

//QTextLength::QTextLength()
func NewTextLength() *QTextLength {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 162000, 162102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLength{}
	_p.SetDriver(__rv, 162000, true)
	return _p
}

//QTextLength::QTextLength(QTextLength::Type,double)
func NewTextLengthWithTypeValue(_type QTextLength_Type, value float64) *QTextLength {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 162000, 162103, unsafe.Pointer(&_type), unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLength{}
	_p.SetDriver(__rv, 162000, true)
	return _p
}

//QTextLength::rawValue()
func (q *QTextLength) RawValue() float64 {
	var __rv float64
	q.Drv(162000, 162104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLength::type()
func (q *QTextLength) Type() QTextLength_Type {
	var __rv QTextLength_Type
	q.Drv(162000, 162105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLength::value(double)
func (q *QTextLength) Value(maximumLength float64) float64 {
	var __rv float64
	q.Drv(162000, 162106, unsafe.Pointer(&maximumLength), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextLine_Edge - QTextLine::Edge
type QTextLine_Edge uint32

const (
	QTextLine_Leading  QTextLine_Edge = 0
	QTextLine_Trailing QTextLine_Edge = 1
)

//enum QTextLine_CursorPosition - QTextLine::CursorPosition
type QTextLine_CursorPosition uint32

const (
	QTextLine_CursorBetweenCharacters QTextLine_CursorPosition = 0
	QTextLine_CursorOnCharacter       QTextLine_CursorPosition = 1
)

//struct QTextLine : QTextLine
type QTextLine struct {
	BaseDrv
}

//QTextLine::QTextLine()
func NewTextLine() *QTextLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 163000, 163102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextLine{}
	_p.SetDriver(__rv, 163000, true)
	return _p
}

//QTextLine::ascent()
func (q *QTextLine) Ascent() float64 {
	var __rv float64
	q.Drv(163000, 163103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::cursorToX(int)
func (q *QTextLine) CursorToX(cursorPos int32) float64 {
	var __rv float64
	q.Drv(163000, 163104, unsafe.Pointer(&cursorPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::cursorToX(int*)
func (q *QTextLine) CursorToXWithCursorposp(cursorPos *int32) float64 {
	var __rv float64
	q.Drv(163000, 163105, unsafe.Pointer(&cursorPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::cursorToX(int*,QTextLine::Edge)
func (q *QTextLine) CursorToXWithCursorpospEdge(cursorPos *int32, edge QTextLine_Edge) float64 {
	var __rv float64
	q.Drv(163000, 163106, unsafe.Pointer(&cursorPos), unsafe.Pointer(&edge), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::cursorToX(int,QTextLine::Edge)
func (q *QTextLine) CursorToXWithCursorposEdge(cursorPos int32, edge QTextLine_Edge) float64 {
	var __rv float64
	q.Drv(163000, 163107, unsafe.Pointer(&cursorPos), unsafe.Pointer(&edge), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::descent()
func (q *QTextLine) Descent() float64 {
	var __rv float64
	q.Drv(163000, 163108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::draw(QPainter*,QPointF const&,QTextLayout::FormatRange const*)
func (q *QTextLine) Draw(p *QPainter, point *QPointF, selection *QTextLayoutFormatRange) {
	q.Drv(163000, 163109, Native(p), Native(point), Native(selection), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::height()
func (q *QTextLine) Height() float64 {
	var __rv float64
	q.Drv(163000, 163110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::horizontalAdvance()
func (q *QTextLine) HorizontalAdvance() float64 {
	var __rv float64
	q.Drv(163000, 163111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::isValid()
func (q *QTextLine) IsValid() bool {
	var __rv bool
	q.Drv(163000, 163112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::leading()
func (q *QTextLine) Leading() float64 {
	var __rv float64
	q.Drv(163000, 163113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::leadingIncluded()
func (q *QTextLine) LeadingIncluded() bool {
	var __rv bool
	q.Drv(163000, 163114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::lineNumber()
func (q *QTextLine) LineNumber() int32 {
	var __rv int32
	q.Drv(163000, 163115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::naturalTextRect()
func (q *QTextLine) NaturalTextRect() *QRectF {
	var __rv uintptr
	q.Drv(163000, 163116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTextLine::naturalTextWidth()
func (q *QTextLine) NaturalTextWidth() float64 {
	var __rv float64
	q.Drv(163000, 163117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::position()
func (q *QTextLine) Position() *QPointF {
	var __rv uintptr
	q.Drv(163000, 163118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTextLine::rect()
func (q *QTextLine) Rect() *QRectF {
	var __rv uintptr
	q.Drv(163000, 163119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTextLine::setLeadingIncluded(bool)
func (q *QTextLine) SetLeadingIncluded(included bool) {
	q.Drv(163000, 163120, unsafe.Pointer(&included), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::setLineWidth(double)
func (q *QTextLine) SetLineWidth(width float64) {
	q.Drv(163000, 163121, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::setNumColumns(int)
func (q *QTextLine) SetNumColumns(columns int32) {
	q.Drv(163000, 163122, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::setNumColumns(int,double)
func (q *QTextLine) SetNumColumnsFWithColumnsAlignmentwidth(columns int32, alignmentWidth float64) {
	q.Drv(163000, 163123, unsafe.Pointer(&columns), unsafe.Pointer(&alignmentWidth), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::setPosition(QPointF const&)
func (q *QTextLine) SetPosition(pos *QPointF) {
	q.Drv(163000, 163124, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextLine::textLength()
func (q *QTextLine) TextLength() int32 {
	var __rv int32
	q.Drv(163000, 163125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::textStart()
func (q *QTextLine) TextStart() int32 {
	var __rv int32
	q.Drv(163000, 163126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::width()
func (q *QTextLine) Width() float64 {
	var __rv float64
	q.Drv(163000, 163127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::x()
func (q *QTextLine) X() float64 {
	var __rv float64
	q.Drv(163000, 163128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::xToCursor(double)
func (q *QTextLine) XToCursor(x float64) int32 {
	var __rv int32
	q.Drv(163000, 163129, unsafe.Pointer(&x), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::xToCursor(double,QTextLine::CursorPosition)
func (q *QTextLine) XToCursorFWithXCursorposition(x float64, value2 QTextLine_CursorPosition) int32 {
	var __rv int32
	q.Drv(163000, 163130, unsafe.Pointer(&x), unsafe.Pointer(&value2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextLine::y()
func (q *QTextLine) Y() float64 {
	var __rv float64
	q.Drv(163000, 163131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextListFormat_Style - QTextListFormat::Style
type QTextListFormat_Style int32

const (
	QTextListFormat_ListDisc           QTextListFormat_Style = -1
	QTextListFormat_ListCircle         QTextListFormat_Style = -2
	QTextListFormat_ListSquare         QTextListFormat_Style = -3
	QTextListFormat_ListDecimal        QTextListFormat_Style = -4
	QTextListFormat_ListLowerAlpha     QTextListFormat_Style = -5
	QTextListFormat_ListUpperAlpha     QTextListFormat_Style = -6
	QTextListFormat_ListLowerRoman     QTextListFormat_Style = -7
	QTextListFormat_ListUpperRoman     QTextListFormat_Style = -8
	QTextListFormat_ListStyleUndefined QTextListFormat_Style = 0
)

//struct QTextListFormat : QTextListFormat
type QTextListFormat struct {
	QTextFormat
}

//QTextListFormat::QTextListFormat()
func NewTextListFormat() *QTextListFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 164000, 164102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextListFormat{}
	_p.SetDriver(__rv, 164000, true)
	return _p
}

//QTextListFormat::indent()
func (q *QTextListFormat) Indent() int32 {
	var __rv int32
	q.Drv(164000, 164103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextListFormat::isValid()
func (q *QTextListFormat) IsValid() bool {
	var __rv bool
	q.Drv(164000, 164104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextListFormat::setIndent(int)
func (q *QTextListFormat) SetIndent(indent int32) {
	q.Drv(164000, 164105, unsafe.Pointer(&indent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextListFormat::setStyle(QTextListFormat::Style)
func (q *QTextListFormat) SetStyle(style QTextListFormat_Style) {
	q.Drv(164000, 164106, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextListFormat::style()
func (q *QTextListFormat) Style() QTextListFormat_Style {
	var __rv QTextListFormat_Style
	q.Drv(164000, 164107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextObjectInterface : QTextObjectInterface
type QTextObjectInterface struct {
	BaseDrv
}

//QTextObjectInterface::drawObject(QPainter*,QRectF const&,QTextDocument*,int,QTextFormat const&)
func (q *QTextObjectInterface) DrawObject(painter *QPainter, rect *QRectF, doc *QTextDocument, posInDocument int32, format *QTextFormat) {
	q.Drv(165000, 165102, Native(painter), Native(rect), Native(doc), unsafe.Pointer(&posInDocument), Native(format), nil, nil, nil, nil, nil, nil, nil)
}

//QTextObjectInterface::intrinsicSize(QTextDocument*,int,QTextFormat const&)
func (q *QTextObjectInterface) IntrinsicSize(doc *QTextDocument, posInDocument int32, format *QTextFormat) *QSizeF {
	var __rv uintptr
	q.Drv(165000, 165103, Native(doc), unsafe.Pointer(&posInDocument), Native(format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//enum QTextOption_TabType - QTextOption::TabType
type QTextOption_TabType uint32

const (
	QTextOption_LeftTab      QTextOption_TabType = 0
	QTextOption_RightTab     QTextOption_TabType = 1
	QTextOption_CenterTab    QTextOption_TabType = 2
	QTextOption_DelimiterTab QTextOption_TabType = 3
)

//enum QTextOption_Flag - QTextOption::Flag
type QTextOption_Flag uint32

const (
	QTextOption_ShowTabsAndSpaces                     QTextOption_Flag = 0x1
	QTextOption_ShowLineAndParagraphSeparators        QTextOption_Flag = 0x2
	QTextOption_AddSpaceForLineAndParagraphSeparators QTextOption_Flag = 0x4
	QTextOption_SuppressColors                        QTextOption_Flag = 0x8
	QTextOption_IncludeTrailingSpaces                 QTextOption_Flag = 0x80000000
)

//enum QTextOption_WrapMode - QTextOption::WrapMode
type QTextOption_WrapMode uint32

const (
	QTextOption_NoWrap                       QTextOption_WrapMode = 0
	QTextOption_WordWrap                     QTextOption_WrapMode = 1
	QTextOption_ManualWrap                   QTextOption_WrapMode = 2
	QTextOption_WrapAnywhere                 QTextOption_WrapMode = 3
	QTextOption_WrapAtWordBoundaryOrAnywhere QTextOption_WrapMode = 4
)

//struct QTextOption : QTextOption
type QTextOption struct {
	BaseDrv
}

//QTextOption::QTextOption()
func NewTextOption() *QTextOption {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 166000, 166102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextOption{}
	_p.SetDriver(__rv, 166000, true)
	return _p
}

//QTextOption::QTextOption(QFlags<Qt::AlignmentFlag>)
func NewTextOptionWithAlignment(alignment Qt_AlignmentFlag) *QTextOption {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 166000, 166103, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextOption{}
	_p.SetDriver(__rv, 166000, true)
	return _p
}

//QTextOption::QTextOption(QTextOption const&)
func NewTextOptionCopy(o *QTextOption) *QTextOption {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 166000, 166104, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextOption{}
	_p.SetDriver(__rv, 166000, true)
	return _p
}

//QTextOption::alignment()
func (q *QTextOption) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(166000, 166105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::flags()
func (q *QTextOption) Flags() QTextOption_Flag {
	var __rv QTextOption_Flag
	q.Drv(166000, 166106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QTextOption) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(166000, 166107, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setFlags(QFlags<QTextOption::Flag>)
func (q *QTextOption) SetFlags(flags QTextOption_Flag) {
	q.Drv(166000, 166108, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setTabArray(QList<qreal>)
func (q *QTextOption) SetTabArray(tabStops []float64) {
	_tabStops := NewCDoubleArrayHead(tabStops)
	defer FreeCDoubleArrayHead(_tabStops)
	q.Drv(166000, 166109, unsafe.Pointer(_tabStops), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setTabStop(double)
func (q *QTextOption) SetTabStop(tabStop float64) {
	q.Drv(166000, 166110, unsafe.Pointer(&tabStop), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setTabs(QList<QTextOption::Tab>)
func (q *QTextOption) SetTabs(tabStops []*QTextOptionTab) {
	_tabStops := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&tabStops)))
	defer FreeCNoObjectArrayHead(_tabStops)
	q.Drv(166000, 166111, unsafe.Pointer(_tabStops), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setTextDirection(Qt::LayoutDirection)
func (q *QTextOption) SetTextDirection(aDirection Qt_LayoutDirection) {
	q.Drv(166000, 166112, unsafe.Pointer(&aDirection), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setUseDesignMetrics(bool)
func (q *QTextOption) SetUseDesignMetrics(b bool) {
	q.Drv(166000, 166113, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::setWrapMode(QTextOption::WrapMode)
func (q *QTextOption) SetWrapMode(wrap QTextOption_WrapMode) {
	q.Drv(166000, 166114, unsafe.Pointer(&wrap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextOption::tabArray()
func (q *QTextOption) TabArray() []float64 {
	var __rv []float64
	q.Drv(166000, 166115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::tabStop()
func (q *QTextOption) TabStop() float64 {
	var __rv float64
	q.Drv(166000, 166116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::tabs()
func (q *QTextOption) Tabs() []*QTextOptionTab {
	var __rv []*QTextOptionTab
	q.Drv(166000, 166117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::textDirection()
func (q *QTextOption) TextDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(166000, 166118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::useDesignMetrics()
func (q *QTextOption) UseDesignMetrics() bool {
	var __rv bool
	q.Drv(166000, 166119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextOption::wrapMode()
func (q *QTextOption) WrapMode() QTextOption_WrapMode {
	var __rv QTextOption_WrapMode
	q.Drv(166000, 166120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextOptionTab : QTextOption::Tab
type QTextOptionTab struct {
	BaseDrv
}

//QTextOption::Tab::Tab()
func NewTextOptionTab() *QTextOptionTab {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 167000, 167102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextOptionTab{}
	_p.SetDriver(__rv, 167000, true)
	return _p
}

//QTextOption::Tab::Tab(double,QTextOption::TabType,QChar)
func NewTextOptionTabWithPosTabtypeDelim(pos float64, tabType QTextOption_TabType, delim rune) *QTextOptionTab {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 167000, 167103, unsafe.Pointer(&pos), unsafe.Pointer(&tabType), unsafe.Pointer(&delim), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextOptionTab{}
	_p.SetDriver(__rv, 167000, true)
	return _p
}

//struct QTextTableCell : QTextTableCell
type QTextTableCell struct {
	BaseDrv
}

//QTextTableCell::QTextTableCell()
func NewTextTableCell() *QTextTableCell {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 168000, 168102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextTableCell{}
	_p.SetDriver(__rv, 168000, true)
	return _p
}

//QTextTableCell::QTextTableCell(QTextTableCell const&)
func NewTextTableCellCopy(o *QTextTableCell) *QTextTableCell {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 168000, 168103, Native(o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextTableCell{}
	_p.SetDriver(__rv, 168000, true)
	return _p
}

//QTextTableCell::begin()
func (q *QTextTableCell) Begin() *QTextFrameiterator {
	var __rv uintptr
	q.Drv(168000, 168104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameiterator{}
	_rp.SetDriver(__rv, 155000, true)
	return _rp
}

//QTextTableCell::column()
func (q *QTextTableCell) Column() int32 {
	var __rv int32
	q.Drv(168000, 168105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::columnSpan()
func (q *QTextTableCell) ColumnSpan() int32 {
	var __rv int32
	q.Drv(168000, 168106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::end()
func (q *QTextTableCell) End() *QTextFrameiterator {
	var __rv uintptr
	q.Drv(168000, 168107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameiterator{}
	_rp.SetDriver(__rv, 155000, true)
	return _rp
}

//QTextTableCell::firstCursorPosition()
func (q *QTextTableCell) FirstCursorPosition() *QTextCursor {
	var __rv uintptr
	q.Drv(168000, 168108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextTableCell::firstPosition()
func (q *QTextTableCell) FirstPosition() int32 {
	var __rv int32
	q.Drv(168000, 168109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::format()
func (q *QTextTableCell) Format() *QTextCharFormat {
	var __rv uintptr
	q.Drv(168000, 168110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextTableCell::isValid()
func (q *QTextTableCell) IsValid() bool {
	var __rv bool
	q.Drv(168000, 168111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::lastCursorPosition()
func (q *QTextTableCell) LastCursorPosition() *QTextCursor {
	var __rv uintptr
	q.Drv(168000, 168112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextTableCell::lastPosition()
func (q *QTextTableCell) LastPosition() int32 {
	var __rv int32
	q.Drv(168000, 168113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::row()
func (q *QTextTableCell) Row() int32 {
	var __rv int32
	q.Drv(168000, 168114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::rowSpan()
func (q *QTextTableCell) RowSpan() int32 {
	var __rv int32
	q.Drv(168000, 168115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCell::setFormat(QTextCharFormat const&)
func (q *QTextTableCell) SetFormat(format *QTextCharFormat) {
	q.Drv(168000, 168116, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCell::tableCellFormatIndex()
func (q *QTextTableCell) TableCellFormatIndex() int32 {
	var __rv int32
	q.Drv(168000, 168117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextTableCellFormat : QTextTableCellFormat
type QTextTableCellFormat struct {
	QTextCharFormat
}

//QTextTableCellFormat::QTextTableCellFormat()
func NewTextTableCellFormat() *QTextTableCellFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 169000, 169102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextTableCellFormat{}
	_p.SetDriver(__rv, 169000, true)
	return _p
}

//QTextTableCellFormat::bottomPadding()
func (q *QTextTableCellFormat) BottomPadding() float64 {
	var __rv float64
	q.Drv(169000, 169103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCellFormat::isValid()
func (q *QTextTableCellFormat) IsValid() bool {
	var __rv bool
	q.Drv(169000, 169104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCellFormat::leftPadding()
func (q *QTextTableCellFormat) LeftPadding() float64 {
	var __rv float64
	q.Drv(169000, 169105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCellFormat::rightPadding()
func (q *QTextTableCellFormat) RightPadding() float64 {
	var __rv float64
	q.Drv(169000, 169106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableCellFormat::setBottomPadding(double)
func (q *QTextTableCellFormat) SetBottomPadding(padding float64) {
	q.Drv(169000, 169107, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCellFormat::setLeftPadding(double)
func (q *QTextTableCellFormat) SetLeftPadding(padding float64) {
	q.Drv(169000, 169108, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCellFormat::setPadding(double)
func (q *QTextTableCellFormat) SetPadding(padding float64) {
	q.Drv(169000, 169109, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCellFormat::setRightPadding(double)
func (q *QTextTableCellFormat) SetRightPadding(padding float64) {
	q.Drv(169000, 169110, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCellFormat::setTopPadding(double)
func (q *QTextTableCellFormat) SetTopPadding(padding float64) {
	q.Drv(169000, 169111, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableCellFormat::topPadding()
func (q *QTextTableCellFormat) TopPadding() float64 {
	var __rv float64
	q.Drv(169000, 169112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTextTableFormat : QTextTableFormat
type QTextTableFormat struct {
	QTextFrameFormat
}

//QTextTableFormat::QTextTableFormat()
func NewTextTableFormat() *QTextTableFormat {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 170000, 170102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextTableFormat{}
	_p.SetDriver(__rv, 170000, true)
	return _p
}

//QTextTableFormat::alignment()
func (q *QTextTableFormat) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(170000, 170103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::cellPadding()
func (q *QTextTableFormat) CellPadding() float64 {
	var __rv float64
	q.Drv(170000, 170104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::cellSpacing()
func (q *QTextTableFormat) CellSpacing() float64 {
	var __rv float64
	q.Drv(170000, 170105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::clearColumnWidthConstraints()
func (q *QTextTableFormat) ClearColumnWidthConstraints() {
	q.Drv(170000, 170106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::columnWidthConstraints()
func (q *QTextTableFormat) ColumnWidthConstraints() []*QTextLength {
	var __rv []*QTextLength
	q.Drv(170000, 170107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::columns()
func (q *QTextTableFormat) Columns() int32 {
	var __rv int32
	q.Drv(170000, 170108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::headerRowCount()
func (q *QTextTableFormat) HeaderRowCount() int32 {
	var __rv int32
	q.Drv(170000, 170109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::isValid()
func (q *QTextTableFormat) IsValid() bool {
	var __rv bool
	q.Drv(170000, 170110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTableFormat::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QTextTableFormat) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(170000, 170111, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::setCellPadding(double)
func (q *QTextTableFormat) SetCellPadding(padding float64) {
	q.Drv(170000, 170112, unsafe.Pointer(&padding), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::setCellSpacing(double)
func (q *QTextTableFormat) SetCellSpacing(spacing float64) {
	q.Drv(170000, 170113, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::setColumnWidthConstraints(QVector<QTextLength> const&)
func (q *QTextTableFormat) SetColumnWidthConstraints(constraints []*QTextLength) {
	q.Drv(170000, 170114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::setColumns(int)
func (q *QTextTableFormat) SetColumns(columns int32) {
	q.Drv(170000, 170115, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTableFormat::setHeaderRowCount(int)
func (q *QTextTableFormat) SetHeaderRowCount(count int32) {
	q.Drv(170000, 170116, unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTileRules : QTileRules
type QTileRules struct {
	BaseDrv
}

//QTileRules::QTileRules()
func NewTileRules() *QTileRules {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 171000, 171102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTileRules{}
	_p.SetDriver(__rv, 171000, true)
	return _p
}

//QTileRules::QTileRules(Qt::TileRule)
func NewTileRulesWithRule(rule Qt_TileRule) *QTileRules {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 171000, 171103, unsafe.Pointer(&rule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTileRules{}
	_p.SetDriver(__rv, 171000, true)
	return _p
}

//QTileRules::QTileRules(Qt::TileRule,Qt::TileRule)
func NewTileRulesWithHorizontalruleVerticalrule(horizontalRule Qt_TileRule, verticalRule Qt_TileRule) *QTileRules {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 171000, 171104, unsafe.Pointer(&horizontalRule), unsafe.Pointer(&verticalRule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTileRules{}
	_p.SetDriver(__rv, 171000, true)
	return _p
}

//enum QTime_TimeFlag - QTime::TimeFlag
type QTime_TimeFlag int32

const (
	QTime_NullTime QTime_TimeFlag = -1
)

//struct QTime : QTime
type QTime struct {
	BaseDrv
}

//QTime::QTime()
func NewTime() *QTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 172000, 172102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTime{}
	_p.SetDriver(__rv, 172000, true)
	return _p
}

//QTime::QTime(QTime const&)
func NewTimeCopy(other *QTime) *QTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 172000, 172103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTime{}
	_p.SetDriver(__rv, 172000, true)
	return _p
}

//QTime::QTime(int,int,int,int)
func NewTimeWithHeightInt32Int32Ms(h int32, m int32, s int32, ms int32) *QTime {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 172000, 172104, unsafe.Pointer(&h), unsafe.Pointer(&m), unsafe.Pointer(&s), unsafe.Pointer(&ms), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTime{}
	_p.SetDriver(__rv, 172000, true)
	return _p
}

//QTime::addMSecs(int)
func (q *QTime) AddMSecs(ms int32) *QTime {
	var __rv uintptr
	q.Drv(172000, 172105, unsafe.Pointer(&ms), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::addSecs(int)
func (q *QTime) AddSecs(secs int32) *QTime {
	var __rv uintptr
	q.Drv(172000, 172106, unsafe.Pointer(&secs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::currentTime()
func QTimeCurrentTime() *QTime {
	var __rv uintptr
	DirectQtDrv(nil, 172000, 172107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::currentTime()
func (q *QTime) CurrentTime() *QTime {
	var __rv uintptr
	q.Drv(172000, 172107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::elapsed()
func (q *QTime) Elapsed() int32 {
	var __rv int32
	q.Drv(172000, 172108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::fromString(QString const&)
func QTimeFromString(s string) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 172000, 172109, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::fromString(QString const&)
func (q *QTime) FromString(s string) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(172000, 172109, unsafe.Pointer(_s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::fromString(QString const&,QString const&)
func QTimeFromStringWithTextFormat(s string, format string) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	DirectQtDrv(nil, 172000, 172110, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::fromString(QString const&,QString const&)
func (q *QTime) FromStringWithTextFormat(s string, format string) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv uintptr
	q.Drv(172000, 172110, unsafe.Pointer(_s), unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::fromString(QString const&,Qt::DateFormat)
func QTimeFromStringWithTextDateformat(s string, f Qt_DateFormat) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	DirectQtDrv(nil, 172000, 172111, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::fromString(QString const&,Qt::DateFormat)
func (q *QTime) FromStringWithTextDateformat(s string, f Qt_DateFormat) *QTime {
	_s := NewCStringHead(s)
	defer FreeCStringHead(_s)
	var __rv uintptr
	q.Drv(172000, 172111, unsafe.Pointer(_s), unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QTime::hour()
func (q *QTime) Hour() int32 {
	var __rv int32
	q.Drv(172000, 172112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::isNull()
func (q *QTime) IsNull() bool {
	var __rv bool
	q.Drv(172000, 172113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::isValid()
func (q *QTime) IsValid() bool {
	var __rv bool
	q.Drv(172000, 172114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::isValid(int,int,int,int)
func QTimeIsValidWithHeightInt32Int32Ms(h int32, m int32, s int32, ms int32) bool {
	var __rv bool
	DirectQtDrv(nil, 172000, 172115, unsafe.Pointer(&h), unsafe.Pointer(&m), unsafe.Pointer(&s), unsafe.Pointer(&ms), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::isValid(int,int,int,int)
func (q *QTime) IsValidWithHeightInt32Int32Ms(h int32, m int32, s int32, ms int32) bool {
	var __rv bool
	q.Drv(172000, 172115, unsafe.Pointer(&h), unsafe.Pointer(&m), unsafe.Pointer(&s), unsafe.Pointer(&ms), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::minute()
func (q *QTime) Minute() int32 {
	var __rv int32
	q.Drv(172000, 172116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::msec()
func (q *QTime) Msec() int32 {
	var __rv int32
	q.Drv(172000, 172117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::msecsTo(QTime const&)
func (q *QTime) MsecsTo(value *QTime) int32 {
	var __rv int32
	q.Drv(172000, 172118, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::restart()
func (q *QTime) Restart() int32 {
	var __rv int32
	q.Drv(172000, 172119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::second()
func (q *QTime) Second() int32 {
	var __rv int32
	q.Drv(172000, 172120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::secsTo(QTime const&)
func (q *QTime) SecsTo(value *QTime) int32 {
	var __rv int32
	q.Drv(172000, 172121, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::setHMS(int,int,int,int)
func (q *QTime) SetHMS(h int32, m int32, s int32, ms int32) bool {
	var __rv bool
	q.Drv(172000, 172122, unsafe.Pointer(&h), unsafe.Pointer(&m), unsafe.Pointer(&s), unsafe.Pointer(&ms), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTime::start()
func (q *QTime) Start() {
	q.Drv(172000, 172123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTime::toString()
func (q *QTime) ToString() string {
	var __rv C.string_head
	q.Drv(172000, 172124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTime::toString(QString const&)
func (q *QTime) ToStringWithFormat(format string) string {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	var __rv C.string_head
	q.Drv(172000, 172125, unsafe.Pointer(_format), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTime::toString(Qt::DateFormat)
func (q *QTime) ToStringWithDateformat(f Qt_DateFormat) string {
	var __rv C.string_head
	q.Drv(172000, 172126, unsafe.Pointer(&f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTimerEvent : QTimerEvent
type QTimerEvent struct {
	QEvent
}

//QTimerEvent::QTimerEvent(int)
func NewTimerEvent(timerId int32) *QTimerEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 173000, 173102, unsafe.Pointer(&timerId), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimerEvent{}
	_p.SetDriver(__rv, 173000, true)
	return _p
}

//QTimerEvent::timerId()
func (q *QTimerEvent) TimerId() int32 {
	var __rv int32
	q.Drv(173000, 173103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QToolBarChangeEvent : QToolBarChangeEvent
type QToolBarChangeEvent struct {
	QEvent
}

//QToolBarChangeEvent::QToolBarChangeEvent(bool)
func NewToolBarChangeEvent(t bool) *QToolBarChangeEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 174000, 174102, unsafe.Pointer(&t), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBarChangeEvent{}
	_p.SetDriver(__rv, 174000, true)
	return _p
}

//QToolBarChangeEvent::toggle()
func (q *QToolBarChangeEvent) Toggle() bool {
	var __rv bool
	q.Drv(174000, 174103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QToolTip : QToolTip
type QToolTip struct {
	BaseDrv
}

//QToolTip::font()
func QToolTipFont() *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 175000, 175102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QToolTip::font()
func (q *QToolTip) Font() *QFont {
	var __rv uintptr
	q.Drv(175000, 175102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QToolTip::hideText()
func QToolTipHideText() {
	DirectQtDrv(nil, 175000, 175103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::hideText()
func (q *QToolTip) HideText() {
	q.Drv(175000, 175103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::isVisible()
func QToolTipIsVisible() bool {
	var __rv bool
	DirectQtDrv(nil, 175000, 175104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolTip::isVisible()
func (q *QToolTip) IsVisible() bool {
	var __rv bool
	q.Drv(175000, 175104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolTip::palette()
func QToolTipPalette() *QPalette {
	var __rv uintptr
	DirectQtDrv(nil, 175000, 175105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QToolTip::palette()
func (q *QToolTip) Palette() *QPalette {
	var __rv uintptr
	q.Drv(175000, 175105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QToolTip::setFont(QFont const&)
func QToolTipSetFont(value *QFont) {
	DirectQtDrv(nil, 175000, 175106, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::setFont(QFont const&)
func (q *QToolTip) SetFont(value *QFont) {
	q.Drv(175000, 175106, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::setPalette(QPalette const&)
func QToolTipSetPalette(value *QPalette) {
	DirectQtDrv(nil, 175000, 175107, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::setPalette(QPalette const&)
func (q *QToolTip) SetPalette(value *QPalette) {
	q.Drv(175000, 175107, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::showText(QPoint const&,QString const&,QWidget*)
func QToolTipShowTextWithPosTextWidget(pos *QPoint, text string, w QWidgetInterface) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	DirectQtDrv(nil, 175000, 175108, Native(pos), unsafe.Pointer(_text), Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::showText(QPoint const&,QString const&,QWidget*)
func (q *QToolTip) ShowTextWithPosTextWidget(pos *QPoint, text string, w QWidgetInterface) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(175000, 175108, Native(pos), unsafe.Pointer(_text), Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::showText(QPoint const&,QString const&,QWidget*,QRect const&)
func QToolTipShowTextWithPosTextWidgetRect(pos *QPoint, text string, w QWidgetInterface, rect *QRect) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	DirectQtDrv(nil, 175000, 175109, Native(pos), unsafe.Pointer(_text), Native(w), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::showText(QPoint const&,QString const&,QWidget*,QRect const&)
func (q *QToolTip) ShowTextWithPosTextWidgetRect(pos *QPoint, text string, w QWidgetInterface, rect *QRect) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(175000, 175109, Native(pos), unsafe.Pointer(_text), Native(w), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolTip::text()
func QToolTipText() string {
	var __rv C.string_head
	DirectQtDrv(nil, 175000, 175110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QToolTip::text()
func (q *QToolTip) Text() string {
	var __rv C.string_head
	q.Drv(175000, 175110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QTouchEvent_DeviceType - QTouchEvent::DeviceType
type QTouchEvent_DeviceType uint32

const (
	QTouchEvent_TouchScreen QTouchEvent_DeviceType = 0
	QTouchEvent_TouchPad    QTouchEvent_DeviceType = 1
)

//struct QTouchEvent : QTouchEvent
type QTouchEvent struct {
	QInputEvent
}

//QTouchEvent::setTouchPointStates(QFlags<Qt::TouchPointState>)
func (q *QTouchEvent) SetTouchPointStates(aTouchPointStates Qt_TouchPointState) {
	q.Drv(176000, 176102, unsafe.Pointer(&aTouchPointStates), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::setTouchPoints(QList<QTouchEvent::TouchPoint> const&)
func (q *QTouchEvent) SetTouchPoints(atouchPoints []*QTouchEventTouchPoint) {
	_atouchPoints := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&atouchPoints)))
	defer FreeCNoObjectArrayHead(_atouchPoints)
	q.Drv(176000, 176103, unsafe.Pointer(_atouchPoints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::touchPointStates()
func (q *QTouchEvent) TouchPointStates() Qt_TouchPointState {
	var __rv Qt_TouchPointState
	q.Drv(176000, 176104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTouchEvent::touchPoints()
func (q *QTouchEvent) TouchPoints() []*QTouchEventTouchPoint {
	var __rv []*QTouchEventTouchPoint
	q.Drv(176000, 176105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTouchEventTouchPoint : QTouchEvent::TouchPoint
type QTouchEventTouchPoint struct {
	BaseDrv
}

//QTouchEvent::TouchPoint::TouchPoint()
func NewTouchEventTouchPoint() *QTouchEventTouchPoint {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 177000, 177102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTouchEventTouchPoint{}
	_p.SetDriver(__rv, 177000, true)
	return _p
}

//QTouchEvent::TouchPoint::TouchPoint(QTouchEvent::TouchPoint const&)
func NewTouchEventTouchPointCopy(other *QTouchEventTouchPoint) *QTouchEventTouchPoint {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 177000, 177103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTouchEventTouchPoint{}
	_p.SetDriver(__rv, 177000, true)
	return _p
}

//QTouchEvent::TouchPoint::TouchPoint(int)
func NewTouchEventTouchPointWithId(id int32) *QTouchEventTouchPoint {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 177000, 177104, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTouchEventTouchPoint{}
	_p.SetDriver(__rv, 177000, true)
	return _p
}

//QTouchEvent::TouchPoint::id()
func (q *QTouchEventTouchPoint) Id() int32 {
	var __rv int32
	q.Drv(177000, 177105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTouchEvent::TouchPoint::lastNormalizedPos()
func (q *QTouchEventTouchPoint) LastNormalizedPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::lastPos()
func (q *QTouchEventTouchPoint) LastPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::lastScenePos()
func (q *QTouchEventTouchPoint) LastScenePos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::lastScreenPos()
func (q *QTouchEventTouchPoint) LastScreenPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::normalizedPos()
func (q *QTouchEventTouchPoint) NormalizedPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::pos()
func (q *QTouchEventTouchPoint) Pos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::pressure()
func (q *QTouchEventTouchPoint) Pressure() float64 {
	var __rv float64
	q.Drv(177000, 177112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTouchEvent::TouchPoint::rect()
func (q *QTouchEventTouchPoint) Rect() *QRectF {
	var __rv uintptr
	q.Drv(177000, 177113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTouchEvent::TouchPoint::scenePos()
func (q *QTouchEventTouchPoint) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::sceneRect()
func (q *QTouchEventTouchPoint) SceneRect() *QRectF {
	var __rv uintptr
	q.Drv(177000, 177115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTouchEvent::TouchPoint::screenPos()
func (q *QTouchEventTouchPoint) ScreenPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::screenRect()
func (q *QTouchEventTouchPoint) ScreenRect() *QRectF {
	var __rv uintptr
	q.Drv(177000, 177117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTouchEvent::TouchPoint::setId(int)
func (q *QTouchEventTouchPoint) SetId(id int32) {
	q.Drv(177000, 177118, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setLastNormalizedPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetLastNormalizedPos(lastNormalizedPos *QPointF) {
	q.Drv(177000, 177119, Native(lastNormalizedPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setLastPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetLastPos(lastPos *QPointF) {
	q.Drv(177000, 177120, Native(lastPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setLastScenePos(QPointF const&)
func (q *QTouchEventTouchPoint) SetLastScenePos(lastScenePos *QPointF) {
	q.Drv(177000, 177121, Native(lastScenePos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setLastScreenPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetLastScreenPos(lastScreenPos *QPointF) {
	q.Drv(177000, 177122, Native(lastScreenPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setNormalizedPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetNormalizedPos(normalizedPos *QPointF) {
	q.Drv(177000, 177123, Native(normalizedPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetPos(pos *QPointF) {
	q.Drv(177000, 177124, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setPressure(double)
func (q *QTouchEventTouchPoint) SetPressure(pressure float64) {
	q.Drv(177000, 177125, unsafe.Pointer(&pressure), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setRect(QRectF const&)
func (q *QTouchEventTouchPoint) SetRect(rect *QRectF) {
	q.Drv(177000, 177126, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setScenePos(QPointF const&)
func (q *QTouchEventTouchPoint) SetScenePos(scenePos *QPointF) {
	q.Drv(177000, 177127, Native(scenePos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setSceneRect(QRectF const&)
func (q *QTouchEventTouchPoint) SetSceneRect(sceneRect *QRectF) {
	q.Drv(177000, 177128, Native(sceneRect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setScreenPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetScreenPos(screenPos *QPointF) {
	q.Drv(177000, 177129, Native(screenPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setScreenRect(QRectF const&)
func (q *QTouchEventTouchPoint) SetScreenRect(screenRect *QRectF) {
	q.Drv(177000, 177130, Native(screenRect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setStartNormalizedPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetStartNormalizedPos(startNormalizedPos *QPointF) {
	q.Drv(177000, 177131, Native(startNormalizedPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setStartPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetStartPos(startPos *QPointF) {
	q.Drv(177000, 177132, Native(startPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setStartScenePos(QPointF const&)
func (q *QTouchEventTouchPoint) SetStartScenePos(startScenePos *QPointF) {
	q.Drv(177000, 177133, Native(startScenePos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setStartScreenPos(QPointF const&)
func (q *QTouchEventTouchPoint) SetStartScreenPos(startScreenPos *QPointF) {
	q.Drv(177000, 177134, Native(startScreenPos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::setState(QFlags<Qt::TouchPointState>)
func (q *QTouchEventTouchPoint) SetState(state Qt_TouchPointState) {
	q.Drv(177000, 177135, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTouchEvent::TouchPoint::startNormalizedPos()
func (q *QTouchEventTouchPoint) StartNormalizedPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::startPos()
func (q *QTouchEventTouchPoint) StartPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::startScenePos()
func (q *QTouchEventTouchPoint) StartScenePos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::startScreenPos()
func (q *QTouchEventTouchPoint) StartScreenPos() *QPointF {
	var __rv uintptr
	q.Drv(177000, 177139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTouchEvent::TouchPoint::state()
func (q *QTouchEventTouchPoint) State() Qt_TouchPointState {
	var __rv Qt_TouchPointState
	q.Drv(177000, 177140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTransform_TransformationType - QTransform::TransformationType
type QTransform_TransformationType uint32

const (
	QTransform_TxNone      QTransform_TransformationType = 0x00
	QTransform_TxTranslate QTransform_TransformationType = 0x01
	QTransform_TxScale     QTransform_TransformationType = 0x02
	QTransform_TxRotate    QTransform_TransformationType = 0x04
	QTransform_TxShear     QTransform_TransformationType = 0x08
	QTransform_TxProject   QTransform_TransformationType = 0x10
)

//struct QTransform : QTransform
type QTransform struct {
	BaseDrv
}

//QTransform::QTransform()
func NewTransform() *QTransform {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 178000, 178102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTransform{}
	_p.SetDriver(__rv, 178000, true)
	return _p
}

//QTransform::QTransform(QMatrix const&)
func NewTransformWithMtx(mtx *QMatrix) *QTransform {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 178000, 178103, Native(mtx), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTransform{}
	_p.SetDriver(__rv, 178000, true)
	return _p
}

//QTransform::QTransform(Qt::Initialization)
func NewTransformWithInitialization(value Qt_Initialization) *QTransform {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 178000, 178104, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTransform{}
	_p.SetDriver(__rv, 178000, true)
	return _p
}

//QTransform::QTransform(double,double,double,double,double,double)
func NewTransformWithH11H12H21H22DxDy(h11 float64, h12 float64, h21 float64, h22 float64, dx float64, dy float64) *QTransform {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 178000, 178105, unsafe.Pointer(&h11), unsafe.Pointer(&h12), unsafe.Pointer(&h21), unsafe.Pointer(&h22), unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTransform{}
	_p.SetDriver(__rv, 178000, true)
	return _p
}

//QTransform::QTransform(double,double,double,double,double,double,double,double,double)
func NewTransformWithH11H12H13H21H22H23H31H32H33(h11 float64, h12 float64, h13 float64, h21 float64, h22 float64, h23 float64, h31 float64, h32 float64, h33 float64) *QTransform {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 178000, 178106, unsafe.Pointer(&h11), unsafe.Pointer(&h12), unsafe.Pointer(&h13), unsafe.Pointer(&h21), unsafe.Pointer(&h22), unsafe.Pointer(&h23), unsafe.Pointer(&h31), unsafe.Pointer(&h32), unsafe.Pointer(&h33), nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTransform{}
	_p.SetDriver(__rv, 178000, true)
	return _p
}

//QTransform::adjoint()
func (q *QTransform) Adjoint() *QTransform {
	var __rv uintptr
	q.Drv(178000, 178107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::determinant()
func (q *QTransform) Determinant() float64 {
	var __rv float64
	q.Drv(178000, 178108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::dx()
func (q *QTransform) Dx() float64 {
	var __rv float64
	q.Drv(178000, 178109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::dy()
func (q *QTransform) Dy() float64 {
	var __rv float64
	q.Drv(178000, 178110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::fromScale(double,double)
func QTransformFromScale(dx float64, dy float64) *QTransform {
	var __rv uintptr
	DirectQtDrv(nil, 178000, 178111, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::fromScale(double,double)
func (q *QTransform) FromScale(dx float64, dy float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178111, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::fromTranslate(double,double)
func QTransformFromTranslate(dx float64, dy float64) *QTransform {
	var __rv uintptr
	DirectQtDrv(nil, 178000, 178112, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::fromTranslate(double,double)
func (q *QTransform) FromTranslate(dx float64, dy float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178112, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::inverted(bool*)
func (q *QTransform) Inverted(invertible *bool) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178113, unsafe.Pointer(&invertible), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::isAffine()
func (q *QTransform) IsAffine() bool {
	var __rv bool
	q.Drv(178000, 178114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::isIdentity()
func (q *QTransform) IsIdentity() bool {
	var __rv bool
	q.Drv(178000, 178115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::isInvertible()
func (q *QTransform) IsInvertible() bool {
	var __rv bool
	q.Drv(178000, 178116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::isRotating()
func (q *QTransform) IsRotating() bool {
	var __rv bool
	q.Drv(178000, 178117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::isScaling()
func (q *QTransform) IsScaling() bool {
	var __rv bool
	q.Drv(178000, 178118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::isTranslating()
func (q *QTransform) IsTranslating() bool {
	var __rv bool
	q.Drv(178000, 178119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m11()
func (q *QTransform) M11() float64 {
	var __rv float64
	q.Drv(178000, 178120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m12()
func (q *QTransform) M12() float64 {
	var __rv float64
	q.Drv(178000, 178121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m13()
func (q *QTransform) M13() float64 {
	var __rv float64
	q.Drv(178000, 178122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m21()
func (q *QTransform) M21() float64 {
	var __rv float64
	q.Drv(178000, 178123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m22()
func (q *QTransform) M22() float64 {
	var __rv float64
	q.Drv(178000, 178124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m23()
func (q *QTransform) M23() float64 {
	var __rv float64
	q.Drv(178000, 178125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m31()
func (q *QTransform) M31() float64 {
	var __rv float64
	q.Drv(178000, 178126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m32()
func (q *QTransform) M32() float64 {
	var __rv float64
	q.Drv(178000, 178127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::m33()
func (q *QTransform) M33() float64 {
	var __rv float64
	q.Drv(178000, 178128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::map(QLine const&)
func (q *QTransform) Map(l *QLine) *QLine {
	var __rv uintptr
	q.Drv(178000, 178129, Native(l), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLine{}
	_rp.SetDriver(__rv, 69000, true)
	return _rp
}

//QTransform::map(QLineF const&)
func (q *QTransform) MapFWithLinef(l *QLineF) *QLineF {
	var __rv uintptr
	q.Drv(178000, 178130, Native(l), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QTransform::map(QPainterPath const&)
func (q *QTransform) MapWithPainterpath(p *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(178000, 178131, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QTransform::map(QPoint const&)
func (q *QTransform) MapWithPoint(p *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(178000, 178132, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QTransform::map(QPointF const&)
func (q *QTransform) MapFWithPointf(p *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(178000, 178133, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTransform::map(QPolygon const&)
func (q *QTransform) MapWithPolygon(a *QPolygon) *QPolygon {
	var __rv uintptr
	q.Drv(178000, 178134, Native(a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QTransform::map(QPolygonF const&)
func (q *QTransform) MapFWithPolygonf(a *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(178000, 178135, Native(a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QTransform::map(QRegion const&)
func (q *QTransform) MapWithRegion(r *QRegion) *QRegion {
	var __rv uintptr
	q.Drv(178000, 178136, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QTransform::map(double,double,double*,double*)
func (q *QTransform) MapFWithXYTxTy(x float64, y float64, tx *float64, ty *float64) {
	q.Drv(178000, 178137, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&tx), unsafe.Pointer(&ty), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTransform::map(int,int,int*,int*)
func (q *QTransform) MapWithXYTxTy(x int32, y int32, tx *int32, ty *int32) {
	q.Drv(178000, 178138, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&tx), unsafe.Pointer(&ty), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTransform::mapRect(QRect const&)
func (q *QTransform) MapRect(value *QRect) *QRect {
	var __rv uintptr
	q.Drv(178000, 178139, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QTransform::mapRect(QRectF const&)
func (q *QTransform) MapRectFWithRectf(value *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(178000, 178140, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QTransform::mapToPolygon(QRect const&)
func (q *QTransform) MapToPolygon(r *QRect) *QPolygon {
	var __rv uintptr
	q.Drv(178000, 178141, Native(r), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QTransform::quadToQuad(QPolygonF const&,QPolygonF const&,QTransform&)
func QTransformQuadToQuad(one *QPolygonF, two *QPolygonF, result *QTransform) bool {
	var __rv bool
	DirectQtDrv(nil, 178000, 178142, Native(one), Native(two), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::quadToQuad(QPolygonF const&,QPolygonF const&,QTransform&)
func (q *QTransform) QuadToQuad(one *QPolygonF, two *QPolygonF, result *QTransform) bool {
	var __rv bool
	q.Drv(178000, 178142, Native(one), Native(two), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::quadToSquare(QPolygonF const&,QTransform&)
func QTransformQuadToSquare(quad *QPolygonF, result *QTransform) bool {
	var __rv bool
	DirectQtDrv(nil, 178000, 178143, Native(quad), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::quadToSquare(QPolygonF const&,QTransform&)
func (q *QTransform) QuadToSquare(quad *QPolygonF, result *QTransform) bool {
	var __rv bool
	q.Drv(178000, 178143, Native(quad), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::reset()
func (q *QTransform) Reset() {
	q.Drv(178000, 178144, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTransform::rotate(double)
func (q *QTransform) Rotate(a float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178145, unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::rotate(double,Qt::Axis)
func (q *QTransform) RotateFWithFloat64Axis(a float64, axis Qt_Axis) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178146, unsafe.Pointer(&a), unsafe.Pointer(&axis), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::rotateRadians(double)
func (q *QTransform) RotateRadians(a float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178147, unsafe.Pointer(&a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::rotateRadians(double,Qt::Axis)
func (q *QTransform) RotateRadiansFWithFloat64Axis(a float64, axis Qt_Axis) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178148, unsafe.Pointer(&a), unsafe.Pointer(&axis), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::scale(double,double)
func (q *QTransform) Scale(sx float64, sy float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178149, unsafe.Pointer(&sx), unsafe.Pointer(&sy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::setMatrix(double,double,double,double,double,double,double,double,double)
func (q *QTransform) SetMatrix(m11 float64, m12 float64, m13 float64, m21 float64, m22 float64, m23 float64, m31 float64, m32 float64, m33 float64) {
	q.Drv(178000, 178150, unsafe.Pointer(&m11), unsafe.Pointer(&m12), unsafe.Pointer(&m13), unsafe.Pointer(&m21), unsafe.Pointer(&m22), unsafe.Pointer(&m23), unsafe.Pointer(&m31), unsafe.Pointer(&m32), unsafe.Pointer(&m33), nil, nil, nil)
}

//QTransform::shear(double,double)
func (q *QTransform) Shear(sh float64, sv float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178151, unsafe.Pointer(&sh), unsafe.Pointer(&sv), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::squareToQuad(QPolygonF const&,QTransform&)
func QTransformSquareToQuad(square *QPolygonF, result *QTransform) bool {
	var __rv bool
	DirectQtDrv(nil, 178000, 178152, Native(square), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::squareToQuad(QPolygonF const&,QTransform&)
func (q *QTransform) SquareToQuad(square *QPolygonF, result *QTransform) bool {
	var __rv bool
	q.Drv(178000, 178152, Native(square), Native(result), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTransform::toAffine()
func (q *QTransform) ToAffine() *QMatrix {
	var __rv uintptr
	q.Drv(178000, 178153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QTransform::translate(double,double)
func (q *QTransform) Translate(dx float64, dy float64) *QTransform {
	var __rv uintptr
	q.Drv(178000, 178154, unsafe.Pointer(&dx), unsafe.Pointer(&dy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::transposed()
func (q *QTransform) Transposed() *QTransform {
	var __rv uintptr
	q.Drv(178000, 178155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QTransform::type()
func (q *QTransform) Type() QTransform_TransformationType {
	var __rv QTransform_TransformationType
	q.Drv(178000, 178156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTreeWidgetItem_ItemType - QTreeWidgetItem::ItemType
type QTreeWidgetItem_ItemType uint32

const (
	QTreeWidgetItem_Type     QTreeWidgetItem_ItemType = 0
	QTreeWidgetItem_UserType QTreeWidgetItem_ItemType = 1000
)

//enum QTreeWidgetItem_ChildIndicatorPolicy - QTreeWidgetItem::ChildIndicatorPolicy
type QTreeWidgetItem_ChildIndicatorPolicy uint32

const (
	QTreeWidgetItem_ShowIndicator                  QTreeWidgetItem_ChildIndicatorPolicy = 0
	QTreeWidgetItem_DontShowIndicator              QTreeWidgetItem_ChildIndicatorPolicy = 1
	QTreeWidgetItem_DontShowIndicatorWhenChildless QTreeWidgetItem_ChildIndicatorPolicy = 2
)

//struct QTreeWidgetItem : QTreeWidgetItem
type QTreeWidgetItem struct {
	BaseDrv
}

//QTreeWidgetItem::QTreeWidgetItem()
func NewTreeWidgetItem() *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem const&)
func NewTreeWidgetItemCopy(other *QTreeWidgetItem) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179103, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(int)
func NewTreeWidgetItemWithType(_type int32) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179104, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QStringList const&,int)
func NewTreeWidgetItemWithStringsType(strings []string, _type int32) *QTreeWidgetItem {
	_strings, _strings_size := NewCSArray(strings)
	defer FreeCSArray(_strings, _strings_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179105, unsafe.Pointer(&_strings[0]), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidget*,int)
func NewTreeWidgetItemWithViewType(view *QTreeWidget, _type int32) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179106, Native(view), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem*,int)
func NewTreeWidgetItemWithParentType(parent *QTreeWidgetItem, _type int32) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179107, Native(parent), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidget*,QStringList const&,int)
func NewTreeWidgetItemWithViewStringsType(view *QTreeWidget, strings []string, _type int32) *QTreeWidgetItem {
	_strings, _strings_size := NewCSArray(strings)
	defer FreeCSArray(_strings, _strings_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179108, Native(view), unsafe.Pointer(&_strings[0]), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidget*,QTreeWidgetItem*,int)
func NewTreeWidgetItemWithViewAfterType(view *QTreeWidget, after *QTreeWidgetItem, _type int32) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179109, Native(view), Native(after), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem*,QStringList const&,int)
func NewTreeWidgetItemWithParentStringsType(parent *QTreeWidgetItem, strings []string, _type int32) *QTreeWidgetItem {
	_strings, _strings_size := NewCSArray(strings)
	defer FreeCSArray(_strings, _strings_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179110, Native(parent), unsafe.Pointer(&_strings[0]), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::QTreeWidgetItem(QTreeWidgetItem*,QTreeWidgetItem*,int)
func NewTreeWidgetItemWithParentAfterType(parent *QTreeWidgetItem, after *QTreeWidgetItem, _type int32) *QTreeWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 179000, 179111, Native(parent), Native(after), unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItem{}
	_p.SetDriver(__rv, 179000, true)
	return _p
}

//QTreeWidgetItem::addChild(QTreeWidgetItem*)
func (q *QTreeWidgetItem) AddChild(child *QTreeWidgetItem) {
	q.Drv(179000, 179112, Native(child), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::addChildren(QList<QTreeWidgetItem*> const&)
func (q *QTreeWidgetItem) AddChildren(children []*QTreeWidgetItem) {
	_children := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&children)))
	defer FreeCObjectArrayHead(_children)
	q.Drv(179000, 179113, unsafe.Pointer(_children), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::background(int)
func (q *QTreeWidgetItem) Background(column int32) *QBrush {
	var __rv uintptr
	q.Drv(179000, 179114, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTreeWidgetItem::backgroundColor(int)
func (q *QTreeWidgetItem) BackgroundColor(column int32) *QColor {
	var __rv uintptr
	q.Drv(179000, 179115, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTreeWidgetItem::checkState(int)
func (q *QTreeWidgetItem) CheckState(column int32) Qt_CheckState {
	var __rv Qt_CheckState
	q.Drv(179000, 179116, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::child(int)
func (q *QTreeWidgetItem) Child(index int32) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(179000, 179117, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidgetItem::childCount()
func (q *QTreeWidgetItem) ChildCount() int32 {
	var __rv int32
	q.Drv(179000, 179118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::childIndicatorPolicy()
func (q *QTreeWidgetItem) ChildIndicatorPolicy() QTreeWidgetItem_ChildIndicatorPolicy {
	var __rv QTreeWidgetItem_ChildIndicatorPolicy
	q.Drv(179000, 179119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::clone()
func (q *QTreeWidgetItem) Clone() *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(179000, 179120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidgetItem::columnCount()
func (q *QTreeWidgetItem) ColumnCount() int32 {
	var __rv int32
	q.Drv(179000, 179121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::data(int,int)
func (q *QTreeWidgetItem) Data(column int32, role int32) *QVariant {
	var __rv uintptr
	q.Drv(179000, 179122, unsafe.Pointer(&column), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTreeWidgetItem::flags()
func (q *QTreeWidgetItem) Flags() Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(179000, 179123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::font(int)
func (q *QTreeWidgetItem) Font(column int32) *QFont {
	var __rv uintptr
	q.Drv(179000, 179124, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTreeWidgetItem::foreground(int)
func (q *QTreeWidgetItem) Foreground(column int32) *QBrush {
	var __rv uintptr
	q.Drv(179000, 179125, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QTreeWidgetItem::icon(int)
func (q *QTreeWidgetItem) Icon(column int32) *QIcon {
	var __rv uintptr
	q.Drv(179000, 179126, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QTreeWidgetItem::indexOfChild(QTreeWidgetItem*)
func (q *QTreeWidgetItem) IndexOfChild(child *QTreeWidgetItem) int32 {
	var __rv int32
	q.Drv(179000, 179127, Native(child), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::insertChild(int,QTreeWidgetItem*)
func (q *QTreeWidgetItem) InsertChild(index int32, child *QTreeWidgetItem) {
	q.Drv(179000, 179128, unsafe.Pointer(&index), Native(child), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::insertChildren(int,QList<QTreeWidgetItem*> const&)
func (q *QTreeWidgetItem) InsertChildren(index int32, children []*QTreeWidgetItem) {
	_children := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&children)))
	defer FreeCObjectArrayHead(_children)
	q.Drv(179000, 179129, unsafe.Pointer(&index), unsafe.Pointer(_children), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::isDisabled()
func (q *QTreeWidgetItem) IsDisabled() bool {
	var __rv bool
	q.Drv(179000, 179130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::isExpanded()
func (q *QTreeWidgetItem) IsExpanded() bool {
	var __rv bool
	q.Drv(179000, 179131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::isFirstColumnSpanned()
func (q *QTreeWidgetItem) IsFirstColumnSpanned() bool {
	var __rv bool
	q.Drv(179000, 179132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::isHidden()
func (q *QTreeWidgetItem) IsHidden() bool {
	var __rv bool
	q.Drv(179000, 179133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::isSelected()
func (q *QTreeWidgetItem) IsSelected() bool {
	var __rv bool
	q.Drv(179000, 179134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::parent()
func (q *QTreeWidgetItem) Parent() *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(179000, 179135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidgetItem::removeChild(QTreeWidgetItem*)
func (q *QTreeWidgetItem) RemoveChild(child *QTreeWidgetItem) {
	q.Drv(179000, 179136, Native(child), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setBackground(int,QBrush const&)
func (q *QTreeWidgetItem) SetBackground(column int32, brush *QBrush) {
	q.Drv(179000, 179137, unsafe.Pointer(&column), Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setBackgroundColor(int,QColor const&)
func (q *QTreeWidgetItem) SetBackgroundColor(column int32, color *QColor) {
	q.Drv(179000, 179138, unsafe.Pointer(&column), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setCheckState(int,Qt::CheckState)
func (q *QTreeWidgetItem) SetCheckState(column int32, state Qt_CheckState) {
	q.Drv(179000, 179139, unsafe.Pointer(&column), unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setChildIndicatorPolicy(QTreeWidgetItem::ChildIndicatorPolicy)
func (q *QTreeWidgetItem) SetChildIndicatorPolicy(policy QTreeWidgetItem_ChildIndicatorPolicy) {
	q.Drv(179000, 179140, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setData(int,int,QVariant const&)
func (q *QTreeWidgetItem) SetData(column int32, role int32, value *QVariant) {
	q.Drv(179000, 179141, unsafe.Pointer(&column), unsafe.Pointer(&role), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setDisabled(bool)
func (q *QTreeWidgetItem) SetDisabled(disabled bool) {
	q.Drv(179000, 179142, unsafe.Pointer(&disabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setExpanded(bool)
func (q *QTreeWidgetItem) SetExpanded(expand bool) {
	q.Drv(179000, 179143, unsafe.Pointer(&expand), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setFirstColumnSpanned(bool)
func (q *QTreeWidgetItem) SetFirstColumnSpanned(span bool) {
	q.Drv(179000, 179144, unsafe.Pointer(&span), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setFlags(QFlags<Qt::ItemFlag>)
func (q *QTreeWidgetItem) SetFlags(flags Qt_ItemFlag) {
	q.Drv(179000, 179145, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setFont(int,QFont const&)
func (q *QTreeWidgetItem) SetFont(column int32, font *QFont) {
	q.Drv(179000, 179146, unsafe.Pointer(&column), Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setForeground(int,QBrush const&)
func (q *QTreeWidgetItem) SetForeground(column int32, brush *QBrush) {
	q.Drv(179000, 179147, unsafe.Pointer(&column), Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setHidden(bool)
func (q *QTreeWidgetItem) SetHidden(hide bool) {
	q.Drv(179000, 179148, unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setIcon(int,QIcon const&)
func (q *QTreeWidgetItem) SetIcon(column int32, icon *QIcon) {
	q.Drv(179000, 179149, unsafe.Pointer(&column), Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setSelected(bool)
func (q *QTreeWidgetItem) SetSelected(_select bool) {
	q.Drv(179000, 179150, unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setSizeHint(int,QSize const&)
func (q *QTreeWidgetItem) SetSizeHint(column int32, size *QSize) {
	q.Drv(179000, 179151, unsafe.Pointer(&column), Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setStatusTip(int,QString const&)
func (q *QTreeWidgetItem) SetStatusTip(column int32, statusTip string) {
	_statusTip := NewCStringHead(statusTip)
	defer FreeCStringHead(_statusTip)
	q.Drv(179000, 179152, unsafe.Pointer(&column), unsafe.Pointer(_statusTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setText(int,QString const&)
func (q *QTreeWidgetItem) SetText(column int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(179000, 179153, unsafe.Pointer(&column), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setTextAlignment(int,int)
func (q *QTreeWidgetItem) SetTextAlignment(column int32, alignment int32) {
	q.Drv(179000, 179154, unsafe.Pointer(&column), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setTextColor(int,QColor const&)
func (q *QTreeWidgetItem) SetTextColor(column int32, color *QColor) {
	q.Drv(179000, 179155, unsafe.Pointer(&column), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setToolTip(int,QString const&)
func (q *QTreeWidgetItem) SetToolTip(column int32, toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(179000, 179156, unsafe.Pointer(&column), unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::setWhatsThis(int,QString const&)
func (q *QTreeWidgetItem) SetWhatsThis(column int32, whatsThis string) {
	_whatsThis := NewCStringHead(whatsThis)
	defer FreeCStringHead(_whatsThis)
	q.Drv(179000, 179157, unsafe.Pointer(&column), unsafe.Pointer(_whatsThis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::sizeHint(int)
func (q *QTreeWidgetItem) SizeHint(column int32) *QSize {
	var __rv uintptr
	q.Drv(179000, 179158, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QTreeWidgetItem::sortChildren(int,Qt::SortOrder)
func (q *QTreeWidgetItem) SortChildren(column int32, order Qt_SortOrder) {
	q.Drv(179000, 179159, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidgetItem::statusTip(int)
func (q *QTreeWidgetItem) StatusTip(column int32) string {
	var __rv C.string_head
	q.Drv(179000, 179160, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTreeWidgetItem::takeChild(int)
func (q *QTreeWidgetItem) TakeChild(index int32) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(179000, 179161, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidgetItem::takeChildren()
func (q *QTreeWidgetItem) TakeChildren() []*QTreeWidgetItem {
	var __rv []*QTreeWidgetItem
	q.Drv(179000, 179162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::text(int)
func (q *QTreeWidgetItem) Text(column int32) string {
	var __rv C.string_head
	q.Drv(179000, 179163, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTreeWidgetItem::textAlignment(int)
func (q *QTreeWidgetItem) TextAlignment(column int32) int32 {
	var __rv int32
	q.Drv(179000, 179164, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::textColor(int)
func (q *QTreeWidgetItem) TextColor(column int32) *QColor {
	var __rv uintptr
	q.Drv(179000, 179165, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTreeWidgetItem::toolTip(int)
func (q *QTreeWidgetItem) ToolTip(column int32) string {
	var __rv C.string_head
	q.Drv(179000, 179166, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTreeWidgetItem::treeWidget()
func (q *QTreeWidgetItem) TreeWidget() *QTreeWidget {
	var __rv uintptr
	q.Drv(179000, 179167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidget{}
	_rp.SetDriver(__rv, 388000, false)
	return _rp
}

//QTreeWidgetItem::type()
func (q *QTreeWidgetItem) Type() int32 {
	var __rv int32
	q.Drv(179000, 179168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidgetItem::whatsThis(int)
func (q *QTreeWidgetItem) WhatsThis(column int32) string {
	var __rv C.string_head
	q.Drv(179000, 179169, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QTreeWidgetItemIterator_IteratorFlag - QTreeWidgetItemIterator::IteratorFlag
type QTreeWidgetItemIterator_IteratorFlag uint32

const (
	QTreeWidgetItemIterator_All           QTreeWidgetItemIterator_IteratorFlag = 0x00000000
	QTreeWidgetItemIterator_Hidden        QTreeWidgetItemIterator_IteratorFlag = 0x00000001
	QTreeWidgetItemIterator_NotHidden     QTreeWidgetItemIterator_IteratorFlag = 0x00000002
	QTreeWidgetItemIterator_Selected      QTreeWidgetItemIterator_IteratorFlag = 0x00000004
	QTreeWidgetItemIterator_Unselected    QTreeWidgetItemIterator_IteratorFlag = 0x00000008
	QTreeWidgetItemIterator_Selectable    QTreeWidgetItemIterator_IteratorFlag = 0x00000010
	QTreeWidgetItemIterator_NotSelectable QTreeWidgetItemIterator_IteratorFlag = 0x00000020
	QTreeWidgetItemIterator_DragEnabled   QTreeWidgetItemIterator_IteratorFlag = 0x00000040
	QTreeWidgetItemIterator_DragDisabled  QTreeWidgetItemIterator_IteratorFlag = 0x00000080
	QTreeWidgetItemIterator_DropEnabled   QTreeWidgetItemIterator_IteratorFlag = 0x00000100
	QTreeWidgetItemIterator_DropDisabled  QTreeWidgetItemIterator_IteratorFlag = 0x00000200
	QTreeWidgetItemIterator_HasChildren   QTreeWidgetItemIterator_IteratorFlag = 0x00000400
	QTreeWidgetItemIterator_NoChildren    QTreeWidgetItemIterator_IteratorFlag = 0x00000800
	QTreeWidgetItemIterator_Checked       QTreeWidgetItemIterator_IteratorFlag = 0x00001000
	QTreeWidgetItemIterator_NotChecked    QTreeWidgetItemIterator_IteratorFlag = 0x00002000
	QTreeWidgetItemIterator_Enabled       QTreeWidgetItemIterator_IteratorFlag = 0x00004000
	QTreeWidgetItemIterator_Disabled      QTreeWidgetItemIterator_IteratorFlag = 0x00008000
	QTreeWidgetItemIterator_Editable      QTreeWidgetItemIterator_IteratorFlag = 0x00010000
	QTreeWidgetItemIterator_NotEditable   QTreeWidgetItemIterator_IteratorFlag = 0x00020000
	QTreeWidgetItemIterator_UserFlag      QTreeWidgetItemIterator_IteratorFlag = 0x01000000
)

//struct QTreeWidgetItemIterator : QTreeWidgetItemIterator
type QTreeWidgetItemIterator struct {
	BaseDrv
}

//QTreeWidgetItemIterator::QTreeWidgetItemIterator(QTreeWidgetItemIterator const&)
func NewTreeWidgetItemIterator(it *QTreeWidgetItemIterator) *QTreeWidgetItemIterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 180000, 180102, Native(it), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItemIterator{}
	_p.SetDriver(__rv, 180000, true)
	return _p
}

//QTreeWidgetItemIterator::QTreeWidgetItemIterator(QTreeWidget*,QFlags<QTreeWidgetItemIterator::IteratorFlag>)
func NewTreeWidgetItemIteratorWithWidgetFlags(widget *QTreeWidget, flags QTreeWidgetItemIterator_IteratorFlag) *QTreeWidgetItemIterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 180000, 180103, Native(widget), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItemIterator{}
	_p.SetDriver(__rv, 180000, true)
	return _p
}

//QTreeWidgetItemIterator::QTreeWidgetItemIterator(QTreeWidgetItem*,QFlags<QTreeWidgetItemIterator::IteratorFlag>)
func NewTreeWidgetItemIteratorWithItemFlags(item *QTreeWidgetItem, flags QTreeWidgetItemIterator_IteratorFlag) *QTreeWidgetItemIterator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 180000, 180104, Native(item), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidgetItemIterator{}
	_p.SetDriver(__rv, 180000, true)
	return _p
}

//struct QUndoCommand : QUndoCommand
type QUndoCommand struct {
	BaseDrv
}

//QUndoCommand::QUndoCommand()
func NewUndoCommand() *QUndoCommand {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 181000, 181102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoCommand{}
	_p.SetDriver(__rv, 181000, true)
	return _p
}

//QUndoCommand::QUndoCommand(QUndoCommand*)
func NewUndoCommandWithParent(parent *QUndoCommand) *QUndoCommand {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 181000, 181103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoCommand{}
	_p.SetDriver(__rv, 181000, true)
	return _p
}

//QUndoCommand::QUndoCommand(QString const&,QUndoCommand*)
func NewUndoCommandWithTextParent(text string, parent *QUndoCommand) *QUndoCommand {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 181000, 181104, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoCommand{}
	_p.SetDriver(__rv, 181000, true)
	return _p
}

//QUndoCommand::child(int)
func (q *QUndoCommand) Child(index int32) *QUndoCommand {
	var __rv uintptr
	q.Drv(181000, 181105, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUndoCommand{}
	_rp.SetDriver(__rv, 181000, true)
	return _rp
}

//QUndoCommand::childCount()
func (q *QUndoCommand) ChildCount() int32 {
	var __rv int32
	q.Drv(181000, 181106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoCommand::id()
func (q *QUndoCommand) Id() int32 {
	var __rv int32
	q.Drv(181000, 181107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoCommand::mergeWith(QUndoCommand const*)
func (q *QUndoCommand) MergeWith(other *QUndoCommand) bool {
	var __rv bool
	q.Drv(181000, 181108, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoCommand::redo()
func (q *QUndoCommand) Redo() {
	q.Drv(181000, 181109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoCommand::setText(QString const&)
func (q *QUndoCommand) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(181000, 181110, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoCommand::text()
func (q *QUndoCommand) Text() string {
	var __rv C.string_head
	q.Drv(181000, 181111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUndoCommand::undo()
func (q *QUndoCommand) Undo() {
	q.Drv(181000, 181112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QUrl_ParsingMode - QUrl::ParsingMode
type QUrl_ParsingMode uint32

const (
	QUrl_TolerantMode QUrl_ParsingMode = 0
	QUrl_StrictMode   QUrl_ParsingMode = 1
	QUrl_DecodedMode  QUrl_ParsingMode = 2
)

//enum QUrl_FormattingOption - QUrl::FormattingOption
type QUrl_FormattingOption uint32

const (
	QUrl_None               QUrl_FormattingOption = 0x0
	QUrl_RemoveScheme       QUrl_FormattingOption = 0x1
	QUrl_RemovePassword     QUrl_FormattingOption = 0x2
	QUrl_RemoveUserInfo     QUrl_FormattingOption = QUrl_RemovePassword | 0x4
	QUrl_RemovePort         QUrl_FormattingOption = 0x8
	QUrl_RemoveAuthority    QUrl_FormattingOption = QUrl_RemoveUserInfo | QUrl_RemovePort | 0x10
	QUrl_RemovePath         QUrl_FormattingOption = 0x20
	QUrl_RemoveQuery        QUrl_FormattingOption = 0x40
	QUrl_RemoveFragment     QUrl_FormattingOption = 0x80
	QUrl_StripTrailingSlash QUrl_FormattingOption = 0x10000
)

//enum QUrl_ComponentFormattingOption - QUrl::ComponentFormattingOption
type QUrl_ComponentFormattingOption uint32

const (
	QUrl_PrettyDecoded    QUrl_ComponentFormattingOption = 0x000000
	QUrl_EncodeSpaces     QUrl_ComponentFormattingOption = 0x100000
	QUrl_EncodeUnicode    QUrl_ComponentFormattingOption = 0x200000
	QUrl_EncodeDelimiters QUrl_ComponentFormattingOption = 0x400000 | 0x800000
	QUrl_EncodeReserved   QUrl_ComponentFormattingOption = 0x1000000
	QUrl_DecodeReserved   QUrl_ComponentFormattingOption = 0x2000000
	QUrl_FullyEncoded     QUrl_ComponentFormattingOption = QUrl_EncodeSpaces | QUrl_EncodeUnicode | QUrl_EncodeDelimiters | QUrl_EncodeReserved
	QUrl_FullyDecoded     QUrl_ComponentFormattingOption = QUrl_FullyEncoded | QUrl_DecodeReserved | 0x4000000
)

//struct QUrl : QUrl
type QUrl struct {
	BaseDrv
}

//QUrl::QUrl()
func NewUrl() *QUrl {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 182000, 182102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrl{}
	_p.SetDriver(__rv, 182000, true)
	return _p
}

//QUrl::QUrl(QString const&)
func NewUrlWithUrl(url string) *QUrl {
	_url := NewCStringHead(url)
	defer FreeCStringHead(_url)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 182000, 182103, unsafe.Pointer(_url), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrl{}
	_p.SetDriver(__rv, 182000, true)
	return _p
}

//QUrl::QUrl(QUrl const&)
func NewUrlCopy(copy *QUrl) *QUrl {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 182000, 182104, Native(copy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrl{}
	_p.SetDriver(__rv, 182000, true)
	return _p
}

//QUrl::QUrl(QString const&,QUrl::ParsingMode)
func NewUrlWithUrlMode(url string, mode QUrl_ParsingMode) *QUrl {
	_url := NewCStringHead(url)
	defer FreeCStringHead(_url)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 182000, 182105, unsafe.Pointer(_url), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrl{}
	_p.SetDriver(__rv, 182000, true)
	return _p
}

//QUrl::authority()
func (q *QUrl) Authority() string {
	var __rv C.string_head
	q.Drv(182000, 182106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::clear()
func (q *QUrl) Clear() {
	q.Drv(182000, 182107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::detach()
func (q *QUrl) Detach() {
	q.Drv(182000, 182108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::errorString()
func (q *QUrl) ErrorString() string {
	var __rv C.string_head
	q.Drv(182000, 182109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fragment()
func (q *QUrl) Fragment() string {
	var __rv C.string_head
	q.Drv(182000, 182110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fromAce(QByteArray const&)
func QUrlFromAce(value []byte) string {
	_value := NewCByteArrayHead(value)
	defer FreeCByteArrayHead(_value)
	var __rv C.string_head
	DirectQtDrv(nil, 182000, 182111, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fromAce(QByteArray const&)
func (q *QUrl) FromAce(value []byte) string {
	_value := NewCByteArrayHead(value)
	defer FreeCByteArrayHead(_value)
	var __rv C.string_head
	q.Drv(182000, 182111, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fromEncoded(QByteArray const&)
func QUrlFromEncoded(url []byte) *QUrl {
	_url := NewCByteArrayHead(url)
	defer FreeCByteArrayHead(_url)
	var __rv uintptr
	DirectQtDrv(nil, 182000, 182112, unsafe.Pointer(_url), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromEncoded(QByteArray const&)
func (q *QUrl) FromEncoded(url []byte) *QUrl {
	_url := NewCByteArrayHead(url)
	defer FreeCByteArrayHead(_url)
	var __rv uintptr
	q.Drv(182000, 182112, unsafe.Pointer(_url), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromEncoded(QByteArray const&,QUrl::ParsingMode)
func QUrlFromEncodedWithUrlMode(url []byte, mode QUrl_ParsingMode) *QUrl {
	_url := NewCByteArrayHead(url)
	defer FreeCByteArrayHead(_url)
	var __rv uintptr
	DirectQtDrv(nil, 182000, 182113, unsafe.Pointer(_url), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromEncoded(QByteArray const&,QUrl::ParsingMode)
func (q *QUrl) FromEncodedWithUrlMode(url []byte, mode QUrl_ParsingMode) *QUrl {
	_url := NewCByteArrayHead(url)
	defer FreeCByteArrayHead(_url)
	var __rv uintptr
	q.Drv(182000, 182113, unsafe.Pointer(_url), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromLocalFile(QString const&)
func QUrlFromLocalFile(localfile string) *QUrl {
	_localfile := NewCStringHead(localfile)
	defer FreeCStringHead(_localfile)
	var __rv uintptr
	DirectQtDrv(nil, 182000, 182114, unsafe.Pointer(_localfile), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromLocalFile(QString const&)
func (q *QUrl) FromLocalFile(localfile string) *QUrl {
	_localfile := NewCStringHead(localfile)
	defer FreeCStringHead(_localfile)
	var __rv uintptr
	q.Drv(182000, 182114, unsafe.Pointer(_localfile), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromPercentEncoding(QByteArray const&)
func QUrlFromPercentEncoding(value []byte) string {
	_value := NewCByteArrayHead(value)
	defer FreeCByteArrayHead(_value)
	var __rv C.string_head
	DirectQtDrv(nil, 182000, 182115, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fromPercentEncoding(QByteArray const&)
func (q *QUrl) FromPercentEncoding(value []byte) string {
	_value := NewCByteArrayHead(value)
	defer FreeCByteArrayHead(_value)
	var __rv C.string_head
	q.Drv(182000, 182115, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::fromUserInput(QString const&)
func QUrlFromUserInput(userInput string) *QUrl {
	_userInput := NewCStringHead(userInput)
	defer FreeCStringHead(_userInput)
	var __rv uintptr
	DirectQtDrv(nil, 182000, 182116, unsafe.Pointer(_userInput), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::fromUserInput(QString const&)
func (q *QUrl) FromUserInput(userInput string) *QUrl {
	_userInput := NewCStringHead(userInput)
	defer FreeCStringHead(_userInput)
	var __rv uintptr
	q.Drv(182000, 182116, unsafe.Pointer(_userInput), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::hasFragment()
func (q *QUrl) HasFragment() bool {
	var __rv bool
	q.Drv(182000, 182117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::hasQuery()
func (q *QUrl) HasQuery() bool {
	var __rv bool
	q.Drv(182000, 182118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::host()
func (q *QUrl) Host() string {
	var __rv C.string_head
	q.Drv(182000, 182119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::idnWhitelist()
func QUrlIdnWhitelist() []string {
	var __rv []string
	DirectQtDrv(nil, 182000, 182120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::idnWhitelist()
func (q *QUrl) IdnWhitelist() []string {
	var __rv []string
	q.Drv(182000, 182120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::isDetached()
func (q *QUrl) IsDetached() bool {
	var __rv bool
	q.Drv(182000, 182121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::isEmpty()
func (q *QUrl) IsEmpty() bool {
	var __rv bool
	q.Drv(182000, 182122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::isParentOf(QUrl const&)
func (q *QUrl) IsParentOf(url *QUrl) bool {
	var __rv bool
	q.Drv(182000, 182123, Native(url), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::isRelative()
func (q *QUrl) IsRelative() bool {
	var __rv bool
	q.Drv(182000, 182124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::isValid()
func (q *QUrl) IsValid() bool {
	var __rv bool
	q.Drv(182000, 182125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::password()
func (q *QUrl) Password() string {
	var __rv C.string_head
	q.Drv(182000, 182126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::path()
func (q *QUrl) Path() string {
	var __rv C.string_head
	q.Drv(182000, 182127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::port()
func (q *QUrl) Port() int32 {
	var __rv int32
	q.Drv(182000, 182128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::port(int)
func (q *QUrl) PortWithDefaultport(defaultPort int32) int32 {
	var __rv int32
	q.Drv(182000, 182129, unsafe.Pointer(&defaultPort), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::query()
func (q *QUrl) Query() string {
	var __rv C.string_head
	q.Drv(182000, 182130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::query(QUrl::ComponentFormattingOption)
func (q *QUrl) QueryWithOptions(options QUrl_ComponentFormattingOption) string {
	var __rv C.string_head
	q.Drv(182000, 182131, unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::resolved(QUrl const&)
func (q *QUrl) Resolved(relative *QUrl) *QUrl {
	var __rv uintptr
	q.Drv(182000, 182132, Native(relative), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QUrl::scheme()
func (q *QUrl) Scheme() string {
	var __rv C.string_head
	q.Drv(182000, 182133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::setAuthority(QString const&)
func (q *QUrl) SetAuthority(authority string) {
	_authority := NewCStringHead(authority)
	defer FreeCStringHead(_authority)
	q.Drv(182000, 182134, unsafe.Pointer(_authority), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setFragment(QString const&)
func (q *QUrl) SetFragment(fragment string) {
	_fragment := NewCStringHead(fragment)
	defer FreeCStringHead(_fragment)
	q.Drv(182000, 182135, unsafe.Pointer(_fragment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setHost(QString const&)
func (q *QUrl) SetHost(host string) {
	_host := NewCStringHead(host)
	defer FreeCStringHead(_host)
	q.Drv(182000, 182136, unsafe.Pointer(_host), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setIdnWhitelist(QStringList const&)
func QUrlSetIdnWhitelist(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	DirectQtDrv(nil, 182000, 182137, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setIdnWhitelist(QStringList const&)
func (q *QUrl) SetIdnWhitelist(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	q.Drv(182000, 182137, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setPassword(QString const&)
func (q *QUrl) SetPassword(password string) {
	_password := NewCStringHead(password)
	defer FreeCStringHead(_password)
	q.Drv(182000, 182138, unsafe.Pointer(_password), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setPath(QString const&)
func (q *QUrl) SetPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(182000, 182139, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setPort(int)
func (q *QUrl) SetPort(port int32) {
	q.Drv(182000, 182140, unsafe.Pointer(&port), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setQuery(QString const&)
func (q *QUrl) SetQuery(query string) {
	_query := NewCStringHead(query)
	defer FreeCStringHead(_query)
	q.Drv(182000, 182141, unsafe.Pointer(_query), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setQuery(QUrlQuery const&)
func (q *QUrl) SetQueryWithQuery(query *QUrlQuery) {
	q.Drv(182000, 182142, Native(query), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setQuery(QString const&,QUrl::ParsingMode)
func (q *QUrl) SetQueryWithQueryMode(query string, mode QUrl_ParsingMode) {
	_query := NewCStringHead(query)
	defer FreeCStringHead(_query)
	q.Drv(182000, 182143, unsafe.Pointer(_query), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setScheme(QString const&)
func (q *QUrl) SetScheme(scheme string) {
	_scheme := NewCStringHead(scheme)
	defer FreeCStringHead(_scheme)
	q.Drv(182000, 182144, unsafe.Pointer(_scheme), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setUrl(QString const&)
func (q *QUrl) SetUrl(url string) {
	_url := NewCStringHead(url)
	defer FreeCStringHead(_url)
	q.Drv(182000, 182145, unsafe.Pointer(_url), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setUrl(QString const&,QUrl::ParsingMode)
func (q *QUrl) SetUrlWithUrlMode(url string, mode QUrl_ParsingMode) {
	_url := NewCStringHead(url)
	defer FreeCStringHead(_url)
	q.Drv(182000, 182146, unsafe.Pointer(_url), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setUserInfo(QString const&)
func (q *QUrl) SetUserInfo(userInfo string) {
	_userInfo := NewCStringHead(userInfo)
	defer FreeCStringHead(_userInfo)
	q.Drv(182000, 182147, unsafe.Pointer(_userInfo), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::setUserName(QString const&)
func (q *QUrl) SetUserName(userName string) {
	_userName := NewCStringHead(userName)
	defer FreeCStringHead(_userName)
	q.Drv(182000, 182148, unsafe.Pointer(_userName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrl::toAce(QString const&)
func QUrlToAce(value string) []byte {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []byte
	DirectQtDrv(nil, 182000, 182149, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toAce(QString const&)
func (q *QUrl) ToAce(value string) []byte {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []byte
	q.Drv(182000, 182149, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toEncoded()
func (q *QUrl) ToEncoded() []byte {
	var __rv []byte
	q.Drv(182000, 182150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toEncoded(QFlags<QUrl::FormattingOption>)
func (q *QUrl) ToEncodedWithOptions(options QUrl_FormattingOption) []byte {
	var __rv []byte
	q.Drv(182000, 182151, unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toLocalFile()
func (q *QUrl) ToLocalFile() string {
	var __rv C.string_head
	q.Drv(182000, 182152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::toPercentEncoding(QString const&)
func QUrlToPercentEncoding(value string) []byte {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []byte
	DirectQtDrv(nil, 182000, 182153, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toPercentEncoding(QString const&)
func (q *QUrl) ToPercentEncoding(value string) []byte {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv []byte
	q.Drv(182000, 182153, unsafe.Pointer(_value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toPercentEncoding(QString const&,QByteArray const&,QByteArray const&)
func QUrlToPercentEncodingWithStringExcludeInclude(value2 string, exclude []byte, include []byte) []byte {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_exclude := NewCByteArrayHead(exclude)
	defer FreeCByteArrayHead(_exclude)
	_include := NewCByteArrayHead(include)
	defer FreeCByteArrayHead(_include)
	var __rv []byte
	DirectQtDrv(nil, 182000, 182154, unsafe.Pointer(_value2), unsafe.Pointer(_exclude), unsafe.Pointer(_include), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toPercentEncoding(QString const&,QByteArray const&,QByteArray const&)
func (q *QUrl) ToPercentEncodingWithStringExcludeInclude(value2 string, exclude []byte, include []byte) []byte {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	_exclude := NewCByteArrayHead(exclude)
	defer FreeCByteArrayHead(_exclude)
	_include := NewCByteArrayHead(include)
	defer FreeCByteArrayHead(_include)
	var __rv []byte
	q.Drv(182000, 182154, unsafe.Pointer(_value2), unsafe.Pointer(_exclude), unsafe.Pointer(_include), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrl::toString()
func (q *QUrl) ToString() string {
	var __rv C.string_head
	q.Drv(182000, 182155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::toString(QFlags<QUrl::FormattingOption>)
func (q *QUrl) ToStringWithOptions(options QUrl_FormattingOption) string {
	var __rv C.string_head
	q.Drv(182000, 182156, unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::userInfo()
func (q *QUrl) UserInfo() string {
	var __rv C.string_head
	q.Drv(182000, 182157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrl::userName()
func (q *QUrl) UserName() string {
	var __rv C.string_head
	q.Drv(182000, 182158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QUuid_Variant - QUuid::Variant
type QUuid_Variant int32

const (
	QUuid_VarUnknown QUuid_Variant = -1
	QUuid_NCS        QUuid_Variant = 0
	QUuid_DCE        QUuid_Variant = 2
	QUuid_Microsoft  QUuid_Variant = 6
	QUuid_Reserved   QUuid_Variant = 7
)

//enum QUuid_Version - QUuid::Version
type QUuid_Version int32

const (
	QUuid_VerUnknown    QUuid_Version = -1
	QUuid_Time          QUuid_Version = 1
	QUuid_EmbeddedPOSIX QUuid_Version = 2
	QUuid_Name          QUuid_Version = 3
	QUuid_Random        QUuid_Version = 4
)

//struct QUuid : QUuid
type QUuid struct {
	BaseDrv
}

//QUuid::QUuid()
func NewUuid() *QUuid {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 183000, 183102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUuid{}
	_p.SetDriver(__rv, 183000, true)
	return _p
}

//QUuid::QUuid(QString const&)
func NewUuidWithString(value string) *QUuid {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 183000, 183103, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUuid{}
	_p.SetDriver(__rv, 183000, true)
	return _p
}

//QUuid::QUuid(unsigned int,unsigned short,unsigned short,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char,unsigned char)
func NewUuidWithUint32W1W2B1B2B3B4B5B6B7B8(l uint32, w1 uint16, w2 uint16, b1 byte, b2 byte, b3 byte, b4 byte, b5 byte, b6 byte, b7 byte, b8 byte) *QUuid {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 183000, 183104, unsafe.Pointer(&l), unsafe.Pointer(&w1), unsafe.Pointer(&w2), unsafe.Pointer(&b1), unsafe.Pointer(&b2), unsafe.Pointer(&b3), unsafe.Pointer(&b4), unsafe.Pointer(&b5), unsafe.Pointer(&b6), unsafe.Pointer(&b7), unsafe.Pointer(&b8), nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUuid{}
	_p.SetDriver(__rv, 183000, true)
	return _p
}

//QUuid::createUuid()
func QUuidCreateUuid() *QUuid {
	var __rv uintptr
	DirectQtDrv(nil, 183000, 183105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUuid{}
	_rp.SetDriver(__rv, 183000, true)
	return _rp
}

//QUuid::createUuid()
func (q *QUuid) CreateUuid() *QUuid {
	var __rv uintptr
	q.Drv(183000, 183105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUuid{}
	_rp.SetDriver(__rv, 183000, true)
	return _rp
}

//QUuid::isNull()
func (q *QUuid) IsNull() bool {
	var __rv bool
	q.Drv(183000, 183106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUuid::toString()
func (q *QUuid) ToString() string {
	var __rv C.string_head
	q.Drv(183000, 183107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUuid::variant()
func (q *QUuid) Variant() QUuid_Variant {
	var __rv QUuid_Variant
	q.Drv(183000, 183108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUuid::version()
func (q *QUuid) Version() QUuid_Version {
	var __rv QUuid_Version
	q.Drv(183000, 183109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QVariant_Type - QVariant::Type
type QVariant_Type uint32

const (
	QVariant_Invalid      QVariant_Type = 0
	QVariant_Bool         QVariant_Type = 1
	QVariant_Int          QVariant_Type = 2
	QVariant_UInt         QVariant_Type = 3
	QVariant_LongLong     QVariant_Type = 4
	QVariant_ULongLong    QVariant_Type = 5
	QVariant_Double       QVariant_Type = 6
	QVariant_Char         QVariant_Type = 7
	QVariant_Map          QVariant_Type = 8
	QVariant_List         QVariant_Type = 9
	QVariant_String       QVariant_Type = 10
	QVariant_StringList   QVariant_Type = 11
	QVariant_ByteArray    QVariant_Type = 12
	QVariant_BitArray     QVariant_Type = 13
	QVariant_Date         QVariant_Type = 14
	QVariant_Time         QVariant_Type = 15
	QVariant_DateTime     QVariant_Type = 16
	QVariant_Url          QVariant_Type = 17
	QVariant_Locale       QVariant_Type = 18
	QVariant_Rect         QVariant_Type = 19
	QVariant_RectF        QVariant_Type = 20
	QVariant_Size         QVariant_Type = 21
	QVariant_SizeF        QVariant_Type = 22
	QVariant_Line         QVariant_Type = 23
	QVariant_LineF        QVariant_Type = 24
	QVariant_Point        QVariant_Type = 25
	QVariant_PointF       QVariant_Type = 26
	QVariant_RegExp       QVariant_Type = 27
	QVariant_Hash         QVariant_Type = 28
	QVariant_EasingCurve  QVariant_Type = 29
	QVariant_LastCoreType QVariant_Type = QVariant_EasingCurve
	QVariant_Font         QVariant_Type = 64
	QVariant_Pixmap       QVariant_Type = 65
	QVariant_Brush        QVariant_Type = 66
	QVariant_Color        QVariant_Type = 67
	QVariant_Palette      QVariant_Type = 68
	QVariant_Icon         QVariant_Type = 69
	QVariant_Image        QVariant_Type = 70
	QVariant_Polygon      QVariant_Type = 71
	QVariant_Region       QVariant_Type = 72
	QVariant_Bitmap       QVariant_Type = 73
	QVariant_Cursor       QVariant_Type = 74
	QVariant_SizePolicy   QVariant_Type = 75
	QVariant_KeySequence  QVariant_Type = 76
	QVariant_Pen          QVariant_Type = 77
	QVariant_TextLength   QVariant_Type = 78
	QVariant_TextFormat   QVariant_Type = 79
	QVariant_Matrix       QVariant_Type = 80
	QVariant_Transform    QVariant_Type = 81
	QVariant_Matrix4x4    QVariant_Type = 82
	QVariant_Vector2D     QVariant_Type = 83
	QVariant_Vector3D     QVariant_Type = 84
	QVariant_Vector4D     QVariant_Type = 85
	QVariant_Quaternion   QVariant_Type = 86
	QVariant_LastGuiType  QVariant_Type = QVariant_Quaternion
	QVariant_UserType     QVariant_Type = 127
	QVariant_LastType     QVariant_Type = 0xffffffff
)

//struct QVariant : QVariant
type QVariant struct {
	BaseDrv
}

//QVariant::QVariant()
func NewVariant() *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QBitArray const&)
func NewVariantWithBoolArray(bitarray []bool) *QVariant {
	_bitarray := NewCBoolArrayHead(bitarray)
	defer FreeCBoolArrayHead(_bitarray)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184103, unsafe.Pointer(_bitarray), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QByteArray const&)
func NewVariantWithByteArray(bytearray []byte) *QVariant {
	_bytearray := NewCByteArrayHead(bytearray)
	defer FreeCByteArrayHead(_bytearray)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184104, unsafe.Pointer(_bytearray), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QChar const&)
func NewVariantWithRune(qchar rune) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184105, unsafe.Pointer(&qchar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QDate const&)
func NewVariantWithDate(date *QDate) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184106, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QDateTime const&)
func NewVariantWithDateTime(datetime *QDateTime) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184107, Native(datetime), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QEasingCurve const&)
func NewVariantWithEasingCurve(easing *QEasingCurve) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184108, Native(easing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QLine const&)
func NewVariantWithLine(line *QLine) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184109, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QLineF const&)
func NewVariantWithLineF(line *QLineF) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184110, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QList<QVariant> const&)
func NewVariantWithVariantArray(list []*QVariant) *QVariant {
	_list := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&list)))
	defer FreeCNoObjectArrayHead(_list)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184111, unsafe.Pointer(_list), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QLocale const&)
func NewVariantWithLocale(locale *QLocale) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184112, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QMap<QString,QVariant> const&)
func NewVariantWithMap(_map map[string]*QVariant) *QVariant {
	__map := ToStringVariantMap(_map)
	defer __map.Delete()
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184113, unsafe.Pointer(__map.Native()), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QPoint const&)
func NewVariantWithPoint(pt *QPoint) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184114, Native(pt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QPointF const&)
func NewVariantWithPointF(pt *QPointF) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184115, Native(pt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QRect const&)
func NewVariantWithRect(rect *QRect) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184116, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QRectF const&)
func NewVariantWithRectF(rect *QRectF) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184117, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QRegExp const&)
func NewVariantWithRegExp(regExp *QRegExp) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184118, Native(regExp), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QSize const&)
func NewVariantWithSize(size *QSize) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184119, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QSizeF const&)
func NewVariantWithSizeF(size *QSizeF) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184120, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QString const&)
func NewVariantWithString(string string) *QVariant {
	_string := NewCStringHead(string)
	defer FreeCStringHead(_string)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184121, unsafe.Pointer(_string), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QStringList const&)
func NewVariantWithStringArray(stringlist []string) *QVariant {
	_stringlist, _stringlist_size := NewCSArray(stringlist)
	defer FreeCSArray(_stringlist, _stringlist_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184122, unsafe.Pointer(&_stringlist[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QTime const&)
func NewVariantWithTime(time *QTime) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184123, Native(time), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QUrl const&)
func NewVariantWithUrl(url *QUrl) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184124, Native(url), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QVariant const&)
func NewVariantCopy(other *QVariant) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184125, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(QVariant::Type)
func NewVariantWithType(_type QVariant_Type) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184126, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(bool)
func NewVariantWithBool(b bool) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184127, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(double)
func NewVariantWithFloat64(d float64) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184128, unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(float)
func NewVariantWithFloat32(f float32) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184129, unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(int)
func NewVariantWithInt32(i int32) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184130, unsafe.Pointer(&i), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(qint64)
func NewVariantWithInt64(ll int64) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184131, unsafe.Pointer(&ll), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(unsigned int)
func NewVariantWithUint32(ui uint32) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184132, unsafe.Pointer(&ui), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(int,void const*)
func NewVariantWithInt32Uintptr(typeOrUserType int32, copy uintptr) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184133, unsafe.Pointer(&typeOrUserType), unsafe.Pointer(&copy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::QVariant(int,void const*,unsigned int)
func NewVariantWithInt32UintptrUint32(typeOrUserType int32, copy uintptr, flags uint32) *QVariant {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 184000, 184134, unsafe.Pointer(&typeOrUserType), unsafe.Pointer(&copy), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariant{}
	_p.SetDriver(__rv, 184000, true)
	return _p
}

//QVariant::canConvert(QVariant::Type)
func (q *QVariant) CanConvert(t QVariant_Type) bool {
	var __rv bool
	q.Drv(184000, 184135, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::clear()
func (q *QVariant) Clear() {
	q.Drv(184000, 184136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariant::constData()
func (q *QVariant) ConstData() uintptr {
	var __rv uintptr
	q.Drv(184000, 184137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::convert(QVariant::Type)
func (q *QVariant) Convert(t QVariant_Type) bool {
	var __rv bool
	q.Drv(184000, 184138, unsafe.Pointer(&t), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::data()
func (q *QVariant) Data() uintptr {
	var __rv uintptr
	q.Drv(184000, 184139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::detach()
func (q *QVariant) Detach() {
	q.Drv(184000, 184140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariant::isDetached()
func (q *QVariant) IsDetached() bool {
	var __rv bool
	q.Drv(184000, 184141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::isNull()
func (q *QVariant) IsNull() bool {
	var __rv bool
	q.Drv(184000, 184142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::isValid()
func (q *QVariant) IsValid() bool {
	var __rv bool
	q.Drv(184000, 184143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::nameToType(char const*)
func QVariantNameToType(name string) QVariant_Type {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv QVariant_Type
	DirectQtDrv(nil, 184000, 184144, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::nameToType(char const*)
func (q *QVariant) NameToType(name string) QVariant_Type {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv QVariant_Type
	q.Drv(184000, 184144, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toBitArray()
func (q *QVariant) ToBitArray() []bool {
	var __rv []bool
	q.Drv(184000, 184145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toBool()
func (q *QVariant) ToBool() bool {
	var __rv bool
	q.Drv(184000, 184146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toByteArray()
func (q *QVariant) ToByteArray() []byte {
	var __rv []byte
	q.Drv(184000, 184147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toChar()
func (q *QVariant) ToChar() rune {
	var __rv rune
	q.Drv(184000, 184148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toDate()
func (q *QVariant) ToDate() *QDate {
	var __rv uintptr
	q.Drv(184000, 184149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QVariant::toDateTime()
func (q *QVariant) ToDateTime() *QDateTime {
	var __rv uintptr
	q.Drv(184000, 184150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QVariant::toDouble(bool*)
func (q *QVariant) ToDouble(ok *bool) float64 {
	var __rv float64
	q.Drv(184000, 184151, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toEasingCurve()
func (q *QVariant) ToEasingCurve() *QEasingCurve {
	var __rv uintptr
	q.Drv(184000, 184152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QEasingCurve{}
	_rp.SetDriver(__rv, 29000, true)
	return _rp
}

//QVariant::toFloat(bool*)
func (q *QVariant) ToFloat(ok *bool) float32 {
	var __rv float32
	q.Drv(184000, 184153, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toInt(bool*)
func (q *QVariant) ToInt(ok *bool) int32 {
	var __rv int32
	q.Drv(184000, 184154, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toLine()
func (q *QVariant) ToLine() *QLine {
	var __rv uintptr
	q.Drv(184000, 184155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLine{}
	_rp.SetDriver(__rv, 69000, true)
	return _rp
}

//QVariant::toLineF()
func (q *QVariant) ToLineF() *QLineF {
	var __rv uintptr
	q.Drv(184000, 184156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QVariant::toList()
func (q *QVariant) ToList() []*QVariant {
	var __rv []*QVariant
	q.Drv(184000, 184157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toLocale()
func (q *QVariant) ToLocale() *QLocale {
	var __rv uintptr
	q.Drv(184000, 184158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QVariant::toLongLong(bool*)
func (q *QVariant) ToLongLong(ok *bool) int64 {
	var __rv int64
	q.Drv(184000, 184159, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toMap()
func (q *QVariant) ToMap() map[string]*QVariant {
	var __rv uintptr
	q.Drv(184000, 184160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStringVariantMap{}
	_rp.SetDriver(__rv, 130000, true)
	defer _rp.Delete()
	return FromStringVariantMap(_rp)
}

//QVariant::toPoint()
func (q *QVariant) ToPoint() *QPoint {
	var __rv uintptr
	q.Drv(184000, 184161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QVariant::toPointF()
func (q *QVariant) ToPointF() *QPointF {
	var __rv uintptr
	q.Drv(184000, 184162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QVariant::toReal(bool*)
func (q *QVariant) ToReal(ok *bool) float64 {
	var __rv float64
	q.Drv(184000, 184163, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toRect()
func (q *QVariant) ToRect() *QRect {
	var __rv uintptr
	q.Drv(184000, 184164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QVariant::toRectF()
func (q *QVariant) ToRectF() *QRectF {
	var __rv uintptr
	q.Drv(184000, 184165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QVariant::toRegExp()
func (q *QVariant) ToRegExp() *QRegExp {
	var __rv uintptr
	q.Drv(184000, 184166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegExp{}
	_rp.SetDriver(__rv, 113000, true)
	return _rp
}

//QVariant::toSize()
func (q *QVariant) ToSize() *QSize {
	var __rv uintptr
	q.Drv(184000, 184167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QVariant::toSizeF()
func (q *QVariant) ToSizeF() *QSizeF {
	var __rv uintptr
	q.Drv(184000, 184168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QVariant::toString()
func (q *QVariant) ToString() string {
	var __rv C.string_head
	q.Drv(184000, 184169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QVariant::toStringList()
func (q *QVariant) ToStringList() []string {
	var __rv []string
	q.Drv(184000, 184170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toTime()
func (q *QVariant) ToTime() *QTime {
	var __rv uintptr
	q.Drv(184000, 184171, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QVariant::toUInt(bool*)
func (q *QVariant) ToUInt(ok *bool) uint32 {
	var __rv uint32
	q.Drv(184000, 184172, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toULongLong(bool*)
func (q *QVariant) ToULongLong(ok *bool) int64 {
	var __rv int64
	q.Drv(184000, 184173, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::toUrl()
func (q *QVariant) ToUrl() *QUrl {
	var __rv uintptr
	q.Drv(184000, 184174, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QVariant::type()
func (q *QVariant) Type() QVariant_Type {
	var __rv QVariant_Type
	q.Drv(184000, 184175, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVariant::typeName()
func (q *QVariant) TypeName() string {
	var __rv C.string_head
	q.Drv(184000, 184176, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QVariant::typeToName(QVariant::Type)
func QVariantTypeToName(_type QVariant_Type) string {
	var __rv C.string_head
	DirectQtDrv(nil, 184000, 184177, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QVariant::typeToName(QVariant::Type)
func (q *QVariant) TypeToName(_type QVariant_Type) string {
	var __rv C.string_head
	q.Drv(184000, 184177, unsafe.Pointer(&_type), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QVariant::userType()
func (q *QVariant) UserType() int32 {
	var __rv int32
	q.Drv(184000, 184178, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QVariantComparisonHelper : QVariantComparisonHelper
type QVariantComparisonHelper struct {
	BaseDrv
}

//QVariantComparisonHelper::QVariantComparisonHelper(QVariant const&)
func NewVariantComparisonHelper(_var *QVariant) *QVariantComparisonHelper {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 185000, 185102, Native(_var), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVariantComparisonHelper{}
	_p.SetDriver(__rv, 185000, true)
	return _p
}

//struct QVector2D : QVector2D
type QVector2D struct {
	BaseDrv
}

//QVector2D::QVector2D()
func NewVector2D() *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::QVector2D(QPoint const&)
func NewVector2DWithPoint(point *QPoint) *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186103, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::QVector2D(QPointF const&)
func NewVector2DFWithPoint(point *QPointF) *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186104, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::QVector2D(QVector3D const&)
func NewVector2DWithVector3d(vector *QVector3D) *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186105, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::QVector2D(QVector4D const&)
func NewVector2DWithVector4d(vector *QVector4D) *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186106, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::QVector2D(double,double)
func NewVector2DWithXposYpos(xpos float64, ypos float64) *QVector2D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 186000, 186107, unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector2D{}
	_p.SetDriver(__rv, 186000, true)
	return _p
}

//QVector2D::dotProduct(QVector2D const&,QVector2D const&)
func QVector2DDotProduct(v1 *QVector2D, v2 *QVector2D) float64 {
	var __rv float64
	DirectQtDrv(nil, 186000, 186108, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::dotProduct(QVector2D const&,QVector2D const&)
func (q *QVector2D) DotProduct(v1 *QVector2D, v2 *QVector2D) float64 {
	var __rv float64
	q.Drv(186000, 186108, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::isNull()
func (q *QVector2D) IsNull() bool {
	var __rv bool
	q.Drv(186000, 186109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::length()
func (q *QVector2D) Length() float64 {
	var __rv float64
	q.Drv(186000, 186110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::lengthSquared()
func (q *QVector2D) LengthSquared() float64 {
	var __rv float64
	q.Drv(186000, 186111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::normalize()
func (q *QVector2D) Normalize() {
	q.Drv(186000, 186112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector2D::normalized()
func (q *QVector2D) Normalized() *QVector2D {
	var __rv uintptr
	q.Drv(186000, 186113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector2D{}
	_rp.SetDriver(__rv, 186000, true)
	return _rp
}

//QVector2D::setX(double)
func (q *QVector2D) SetX(x float64) {
	q.Drv(186000, 186114, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector2D::setY(double)
func (q *QVector2D) SetY(y float64) {
	q.Drv(186000, 186115, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector2D::toPoint()
func (q *QVector2D) ToPoint() *QPoint {
	var __rv uintptr
	q.Drv(186000, 186116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QVector2D::toPointF()
func (q *QVector2D) ToPointF() *QPointF {
	var __rv uintptr
	q.Drv(186000, 186117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QVector2D::toVector3D()
func (q *QVector2D) ToVector3D() *QVector3D {
	var __rv uintptr
	q.Drv(186000, 186118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector2D::toVector4D()
func (q *QVector2D) ToVector4D() *QVector4D {
	var __rv uintptr
	q.Drv(186000, 186119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector4D{}
	_rp.SetDriver(__rv, 188000, true)
	return _rp
}

//QVector2D::x()
func (q *QVector2D) X() float64 {
	var __rv float64
	q.Drv(186000, 186120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector2D::y()
func (q *QVector2D) Y() float64 {
	var __rv float64
	q.Drv(186000, 186121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QVector3D : QVector3D
type QVector3D struct {
	BaseDrv
}

//QVector3D::QVector3D()
func NewVector3D() *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(QPoint const&)
func NewVector3DWithPoint(point *QPoint) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187103, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(QPointF const&)
func NewVector3DFWithPoint(point *QPointF) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187104, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(QVector2D const&)
func NewVector3DWithVector2d(vector *QVector2D) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187105, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(QVector4D const&)
func NewVector3DWithVector4d(vector *QVector4D) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187106, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(QVector2D const&,double)
func NewVector3DWithVector2dZpos(vector *QVector2D, zpos float64) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187107, Native(vector), unsafe.Pointer(&zpos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::QVector3D(double,double,double)
func NewVector3DWithXposYposZpos(xpos float64, ypos float64, zpos float64) *QVector3D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 187000, 187108, unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), unsafe.Pointer(&zpos), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector3D{}
	_p.SetDriver(__rv, 187000, true)
	return _p
}

//QVector3D::crossProduct(QVector3D const&,QVector3D const&)
func QVector3DCrossProduct(v1 *QVector3D, v2 *QVector3D) *QVector3D {
	var __rv uintptr
	DirectQtDrv(nil, 187000, 187109, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::crossProduct(QVector3D const&,QVector3D const&)
func (q *QVector3D) CrossProduct(v1 *QVector3D, v2 *QVector3D) *QVector3D {
	var __rv uintptr
	q.Drv(187000, 187109, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::distanceToLine(QVector3D const&,QVector3D const&)
func (q *QVector3D) DistanceToLine(point *QVector3D, direction *QVector3D) float64 {
	var __rv float64
	q.Drv(187000, 187110, Native(point), Native(direction), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::distanceToPlane(QVector3D const&,QVector3D const&)
func (q *QVector3D) DistanceToPlaneWithPlaneNormal(plane *QVector3D, normal *QVector3D) float64 {
	var __rv float64
	q.Drv(187000, 187111, Native(plane), Native(normal), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::distanceToPlane(QVector3D const&,QVector3D const&,QVector3D const&)
func (q *QVector3D) DistanceToPlaneWithPlane1Plane2Plane3(plane1 *QVector3D, plane2 *QVector3D, plane3 *QVector3D) float64 {
	var __rv float64
	q.Drv(187000, 187112, Native(plane1), Native(plane2), Native(plane3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::dotProduct(QVector3D const&,QVector3D const&)
func QVector3DDotProduct(v1 *QVector3D, v2 *QVector3D) float64 {
	var __rv float64
	DirectQtDrv(nil, 187000, 187113, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::dotProduct(QVector3D const&,QVector3D const&)
func (q *QVector3D) DotProduct(v1 *QVector3D, v2 *QVector3D) float64 {
	var __rv float64
	q.Drv(187000, 187113, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::isNull()
func (q *QVector3D) IsNull() bool {
	var __rv bool
	q.Drv(187000, 187114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::length()
func (q *QVector3D) Length() float64 {
	var __rv float64
	q.Drv(187000, 187115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::lengthSquared()
func (q *QVector3D) LengthSquared() float64 {
	var __rv float64
	q.Drv(187000, 187116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::normal(QVector3D const&,QVector3D const&)
func QVector3DNormalWithV1V2(v1 *QVector3D, v2 *QVector3D) *QVector3D {
	var __rv uintptr
	DirectQtDrv(nil, 187000, 187117, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::normal(QVector3D const&,QVector3D const&)
func (q *QVector3D) NormalWithV1V2(v1 *QVector3D, v2 *QVector3D) *QVector3D {
	var __rv uintptr
	q.Drv(187000, 187117, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::normal(QVector3D const&,QVector3D const&,QVector3D const&)
func QVector3DNormalWithV1V2V3(v1 *QVector3D, v2 *QVector3D, v3 *QVector3D) *QVector3D {
	var __rv uintptr
	DirectQtDrv(nil, 187000, 187118, Native(v1), Native(v2), Native(v3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::normal(QVector3D const&,QVector3D const&,QVector3D const&)
func (q *QVector3D) NormalWithV1V2V3(v1 *QVector3D, v2 *QVector3D, v3 *QVector3D) *QVector3D {
	var __rv uintptr
	q.Drv(187000, 187118, Native(v1), Native(v2), Native(v3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::normalize()
func (q *QVector3D) Normalize() {
	q.Drv(187000, 187119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector3D::normalized()
func (q *QVector3D) Normalized() *QVector3D {
	var __rv uintptr
	q.Drv(187000, 187120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector3D::setX(double)
func (q *QVector3D) SetX(x float64) {
	q.Drv(187000, 187121, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector3D::setY(double)
func (q *QVector3D) SetY(y float64) {
	q.Drv(187000, 187122, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector3D::setZ(double)
func (q *QVector3D) SetZ(z float64) {
	q.Drv(187000, 187123, unsafe.Pointer(&z), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector3D::toPoint()
func (q *QVector3D) ToPoint() *QPoint {
	var __rv uintptr
	q.Drv(187000, 187124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QVector3D::toPointF()
func (q *QVector3D) ToPointF() *QPointF {
	var __rv uintptr
	q.Drv(187000, 187125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QVector3D::toVector2D()
func (q *QVector3D) ToVector2D() *QVector2D {
	var __rv uintptr
	q.Drv(187000, 187126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector2D{}
	_rp.SetDriver(__rv, 186000, true)
	return _rp
}

//QVector3D::toVector4D()
func (q *QVector3D) ToVector4D() *QVector4D {
	var __rv uintptr
	q.Drv(187000, 187127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector4D{}
	_rp.SetDriver(__rv, 188000, true)
	return _rp
}

//QVector3D::x()
func (q *QVector3D) X() float64 {
	var __rv float64
	q.Drv(187000, 187128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::y()
func (q *QVector3D) Y() float64 {
	var __rv float64
	q.Drv(187000, 187129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector3D::z()
func (q *QVector3D) Z() float64 {
	var __rv float64
	q.Drv(187000, 187130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QVector4D : QVector4D
type QVector4D struct {
	BaseDrv
}

//QVector4D::QVector4D()
func NewVector4D() *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QPoint const&)
func NewVector4DWithPoint(point *QPoint) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188103, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QPointF const&)
func NewVector4DFWithPoint(point *QPointF) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188104, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QVector2D const&)
func NewVector4DWithVector2d(vector *QVector2D) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188105, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QVector3D const&)
func NewVector4DWithVector3d(vector *QVector3D) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188106, Native(vector), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QVector3D const&,double)
func NewVector4DWithVector3dWpos(vector *QVector3D, wpos float64) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188107, Native(vector), unsafe.Pointer(&wpos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(QVector2D const&,double,double)
func NewVector4DWithVector2dZposWpos(vector *QVector2D, zpos float64, wpos float64) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188108, Native(vector), unsafe.Pointer(&zpos), unsafe.Pointer(&wpos), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::QVector4D(double,double,double,double)
func NewVector4DWithXposYposZposWpos(xpos float64, ypos float64, zpos float64, wpos float64) *QVector4D {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 188000, 188109, unsafe.Pointer(&xpos), unsafe.Pointer(&ypos), unsafe.Pointer(&zpos), unsafe.Pointer(&wpos), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVector4D{}
	_p.SetDriver(__rv, 188000, true)
	return _p
}

//QVector4D::dotProduct(QVector4D const&,QVector4D const&)
func QVector4DDotProduct(v1 *QVector4D, v2 *QVector4D) float64 {
	var __rv float64
	DirectQtDrv(nil, 188000, 188110, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::dotProduct(QVector4D const&,QVector4D const&)
func (q *QVector4D) DotProduct(v1 *QVector4D, v2 *QVector4D) float64 {
	var __rv float64
	q.Drv(188000, 188110, Native(v1), Native(v2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::isNull()
func (q *QVector4D) IsNull() bool {
	var __rv bool
	q.Drv(188000, 188111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::length()
func (q *QVector4D) Length() float64 {
	var __rv float64
	q.Drv(188000, 188112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::lengthSquared()
func (q *QVector4D) LengthSquared() float64 {
	var __rv float64
	q.Drv(188000, 188113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::normalize()
func (q *QVector4D) Normalize() {
	q.Drv(188000, 188114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector4D::normalized()
func (q *QVector4D) Normalized() *QVector4D {
	var __rv uintptr
	q.Drv(188000, 188115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector4D{}
	_rp.SetDriver(__rv, 188000, true)
	return _rp
}

//QVector4D::setW(double)
func (q *QVector4D) SetW(w float64) {
	q.Drv(188000, 188116, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector4D::setX(double)
func (q *QVector4D) SetX(x float64) {
	q.Drv(188000, 188117, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector4D::setY(double)
func (q *QVector4D) SetY(y float64) {
	q.Drv(188000, 188118, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector4D::setZ(double)
func (q *QVector4D) SetZ(z float64) {
	q.Drv(188000, 188119, unsafe.Pointer(&z), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVector4D::toPoint()
func (q *QVector4D) ToPoint() *QPoint {
	var __rv uintptr
	q.Drv(188000, 188120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QVector4D::toPointF()
func (q *QVector4D) ToPointF() *QPointF {
	var __rv uintptr
	q.Drv(188000, 188121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QVector4D::toVector2D()
func (q *QVector4D) ToVector2D() *QVector2D {
	var __rv uintptr
	q.Drv(188000, 188122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector2D{}
	_rp.SetDriver(__rv, 186000, true)
	return _rp
}

//QVector4D::toVector2DAffine()
func (q *QVector4D) ToVector2DAffine() *QVector2D {
	var __rv uintptr
	q.Drv(188000, 188123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector2D{}
	_rp.SetDriver(__rv, 186000, true)
	return _rp
}

//QVector4D::toVector3D()
func (q *QVector4D) ToVector3D() *QVector3D {
	var __rv uintptr
	q.Drv(188000, 188124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector4D::toVector3DAffine()
func (q *QVector4D) ToVector3DAffine() *QVector3D {
	var __rv uintptr
	q.Drv(188000, 188125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QVector4D::w()
func (q *QVector4D) W() float64 {
	var __rv float64
	q.Drv(188000, 188126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::x()
func (q *QVector4D) X() float64 {
	var __rv float64
	q.Drv(188000, 188127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::y()
func (q *QVector4D) Y() float64 {
	var __rv float64
	q.Drv(188000, 188128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QVector4D::z()
func (q *QVector4D) Z() float64 {
	var __rv float64
	q.Drv(188000, 188129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QWhatsThis : QWhatsThis
type QWhatsThis struct {
	BaseDrv
}

//QWhatsThis::createAction()
func QWhatsThisCreateAction() *QAction {
	var __rv uintptr
	DirectQtDrv(nil, 189000, 189102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QWhatsThis::createAction()
func (q *QWhatsThis) CreateAction() *QAction {
	var __rv uintptr
	q.Drv(189000, 189102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QWhatsThis::createAction(QObject*)
func QWhatsThisCreateActionWithParent(parent QObjectInterface) *QAction {
	var __rv uintptr
	DirectQtDrv(nil, 189000, 189103, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QWhatsThis::createAction(QObject*)
func (q *QWhatsThis) CreateActionWithParent(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(189000, 189103, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QWhatsThis::enterWhatsThisMode()
func QWhatsThisEnterWhatsThisMode() {
	DirectQtDrv(nil, 189000, 189104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::enterWhatsThisMode()
func (q *QWhatsThis) EnterWhatsThisMode() {
	q.Drv(189000, 189104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::hideText()
func QWhatsThisHideText() {
	DirectQtDrv(nil, 189000, 189105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::hideText()
func (q *QWhatsThis) HideText() {
	q.Drv(189000, 189105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::inWhatsThisMode()
func QWhatsThisInWhatsThisMode() bool {
	var __rv bool
	DirectQtDrv(nil, 189000, 189106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWhatsThis::inWhatsThisMode()
func (q *QWhatsThis) InWhatsThisMode() bool {
	var __rv bool
	q.Drv(189000, 189106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWhatsThis::leaveWhatsThisMode()
func QWhatsThisLeaveWhatsThisMode() {
	DirectQtDrv(nil, 189000, 189107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::leaveWhatsThisMode()
func (q *QWhatsThis) LeaveWhatsThisMode() {
	q.Drv(189000, 189107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::showText(QPoint const&,QString const&,QWidget*)
func QWhatsThisShowText(pos *QPoint, text string, w QWidgetInterface) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	DirectQtDrv(nil, 189000, 189108, Native(pos), unsafe.Pointer(_text), Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWhatsThis::showText(QPoint const&,QString const&,QWidget*)
func (q *QWhatsThis) ShowText(pos *QPoint, text string, w QWidgetInterface) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(189000, 189108, Native(pos), unsafe.Pointer(_text), Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QWhatsThisClickedEvent : QWhatsThisClickedEvent
type QWhatsThisClickedEvent struct {
	QEvent
}

//QWhatsThisClickedEvent::QWhatsThisClickedEvent(QString const&)
func NewWhatsThisClickedEvent(href string) *QWhatsThisClickedEvent {
	_href := NewCStringHead(href)
	defer FreeCStringHead(_href)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 190000, 190102, unsafe.Pointer(_href), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWhatsThisClickedEvent{}
	_p.SetDriver(__rv, 190000, true)
	return _p
}

//QWhatsThisClickedEvent::href()
func (q *QWhatsThisClickedEvent) Href() string {
	var __rv C.string_head
	q.Drv(190000, 190103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QWheelEvent : QWheelEvent
type QWheelEvent struct {
	QInputEvent
}

//QWheelEvent::QWheelEvent(QPoint const&,int,QFlags<Qt::MouseButton>,QFlags<Qt::KeyboardModifier>,Qt::Orientation)
func NewWheelEvent(pos *QPoint, delta int32, buttons Qt_MouseButton, modifiers Qt_KeyboardModifier, orient Qt_Orientation) *QWheelEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 191000, 191102, Native(pos), unsafe.Pointer(&delta), unsafe.Pointer(&buttons), unsafe.Pointer(&modifiers), unsafe.Pointer(&orient), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWheelEvent{}
	_p.SetDriver(__rv, 191000, true)
	return _p
}

//QWheelEvent::QWheelEvent(QPoint const&,QPoint const&,int,QFlags<Qt::MouseButton>,QFlags<Qt::KeyboardModifier>,Qt::Orientation)
func NewWheelEventWithPosGlobalposDeltaButtonsModifiersOrient(pos *QPoint, globalPos *QPoint, delta int32, buttons Qt_MouseButton, modifiers Qt_KeyboardModifier, orient Qt_Orientation) *QWheelEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 191000, 191103, Native(pos), Native(globalPos), unsafe.Pointer(&delta), unsafe.Pointer(&buttons), unsafe.Pointer(&modifiers), unsafe.Pointer(&orient), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWheelEvent{}
	_p.SetDriver(__rv, 191000, true)
	return _p
}

//QWheelEvent::buttons()
func (q *QWheelEvent) Buttons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(191000, 191104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::delta()
func (q *QWheelEvent) Delta() int32 {
	var __rv int32
	q.Drv(191000, 191105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::globalPos()
func (q *QWheelEvent) GlobalPos() *QPoint {
	var __rv uintptr
	q.Drv(191000, 191106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWheelEvent::globalX()
func (q *QWheelEvent) GlobalX() int32 {
	var __rv int32
	q.Drv(191000, 191107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::globalY()
func (q *QWheelEvent) GlobalY() int32 {
	var __rv int32
	q.Drv(191000, 191108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::orientation()
func (q *QWheelEvent) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(191000, 191109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::pos()
func (q *QWheelEvent) Pos() *QPoint {
	var __rv uintptr
	q.Drv(191000, 191110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWheelEvent::x()
func (q *QWheelEvent) X() int32 {
	var __rv int32
	q.Drv(191000, 191111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWheelEvent::y()
func (q *QWheelEvent) Y() int32 {
	var __rv int32
	q.Drv(191000, 191112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QWidgetItem : QWidgetItem
type QWidgetItem struct {
	QLayoutItem
}

//QWidgetItem::QWidgetItem(QWidget*)
func NewWidgetItem(w QWidgetInterface) *QWidgetItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 192000, 192102, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWidgetItem{}
	_p.SetDriver(__rv, 192000, true)
	return _p
}

//struct QWindowStateChangeEvent : QWindowStateChangeEvent
type QWindowStateChangeEvent struct {
	QEvent
}

//QWindowStateChangeEvent::QWindowStateChangeEvent(QFlags<Qt::WindowState>)
func NewWindowStateChangeEvent(aOldState Qt_WindowState) *QWindowStateChangeEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 193000, 193102, unsafe.Pointer(&aOldState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWindowStateChangeEvent{}
	_p.SetDriver(__rv, 193000, true)
	return _p
}

//QWindowStateChangeEvent::QWindowStateChangeEvent(QFlags<Qt::WindowState>,bool)
func NewWindowStateChangeEventWithAoldstateIsoverride(aOldState Qt_WindowState, isOverride bool) *QWindowStateChangeEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 193000, 193103, unsafe.Pointer(&aOldState), unsafe.Pointer(&isOverride), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWindowStateChangeEvent{}
	_p.SetDriver(__rv, 193000, true)
	return _p
}

//QWindowStateChangeEvent::isOverride()
func (q *QWindowStateChangeEvent) IsOverride() bool {
	var __rv bool
	q.Drv(193000, 193104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWindowStateChangeEvent::oldState()
func (q *QWindowStateChangeEvent) OldState() Qt_WindowState {
	var __rv Qt_WindowState
	q.Drv(193000, 193105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QAbstractAnimation_Direction - QAbstractAnimation::Direction
type QAbstractAnimation_Direction uint32

const (
	QAbstractAnimation_Forward  QAbstractAnimation_Direction = 0
	QAbstractAnimation_Backward QAbstractAnimation_Direction = 1
)

//enum QAbstractAnimation_DeletionPolicy - QAbstractAnimation::DeletionPolicy
type QAbstractAnimation_DeletionPolicy uint32

const (
	QAbstractAnimation_KeepWhenStopped   QAbstractAnimation_DeletionPolicy = 0
	QAbstractAnimation_DeleteWhenStopped QAbstractAnimation_DeletionPolicy = 0
)

//enum QAbstractAnimation_State - QAbstractAnimation::State
type QAbstractAnimation_State uint32

const (
	QAbstractAnimation_Stopped QAbstractAnimation_State = 0
	QAbstractAnimation_Paused  QAbstractAnimation_State = 1
	QAbstractAnimation_Running QAbstractAnimation_State = 2
)

//struct QAbstractAnimation : QAbstractAnimation
type QAbstractAnimation struct {
	QObject
}

func (q *QAbstractAnimation) OnFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(194000, 194102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractAnimation) OnCurrentLoopChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(194000, 194103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractAnimation) OnStateChanged(fn func(QAbstractAnimation_State, QAbstractAnimation_State)) uintptr {
	var __rv uintptr
	q.Drv(194000, 194104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractAnimation) OnDirectionChanged(fn func(QAbstractAnimation_Direction)) uintptr {
	var __rv uintptr
	q.Drv(194000, 194105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractAnimation::currentLoop()
func (q *QAbstractAnimation) CurrentLoop() int32 {
	var __rv int32
	q.Drv(194000, 194106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::currentLoopTime()
func (q *QAbstractAnimation) CurrentLoopTime() int32 {
	var __rv int32
	q.Drv(194000, 194107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::currentTime()
func (q *QAbstractAnimation) CurrentTime() int32 {
	var __rv int32
	q.Drv(194000, 194108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::direction()
func (q *QAbstractAnimation) Direction() QAbstractAnimation_Direction {
	var __rv QAbstractAnimation_Direction
	q.Drv(194000, 194109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::duration()
func (q *QAbstractAnimation) Duration() int32 {
	var __rv int32
	q.Drv(194000, 194110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::group()
func (q *QAbstractAnimation) Group() *QAnimationGroup {
	var __rv uintptr
	q.Drv(194000, 194111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAnimationGroup{}
	_rp.SetDriver(__rv, 211000, false)
	return _rp
}

//QAbstractAnimation::loopCount()
func (q *QAbstractAnimation) LoopCount() int32 {
	var __rv int32
	q.Drv(194000, 194112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::pause()
func (q *QAbstractAnimation) Pause() {
	q.Drv(194000, 194113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::resume()
func (q *QAbstractAnimation) Resume() {
	q.Drv(194000, 194114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::setCurrentTime(int)
func (q *QAbstractAnimation) SetCurrentTime(msecs int32) {
	q.Drv(194000, 194115, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::setDirection(QAbstractAnimation::Direction)
func (q *QAbstractAnimation) SetDirection(direction QAbstractAnimation_Direction) {
	q.Drv(194000, 194116, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::setLoopCount(int)
func (q *QAbstractAnimation) SetLoopCount(loopCount int32) {
	q.Drv(194000, 194117, unsafe.Pointer(&loopCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::setPaused(bool)
func (q *QAbstractAnimation) SetPaused(value bool) {
	q.Drv(194000, 194118, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::start()
func (q *QAbstractAnimation) Start() {
	q.Drv(194000, 194119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::start(QAbstractAnimation::DeletionPolicy)
func (q *QAbstractAnimation) StartWithPolicy(policy QAbstractAnimation_DeletionPolicy) {
	q.Drv(194000, 194120, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::state()
func (q *QAbstractAnimation) State() QAbstractAnimation_State {
	var __rv QAbstractAnimation_State
	q.Drv(194000, 194121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::stop()
func (q *QAbstractAnimation) Stop() {
	q.Drv(194000, 194122, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::totalDuration()
func (q *QAbstractAnimation) TotalDuration() int32 {
	var __rv int32
	q.Drv(194000, 194123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractAnimation::updateCurrentTime(int)
func (q *QAbstractAnimation) UpdateCurrentTime(currentTime int32) {
	q.Drv(194000, 194124, unsafe.Pointer(&currentTime), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::updateDirection(QAbstractAnimation::Direction)
func (q *QAbstractAnimation) UpdateDirection(direction QAbstractAnimation_Direction) {
	q.Drv(194000, 194125, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractAnimation::updateState(QAbstractAnimation::State,QAbstractAnimation::State)
func (q *QAbstractAnimation) UpdateState(newState QAbstractAnimation_State, oldState QAbstractAnimation_State) {
	q.Drv(194000, 194126, unsafe.Pointer(&newState), unsafe.Pointer(&oldState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QAbstractButton : QAbstractButton
type QAbstractButton struct {
	QWidget
}

func (q *QAbstractButton) OnClicked(fn func()) uintptr {
	var __rv uintptr
	q.Drv(195000, 195102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractButton) OnClickedEx(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(195000, 195103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractButton) OnPressed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(195000, 195104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractButton) OnReleased(fn func()) uintptr {
	var __rv uintptr
	q.Drv(195000, 195105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractButton) OnToggled(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(195000, 195106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractButton::animateClick()
func (q *QAbstractButton) AnimateClick() {
	q.Drv(195000, 195107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::animateClick(int)
func (q *QAbstractButton) AnimateClickWithMsec(msec int32) {
	q.Drv(195000, 195108, unsafe.Pointer(&msec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::autoExclusive()
func (q *QAbstractButton) AutoExclusive() bool {
	var __rv bool
	q.Drv(195000, 195109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::autoRepeat()
func (q *QAbstractButton) AutoRepeat() bool {
	var __rv bool
	q.Drv(195000, 195110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::autoRepeatDelay()
func (q *QAbstractButton) AutoRepeatDelay() int32 {
	var __rv int32
	q.Drv(195000, 195111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::autoRepeatInterval()
func (q *QAbstractButton) AutoRepeatInterval() int32 {
	var __rv int32
	q.Drv(195000, 195112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::checkStateSet()
func (q *QAbstractButton) CheckStateSet() {
	q.Drv(195000, 195113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::click()
func (q *QAbstractButton) Click() {
	q.Drv(195000, 195114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::group()
func (q *QAbstractButton) Group() *QButtonGroup {
	var __rv uintptr
	q.Drv(195000, 195115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QButtonGroup{}
	_rp.SetDriver(__rv, 213000, false)
	return _rp
}

//QAbstractButton::hitButton(QPoint const&)
func (q *QAbstractButton) HitButton(pos *QPoint) bool {
	var __rv bool
	q.Drv(195000, 195116, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::icon()
func (q *QAbstractButton) Icon() *QIcon {
	var __rv uintptr
	q.Drv(195000, 195117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QAbstractButton::iconSize()
func (q *QAbstractButton) IconSize() *QSize {
	var __rv uintptr
	q.Drv(195000, 195118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QAbstractButton::isCheckable()
func (q *QAbstractButton) IsCheckable() bool {
	var __rv bool
	q.Drv(195000, 195119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::isChecked()
func (q *QAbstractButton) IsChecked() bool {
	var __rv bool
	q.Drv(195000, 195120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::isDown()
func (q *QAbstractButton) IsDown() bool {
	var __rv bool
	q.Drv(195000, 195121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractButton::nextCheckState()
func (q *QAbstractButton) NextCheckState() {
	q.Drv(195000, 195122, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setAutoExclusive(bool)
func (q *QAbstractButton) SetAutoExclusive(value bool) {
	q.Drv(195000, 195123, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setAutoRepeat(bool)
func (q *QAbstractButton) SetAutoRepeat(value bool) {
	q.Drv(195000, 195124, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setAutoRepeatDelay(int)
func (q *QAbstractButton) SetAutoRepeatDelay(value int32) {
	q.Drv(195000, 195125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setAutoRepeatInterval(int)
func (q *QAbstractButton) SetAutoRepeatInterval(value int32) {
	q.Drv(195000, 195126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setCheckable(bool)
func (q *QAbstractButton) SetCheckable(value bool) {
	q.Drv(195000, 195127, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setChecked(bool)
func (q *QAbstractButton) SetChecked(value bool) {
	q.Drv(195000, 195128, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setDown(bool)
func (q *QAbstractButton) SetDown(value bool) {
	q.Drv(195000, 195129, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setIcon(QIcon const&)
func (q *QAbstractButton) SetIcon(icon *QIcon) {
	q.Drv(195000, 195130, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setIconSize(QSize const&)
func (q *QAbstractButton) SetIconSize(size *QSize) {
	q.Drv(195000, 195131, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setShortcut(QKeySequence const&)
func (q *QAbstractButton) SetShortcut(key *QKeySequence) {
	q.Drv(195000, 195132, Native(key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::setText(QString const&)
func (q *QAbstractButton) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(195000, 195133, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractButton::shortcut()
func (q *QAbstractButton) Shortcut() *QKeySequence {
	var __rv uintptr
	q.Drv(195000, 195134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QAbstractButton::text()
func (q *QAbstractButton) Text() string {
	var __rv C.string_head
	q.Drv(195000, 195135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractButton::toggle()
func (q *QAbstractButton) Toggle() {
	q.Drv(195000, 195136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QAbstractItemDelegate_EndEditHint - QAbstractItemDelegate::EndEditHint
type QAbstractItemDelegate_EndEditHint uint32

const (
	QAbstractItemDelegate_NoHint           QAbstractItemDelegate_EndEditHint = 0
	QAbstractItemDelegate_EditNextItem     QAbstractItemDelegate_EndEditHint = 1
	QAbstractItemDelegate_EditPreviousItem QAbstractItemDelegate_EndEditHint = 2
	QAbstractItemDelegate_SubmitModelCache QAbstractItemDelegate_EndEditHint = 3
	QAbstractItemDelegate_RevertModelCache QAbstractItemDelegate_EndEditHint = 4
)

//struct QAbstractItemDelegate : QAbstractItemDelegate
type QAbstractItemDelegate struct {
	QObject
}

func (q *QAbstractItemDelegate) OnSizeHintChanged(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(196000, 196102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemDelegate) OnCommitData(fn func(*QWidget)) uintptr {
	var __rv uintptr
	q.Drv(196000, 196103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemDelegate) OnCloseEditor(fn func(*QWidget, QAbstractItemDelegate_EndEditHint)) uintptr {
	var __rv uintptr
	q.Drv(196000, 196104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractItemDelegate::elidedText(QFontMetrics const&,int,Qt::TextElideMode,QString const&)
func QAbstractItemDelegateElidedText(fontMetrics *QFontMetrics, width int32, mode Qt_TextElideMode, text string) string {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	DirectQtDrv(nil, 196000, 196105, Native(fontMetrics), unsafe.Pointer(&width), unsafe.Pointer(&mode), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractItemDelegate::elidedText(QFontMetrics const&,int,Qt::TextElideMode,QString const&)
func (q *QAbstractItemDelegate) ElidedText(fontMetrics *QFontMetrics, width int32, mode Qt_TextElideMode, text string) string {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	q.Drv(196000, 196105, Native(fontMetrics), unsafe.Pointer(&width), unsafe.Pointer(&mode), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractItemDelegate::setEditorData(QWidget*,QModelIndex const&)
func (q *QAbstractItemDelegate) SetEditorData(editor QWidgetInterface, index *QModelIndex) {
	q.Drv(196000, 196106, Native(editor), Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemDelegate::setModelData(QWidget*,QAbstractItemModel*,QModelIndex const&)
func (q *QAbstractItemDelegate) SetModelData(editor QWidgetInterface, model QAbstractItemModelInterface, index *QModelIndex) {
	q.Drv(196000, 196107, Native(editor), Native(model), Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QAbstractItemModel : QAbstractItemModel
type QAbstractItemModel struct {
	QObject
}

func (q *QAbstractItemModel) OnLayoutChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(197000, 197102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemModel) OnHeaderDataChanged(fn func(Qt_Orientation, int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(197000, 197103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemModel) OnDataChanged(fn func(*QModelIndex, *QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(197000, 197104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemModel) OnLayoutAboutToBeChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(197000, 197105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractItemModel::beginInsertColumns(QModelIndex const&,int,int)
func (q *QAbstractItemModel) BeginInsertColumns(parent *QModelIndex, first int32, last int32) {
	q.Drv(197000, 197106, Native(parent), unsafe.Pointer(&first), unsafe.Pointer(&last), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::beginInsertRows(QModelIndex const&,int,int)
func (q *QAbstractItemModel) BeginInsertRows(parent *QModelIndex, first int32, last int32) {
	q.Drv(197000, 197107, Native(parent), unsafe.Pointer(&first), unsafe.Pointer(&last), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::beginMoveColumns(QModelIndex const&,int,int,QModelIndex const&,int)
func (q *QAbstractItemModel) BeginMoveColumns(sourceParent *QModelIndex, sourceFirst int32, sourceLast int32, destinationParent *QModelIndex, destinationColumn int32) bool {
	var __rv bool
	q.Drv(197000, 197108, Native(sourceParent), unsafe.Pointer(&sourceFirst), unsafe.Pointer(&sourceLast), Native(destinationParent), unsafe.Pointer(&destinationColumn), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::beginMoveRows(QModelIndex const&,int,int,QModelIndex const&,int)
func (q *QAbstractItemModel) BeginMoveRows(sourceParent *QModelIndex, sourceFirst int32, sourceLast int32, destinationParent *QModelIndex, destinationRow int32) bool {
	var __rv bool
	q.Drv(197000, 197109, Native(sourceParent), unsafe.Pointer(&sourceFirst), unsafe.Pointer(&sourceLast), Native(destinationParent), unsafe.Pointer(&destinationRow), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::beginRemoveColumns(QModelIndex const&,int,int)
func (q *QAbstractItemModel) BeginRemoveColumns(parent *QModelIndex, first int32, last int32) {
	q.Drv(197000, 197110, Native(parent), unsafe.Pointer(&first), unsafe.Pointer(&last), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::beginRemoveRows(QModelIndex const&,int,int)
func (q *QAbstractItemModel) BeginRemoveRows(parent *QModelIndex, first int32, last int32) {
	q.Drv(197000, 197111, Native(parent), unsafe.Pointer(&first), unsafe.Pointer(&last), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::beginResetModel()
func (q *QAbstractItemModel) BeginResetModel() {
	q.Drv(197000, 197112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::buddy(QModelIndex const&)
func (q *QAbstractItemModel) Buddy(index *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197113, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::canFetchMore(QModelIndex const&)
func (q *QAbstractItemModel) CanFetchMore(parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197114, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::changePersistentIndex(QModelIndex const&,QModelIndex const&)
func (q *QAbstractItemModel) ChangePersistentIndex(from *QModelIndex, to *QModelIndex) {
	q.Drv(197000, 197115, Native(from), Native(to), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::changePersistentIndexList(QList<QModelIndex> const&,QList<QModelIndex> const&)
func (q *QAbstractItemModel) ChangePersistentIndexList(from []*QModelIndex, to []*QModelIndex) {
	_from := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&from)))
	defer FreeCNoObjectArrayHead(_from)
	_to := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&to)))
	defer FreeCNoObjectArrayHead(_to)
	q.Drv(197000, 197116, unsafe.Pointer(_from), unsafe.Pointer(_to), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::columnCount()
func (q *QAbstractItemModel) ColumnCount() int32 {
	var __rv int32
	q.Drv(197000, 197117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::columnCount(QModelIndex const&)
func (q *QAbstractItemModel) ColumnCountWithParent(parent *QModelIndex) int32 {
	var __rv int32
	q.Drv(197000, 197118, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::createIndex(int,int,int)
func (q *QAbstractItemModel) CreateIndex(row int32, column int32, id int32) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197119, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::createIndex(int,int,unsigned int)
func (q *QAbstractItemModel) CreateIndexWithRowColumnId(row int32, column int32, id uint32) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197120, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::createIndex(int,int,void*)
func (q *QAbstractItemModel) CreateIndexWithRowColumnData(row int32, column int32, data uintptr) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197121, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::data(QModelIndex const&)
func (q *QAbstractItemModel) Data(index *QModelIndex) *QVariant {
	var __rv uintptr
	q.Drv(197000, 197122, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QAbstractItemModel::data(QModelIndex const&,int)
func (q *QAbstractItemModel) DataWithIndexRole(index *QModelIndex, role int32) *QVariant {
	var __rv uintptr
	q.Drv(197000, 197123, Native(index), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QAbstractItemModel::dropMimeData(QMimeData const*,Qt::DropAction,int,int,QModelIndex const&)
func (q *QAbstractItemModel) DropMimeData(data *QMimeData, action Qt_DropAction, row int32, column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197124, Native(data), unsafe.Pointer(&action), unsafe.Pointer(&row), unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::endInsertColumns()
func (q *QAbstractItemModel) EndInsertColumns() {
	q.Drv(197000, 197125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endInsertRows()
func (q *QAbstractItemModel) EndInsertRows() {
	q.Drv(197000, 197126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endMoveColumns()
func (q *QAbstractItemModel) EndMoveColumns() {
	q.Drv(197000, 197127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endMoveRows()
func (q *QAbstractItemModel) EndMoveRows() {
	q.Drv(197000, 197128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endRemoveColumns()
func (q *QAbstractItemModel) EndRemoveColumns() {
	q.Drv(197000, 197129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endRemoveRows()
func (q *QAbstractItemModel) EndRemoveRows() {
	q.Drv(197000, 197130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::endResetModel()
func (q *QAbstractItemModel) EndResetModel() {
	q.Drv(197000, 197131, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::fetchMore(QModelIndex const&)
func (q *QAbstractItemModel) FetchMore(parent *QModelIndex) {
	q.Drv(197000, 197132, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::flags(QModelIndex const&)
func (q *QAbstractItemModel) Flags(index *QModelIndex) Qt_ItemFlag {
	var __rv Qt_ItemFlag
	q.Drv(197000, 197133, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::hasChildren()
func (q *QAbstractItemModel) HasChildren() bool {
	var __rv bool
	q.Drv(197000, 197134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::hasChildren(QModelIndex const&)
func (q *QAbstractItemModel) HasChildrenWithParent(parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197135, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::hasIndex(int,int,QModelIndex const&)
func (q *QAbstractItemModel) HasIndex(row int32, column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197136, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::headerData(int,Qt::Orientation,int)
func (q *QAbstractItemModel) HeaderData(section int32, orientation Qt_Orientation, role int32) *QVariant {
	var __rv uintptr
	q.Drv(197000, 197137, unsafe.Pointer(&section), unsafe.Pointer(&orientation), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QAbstractItemModel::index(int,int,QModelIndex const&)
func (q *QAbstractItemModel) Index(row int32, column int32, parent *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197138, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::insertColumn(int)
func (q *QAbstractItemModel) InsertColumn(column int32) bool {
	var __rv bool
	q.Drv(197000, 197139, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::insertColumn(int,QModelIndex const&)
func (q *QAbstractItemModel) InsertColumnWithColumnParent(column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197140, unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::insertColumns(int,int,QModelIndex const&)
func (q *QAbstractItemModel) InsertColumns(column int32, count int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197141, unsafe.Pointer(&column), unsafe.Pointer(&count), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::insertRow(int)
func (q *QAbstractItemModel) InsertRow(row int32) bool {
	var __rv bool
	q.Drv(197000, 197142, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::insertRow(int,QModelIndex const&)
func (q *QAbstractItemModel) InsertRowWithRowParent(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197143, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::insertRows(int,int,QModelIndex const&)
func (q *QAbstractItemModel) InsertRows(row int32, count int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197144, unsafe.Pointer(&row), unsafe.Pointer(&count), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::itemData(QModelIndex const&)
func (q *QAbstractItemModel) ItemData(index *QModelIndex) map[int32]*QVariant {
	var __rv uintptr
	q.Drv(197000, 197145, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIntVariantMap{}
	_rp.SetDriver(__rv, 60000, true)
	defer _rp.Delete()
	return FromIntVariantMap(_rp)
}

//QAbstractItemModel::match(QModelIndex const&,int,QVariant const&,int,QFlags<Qt::MatchFlag>)
func (q *QAbstractItemModel) Match(start *QModelIndex, role int32, value *QVariant, hits int32, flags Qt_MatchFlag) []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(197000, 197146, Native(start), unsafe.Pointer(&role), Native(value), unsafe.Pointer(&hits), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::mimeData(QList<QModelIndex> const&)
func (q *QAbstractItemModel) MimeData(indexes []*QModelIndex) *QMimeData {
	_indexes := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&indexes)))
	defer FreeCNoObjectArrayHead(_indexes)
	var __rv uintptr
	q.Drv(197000, 197147, unsafe.Pointer(_indexes), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QAbstractItemModel::mimeTypes()
func (q *QAbstractItemModel) MimeTypes() []string {
	var __rv []string
	q.Drv(197000, 197148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::parent()
func (q *QAbstractItemModel) Parent() *QObject {
	var __rv uintptr
	q.Drv(197000, 197149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QAbstractItemModel::parent(QModelIndex const&)
func (q *QAbstractItemModel) ParentWithChild(child *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197150, Native(child), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::persistentIndexList()
func (q *QAbstractItemModel) PersistentIndexList() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(197000, 197151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeColumn(int)
func (q *QAbstractItemModel) RemoveColumn(column int32) bool {
	var __rv bool
	q.Drv(197000, 197152, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeColumn(int,QModelIndex const&)
func (q *QAbstractItemModel) RemoveColumnWithColumnParent(column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197153, unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeColumns(int,int,QModelIndex const&)
func (q *QAbstractItemModel) RemoveColumns(column int32, count int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197154, unsafe.Pointer(&column), unsafe.Pointer(&count), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeRow(int)
func (q *QAbstractItemModel) RemoveRow(row int32) bool {
	var __rv bool
	q.Drv(197000, 197155, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeRow(int,QModelIndex const&)
func (q *QAbstractItemModel) RemoveRowWithRowParent(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197156, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::removeRows(int,int,QModelIndex const&)
func (q *QAbstractItemModel) RemoveRows(row int32, count int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(197000, 197157, unsafe.Pointer(&row), unsafe.Pointer(&count), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::revert()
func (q *QAbstractItemModel) Revert() {
	q.Drv(197000, 197158, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::rowCount()
func (q *QAbstractItemModel) RowCount() int32 {
	var __rv int32
	q.Drv(197000, 197159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::rowCount(QModelIndex const&)
func (q *QAbstractItemModel) RowCountWithParent(parent *QModelIndex) int32 {
	var __rv int32
	q.Drv(197000, 197160, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::setData(QModelIndex const&,QVariant const&,int)
func (q *QAbstractItemModel) SetData(index *QModelIndex, value *QVariant, role int32) bool {
	var __rv bool
	q.Drv(197000, 197161, Native(index), Native(value), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::setHeaderData(int,Qt::Orientation,QVariant const&,int)
func (q *QAbstractItemModel) SetHeaderData(section int32, orientation Qt_Orientation, value *QVariant, role int32) bool {
	var __rv bool
	q.Drv(197000, 197162, unsafe.Pointer(&section), unsafe.Pointer(&orientation), Native(value), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::setItemData(QModelIndex const&,QMap<int,QVariant> const&)
func (q *QAbstractItemModel) SetItemData(index *QModelIndex, roles map[int32]*QVariant) bool {
	_roles := ToIntVariantMap(roles)
	defer _roles.Delete()
	var __rv bool
	q.Drv(197000, 197163, Native(index), unsafe.Pointer(_roles.Native()), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::sibling(int,int,QModelIndex const&)
func (q *QAbstractItemModel) Sibling(row int32, column int32, idx *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(197000, 197164, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(idx), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemModel::sort(int)
func (q *QAbstractItemModel) Sort(column int32) {
	q.Drv(197000, 197165, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::sort(int,Qt::SortOrder)
func (q *QAbstractItemModel) SortWithColumnOrder(column int32, order Qt_SortOrder) {
	q.Drv(197000, 197166, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemModel::span(QModelIndex const&)
func (q *QAbstractItemModel) Span(index *QModelIndex) *QSize {
	var __rv uintptr
	q.Drv(197000, 197167, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QAbstractItemModel::submit()
func (q *QAbstractItemModel) Submit() bool {
	var __rv bool
	q.Drv(197000, 197168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::supportedDragActions()
func (q *QAbstractItemModel) SupportedDragActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(197000, 197169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemModel::supportedDropActions()
func (q *QAbstractItemModel) SupportedDropActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(197000, 197170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QAbstractItemView_DragDropMode - QAbstractItemView::DragDropMode
type QAbstractItemView_DragDropMode uint32

const (
	QAbstractItemView_NoDragDrop   QAbstractItemView_DragDropMode = 0
	QAbstractItemView_DragOnly     QAbstractItemView_DragDropMode = 1
	QAbstractItemView_DropOnly     QAbstractItemView_DragDropMode = 2
	QAbstractItemView_DragDrop     QAbstractItemView_DragDropMode = 3
	QAbstractItemView_InternalMove QAbstractItemView_DragDropMode = 4
)

//enum QAbstractItemView_SelectionBehavior - QAbstractItemView::SelectionBehavior
type QAbstractItemView_SelectionBehavior uint32

const (
	QAbstractItemView_SelectItems   QAbstractItemView_SelectionBehavior = 0
	QAbstractItemView_SelectRows    QAbstractItemView_SelectionBehavior = 1
	QAbstractItemView_SelectColumns QAbstractItemView_SelectionBehavior = 2
)

//enum QAbstractItemView_EditTrigger - QAbstractItemView::EditTrigger
type QAbstractItemView_EditTrigger uint32

const (
	QAbstractItemView_NoEditTriggers  QAbstractItemView_EditTrigger = 0
	QAbstractItemView_CurrentChanged  QAbstractItemView_EditTrigger = 1
	QAbstractItemView_DoubleClicked   QAbstractItemView_EditTrigger = 2
	QAbstractItemView_SelectedClicked QAbstractItemView_EditTrigger = 4
	QAbstractItemView_EditKeyPressed  QAbstractItemView_EditTrigger = 8
	QAbstractItemView_AnyKeyPressed   QAbstractItemView_EditTrigger = 16
	QAbstractItemView_AllEditTriggers QAbstractItemView_EditTrigger = 31
)

//enum QAbstractItemView_ScrollMode - QAbstractItemView::ScrollMode
type QAbstractItemView_ScrollMode uint32

const (
	QAbstractItemView_ScrollPerItem  QAbstractItemView_ScrollMode = 0
	QAbstractItemView_ScrollPerPixel QAbstractItemView_ScrollMode = 1
)

//enum QAbstractItemView_CursorAction - QAbstractItemView::CursorAction
type QAbstractItemView_CursorAction uint32

const (
	QAbstractItemView_MoveUp       QAbstractItemView_CursorAction = 0
	QAbstractItemView_MoveDown     QAbstractItemView_CursorAction = 1
	QAbstractItemView_MoveLeft     QAbstractItemView_CursorAction = 2
	QAbstractItemView_MoveRight    QAbstractItemView_CursorAction = 3
	QAbstractItemView_MoveHome     QAbstractItemView_CursorAction = 4
	QAbstractItemView_MoveEnd      QAbstractItemView_CursorAction = 5
	QAbstractItemView_MovePageUp   QAbstractItemView_CursorAction = 6
	QAbstractItemView_MovePageDown QAbstractItemView_CursorAction = 7
	QAbstractItemView_MoveNext     QAbstractItemView_CursorAction = 8
	QAbstractItemView_MovePrevious QAbstractItemView_CursorAction = 9
)

//enum QAbstractItemView_DropIndicatorPosition - QAbstractItemView::DropIndicatorPosition
type QAbstractItemView_DropIndicatorPosition uint32

const (
	QAbstractItemView_OnItem     QAbstractItemView_DropIndicatorPosition = 0
	QAbstractItemView_AboveItem  QAbstractItemView_DropIndicatorPosition = 1
	QAbstractItemView_BelowItem  QAbstractItemView_DropIndicatorPosition = 2
	QAbstractItemView_OnViewport QAbstractItemView_DropIndicatorPosition = 3
)

//enum QAbstractItemView_ScrollHint - QAbstractItemView::ScrollHint
type QAbstractItemView_ScrollHint uint32

const (
	QAbstractItemView_EnsureVisible    QAbstractItemView_ScrollHint = 0
	QAbstractItemView_PositionAtTop    QAbstractItemView_ScrollHint = 1
	QAbstractItemView_PositionAtBottom QAbstractItemView_ScrollHint = 2
	QAbstractItemView_PositionAtCenter QAbstractItemView_ScrollHint = 3
)

//enum QAbstractItemView_SelectionMode - QAbstractItemView::SelectionMode
type QAbstractItemView_SelectionMode uint32

const (
	QAbstractItemView_NoSelection         QAbstractItemView_SelectionMode = 0
	QAbstractItemView_SingleSelection     QAbstractItemView_SelectionMode = 1
	QAbstractItemView_MultiSelection      QAbstractItemView_SelectionMode = 2
	QAbstractItemView_ExtendedSelection   QAbstractItemView_SelectionMode = 3
	QAbstractItemView_ContiguousSelection QAbstractItemView_SelectionMode = 4
)

//enum QAbstractItemView_State - QAbstractItemView::State
type QAbstractItemView_State uint32

const (
	QAbstractItemView_NoState            QAbstractItemView_State = 0
	QAbstractItemView_DraggingState      QAbstractItemView_State = 1
	QAbstractItemView_DragSelectingState QAbstractItemView_State = 2
	QAbstractItemView_EditingState       QAbstractItemView_State = 3
	QAbstractItemView_ExpandingState     QAbstractItemView_State = 4
	QAbstractItemView_CollapsingState    QAbstractItemView_State = 5
	QAbstractItemView_AnimatingState     QAbstractItemView_State = 6
)

//struct QAbstractItemView : QAbstractItemView
type QAbstractItemView struct {
	QAbstractScrollArea
}

func (q *QAbstractItemView) OnPressed(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(198000, 198102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemView) OnDoubleClicked(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(198000, 198103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemView) OnActivated(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(198000, 198104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemView) OnClicked(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(198000, 198105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemView) OnEntered(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(198000, 198106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractItemView) OnViewportEntered(fn func()) uintptr {
	var __rv uintptr
	q.Drv(198000, 198107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractItemView::alternatingRowColors()
func (q *QAbstractItemView) AlternatingRowColors() bool {
	var __rv bool
	q.Drv(198000, 198108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::autoScrollMargin()
func (q *QAbstractItemView) AutoScrollMargin() int32 {
	var __rv int32
	q.Drv(198000, 198109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::clearSelection()
func (q *QAbstractItemView) ClearSelection() {
	q.Drv(198000, 198110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::closeEditor(QWidget*,QAbstractItemDelegate::EndEditHint)
func (q *QAbstractItemView) CloseEditor(editor QWidgetInterface, hint QAbstractItemDelegate_EndEditHint) {
	q.Drv(198000, 198111, Native(editor), unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::closePersistentEditor(QModelIndex const&)
func (q *QAbstractItemView) ClosePersistentEditor(index *QModelIndex) {
	q.Drv(198000, 198112, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::commitData(QWidget*)
func (q *QAbstractItemView) CommitData(editor QWidgetInterface) {
	q.Drv(198000, 198113, Native(editor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::currentChanged(QModelIndex const&,QModelIndex const&)
func (q *QAbstractItemView) CurrentChanged(current *QModelIndex, previous *QModelIndex) {
	q.Drv(198000, 198114, Native(current), Native(previous), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::currentIndex()
func (q *QAbstractItemView) CurrentIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(198000, 198115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemView::dataChanged(QModelIndex const&,QModelIndex const&)
func (q *QAbstractItemView) DataChanged(topLeft *QModelIndex, bottomRight *QModelIndex) {
	q.Drv(198000, 198116, Native(topLeft), Native(bottomRight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::defaultDropAction()
func (q *QAbstractItemView) DefaultDropAction() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(198000, 198117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::dirtyRegionOffset()
func (q *QAbstractItemView) DirtyRegionOffset() *QPoint {
	var __rv uintptr
	q.Drv(198000, 198118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QAbstractItemView::doAutoScroll()
func (q *QAbstractItemView) DoAutoScroll() {
	q.Drv(198000, 198119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::doItemsLayout()
func (q *QAbstractItemView) DoItemsLayout() {
	q.Drv(198000, 198120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::dragDropMode()
func (q *QAbstractItemView) DragDropMode() QAbstractItemView_DragDropMode {
	var __rv QAbstractItemView_DragDropMode
	q.Drv(198000, 198121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::dragDropOverwriteMode()
func (q *QAbstractItemView) DragDropOverwriteMode() bool {
	var __rv bool
	q.Drv(198000, 198122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::dragEnabled()
func (q *QAbstractItemView) DragEnabled() bool {
	var __rv bool
	q.Drv(198000, 198123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::dropIndicatorPosition()
func (q *QAbstractItemView) DropIndicatorPosition() QAbstractItemView_DropIndicatorPosition {
	var __rv QAbstractItemView_DropIndicatorPosition
	q.Drv(198000, 198124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::edit(QModelIndex const&)
func (q *QAbstractItemView) Edit(index *QModelIndex) {
	q.Drv(198000, 198125, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::edit(QModelIndex const&,QAbstractItemView::EditTrigger,QEvent*)
func (q *QAbstractItemView) EditWithIndexTriggerEvent(index *QModelIndex, trigger QAbstractItemView_EditTrigger, event *QEvent) bool {
	var __rv bool
	q.Drv(198000, 198126, Native(index), unsafe.Pointer(&trigger), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::editTriggers()
func (q *QAbstractItemView) EditTriggers() QAbstractItemView_EditTrigger {
	var __rv QAbstractItemView_EditTrigger
	q.Drv(198000, 198127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::editorDestroyed(QObject*)
func (q *QAbstractItemView) EditorDestroyed(editor QObjectInterface) {
	q.Drv(198000, 198128, Native(editor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::executeDelayedItemsLayout()
func (q *QAbstractItemView) ExecuteDelayedItemsLayout() {
	q.Drv(198000, 198129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::hasAutoScroll()
func (q *QAbstractItemView) HasAutoScroll() bool {
	var __rv bool
	q.Drv(198000, 198130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::horizontalOffset()
func (q *QAbstractItemView) HorizontalOffset() int32 {
	var __rv int32
	q.Drv(198000, 198131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::horizontalScrollMode()
func (q *QAbstractItemView) HorizontalScrollMode() QAbstractItemView_ScrollMode {
	var __rv QAbstractItemView_ScrollMode
	q.Drv(198000, 198132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::horizontalScrollbarAction(int)
func (q *QAbstractItemView) HorizontalScrollbarAction(action int32) {
	q.Drv(198000, 198133, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::horizontalScrollbarValueChanged(int)
func (q *QAbstractItemView) HorizontalScrollbarValueChanged(value int32) {
	q.Drv(198000, 198134, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::horizontalStepsPerItem()
func (q *QAbstractItemView) HorizontalStepsPerItem() int32 {
	var __rv int32
	q.Drv(198000, 198135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::iconSize()
func (q *QAbstractItemView) IconSize() *QSize {
	var __rv uintptr
	q.Drv(198000, 198136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QAbstractItemView::indexAt(QPoint const&)
func (q *QAbstractItemView) IndexAt(point *QPoint) *QModelIndex {
	var __rv uintptr
	q.Drv(198000, 198137, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemView::indexWidget(QModelIndex const&)
func (q *QAbstractItemView) IndexWidget(index *QModelIndex) *QWidget {
	var __rv uintptr
	q.Drv(198000, 198138, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QAbstractItemView::isIndexHidden(QModelIndex const&)
func (q *QAbstractItemView) IsIndexHidden(index *QModelIndex) bool {
	var __rv bool
	q.Drv(198000, 198139, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::itemDelegate()
func (q *QAbstractItemView) ItemDelegate() *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(198000, 198140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QAbstractItemView::itemDelegate(QModelIndex const&)
func (q *QAbstractItemView) ItemDelegateWithIndex(index *QModelIndex) *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(198000, 198141, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QAbstractItemView::itemDelegateForColumn(int)
func (q *QAbstractItemView) ItemDelegateForColumn(column int32) *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(198000, 198142, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QAbstractItemView::itemDelegateForRow(int)
func (q *QAbstractItemView) ItemDelegateForRow(row int32) *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(198000, 198143, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QAbstractItemView::keyboardSearch(QString const&)
func (q *QAbstractItemView) KeyboardSearch(search string) {
	_search := NewCStringHead(search)
	defer FreeCStringHead(_search)
	q.Drv(198000, 198144, unsafe.Pointer(_search), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::model()
func (q *QAbstractItemView) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(198000, 198145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QAbstractItemView::moveCursor(QAbstractItemView::CursorAction,QFlags<Qt::KeyboardModifier>)
func (q *QAbstractItemView) MoveCursor(cursorAction QAbstractItemView_CursorAction, modifiers Qt_KeyboardModifier) *QModelIndex {
	var __rv uintptr
	q.Drv(198000, 198146, unsafe.Pointer(&cursorAction), unsafe.Pointer(&modifiers), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemView::openPersistentEditor(QModelIndex const&)
func (q *QAbstractItemView) OpenPersistentEditor(index *QModelIndex) {
	q.Drv(198000, 198147, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::reset()
func (q *QAbstractItemView) Reset() {
	q.Drv(198000, 198148, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::rootIndex()
func (q *QAbstractItemView) RootIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(198000, 198149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractItemView::rowsAboutToBeRemoved(QModelIndex const&,int,int)
func (q *QAbstractItemView) RowsAboutToBeRemoved(parent *QModelIndex, start int32, end int32) {
	q.Drv(198000, 198150, Native(parent), unsafe.Pointer(&start), unsafe.Pointer(&end), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::rowsInserted(QModelIndex const&,int,int)
func (q *QAbstractItemView) RowsInserted(parent *QModelIndex, start int32, end int32) {
	q.Drv(198000, 198151, Native(parent), unsafe.Pointer(&start), unsafe.Pointer(&end), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scheduleDelayedItemsLayout()
func (q *QAbstractItemView) ScheduleDelayedItemsLayout() {
	q.Drv(198000, 198152, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scrollDirtyRegion(int,int)
func (q *QAbstractItemView) ScrollDirtyRegion(dx int32, dy int32) {
	q.Drv(198000, 198153, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scrollTo(QModelIndex const&)
func (q *QAbstractItemView) ScrollTo(index *QModelIndex) {
	q.Drv(198000, 198154, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scrollTo(QModelIndex const&,QAbstractItemView::ScrollHint)
func (q *QAbstractItemView) ScrollToWithIndexHint(index *QModelIndex, hint QAbstractItemView_ScrollHint) {
	q.Drv(198000, 198155, Native(index), unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scrollToBottom()
func (q *QAbstractItemView) ScrollToBottom() {
	q.Drv(198000, 198156, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::scrollToTop()
func (q *QAbstractItemView) ScrollToTop() {
	q.Drv(198000, 198157, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::selectAll()
func (q *QAbstractItemView) SelectAll() {
	q.Drv(198000, 198158, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::selectedIndexes()
func (q *QAbstractItemView) SelectedIndexes() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(198000, 198159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::selectionBehavior()
func (q *QAbstractItemView) SelectionBehavior() QAbstractItemView_SelectionBehavior {
	var __rv QAbstractItemView_SelectionBehavior
	q.Drv(198000, 198160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::selectionChanged(QItemSelection const&,QItemSelection const&)
func (q *QAbstractItemView) SelectionChanged(selected *QItemSelection, deselected *QItemSelection) {
	q.Drv(198000, 198161, Native(selected), Native(deselected), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::selectionCommand(QModelIndex const&,QEvent const*)
func (q *QAbstractItemView) SelectionCommand(index *QModelIndex, event *QEvent) QItemSelectionModel_SelectionFlag {
	var __rv QItemSelectionModel_SelectionFlag
	q.Drv(198000, 198162, Native(index), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::selectionMode()
func (q *QAbstractItemView) SelectionMode() QAbstractItemView_SelectionMode {
	var __rv QAbstractItemView_SelectionMode
	q.Drv(198000, 198163, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::selectionModel()
func (q *QAbstractItemView) SelectionModel() *QItemSelectionModel {
	var __rv uintptr
	q.Drv(198000, 198164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemSelectionModel{}
	_rp.SetDriver(__rv, 298000, false)
	return _rp
}

//QAbstractItemView::setAlternatingRowColors(bool)
func (q *QAbstractItemView) SetAlternatingRowColors(enable bool) {
	q.Drv(198000, 198165, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setAutoScroll(bool)
func (q *QAbstractItemView) SetAutoScroll(enable bool) {
	q.Drv(198000, 198166, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setAutoScrollMargin(int)
func (q *QAbstractItemView) SetAutoScrollMargin(margin int32) {
	q.Drv(198000, 198167, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setCurrentIndex(QModelIndex const&)
func (q *QAbstractItemView) SetCurrentIndex(index *QModelIndex) {
	q.Drv(198000, 198168, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDefaultDropAction(Qt::DropAction)
func (q *QAbstractItemView) SetDefaultDropAction(dropAction Qt_DropAction) {
	q.Drv(198000, 198169, unsafe.Pointer(&dropAction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDirtyRegion(QRegion const&)
func (q *QAbstractItemView) SetDirtyRegion(region *QRegion) {
	q.Drv(198000, 198170, Native(region), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDragDropMode(QAbstractItemView::DragDropMode)
func (q *QAbstractItemView) SetDragDropMode(behavior QAbstractItemView_DragDropMode) {
	q.Drv(198000, 198171, unsafe.Pointer(&behavior), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDragDropOverwriteMode(bool)
func (q *QAbstractItemView) SetDragDropOverwriteMode(overwrite bool) {
	q.Drv(198000, 198172, unsafe.Pointer(&overwrite), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDragEnabled(bool)
func (q *QAbstractItemView) SetDragEnabled(enable bool) {
	q.Drv(198000, 198173, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setDropIndicatorShown(bool)
func (q *QAbstractItemView) SetDropIndicatorShown(enable bool) {
	q.Drv(198000, 198174, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setEditTriggers(QFlags<QAbstractItemView::EditTrigger>)
func (q *QAbstractItemView) SetEditTriggers(triggers QAbstractItemView_EditTrigger) {
	q.Drv(198000, 198175, unsafe.Pointer(&triggers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setHorizontalScrollMode(QAbstractItemView::ScrollMode)
func (q *QAbstractItemView) SetHorizontalScrollMode(mode QAbstractItemView_ScrollMode) {
	q.Drv(198000, 198176, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setHorizontalStepsPerItem(int)
func (q *QAbstractItemView) SetHorizontalStepsPerItem(steps int32) {
	q.Drv(198000, 198177, unsafe.Pointer(&steps), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setIconSize(QSize const&)
func (q *QAbstractItemView) SetIconSize(size *QSize) {
	q.Drv(198000, 198178, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setIndexWidget(QModelIndex const&,QWidget*)
func (q *QAbstractItemView) SetIndexWidget(index *QModelIndex, widget QWidgetInterface) {
	q.Drv(198000, 198179, Native(index), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setItemDelegate(QAbstractItemDelegate*)
func (q *QAbstractItemView) SetItemDelegate(delegate *QAbstractItemDelegate) {
	q.Drv(198000, 198180, Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setItemDelegateForColumn(int,QAbstractItemDelegate*)
func (q *QAbstractItemView) SetItemDelegateForColumn(column int32, delegate *QAbstractItemDelegate) {
	q.Drv(198000, 198181, unsafe.Pointer(&column), Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setItemDelegateForRow(int,QAbstractItemDelegate*)
func (q *QAbstractItemView) SetItemDelegateForRow(row int32, delegate *QAbstractItemDelegate) {
	q.Drv(198000, 198182, unsafe.Pointer(&row), Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setModel(QAbstractItemModel*)
func (q *QAbstractItemView) SetModel(model QAbstractItemModelInterface) {
	q.Drv(198000, 198183, Native(model), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setRootIndex(QModelIndex const&)
func (q *QAbstractItemView) SetRootIndex(index *QModelIndex) {
	q.Drv(198000, 198184, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setSelection(QRect const&,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QAbstractItemView) SetSelection(rect *QRect, command QItemSelectionModel_SelectionFlag) {
	q.Drv(198000, 198185, Native(rect), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setSelectionBehavior(QAbstractItemView::SelectionBehavior)
func (q *QAbstractItemView) SetSelectionBehavior(behavior QAbstractItemView_SelectionBehavior) {
	q.Drv(198000, 198186, unsafe.Pointer(&behavior), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setSelectionMode(QAbstractItemView::SelectionMode)
func (q *QAbstractItemView) SetSelectionMode(mode QAbstractItemView_SelectionMode) {
	q.Drv(198000, 198187, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setSelectionModel(QItemSelectionModel*)
func (q *QAbstractItemView) SetSelectionModel(selectionModel *QItemSelectionModel) {
	q.Drv(198000, 198188, Native(selectionModel), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setState(QAbstractItemView::State)
func (q *QAbstractItemView) SetState(state QAbstractItemView_State) {
	q.Drv(198000, 198189, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setTabKeyNavigation(bool)
func (q *QAbstractItemView) SetTabKeyNavigation(enable bool) {
	q.Drv(198000, 198190, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setTextElideMode(Qt::TextElideMode)
func (q *QAbstractItemView) SetTextElideMode(mode Qt_TextElideMode) {
	q.Drv(198000, 198191, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setVerticalScrollMode(QAbstractItemView::ScrollMode)
func (q *QAbstractItemView) SetVerticalScrollMode(mode QAbstractItemView_ScrollMode) {
	q.Drv(198000, 198192, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::setVerticalStepsPerItem(int)
func (q *QAbstractItemView) SetVerticalStepsPerItem(steps int32) {
	q.Drv(198000, 198193, unsafe.Pointer(&steps), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::showDropIndicator()
func (q *QAbstractItemView) ShowDropIndicator() bool {
	var __rv bool
	q.Drv(198000, 198194, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::sizeHintForColumn(int)
func (q *QAbstractItemView) SizeHintForColumn(column int32) int32 {
	var __rv int32
	q.Drv(198000, 198195, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::sizeHintForIndex(QModelIndex const&)
func (q *QAbstractItemView) SizeHintForIndex(index *QModelIndex) *QSize {
	var __rv uintptr
	q.Drv(198000, 198196, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QAbstractItemView::sizeHintForRow(int)
func (q *QAbstractItemView) SizeHintForRow(row int32) int32 {
	var __rv int32
	q.Drv(198000, 198197, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::startAutoScroll()
func (q *QAbstractItemView) StartAutoScroll() {
	q.Drv(198000, 198198, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::startDrag(QFlags<Qt::DropAction>)
func (q *QAbstractItemView) StartDrag(supportedActions Qt_DropAction) {
	q.Drv(198000, 198199, unsafe.Pointer(&supportedActions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::state()
func (q *QAbstractItemView) State() QAbstractItemView_State {
	var __rv QAbstractItemView_State
	q.Drv(198000, 198200, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::stopAutoScroll()
func (q *QAbstractItemView) StopAutoScroll() {
	q.Drv(198000, 198201, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::tabKeyNavigation()
func (q *QAbstractItemView) TabKeyNavigation() bool {
	var __rv bool
	q.Drv(198000, 198202, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::textElideMode()
func (q *QAbstractItemView) TextElideMode() Qt_TextElideMode {
	var __rv Qt_TextElideMode
	q.Drv(198000, 198203, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::update()
func (q *QAbstractItemView) Update() {
	q.Drv(198000, 198204, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::update(QModelIndex const&)
func (q *QAbstractItemView) UpdateWithIndex(index *QModelIndex) {
	q.Drv(198000, 198205, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::updateEditorData()
func (q *QAbstractItemView) UpdateEditorData() {
	q.Drv(198000, 198206, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::updateEditorGeometries()
func (q *QAbstractItemView) UpdateEditorGeometries() {
	q.Drv(198000, 198207, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::updateGeometries()
func (q *QAbstractItemView) UpdateGeometries() {
	q.Drv(198000, 198208, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::verticalOffset()
func (q *QAbstractItemView) VerticalOffset() int32 {
	var __rv int32
	q.Drv(198000, 198209, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::verticalScrollMode()
func (q *QAbstractItemView) VerticalScrollMode() QAbstractItemView_ScrollMode {
	var __rv QAbstractItemView_ScrollMode
	q.Drv(198000, 198210, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::verticalScrollbarAction(int)
func (q *QAbstractItemView) VerticalScrollbarAction(action int32) {
	q.Drv(198000, 198211, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::verticalScrollbarValueChanged(int)
func (q *QAbstractItemView) VerticalScrollbarValueChanged(value int32) {
	q.Drv(198000, 198212, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractItemView::verticalStepsPerItem()
func (q *QAbstractItemView) VerticalStepsPerItem() int32 {
	var __rv int32
	q.Drv(198000, 198213, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractItemView::visualRect(QModelIndex const&)
func (q *QAbstractItemView) VisualRect(index *QModelIndex) *QRect {
	var __rv uintptr
	q.Drv(198000, 198214, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QAbstractItemView::visualRegionForSelection(QItemSelection const&)
func (q *QAbstractItemView) VisualRegionForSelection(selection *QItemSelection) *QRegion {
	var __rv uintptr
	q.Drv(198000, 198215, Native(selection), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//struct QAbstractListModel : QAbstractListModel
type QAbstractListModel struct {
	QAbstractItemModel
}

// New QAbstractListModel from driver
func NewAbstractListModelFromDriver(drv Driver) *QAbstractListModel {
	_p := &QAbstractListModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QAbstractListModel::index(int)
func (q *QAbstractListModel) Index(row int32) *QModelIndex {
	var __rv uintptr
	q.Drv(199000, 199102, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//enum QAbstractPrintDialog_PrintRange - QAbstractPrintDialog::PrintRange
type QAbstractPrintDialog_PrintRange uint32

const (
	QAbstractPrintDialog_AllPages    QAbstractPrintDialog_PrintRange = 0
	QAbstractPrintDialog_Selection   QAbstractPrintDialog_PrintRange = 1
	QAbstractPrintDialog_PageRange   QAbstractPrintDialog_PrintRange = 2
	QAbstractPrintDialog_CurrentPage QAbstractPrintDialog_PrintRange = 3
)

//enum QAbstractPrintDialog_PrintDialogOption - QAbstractPrintDialog::PrintDialogOption
type QAbstractPrintDialog_PrintDialogOption uint32

const (
	QAbstractPrintDialog_None               QAbstractPrintDialog_PrintDialogOption = 0x0000
	QAbstractPrintDialog_PrintToFile        QAbstractPrintDialog_PrintDialogOption = 0x0001
	QAbstractPrintDialog_PrintSelection     QAbstractPrintDialog_PrintDialogOption = 0x0002
	QAbstractPrintDialog_PrintPageRange     QAbstractPrintDialog_PrintDialogOption = 0x0004
	QAbstractPrintDialog_PrintShowPageSize  QAbstractPrintDialog_PrintDialogOption = 0x0008
	QAbstractPrintDialog_PrintCollateCopies QAbstractPrintDialog_PrintDialogOption = 0x0010
	QAbstractPrintDialog_DontUseSheet       QAbstractPrintDialog_PrintDialogOption = 0x0020
	QAbstractPrintDialog_PrintCurrentPage   QAbstractPrintDialog_PrintDialogOption = 0x0040
)

//struct QAbstractPrintDialog : QAbstractPrintDialog
type QAbstractPrintDialog struct {
	QDialog
}

//QAbstractPrintDialog::addEnabledOption(QAbstractPrintDialog::PrintDialogOption)
func (q *QAbstractPrintDialog) AddEnabledOption(option QAbstractPrintDialog_PrintDialogOption) {
	q.Drv(200000, 200102, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::enabledOptions()
func (q *QAbstractPrintDialog) EnabledOptions() QAbstractPrintDialog_PrintDialogOption {
	var __rv QAbstractPrintDialog_PrintDialogOption
	q.Drv(200000, 200103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::exec()
func (q *QAbstractPrintDialog) Exec() int32 {
	var __rv int32
	q.Drv(200000, 200104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::fromPage()
func (q *QAbstractPrintDialog) FromPage() int32 {
	var __rv int32
	q.Drv(200000, 200105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::isOptionEnabled(QAbstractPrintDialog::PrintDialogOption)
func (q *QAbstractPrintDialog) IsOptionEnabled(option QAbstractPrintDialog_PrintDialogOption) bool {
	var __rv bool
	q.Drv(200000, 200106, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::maxPage()
func (q *QAbstractPrintDialog) MaxPage() int32 {
	var __rv int32
	q.Drv(200000, 200107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::minPage()
func (q *QAbstractPrintDialog) MinPage() int32 {
	var __rv int32
	q.Drv(200000, 200108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::printRange()
func (q *QAbstractPrintDialog) PrintRange() QAbstractPrintDialog_PrintRange {
	var __rv QAbstractPrintDialog_PrintRange
	q.Drv(200000, 200109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractPrintDialog::printer()
func (q *QAbstractPrintDialog) Printer() *QPrinter {
	var __rv uintptr
	q.Drv(200000, 200110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPrinter{}
	_rp.SetDriver(__rv, 105000, true)
	return _rp
}

//QAbstractPrintDialog::setEnabledOptions(QFlags<QAbstractPrintDialog::PrintDialogOption>)
func (q *QAbstractPrintDialog) SetEnabledOptions(options QAbstractPrintDialog_PrintDialogOption) {
	q.Drv(200000, 200111, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::setFromTo(int,int)
func (q *QAbstractPrintDialog) SetFromTo(fromPage int32, toPage int32) {
	q.Drv(200000, 200112, unsafe.Pointer(&fromPage), unsafe.Pointer(&toPage), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::setMinMax(int,int)
func (q *QAbstractPrintDialog) SetMinMax(min int32, max int32) {
	q.Drv(200000, 200113, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::setOptionTabs(QList<QWidget*> const&)
func (q *QAbstractPrintDialog) SetOptionTabs(tabs []QWidgetInterface) {
	_tabs := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&tabs)))
	defer FreeCObjectArrayHead(_tabs)
	q.Drv(200000, 200114, unsafe.Pointer(_tabs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::setPrintRange(QAbstractPrintDialog::PrintRange)
func (q *QAbstractPrintDialog) SetPrintRange(_range QAbstractPrintDialog_PrintRange) {
	q.Drv(200000, 200115, unsafe.Pointer(&_range), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractPrintDialog::toPage()
func (q *QAbstractPrintDialog) ToPage() int32 {
	var __rv int32
	q.Drv(200000, 200116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QAbstractProxyModel : QAbstractProxyModel
type QAbstractProxyModel struct {
	QAbstractItemModel
}

//QAbstractProxyModel::mapFromSource(QModelIndex const&)
func (q *QAbstractProxyModel) MapFromSource(sourceIndex *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(201000, 201102, Native(sourceIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractProxyModel::mapSelectionFromSource(QItemSelection const&)
func (q *QAbstractProxyModel) MapSelectionFromSource(selection *QItemSelection) *QItemSelection {
	var __rv uintptr
	q.Drv(201000, 201103, Native(selection), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemSelection{}
	_rp.SetDriver(__rv, 63000, true)
	return _rp
}

//QAbstractProxyModel::mapSelectionToSource(QItemSelection const&)
func (q *QAbstractProxyModel) MapSelectionToSource(selection *QItemSelection) *QItemSelection {
	var __rv uintptr
	q.Drv(201000, 201104, Native(selection), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemSelection{}
	_rp.SetDriver(__rv, 63000, true)
	return _rp
}

//QAbstractProxyModel::mapToSource(QModelIndex const&)
func (q *QAbstractProxyModel) MapToSource(proxyIndex *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(201000, 201105, Native(proxyIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QAbstractProxyModel::setSourceModel(QAbstractItemModel*)
func (q *QAbstractProxyModel) SetSourceModel(sourceModel QAbstractItemModelInterface) {
	q.Drv(201000, 201106, Native(sourceModel), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractProxyModel::sourceModel()
func (q *QAbstractProxyModel) SourceModel() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(201000, 201107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//struct QAbstractScrollArea : QAbstractScrollArea
type QAbstractScrollArea struct {
	QFrame
}

// New QAbstractScrollArea from driver
func NewAbstractScrollAreaFromDriver(drv Driver) *QAbstractScrollArea {
	_p := &QAbstractScrollArea{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QAbstractScrollArea::QAbstractScrollArea()
func NewAbstractScrollArea() *QAbstractScrollArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 202000, 202102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractScrollArea{}
	_p.SetDriver(__rv, 202000, false)
	return _p
}

//QAbstractScrollArea::QAbstractScrollArea(QWidget*)
func NewAbstractScrollAreaWithParent(parent QWidgetInterface) *QAbstractScrollArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 202000, 202103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractScrollArea{}
	_p.SetDriver(__rv, 202000, false)
	return _p
}

//QAbstractScrollArea::addScrollBarWidget(QWidget*,QFlags<Qt::AlignmentFlag>)
func (q *QAbstractScrollArea) AddScrollBarWidget(widget QWidgetInterface, alignment Qt_AlignmentFlag) {
	q.Drv(202000, 202104, Native(widget), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::cornerWidget()
func (q *QAbstractScrollArea) CornerWidget() *QWidget {
	var __rv uintptr
	q.Drv(202000, 202105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QAbstractScrollArea::horizontalScrollBar()
func (q *QAbstractScrollArea) HorizontalScrollBar() *QScrollBar {
	var __rv uintptr
	q.Drv(202000, 202106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QScrollBar{}
	_rp.SetDriver(__rv, 338000, false)
	return _rp
}

//QAbstractScrollArea::horizontalScrollBarPolicy()
func (q *QAbstractScrollArea) HorizontalScrollBarPolicy() Qt_ScrollBarPolicy {
	var __rv Qt_ScrollBarPolicy
	q.Drv(202000, 202107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractScrollArea::maximumViewportSize()
func (q *QAbstractScrollArea) MaximumViewportSize() *QSize {
	var __rv uintptr
	q.Drv(202000, 202108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QAbstractScrollArea::scrollBarWidgets(QFlags<Qt::AlignmentFlag>)
func (q *QAbstractScrollArea) ScrollBarWidgets(alignment Qt_AlignmentFlag) []*QWidget {
	var __rv []*QWidget
	q.Drv(202000, 202109, unsafe.Pointer(&alignment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractScrollArea::scrollContentsBy(int,int)
func (q *QAbstractScrollArea) ScrollContentsBy(dx int32, dy int32) {
	q.Drv(202000, 202110, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setCornerWidget(QWidget*)
func (q *QAbstractScrollArea) SetCornerWidget(widget QWidgetInterface) {
	q.Drv(202000, 202111, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setHorizontalScrollBar(QScrollBar*)
func (q *QAbstractScrollArea) SetHorizontalScrollBar(scrollbar *QScrollBar) {
	q.Drv(202000, 202112, Native(scrollbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setHorizontalScrollBarPolicy(Qt::ScrollBarPolicy)
func (q *QAbstractScrollArea) SetHorizontalScrollBarPolicy(value Qt_ScrollBarPolicy) {
	q.Drv(202000, 202113, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setVerticalScrollBar(QScrollBar*)
func (q *QAbstractScrollArea) SetVerticalScrollBar(scrollbar *QScrollBar) {
	q.Drv(202000, 202114, Native(scrollbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setVerticalScrollBarPolicy(Qt::ScrollBarPolicy)
func (q *QAbstractScrollArea) SetVerticalScrollBarPolicy(value Qt_ScrollBarPolicy) {
	q.Drv(202000, 202115, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setViewport(QWidget*)
func (q *QAbstractScrollArea) SetViewport(widget QWidgetInterface) {
	q.Drv(202000, 202116, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setViewportMargins(QMargins const&)
func (q *QAbstractScrollArea) SetViewportMargins(margins *QMargins) {
	q.Drv(202000, 202117, Native(margins), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setViewportMargins(int,int,int,int)
func (q *QAbstractScrollArea) SetViewportMarginsWithLeftTopRightBottom(left int32, top int32, right int32, bottom int32) {
	q.Drv(202000, 202118, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::setupViewport(QWidget*)
func (q *QAbstractScrollArea) SetupViewport(viewport QWidgetInterface) {
	q.Drv(202000, 202119, Native(viewport), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractScrollArea::verticalScrollBar()
func (q *QAbstractScrollArea) VerticalScrollBar() *QScrollBar {
	var __rv uintptr
	q.Drv(202000, 202120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QScrollBar{}
	_rp.SetDriver(__rv, 338000, false)
	return _rp
}

//QAbstractScrollArea::verticalScrollBarPolicy()
func (q *QAbstractScrollArea) VerticalScrollBarPolicy() Qt_ScrollBarPolicy {
	var __rv Qt_ScrollBarPolicy
	q.Drv(202000, 202121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractScrollArea::viewport()
func (q *QAbstractScrollArea) Viewport() *QWidget {
	var __rv uintptr
	q.Drv(202000, 202122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QAbstractScrollArea::viewportEvent(QEvent*)
func (q *QAbstractScrollArea) ViewportEvent(value *QEvent) bool {
	var __rv bool
	q.Drv(202000, 202123, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QAbstractSlider_SliderAction - QAbstractSlider::SliderAction
type QAbstractSlider_SliderAction uint32

const (
	QAbstractSlider_SliderNoAction      QAbstractSlider_SliderAction = 0
	QAbstractSlider_SliderSingleStepAdd QAbstractSlider_SliderAction = 1
	QAbstractSlider_SliderSingleStepSub QAbstractSlider_SliderAction = 2
	QAbstractSlider_SliderPageStepAdd   QAbstractSlider_SliderAction = 3
	QAbstractSlider_SliderPageStepSub   QAbstractSlider_SliderAction = 4
	QAbstractSlider_SliderToMinimum     QAbstractSlider_SliderAction = 5
	QAbstractSlider_SliderToMaximum     QAbstractSlider_SliderAction = 6
	QAbstractSlider_SliderMove          QAbstractSlider_SliderAction = 7
)

//enum QAbstractSlider_SliderChange - QAbstractSlider::SliderChange
type QAbstractSlider_SliderChange uint32

const (
	QAbstractSlider_SliderRangeChange       QAbstractSlider_SliderChange = 0
	QAbstractSlider_SliderOrientationChange QAbstractSlider_SliderChange = 1
	QAbstractSlider_SliderStepsChange       QAbstractSlider_SliderChange = 2
	QAbstractSlider_SliderValueChange       QAbstractSlider_SliderChange = 3
)

//struct QAbstractSlider : QAbstractSlider
type QAbstractSlider struct {
	QWidget
}

// New QAbstractSlider from driver
func NewAbstractSliderFromDriver(drv Driver) *QAbstractSlider {
	_p := &QAbstractSlider{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QAbstractSlider) OnRangeChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(203000, 203102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractSlider) OnSliderMoved(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(203000, 203103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractSlider) OnActionTriggered(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(203000, 203104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractSlider) OnSliderReleased(fn func()) uintptr {
	var __rv uintptr
	q.Drv(203000, 203105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractSlider) OnSliderPressed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(203000, 203106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractSlider) OnValueChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(203000, 203107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractSlider::QAbstractSlider()
func NewAbstractSlider() *QAbstractSlider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 203000, 203108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractSlider{}
	_p.SetDriver(__rv, 203000, false)
	return _p
}

//QAbstractSlider::QAbstractSlider(QWidget*)
func NewAbstractSliderWithParent(parent QWidgetInterface) *QAbstractSlider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 203000, 203109, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractSlider{}
	_p.SetDriver(__rv, 203000, false)
	return _p
}

//QAbstractSlider::hasTracking()
func (q *QAbstractSlider) HasTracking() bool {
	var __rv bool
	q.Drv(203000, 203110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::invertedAppearance()
func (q *QAbstractSlider) InvertedAppearance() bool {
	var __rv bool
	q.Drv(203000, 203111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::invertedControls()
func (q *QAbstractSlider) InvertedControls() bool {
	var __rv bool
	q.Drv(203000, 203112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::isSliderDown()
func (q *QAbstractSlider) IsSliderDown() bool {
	var __rv bool
	q.Drv(203000, 203113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::maximum()
func (q *QAbstractSlider) Maximum() int32 {
	var __rv int32
	q.Drv(203000, 203114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::minimum()
func (q *QAbstractSlider) Minimum() int32 {
	var __rv int32
	q.Drv(203000, 203115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::orientation()
func (q *QAbstractSlider) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(203000, 203116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::pageStep()
func (q *QAbstractSlider) PageStep() int32 {
	var __rv int32
	q.Drv(203000, 203117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::repeatAction()
func (q *QAbstractSlider) RepeatAction() QAbstractSlider_SliderAction {
	var __rv QAbstractSlider_SliderAction
	q.Drv(203000, 203118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::setInvertedAppearance(bool)
func (q *QAbstractSlider) SetInvertedAppearance(value bool) {
	q.Drv(203000, 203119, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setInvertedControls(bool)
func (q *QAbstractSlider) SetInvertedControls(value bool) {
	q.Drv(203000, 203120, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setMaximum(int)
func (q *QAbstractSlider) SetMaximum(value int32) {
	q.Drv(203000, 203121, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setMinimum(int)
func (q *QAbstractSlider) SetMinimum(value int32) {
	q.Drv(203000, 203122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setOrientation(Qt::Orientation)
func (q *QAbstractSlider) SetOrientation(value Qt_Orientation) {
	q.Drv(203000, 203123, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setPageStep(int)
func (q *QAbstractSlider) SetPageStep(value int32) {
	q.Drv(203000, 203124, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setRange(int,int)
func (q *QAbstractSlider) SetRange(min int32, max int32) {
	q.Drv(203000, 203125, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setRepeatAction(QAbstractSlider::SliderAction,int,int)
func (q *QAbstractSlider) SetRepeatAction(action QAbstractSlider_SliderAction, thresholdTime int32, repeatTime int32) {
	q.Drv(203000, 203126, unsafe.Pointer(&action), unsafe.Pointer(&thresholdTime), unsafe.Pointer(&repeatTime), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setSingleStep(int)
func (q *QAbstractSlider) SetSingleStep(value int32) {
	q.Drv(203000, 203127, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setSliderDown(bool)
func (q *QAbstractSlider) SetSliderDown(value bool) {
	q.Drv(203000, 203128, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setSliderPosition(int)
func (q *QAbstractSlider) SetSliderPosition(value int32) {
	q.Drv(203000, 203129, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setTracking(bool)
func (q *QAbstractSlider) SetTracking(enable bool) {
	q.Drv(203000, 203130, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::setValue(int)
func (q *QAbstractSlider) SetValue(value int32) {
	q.Drv(203000, 203131, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::singleStep()
func (q *QAbstractSlider) SingleStep() int32 {
	var __rv int32
	q.Drv(203000, 203132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::sliderChange(QAbstractSlider::SliderChange)
func (q *QAbstractSlider) SliderChange(change QAbstractSlider_SliderChange) {
	q.Drv(203000, 203133, unsafe.Pointer(&change), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::sliderPosition()
func (q *QAbstractSlider) SliderPosition() int32 {
	var __rv int32
	q.Drv(203000, 203134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSlider::triggerAction(QAbstractSlider::SliderAction)
func (q *QAbstractSlider) TriggerAction(action QAbstractSlider_SliderAction) {
	q.Drv(203000, 203135, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSlider::value()
func (q *QAbstractSlider) Value() int32 {
	var __rv int32
	q.Drv(203000, 203136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QAbstractSpinBox_StepEnabledFlag - QAbstractSpinBox::StepEnabledFlag
type QAbstractSpinBox_StepEnabledFlag uint32

const (
	QAbstractSpinBox_StepNone        QAbstractSpinBox_StepEnabledFlag = 0x00
	QAbstractSpinBox_StepUpEnabled   QAbstractSpinBox_StepEnabledFlag = 0x01
	QAbstractSpinBox_StepDownEnabled QAbstractSpinBox_StepEnabledFlag = 0x02
)

//enum QAbstractSpinBox_CorrectionMode - QAbstractSpinBox::CorrectionMode
type QAbstractSpinBox_CorrectionMode uint32

const (
	QAbstractSpinBox_CorrectToPreviousValue QAbstractSpinBox_CorrectionMode = 0
	QAbstractSpinBox_CorrectToNearestValue  QAbstractSpinBox_CorrectionMode = 1
)

//enum QAbstractSpinBox_ButtonSymbols - QAbstractSpinBox::ButtonSymbols
type QAbstractSpinBox_ButtonSymbols uint32

const (
	QAbstractSpinBox_UpDownArrows QAbstractSpinBox_ButtonSymbols = 0
	QAbstractSpinBox_PlusMinus    QAbstractSpinBox_ButtonSymbols = 1
	QAbstractSpinBox_NoButtons    QAbstractSpinBox_ButtonSymbols = 2
)

//struct QAbstractSpinBox : QAbstractSpinBox
type QAbstractSpinBox struct {
	QWidget
}

// New QAbstractSpinBox from driver
func NewAbstractSpinBoxFromDriver(drv Driver) *QAbstractSpinBox {
	_p := &QAbstractSpinBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QAbstractSpinBox) OnEditingFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(204000, 204102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractSpinBox::QAbstractSpinBox()
func NewAbstractSpinBox() *QAbstractSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 204000, 204103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractSpinBox{}
	_p.SetDriver(__rv, 204000, false)
	return _p
}

//QAbstractSpinBox::QAbstractSpinBox(QWidget*)
func NewAbstractSpinBoxWithParent(parent QWidgetInterface) *QAbstractSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 204000, 204104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAbstractSpinBox{}
	_p.SetDriver(__rv, 204000, false)
	return _p
}

//QAbstractSpinBox::alignment()
func (q *QAbstractSpinBox) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(204000, 204105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::buttonSymbols()
func (q *QAbstractSpinBox) ButtonSymbols() QAbstractSpinBox_ButtonSymbols {
	var __rv QAbstractSpinBox_ButtonSymbols
	q.Drv(204000, 204106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::clear()
func (q *QAbstractSpinBox) Clear() {
	q.Drv(204000, 204107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::correctionMode()
func (q *QAbstractSpinBox) CorrectionMode() QAbstractSpinBox_CorrectionMode {
	var __rv QAbstractSpinBox_CorrectionMode
	q.Drv(204000, 204108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::fixup(QString&)
func (q *QAbstractSpinBox) Fixup(input *string) {
	q.Drv(204000, 204109, unsafe.Pointer(input), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::hasAcceptableInput()
func (q *QAbstractSpinBox) HasAcceptableInput() bool {
	var __rv bool
	q.Drv(204000, 204110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::hasFrame()
func (q *QAbstractSpinBox) HasFrame() bool {
	var __rv bool
	q.Drv(204000, 204111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::interpretText()
func (q *QAbstractSpinBox) InterpretText() {
	q.Drv(204000, 204112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::isAccelerated()
func (q *QAbstractSpinBox) IsAccelerated() bool {
	var __rv bool
	q.Drv(204000, 204113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::isReadOnly()
func (q *QAbstractSpinBox) IsReadOnly() bool {
	var __rv bool
	q.Drv(204000, 204114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::keyboardTracking()
func (q *QAbstractSpinBox) KeyboardTracking() bool {
	var __rv bool
	q.Drv(204000, 204115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::lineEdit()
func (q *QAbstractSpinBox) LineEdit() *QLineEdit {
	var __rv uintptr
	q.Drv(204000, 204116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineEdit{}
	_rp.SetDriver(__rv, 304000, false)
	return _rp
}

//QAbstractSpinBox::selectAll()
func (q *QAbstractSpinBox) SelectAll() {
	q.Drv(204000, 204117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setAccelerated(bool)
func (q *QAbstractSpinBox) SetAccelerated(on bool) {
	q.Drv(204000, 204118, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QAbstractSpinBox) SetAlignment(flag Qt_AlignmentFlag) {
	q.Drv(204000, 204119, unsafe.Pointer(&flag), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setButtonSymbols(QAbstractSpinBox::ButtonSymbols)
func (q *QAbstractSpinBox) SetButtonSymbols(bs QAbstractSpinBox_ButtonSymbols) {
	q.Drv(204000, 204120, unsafe.Pointer(&bs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setCorrectionMode(QAbstractSpinBox::CorrectionMode)
func (q *QAbstractSpinBox) SetCorrectionMode(cm QAbstractSpinBox_CorrectionMode) {
	q.Drv(204000, 204121, unsafe.Pointer(&cm), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setFrame(bool)
func (q *QAbstractSpinBox) SetFrame(value bool) {
	q.Drv(204000, 204122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setKeyboardTracking(bool)
func (q *QAbstractSpinBox) SetKeyboardTracking(kt bool) {
	q.Drv(204000, 204123, unsafe.Pointer(&kt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setLineEdit(QLineEdit*)
func (q *QAbstractSpinBox) SetLineEdit(edit *QLineEdit) {
	q.Drv(204000, 204124, Native(edit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setReadOnly(bool)
func (q *QAbstractSpinBox) SetReadOnly(r bool) {
	q.Drv(204000, 204125, unsafe.Pointer(&r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setSpecialValueText(QString const&)
func (q *QAbstractSpinBox) SetSpecialValueText(txt string) {
	_txt := NewCStringHead(txt)
	defer FreeCStringHead(_txt)
	q.Drv(204000, 204126, unsafe.Pointer(_txt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::setWrapping(bool)
func (q *QAbstractSpinBox) SetWrapping(w bool) {
	q.Drv(204000, 204127, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::specialValueText()
func (q *QAbstractSpinBox) SpecialValueText() string {
	var __rv C.string_head
	q.Drv(204000, 204128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractSpinBox::stepBy(int)
func (q *QAbstractSpinBox) StepBy(steps int32) {
	q.Drv(204000, 204129, unsafe.Pointer(&steps), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::stepDown()
func (q *QAbstractSpinBox) StepDown() {
	q.Drv(204000, 204130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::stepEnabled()
func (q *QAbstractSpinBox) StepEnabled() QAbstractSpinBox_StepEnabledFlag {
	var __rv QAbstractSpinBox_StepEnabledFlag
	q.Drv(204000, 204131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::stepUp()
func (q *QAbstractSpinBox) StepUp() {
	q.Drv(204000, 204132, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractSpinBox::text()
func (q *QAbstractSpinBox) Text() string {
	var __rv C.string_head
	q.Drv(204000, 204133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractSpinBox::validate(QString&,int&)
func (q *QAbstractSpinBox) Validate(input *string, pos *int32) QValidator_State {
	var __rv QValidator_State
	q.Drv(204000, 204134, unsafe.Pointer(input), unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractSpinBox::wrapping()
func (q *QAbstractSpinBox) Wrapping() bool {
	var __rv bool
	q.Drv(204000, 204135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QAbstractState : QAbstractState
type QAbstractState struct {
	QObject
}

//QAbstractState::machine()
func (q *QAbstractState) Machine() *QStateMachine {
	var __rv uintptr
	q.Drv(205000, 205102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStateMachine{}
	_rp.SetDriver(__rv, 356000, false)
	return _rp
}

//QAbstractState::onEntry(QEvent*)
func (q *QAbstractState) OnEntry(event *QEvent) {
	q.Drv(205000, 205103, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractState::onExit(QEvent*)
func (q *QAbstractState) OnExit(event *QEvent) {
	q.Drv(205000, 205104, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractState::parentState()
func (q *QAbstractState) ParentState() *QState {
	var __rv uintptr
	q.Drv(205000, 205105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QState{}
	_rp.SetDriver(__rv, 355000, false)
	return _rp
}

//struct QAbstractTableModel : QAbstractTableModel
type QAbstractTableModel struct {
	QAbstractItemModel
}

// New QAbstractTableModel from driver
func NewAbstractTableModelFromDriver(drv Driver) *QAbstractTableModel {
	_p := &QAbstractTableModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//struct QAbstractTextDocumentLayout : QAbstractTextDocumentLayout
type QAbstractTextDocumentLayout struct {
	QObject
}

func (q *QAbstractTextDocumentLayout) OnPageCountChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(207000, 207102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractTextDocumentLayout) OnUpdateBlock(fn func(*QTextBlock)) uintptr {
	var __rv uintptr
	q.Drv(207000, 207103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractTextDocumentLayout) OnDocumentSizeChanged(fn func(*QSizeF)) uintptr {
	var __rv uintptr
	q.Drv(207000, 207104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractTextDocumentLayout) OnUpdate(fn func()) uintptr {
	var __rv uintptr
	q.Drv(207000, 207105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAbstractTextDocumentLayout) OnUpdateEx(fn func(*QRectF)) uintptr {
	var __rv uintptr
	q.Drv(207000, 207106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAbstractTextDocumentLayout::anchorAt(QPointF const&)
func (q *QAbstractTextDocumentLayout) AnchorAt(pos *QPointF) string {
	var __rv C.string_head
	q.Drv(207000, 207107, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAbstractTextDocumentLayout::blockBoundingRect(QTextBlock const&)
func (q *QAbstractTextDocumentLayout) BlockBoundingRect(block *QTextBlock) *QRectF {
	var __rv uintptr
	q.Drv(207000, 207108, Native(block), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QAbstractTextDocumentLayout::document()
func (q *QAbstractTextDocumentLayout) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(207000, 207109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QAbstractTextDocumentLayout::documentChanged(int,int,int)
func (q *QAbstractTextDocumentLayout) DocumentChanged(from int32, charsRemoved int32, charsAdded int32) {
	q.Drv(207000, 207110, unsafe.Pointer(&from), unsafe.Pointer(&charsRemoved), unsafe.Pointer(&charsAdded), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::documentSize()
func (q *QAbstractTextDocumentLayout) DocumentSize() *QSizeF {
	var __rv uintptr
	q.Drv(207000, 207111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QAbstractTextDocumentLayout::draw(QPainter*,QAbstractTextDocumentLayout::PaintContext const&)
func (q *QAbstractTextDocumentLayout) Draw(painter *QPainter, context *QAbstractTextDocumentLayoutPaintContext) {
	q.Drv(207000, 207112, Native(painter), Native(context), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::drawInlineObject(QPainter*,QRectF const&,QTextInlineObject,int,QTextFormat const&)
func (q *QAbstractTextDocumentLayout) DrawInlineObject(painter *QPainter, rect *QRectF, object *QTextInlineObject, posInDocument int32, format *QTextFormat) {
	q.Drv(207000, 207113, Native(painter), Native(rect), Native(object), unsafe.Pointer(&posInDocument), Native(format), nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::format(int)
func (q *QAbstractTextDocumentLayout) Format(pos int32) *QTextCharFormat {
	var __rv uintptr
	q.Drv(207000, 207114, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QAbstractTextDocumentLayout::formatIndex(int)
func (q *QAbstractTextDocumentLayout) FormatIndex(pos int32) int32 {
	var __rv int32
	q.Drv(207000, 207115, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractTextDocumentLayout::frameBoundingRect(QTextFrame*)
func (q *QAbstractTextDocumentLayout) FrameBoundingRect(frame *QTextFrame) *QRectF {
	var __rv uintptr
	q.Drv(207000, 207116, Native(frame), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QAbstractTextDocumentLayout::handlerForObject(int)
func (q *QAbstractTextDocumentLayout) HandlerForObject(objectType int32) *QTextObjectInterface {
	var __rv uintptr
	q.Drv(207000, 207117, unsafe.Pointer(&objectType), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextObjectInterface{}
	_rp.SetDriver(__rv, 165000, true)
	return _rp
}

//QAbstractTextDocumentLayout::hitTest(QPointF const&,Qt::HitTestAccuracy)
func (q *QAbstractTextDocumentLayout) HitTest(point *QPointF, accuracy Qt_HitTestAccuracy) int32 {
	var __rv int32
	q.Drv(207000, 207118, Native(point), unsafe.Pointer(&accuracy), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractTextDocumentLayout::pageCount()
func (q *QAbstractTextDocumentLayout) PageCount() int32 {
	var __rv int32
	q.Drv(207000, 207119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractTextDocumentLayout::paintDevice()
func (q *QAbstractTextDocumentLayout) PaintDevice() *QPaintDevice {
	var __rv uintptr
	q.Drv(207000, 207120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintDevice{}
	_rp.SetDriver(__rv, 83000, true)
	return _rp
}

//QAbstractTextDocumentLayout::positionInlineObject(QTextInlineObject,int,QTextFormat const&)
func (q *QAbstractTextDocumentLayout) PositionInlineObject(item *QTextInlineObject, posInDocument int32, format *QTextFormat) {
	q.Drv(207000, 207121, Native(item), unsafe.Pointer(&posInDocument), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::registerHandler(int,QObject*)
func (q *QAbstractTextDocumentLayout) RegisterHandler(objectType int32, component QObjectInterface) {
	q.Drv(207000, 207122, unsafe.Pointer(&objectType), Native(component), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::resizeInlineObject(QTextInlineObject,int,QTextFormat const&)
func (q *QAbstractTextDocumentLayout) ResizeInlineObject(item *QTextInlineObject, posInDocument int32, format *QTextFormat) {
	q.Drv(207000, 207123, Native(item), unsafe.Pointer(&posInDocument), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTextDocumentLayout::setPaintDevice(QPaintDevice*)
func (q *QAbstractTextDocumentLayout) SetPaintDevice(device QPaintDeviceInterface) {
	q.Drv(207000, 207124, unsafe.Pointer(new_pd_head(device)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QAbstractTransition : QAbstractTransition
type QAbstractTransition struct {
	QObject
}

//QAbstractTransition::addAnimation(QAbstractAnimation*)
func (q *QAbstractTransition) AddAnimation(animation *QAbstractAnimation) {
	q.Drv(208000, 208102, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTransition::animations()
func (q *QAbstractTransition) Animations() []*QAbstractAnimation {
	var __rv []*QAbstractAnimation
	q.Drv(208000, 208103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractTransition::eventTest(QEvent*)
func (q *QAbstractTransition) EventTest(event *QEvent) bool {
	var __rv bool
	q.Drv(208000, 208104, Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAbstractTransition::machine()
func (q *QAbstractTransition) Machine() *QStateMachine {
	var __rv uintptr
	q.Drv(208000, 208105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStateMachine{}
	_rp.SetDriver(__rv, 356000, false)
	return _rp
}

//QAbstractTransition::onTransition(QEvent*)
func (q *QAbstractTransition) OnTransition(event *QEvent) {
	q.Drv(208000, 208106, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTransition::removeAnimation(QAbstractAnimation*)
func (q *QAbstractTransition) RemoveAnimation(animation *QAbstractAnimation) {
	q.Drv(208000, 208107, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTransition::setTargetState(QAbstractState*)
func (q *QAbstractTransition) SetTargetState(target *QAbstractState) {
	q.Drv(208000, 208108, Native(target), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTransition::setTargetStates(QList<QAbstractState*> const&)
func (q *QAbstractTransition) SetTargetStates(targets []*QAbstractState) {
	_targets := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&targets)))
	defer FreeCObjectArrayHead(_targets)
	q.Drv(208000, 208109, unsafe.Pointer(_targets), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAbstractTransition::sourceState()
func (q *QAbstractTransition) SourceState() *QState {
	var __rv uintptr
	q.Drv(208000, 208110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QState{}
	_rp.SetDriver(__rv, 355000, false)
	return _rp
}

//QAbstractTransition::targetState()
func (q *QAbstractTransition) TargetState() *QAbstractState {
	var __rv uintptr
	q.Drv(208000, 208111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractState{}
	_rp.SetDriver(__rv, 205000, false)
	return _rp
}

//QAbstractTransition::targetStates()
func (q *QAbstractTransition) TargetStates() []*QAbstractState {
	var __rv []*QAbstractState
	q.Drv(208000, 208112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QAction_Priority - QAction::Priority
type QAction_Priority uint32

const (
	QAction_LowPriority    QAction_Priority = 0
	QAction_NormalPriority QAction_Priority = 128
	QAction_HighPriority   QAction_Priority = 256
)

//enum QAction_ActionEvent - QAction::ActionEvent
type QAction_ActionEvent uint32

const (
	QAction_Trigger QAction_ActionEvent = 0
	QAction_Hover   QAction_ActionEvent = 1
)

//enum QAction_SoftKeyRole - QAction::SoftKeyRole
type QAction_SoftKeyRole uint32

const (
	QAction_NoSoftKey       QAction_SoftKeyRole = 0
	QAction_PositiveSoftKey QAction_SoftKeyRole = 1
	QAction_NegativeSoftKey QAction_SoftKeyRole = 2
	QAction_SelectSoftKey   QAction_SoftKeyRole = 3
)

//enum QAction_MenuRole - QAction::MenuRole
type QAction_MenuRole uint32

const (
	QAction_NoRole                  QAction_MenuRole = 0
	QAction_TextHeuristicRole       QAction_MenuRole = 1
	QAction_ApplicationSpecificRole QAction_MenuRole = 2
	QAction_AboutQtRole             QAction_MenuRole = 3
	QAction_AboutRole               QAction_MenuRole = 4
	QAction_PreferencesRole         QAction_MenuRole = 5
	QAction_QuitRole                QAction_MenuRole = 6
)

//struct QAction : QAction
type QAction struct {
	QObject
}

// New QAction from driver
func NewActionFromDriver(drv Driver) *QAction {
	_p := &QAction{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QAction) OnChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(209000, 209102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAction) OnTriggered(fn func()) uintptr {
	var __rv uintptr
	q.Drv(209000, 209103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAction) OnTriggeredEx(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(209000, 209104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAction) OnHovered(fn func()) uintptr {
	var __rv uintptr
	q.Drv(209000, 209105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QAction) OnToggled(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(209000, 209106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QAction::QAction(QObject*)
func NewAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 209000, 209107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAction{}
	_p.SetDriver(__rv, 209000, false)
	return _p
}

//QAction::QAction(QString const&,QObject*)
func NewActionWithTextParent(text string, parent QObjectInterface) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 209000, 209108, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAction{}
	_p.SetDriver(__rv, 209000, false)
	return _p
}

//QAction::QAction(QIcon const&,QString const&,QObject*)
func NewActionWithIconTextParent(icon *QIcon, text string, parent QObjectInterface) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 209000, 209109, Native(icon), unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QAction{}
	_p.SetDriver(__rv, 209000, false)
	return _p
}

//QAction::actionGroup()
func (q *QAction) ActionGroup() *QActionGroup {
	var __rv uintptr
	q.Drv(209000, 209110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QActionGroup{}
	_rp.SetDriver(__rv, 210000, false)
	return _rp
}

//QAction::activate(QAction::ActionEvent)
func (q *QAction) Activate(event QAction_ActionEvent) {
	q.Drv(209000, 209111, unsafe.Pointer(&event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::associatedGraphicsWidgets()
func (q *QAction) AssociatedGraphicsWidgets() []*QGraphicsWidget {
	var __rv []*QGraphicsWidget
	q.Drv(209000, 209112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::associatedWidgets()
func (q *QAction) AssociatedWidgets() []*QWidget {
	var __rv []*QWidget
	q.Drv(209000, 209113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::autoRepeat()
func (q *QAction) AutoRepeat() bool {
	var __rv bool
	q.Drv(209000, 209114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::data()
func (q *QAction) Data() *QVariant {
	var __rv uintptr
	q.Drv(209000, 209115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QAction::font()
func (q *QAction) Font() *QFont {
	var __rv uintptr
	q.Drv(209000, 209116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QAction::hover()
func (q *QAction) Hover() {
	q.Drv(209000, 209117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::icon()
func (q *QAction) Icon() *QIcon {
	var __rv uintptr
	q.Drv(209000, 209118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QAction::iconText()
func (q *QAction) IconText() string {
	var __rv C.string_head
	q.Drv(209000, 209119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAction::isCheckable()
func (q *QAction) IsCheckable() bool {
	var __rv bool
	q.Drv(209000, 209120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::isChecked()
func (q *QAction) IsChecked() bool {
	var __rv bool
	q.Drv(209000, 209121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::isEnabled()
func (q *QAction) IsEnabled() bool {
	var __rv bool
	q.Drv(209000, 209122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::isIconVisibleInMenu()
func (q *QAction) IsIconVisibleInMenu() bool {
	var __rv bool
	q.Drv(209000, 209123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::isSeparator()
func (q *QAction) IsSeparator() bool {
	var __rv bool
	q.Drv(209000, 209124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::isVisible()
func (q *QAction) IsVisible() bool {
	var __rv bool
	q.Drv(209000, 209125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::menu()
func (q *QAction) Menu() *QMenu {
	var __rv uintptr
	q.Drv(209000, 209126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QAction::menuRole()
func (q *QAction) MenuRole() QAction_MenuRole {
	var __rv QAction_MenuRole
	q.Drv(209000, 209127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::parentWidget()
func (q *QAction) ParentWidget() *QWidget {
	var __rv uintptr
	q.Drv(209000, 209128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QAction::priority()
func (q *QAction) Priority() QAction_Priority {
	var __rv QAction_Priority
	q.Drv(209000, 209129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::setActionGroup(QActionGroup*)
func (q *QAction) SetActionGroup(group *QActionGroup) {
	q.Drv(209000, 209130, Native(group), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setAutoRepeat(bool)
func (q *QAction) SetAutoRepeat(value bool) {
	q.Drv(209000, 209131, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setCheckable(bool)
func (q *QAction) SetCheckable(value bool) {
	q.Drv(209000, 209132, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setChecked(bool)
func (q *QAction) SetChecked(value bool) {
	q.Drv(209000, 209133, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setData(QVariant const&)
func (q *QAction) SetData(_var *QVariant) {
	q.Drv(209000, 209134, Native(_var), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setDisabled(bool)
func (q *QAction) SetDisabled(b bool) {
	q.Drv(209000, 209135, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setEnabled(bool)
func (q *QAction) SetEnabled(value bool) {
	q.Drv(209000, 209136, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setFont(QFont const&)
func (q *QAction) SetFont(font *QFont) {
	q.Drv(209000, 209137, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setIcon(QIcon const&)
func (q *QAction) SetIcon(icon *QIcon) {
	q.Drv(209000, 209138, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setIconText(QString const&)
func (q *QAction) SetIconText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(209000, 209139, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setIconVisibleInMenu(bool)
func (q *QAction) SetIconVisibleInMenu(visible bool) {
	q.Drv(209000, 209140, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setMenu(QMenu*)
func (q *QAction) SetMenu(menu *QMenu) {
	q.Drv(209000, 209141, Native(menu), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setMenuRole(QAction::MenuRole)
func (q *QAction) SetMenuRole(menuRole QAction_MenuRole) {
	q.Drv(209000, 209142, unsafe.Pointer(&menuRole), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setPriority(QAction::Priority)
func (q *QAction) SetPriority(priority QAction_Priority) {
	q.Drv(209000, 209143, unsafe.Pointer(&priority), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setSeparator(bool)
func (q *QAction) SetSeparator(b bool) {
	q.Drv(209000, 209144, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setShortcut(QKeySequence const&)
func (q *QAction) SetShortcut(shortcut *QKeySequence) {
	q.Drv(209000, 209145, Native(shortcut), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setShortcutContext(Qt::ShortcutContext)
func (q *QAction) SetShortcutContext(context Qt_ShortcutContext) {
	q.Drv(209000, 209146, unsafe.Pointer(&context), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setShortcuts(QKeySequence::StandardKey)
func (q *QAction) SetShortcuts(value QKeySequence_StandardKey) {
	q.Drv(209000, 209147, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setShortcuts(QList<QKeySequence> const&)
func (q *QAction) SetShortcutsWithShortcuts(shortcuts []*QKeySequence) {
	_shortcuts := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&shortcuts)))
	defer FreeCNoObjectArrayHead(_shortcuts)
	q.Drv(209000, 209148, unsafe.Pointer(_shortcuts), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setStatusTip(QString const&)
func (q *QAction) SetStatusTip(statusTip string) {
	_statusTip := NewCStringHead(statusTip)
	defer FreeCStringHead(_statusTip)
	q.Drv(209000, 209149, unsafe.Pointer(_statusTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setText(QString const&)
func (q *QAction) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(209000, 209150, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setToolTip(QString const&)
func (q *QAction) SetToolTip(tip string) {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	q.Drv(209000, 209151, unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setVisible(bool)
func (q *QAction) SetVisible(value bool) {
	q.Drv(209000, 209152, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::setWhatsThis(QString const&)
func (q *QAction) SetWhatsThis(what string) {
	_what := NewCStringHead(what)
	defer FreeCStringHead(_what)
	q.Drv(209000, 209153, unsafe.Pointer(_what), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::shortcut()
func (q *QAction) Shortcut() *QKeySequence {
	var __rv uintptr
	q.Drv(209000, 209154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QAction::shortcutContext()
func (q *QAction) ShortcutContext() Qt_ShortcutContext {
	var __rv Qt_ShortcutContext
	q.Drv(209000, 209155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::shortcuts()
func (q *QAction) Shortcuts() []*QKeySequence {
	var __rv []*QKeySequence
	q.Drv(209000, 209156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::showStatusText()
func (q *QAction) ShowStatusText() bool {
	var __rv bool
	q.Drv(209000, 209157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::showStatusText(QWidget*)
func (q *QAction) ShowStatusTextWithWidget(widget QWidgetInterface) bool {
	var __rv bool
	q.Drv(209000, 209158, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAction::statusTip()
func (q *QAction) StatusTip() string {
	var __rv C.string_head
	q.Drv(209000, 209159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAction::text()
func (q *QAction) Text() string {
	var __rv C.string_head
	q.Drv(209000, 209160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAction::toggle()
func (q *QAction) Toggle() {
	q.Drv(209000, 209161, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::toolTip()
func (q *QAction) ToolTip() string {
	var __rv C.string_head
	q.Drv(209000, 209162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QAction::trigger()
func (q *QAction) Trigger() {
	q.Drv(209000, 209163, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAction::whatsThis()
func (q *QAction) WhatsThis() string {
	var __rv C.string_head
	q.Drv(209000, 209164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QActionGroup : QActionGroup
type QActionGroup struct {
	QObject
}

// New QActionGroup from driver
func NewActionGroupFromDriver(drv Driver) *QActionGroup {
	_p := &QActionGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QActionGroup) OnHovered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(210000, 210102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QActionGroup) OnSelected(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(210000, 210103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QActionGroup) OnTriggered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(210000, 210104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QActionGroup::QActionGroup(QObject*)
func NewActionGroup(parent QObjectInterface) *QActionGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 210000, 210105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QActionGroup{}
	_p.SetDriver(__rv, 210000, false)
	return _p
}

//QActionGroup::actions()
func (q *QActionGroup) Actions() []*QAction {
	var __rv []*QAction
	q.Drv(210000, 210106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QActionGroup::addAction(QAction*)
func (q *QActionGroup) AddAction(a *QAction) *QAction {
	var __rv uintptr
	q.Drv(210000, 210107, Native(a), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QActionGroup::addAction(QString const&)
func (q *QActionGroup) AddActionWithText(text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(210000, 210108, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QActionGroup::addAction(QIcon const&,QString const&)
func (q *QActionGroup) AddActionWithIconText(icon *QIcon, text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(210000, 210109, Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QActionGroup::checkedAction()
func (q *QActionGroup) CheckedAction() *QAction {
	var __rv uintptr
	q.Drv(210000, 210110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QActionGroup::isEnabled()
func (q *QActionGroup) IsEnabled() bool {
	var __rv bool
	q.Drv(210000, 210111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QActionGroup::isExclusive()
func (q *QActionGroup) IsExclusive() bool {
	var __rv bool
	q.Drv(210000, 210112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QActionGroup::isVisible()
func (q *QActionGroup) IsVisible() bool {
	var __rv bool
	q.Drv(210000, 210113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QActionGroup::removeAction(QAction*)
func (q *QActionGroup) RemoveAction(a *QAction) {
	q.Drv(210000, 210114, Native(a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QActionGroup::setDisabled(bool)
func (q *QActionGroup) SetDisabled(b bool) {
	q.Drv(210000, 210115, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QActionGroup::setEnabled(bool)
func (q *QActionGroup) SetEnabled(value bool) {
	q.Drv(210000, 210116, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QActionGroup::setExclusive(bool)
func (q *QActionGroup) SetExclusive(value bool) {
	q.Drv(210000, 210117, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QActionGroup::setVisible(bool)
func (q *QActionGroup) SetVisible(value bool) {
	q.Drv(210000, 210118, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QAnimationGroup : QAnimationGroup
type QAnimationGroup struct {
	QAbstractAnimation
}

// New QAnimationGroup from driver
func NewAnimationGroupFromDriver(drv Driver) *QAnimationGroup {
	_p := &QAnimationGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QAnimationGroup::addAnimation(QAbstractAnimation*)
func (q *QAnimationGroup) AddAnimation(animation *QAbstractAnimation) {
	q.Drv(211000, 211102, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAnimationGroup::animationAt(int)
func (q *QAnimationGroup) AnimationAt(index int32) *QAbstractAnimation {
	var __rv uintptr
	q.Drv(211000, 211103, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractAnimation{}
	_rp.SetDriver(__rv, 194000, false)
	return _rp
}

//QAnimationGroup::animationCount()
func (q *QAnimationGroup) AnimationCount() int32 {
	var __rv int32
	q.Drv(211000, 211104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAnimationGroup::clear()
func (q *QAnimationGroup) Clear() {
	q.Drv(211000, 211105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAnimationGroup::indexOfAnimation(QAbstractAnimation*)
func (q *QAnimationGroup) IndexOfAnimation(animation *QAbstractAnimation) int32 {
	var __rv int32
	q.Drv(211000, 211106, Native(animation), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QAnimationGroup::insertAnimation(int,QAbstractAnimation*)
func (q *QAnimationGroup) InsertAnimation(index int32, animation *QAbstractAnimation) {
	q.Drv(211000, 211107, unsafe.Pointer(&index), Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAnimationGroup::removeAnimation(QAbstractAnimation*)
func (q *QAnimationGroup) RemoveAnimation(animation *QAbstractAnimation) {
	q.Drv(211000, 211108, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QAnimationGroup::takeAnimation(int)
func (q *QAnimationGroup) TakeAnimation(index int32) *QAbstractAnimation {
	var __rv uintptr
	q.Drv(211000, 211109, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractAnimation{}
	_rp.SetDriver(__rv, 194000, false)
	return _rp
}

//enum QBoxLayout_Direction - QBoxLayout::Direction
type QBoxLayout_Direction uint32

const (
	QBoxLayout_LeftToRight QBoxLayout_Direction = 0
	QBoxLayout_RightToLeft QBoxLayout_Direction = 1
	QBoxLayout_TopToBottom QBoxLayout_Direction = 2
	QBoxLayout_BottomToTop QBoxLayout_Direction = 3
	QBoxLayout_Down        QBoxLayout_Direction = QBoxLayout_TopToBottom
	QBoxLayout_Up          QBoxLayout_Direction = QBoxLayout_BottomToTop
)

//struct QBoxLayout : QBoxLayout
type QBoxLayout struct {
	QLayout
}

// New QBoxLayout from driver
func NewBoxLayoutFromDriver(drv Driver) *QBoxLayout {
	_p := &QBoxLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QBoxLayout::QBoxLayout(QBoxLayout::Direction,QWidget*)
func NewBoxLayout(value2 QBoxLayout_Direction, parent QWidgetInterface) *QBoxLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 212000, 212102, unsafe.Pointer(&value2), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QBoxLayout{}
	_p.SetDriver(__rv, 212000, false)
	return _p
}

//QBoxLayout::addLayout(QLayout*)
func (q *QBoxLayout) AddLayout(layout QLayoutInterface) {
	q.Drv(212000, 212103, Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addLayout(QLayout*,int)
func (q *QBoxLayout) AddLayoutWithLayoutStretch(layout QLayoutInterface, stretch int32) {
	q.Drv(212000, 212104, Native(layout), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addSpacerItem(QSpacerItem*)
func (q *QBoxLayout) AddSpacerItem(spacerItem *QSpacerItem) {
	q.Drv(212000, 212105, Native(spacerItem), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addSpacing(int)
func (q *QBoxLayout) AddSpacing(size int32) {
	q.Drv(212000, 212106, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addStretch()
func (q *QBoxLayout) AddStretch() {
	q.Drv(212000, 212107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addStretch(int)
func (q *QBoxLayout) AddStretchWithStretch(stretch int32) {
	q.Drv(212000, 212108, unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addStrut(int)
func (q *QBoxLayout) AddStrut(value int32) {
	q.Drv(212000, 212109, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addWidget(QWidget*)
func (q *QBoxLayout) AddWidget(value QWidgetInterface) {
	q.Drv(212000, 212110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::addWidget(QWidget*,int,QFlags<Qt::AlignmentFlag>)
func (q *QBoxLayout) AddWidgetWithWidgetStretchAlignment(value2 QWidgetInterface, stretch int32, alignment Qt_AlignmentFlag) {
	q.Drv(212000, 212111, Native(value2), unsafe.Pointer(&stretch), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::direction()
func (q *QBoxLayout) Direction() QBoxLayout_Direction {
	var __rv QBoxLayout_Direction
	q.Drv(212000, 212112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBoxLayout::insertItem(int,QLayoutItem*)
func (q *QBoxLayout) InsertItem(index int32, value2 *QLayoutItem) {
	q.Drv(212000, 212113, unsafe.Pointer(&index), Native(value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertLayout(int,QLayout*,int)
func (q *QBoxLayout) InsertLayout(index int32, layout QLayoutInterface, stretch int32) {
	q.Drv(212000, 212114, unsafe.Pointer(&index), Native(layout), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertSpacerItem(int,QSpacerItem*)
func (q *QBoxLayout) InsertSpacerItem(index int32, spacerItem *QSpacerItem) {
	q.Drv(212000, 212115, unsafe.Pointer(&index), Native(spacerItem), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertSpacing(int,int)
func (q *QBoxLayout) InsertSpacing(index int32, size int32) {
	q.Drv(212000, 212116, unsafe.Pointer(&index), unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertStretch(int)
func (q *QBoxLayout) InsertStretch(index int32) {
	q.Drv(212000, 212117, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertStretch(int,int)
func (q *QBoxLayout) InsertStretchWithIndexStretch(index int32, stretch int32) {
	q.Drv(212000, 212118, unsafe.Pointer(&index), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::insertWidget(int,QWidget*,int,QFlags<Qt::AlignmentFlag>)
func (q *QBoxLayout) InsertWidget(index int32, widget QWidgetInterface, stretch int32, alignment Qt_AlignmentFlag) {
	q.Drv(212000, 212119, unsafe.Pointer(&index), Native(widget), unsafe.Pointer(&stretch), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::setDirection(QBoxLayout::Direction)
func (q *QBoxLayout) SetDirection(value QBoxLayout_Direction) {
	q.Drv(212000, 212120, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::setSpacing(int)
func (q *QBoxLayout) SetSpacing(spacing int32) {
	q.Drv(212000, 212121, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::setStretch(int,int)
func (q *QBoxLayout) SetStretch(index int32, stretch int32) {
	q.Drv(212000, 212122, unsafe.Pointer(&index), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QBoxLayout::setStretchFactor(QLayout*,int)
func (q *QBoxLayout) SetStretchFactorWithLayoutStretch(l QLayoutInterface, stretch int32) bool {
	var __rv bool
	q.Drv(212000, 212123, Native(l), unsafe.Pointer(&stretch), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBoxLayout::setStretchFactor(QWidget*,int)
func (q *QBoxLayout) SetStretchFactorWithWidgetStretch(w QWidgetInterface, stretch int32) bool {
	var __rv bool
	q.Drv(212000, 212124, Native(w), unsafe.Pointer(&stretch), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBoxLayout::spacing()
func (q *QBoxLayout) Spacing() int32 {
	var __rv int32
	q.Drv(212000, 212125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QBoxLayout::stretch(int)
func (q *QBoxLayout) Stretch(index int32) int32 {
	var __rv int32
	q.Drv(212000, 212126, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QButtonGroup : QButtonGroup
type QButtonGroup struct {
	QObject
}

// New QButtonGroup from driver
func NewButtonGroupFromDriver(drv Driver) *QButtonGroup {
	_p := &QButtonGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QButtonGroup) OnButtonClicked(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QButtonGroup) OnButtonClickedWithAbstractbutton(fn func(*QAbstractButton)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QButtonGroup) OnButtonPressed(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QButtonGroup) OnButtonPressedWithAbstractbutton(fn func(*QAbstractButton)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QButtonGroup) OnButtonReleased(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QButtonGroup) OnButtonReleasedWithAbstractbutton(fn func(*QAbstractButton)) uintptr {
	var __rv uintptr
	q.Drv(213000, 213107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QButtonGroup::QButtonGroup()
func NewButtonGroup() *QButtonGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 213000, 213108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QButtonGroup{}
	_p.SetDriver(__rv, 213000, false)
	return _p
}

//QButtonGroup::QButtonGroup(QObject*)
func NewButtonGroupWithParent(parent QObjectInterface) *QButtonGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 213000, 213109, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QButtonGroup{}
	_p.SetDriver(__rv, 213000, false)
	return _p
}

//QButtonGroup::addButton(QAbstractButton*)
func (q *QButtonGroup) AddButton(value *QAbstractButton) {
	q.Drv(213000, 213110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QButtonGroup::addButton(QAbstractButton*,int)
func (q *QButtonGroup) AddButtonWithAbstractbuttonId(value2 *QAbstractButton, id int32) {
	q.Drv(213000, 213111, Native(value2), unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QButtonGroup::button(int)
func (q *QButtonGroup) Button(id int32) *QAbstractButton {
	var __rv uintptr
	q.Drv(213000, 213112, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QButtonGroup::buttons()
func (q *QButtonGroup) Buttons() []*QAbstractButton {
	var __rv []*QAbstractButton
	q.Drv(213000, 213113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QButtonGroup::checkedButton()
func (q *QButtonGroup) CheckedButton() *QAbstractButton {
	var __rv uintptr
	q.Drv(213000, 213114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QButtonGroup::checkedId()
func (q *QButtonGroup) CheckedId() int32 {
	var __rv int32
	q.Drv(213000, 213115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QButtonGroup::exclusive()
func (q *QButtonGroup) Exclusive() bool {
	var __rv bool
	q.Drv(213000, 213116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QButtonGroup::id(QAbstractButton*)
func (q *QButtonGroup) Id(button *QAbstractButton) int32 {
	var __rv int32
	q.Drv(213000, 213117, Native(button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QButtonGroup::removeButton(QAbstractButton*)
func (q *QButtonGroup) RemoveButton(value *QAbstractButton) {
	q.Drv(213000, 213118, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QButtonGroup::setExclusive(bool)
func (q *QButtonGroup) SetExclusive(value bool) {
	q.Drv(213000, 213119, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QButtonGroup::setId(QAbstractButton*,int)
func (q *QButtonGroup) SetId(button *QAbstractButton, id int32) {
	q.Drv(213000, 213120, Native(button), unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QCalendarWidget_HorizontalHeaderFormat - QCalendarWidget::HorizontalHeaderFormat
type QCalendarWidget_HorizontalHeaderFormat uint32

const (
	QCalendarWidget_NoHorizontalHeader   QCalendarWidget_HorizontalHeaderFormat = 0
	QCalendarWidget_SingleLetterDayNames QCalendarWidget_HorizontalHeaderFormat = 1
	QCalendarWidget_ShortDayNames        QCalendarWidget_HorizontalHeaderFormat = 2
	QCalendarWidget_LongDayNames         QCalendarWidget_HorizontalHeaderFormat = 3
)

//enum QCalendarWidget_VerticalHeaderFormat - QCalendarWidget::VerticalHeaderFormat
type QCalendarWidget_VerticalHeaderFormat uint32

const (
	QCalendarWidget_NoVerticalHeader QCalendarWidget_VerticalHeaderFormat = 0
	QCalendarWidget_ISOWeekNumbers   QCalendarWidget_VerticalHeaderFormat = 1
)

//enum QCalendarWidget_SelectionMode - QCalendarWidget::SelectionMode
type QCalendarWidget_SelectionMode uint32

const (
	QCalendarWidget_NoSelection     QCalendarWidget_SelectionMode = 0
	QCalendarWidget_SingleSelection QCalendarWidget_SelectionMode = 1
)

//struct QCalendarWidget : QCalendarWidget
type QCalendarWidget struct {
	QWidget
}

// New QCalendarWidget from driver
func NewCalendarWidgetFromDriver(drv Driver) *QCalendarWidget {
	_p := &QCalendarWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QCalendarWidget) OnClicked(fn func(*QDate)) uintptr {
	var __rv uintptr
	q.Drv(214000, 214102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCalendarWidget) OnActivated(fn func(*QDate)) uintptr {
	var __rv uintptr
	q.Drv(214000, 214103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCalendarWidget) OnCurrentPageChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(214000, 214104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCalendarWidget) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(214000, 214105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QCalendarWidget::QCalendarWidget()
func NewCalendarWidget() *QCalendarWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 214000, 214106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCalendarWidget{}
	_p.SetDriver(__rv, 214000, false)
	return _p
}

//QCalendarWidget::QCalendarWidget(QWidget*)
func NewCalendarWidgetWithParent(parent QWidgetInterface) *QCalendarWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 214000, 214107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCalendarWidget{}
	_p.SetDriver(__rv, 214000, false)
	return _p
}

//QCalendarWidget::dateEditAcceptDelay()
func (q *QCalendarWidget) DateEditAcceptDelay() int32 {
	var __rv int32
	q.Drv(214000, 214108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::dateTextFormat(QDate const&)
func (q *QCalendarWidget) DateTextFormat(date *QDate) *QTextCharFormat {
	var __rv uintptr
	q.Drv(214000, 214109, Native(date), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QCalendarWidget::firstDayOfWeek()
func (q *QCalendarWidget) FirstDayOfWeek() Qt_DayOfWeek {
	var __rv Qt_DayOfWeek
	q.Drv(214000, 214110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::headerTextFormat()
func (q *QCalendarWidget) HeaderTextFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(214000, 214111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QCalendarWidget::horizontalHeaderFormat()
func (q *QCalendarWidget) HorizontalHeaderFormat() QCalendarWidget_HorizontalHeaderFormat {
	var __rv QCalendarWidget_HorizontalHeaderFormat
	q.Drv(214000, 214112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::isDateEditEnabled()
func (q *QCalendarWidget) IsDateEditEnabled() bool {
	var __rv bool
	q.Drv(214000, 214113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::isGridVisible()
func (q *QCalendarWidget) IsGridVisible() bool {
	var __rv bool
	q.Drv(214000, 214114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::isNavigationBarVisible()
func (q *QCalendarWidget) IsNavigationBarVisible() bool {
	var __rv bool
	q.Drv(214000, 214115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::maximumDate()
func (q *QCalendarWidget) MaximumDate() *QDate {
	var __rv uintptr
	q.Drv(214000, 214116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QCalendarWidget::minimumDate()
func (q *QCalendarWidget) MinimumDate() *QDate {
	var __rv uintptr
	q.Drv(214000, 214117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QCalendarWidget::monthShown()
func (q *QCalendarWidget) MonthShown() int32 {
	var __rv int32
	q.Drv(214000, 214118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::paintCell(QPainter*,QRect const&,QDate const&)
func (q *QCalendarWidget) PaintCell(painter *QPainter, rect *QRect, date *QDate) {
	q.Drv(214000, 214119, Native(painter), Native(rect), Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::selectedDate()
func (q *QCalendarWidget) SelectedDate() *QDate {
	var __rv uintptr
	q.Drv(214000, 214120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QCalendarWidget::selectionMode()
func (q *QCalendarWidget) SelectionMode() QCalendarWidget_SelectionMode {
	var __rv QCalendarWidget_SelectionMode
	q.Drv(214000, 214121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::setCurrentPage(int,int)
func (q *QCalendarWidget) SetCurrentPage(year int32, month int32) {
	q.Drv(214000, 214122, unsafe.Pointer(&year), unsafe.Pointer(&month), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setDateEditAcceptDelay(int)
func (q *QCalendarWidget) SetDateEditAcceptDelay(delay int32) {
	q.Drv(214000, 214123, unsafe.Pointer(&delay), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setDateEditEnabled(bool)
func (q *QCalendarWidget) SetDateEditEnabled(enable bool) {
	q.Drv(214000, 214124, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setDateRange(QDate const&,QDate const&)
func (q *QCalendarWidget) SetDateRange(min *QDate, max *QDate) {
	q.Drv(214000, 214125, Native(min), Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setDateTextFormat(QDate const&,QTextCharFormat const&)
func (q *QCalendarWidget) SetDateTextFormat(date *QDate, format *QTextCharFormat) {
	q.Drv(214000, 214126, Native(date), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setFirstDayOfWeek(Qt::DayOfWeek)
func (q *QCalendarWidget) SetFirstDayOfWeek(dayOfWeek Qt_DayOfWeek) {
	q.Drv(214000, 214127, unsafe.Pointer(&dayOfWeek), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setGridVisible(bool)
func (q *QCalendarWidget) SetGridVisible(show bool) {
	q.Drv(214000, 214128, unsafe.Pointer(&show), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setHeaderTextFormat(QTextCharFormat const&)
func (q *QCalendarWidget) SetHeaderTextFormat(format *QTextCharFormat) {
	q.Drv(214000, 214129, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setHorizontalHeaderFormat(QCalendarWidget::HorizontalHeaderFormat)
func (q *QCalendarWidget) SetHorizontalHeaderFormat(format QCalendarWidget_HorizontalHeaderFormat) {
	q.Drv(214000, 214130, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setMaximumDate(QDate const&)
func (q *QCalendarWidget) SetMaximumDate(date *QDate) {
	q.Drv(214000, 214131, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setMinimumDate(QDate const&)
func (q *QCalendarWidget) SetMinimumDate(date *QDate) {
	q.Drv(214000, 214132, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setNavigationBarVisible(bool)
func (q *QCalendarWidget) SetNavigationBarVisible(visible bool) {
	q.Drv(214000, 214133, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setSelectedDate(QDate const&)
func (q *QCalendarWidget) SetSelectedDate(date *QDate) {
	q.Drv(214000, 214134, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setSelectionMode(QCalendarWidget::SelectionMode)
func (q *QCalendarWidget) SetSelectionMode(mode QCalendarWidget_SelectionMode) {
	q.Drv(214000, 214135, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setVerticalHeaderFormat(QCalendarWidget::VerticalHeaderFormat)
func (q *QCalendarWidget) SetVerticalHeaderFormat(format QCalendarWidget_VerticalHeaderFormat) {
	q.Drv(214000, 214136, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::setWeekdayTextFormat(Qt::DayOfWeek,QTextCharFormat const&)
func (q *QCalendarWidget) SetWeekdayTextFormat(dayOfWeek Qt_DayOfWeek, format *QTextCharFormat) {
	q.Drv(214000, 214137, unsafe.Pointer(&dayOfWeek), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showNextMonth()
func (q *QCalendarWidget) ShowNextMonth() {
	q.Drv(214000, 214138, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showNextYear()
func (q *QCalendarWidget) ShowNextYear() {
	q.Drv(214000, 214139, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showPreviousMonth()
func (q *QCalendarWidget) ShowPreviousMonth() {
	q.Drv(214000, 214140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showPreviousYear()
func (q *QCalendarWidget) ShowPreviousYear() {
	q.Drv(214000, 214141, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showSelectedDate()
func (q *QCalendarWidget) ShowSelectedDate() {
	q.Drv(214000, 214142, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::showToday()
func (q *QCalendarWidget) ShowToday() {
	q.Drv(214000, 214143, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::updateCell(QDate const&)
func (q *QCalendarWidget) UpdateCell(date *QDate) {
	q.Drv(214000, 214144, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::updateCells()
func (q *QCalendarWidget) UpdateCells() {
	q.Drv(214000, 214145, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCalendarWidget::verticalHeaderFormat()
func (q *QCalendarWidget) VerticalHeaderFormat() QCalendarWidget_VerticalHeaderFormat {
	var __rv QCalendarWidget_VerticalHeaderFormat
	q.Drv(214000, 214146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCalendarWidget::weekdayTextFormat(Qt::DayOfWeek)
func (q *QCalendarWidget) WeekdayTextFormat(dayOfWeek Qt_DayOfWeek) *QTextCharFormat {
	var __rv uintptr
	q.Drv(214000, 214147, unsafe.Pointer(&dayOfWeek), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QCalendarWidget::yearShown()
func (q *QCalendarWidget) YearShown() int32 {
	var __rv int32
	q.Drv(214000, 214148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QCheckBox : QCheckBox
type QCheckBox struct {
	QAbstractButton
}

// New QCheckBox from driver
func NewCheckBoxFromDriver(drv Driver) *QCheckBox {
	_p := &QCheckBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QCheckBox) OnStateChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(215000, 215102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QCheckBox::QCheckBox()
func NewCheckBox() *QCheckBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 215000, 215103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCheckBox{}
	_p.SetDriver(__rv, 215000, false)
	return _p
}

//QCheckBox::QCheckBox(QWidget*)
func NewCheckBoxWithParent(parent QWidgetInterface) *QCheckBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 215000, 215104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCheckBox{}
	_p.SetDriver(__rv, 215000, false)
	return _p
}

//QCheckBox::QCheckBox(QString const&,QWidget*)
func NewCheckBoxWithTextParent(text string, parent QWidgetInterface) *QCheckBox {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 215000, 215105, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCheckBox{}
	_p.SetDriver(__rv, 215000, false)
	return _p
}

//QCheckBox::checkState()
func (q *QCheckBox) CheckState() Qt_CheckState {
	var __rv Qt_CheckState
	q.Drv(215000, 215106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCheckBox::isTristate()
func (q *QCheckBox) IsTristate() bool {
	var __rv bool
	q.Drv(215000, 215107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCheckBox::setCheckState(Qt::CheckState)
func (q *QCheckBox) SetCheckState(state Qt_CheckState) {
	q.Drv(215000, 215108, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCheckBox::setTristate(bool)
func (q *QCheckBox) SetTristate(y bool) {
	q.Drv(215000, 215109, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QClipboard_Mode - QClipboard::Mode
type QClipboard_Mode uint32

const (
	QClipboard_Clipboard  QClipboard_Mode = 0
	QClipboard_Selection  QClipboard_Mode = 1
	QClipboard_FindBuffer QClipboard_Mode = 2
	QClipboard_LastMode   QClipboard_Mode = QClipboard_FindBuffer
)

//struct QClipboard : QClipboard
type QClipboard struct {
	QObject
}

// New QClipboard from driver
func NewClipboardFromDriver(drv Driver) *QClipboard {
	_p := &QClipboard{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QClipboard) OnFindBufferChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(216000, 216102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QClipboard) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(216000, 216103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QClipboard) OnDataChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(216000, 216104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QClipboard) OnChanged(fn func(QClipboard_Mode)) uintptr {
	var __rv uintptr
	q.Drv(216000, 216105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QClipboard::clear()
func (q *QClipboard) Clear() {
	q.Drv(216000, 216106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::clear(QClipboard::Mode)
func (q *QClipboard) ClearWithMode(mode QClipboard_Mode) {
	q.Drv(216000, 216107, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::image()
func (q *QClipboard) Image() *QImage {
	var __rv uintptr
	q.Drv(216000, 216108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QClipboard::image(QClipboard::Mode)
func (q *QClipboard) ImageWithMode(mode QClipboard_Mode) *QImage {
	var __rv uintptr
	q.Drv(216000, 216109, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QClipboard::mimeData()
func (q *QClipboard) MimeData() *QMimeData {
	var __rv uintptr
	q.Drv(216000, 216110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QClipboard::mimeData(QClipboard::Mode)
func (q *QClipboard) MimeDataWithMode(mode QClipboard_Mode) *QMimeData {
	var __rv uintptr
	q.Drv(216000, 216111, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QClipboard::ownsClipboard()
func (q *QClipboard) OwnsClipboard() bool {
	var __rv bool
	q.Drv(216000, 216112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QClipboard::ownsFindBuffer()
func (q *QClipboard) OwnsFindBuffer() bool {
	var __rv bool
	q.Drv(216000, 216113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QClipboard::ownsSelection()
func (q *QClipboard) OwnsSelection() bool {
	var __rv bool
	q.Drv(216000, 216114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QClipboard::pixmap()
func (q *QClipboard) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(216000, 216115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QClipboard::pixmap(QClipboard::Mode)
func (q *QClipboard) PixmapWithMode(mode QClipboard_Mode) *QPixmap {
	var __rv uintptr
	q.Drv(216000, 216116, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QClipboard::setImage(QImage const&)
func (q *QClipboard) SetImage(value *QImage) {
	q.Drv(216000, 216117, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setImage(QImage const&,QClipboard::Mode)
func (q *QClipboard) SetImageWithImageMode(value2 *QImage, mode QClipboard_Mode) {
	q.Drv(216000, 216118, Native(value2), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setMimeData(QMimeData*)
func (q *QClipboard) SetMimeData(data *QMimeData) {
	q.Drv(216000, 216119, Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setMimeData(QMimeData*,QClipboard::Mode)
func (q *QClipboard) SetMimeDataWithDataMode(data *QMimeData, mode QClipboard_Mode) {
	q.Drv(216000, 216120, Native(data), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setPixmap(QPixmap const&)
func (q *QClipboard) SetPixmap(value *QPixmap) {
	q.Drv(216000, 216121, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setPixmap(QPixmap const&,QClipboard::Mode)
func (q *QClipboard) SetPixmapWithPixmapMode(value2 *QPixmap, mode QClipboard_Mode) {
	q.Drv(216000, 216122, Native(value2), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setText(QString const&)
func (q *QClipboard) SetText(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(216000, 216123, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::setText(QString const&,QClipboard::Mode)
func (q *QClipboard) SetTextWithStringMode(value2 string, mode QClipboard_Mode) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	q.Drv(216000, 216124, unsafe.Pointer(_value2), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QClipboard::supportsFindBuffer()
func (q *QClipboard) SupportsFindBuffer() bool {
	var __rv bool
	q.Drv(216000, 216125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QClipboard::supportsSelection()
func (q *QClipboard) SupportsSelection() bool {
	var __rv bool
	q.Drv(216000, 216126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QClipboard::text()
func (q *QClipboard) Text() string {
	var __rv C.string_head
	q.Drv(216000, 216127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QClipboard::text(QClipboard::Mode)
func (q *QClipboard) TextWithMode(mode QClipboard_Mode) string {
	var __rv C.string_head
	q.Drv(216000, 216128, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QClipboard::text(QString&)
func (q *QClipboard) TextWithSubtype(subtype *string) string {
	var __rv C.string_head
	q.Drv(216000, 216129, unsafe.Pointer(subtype), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QClipboard::text(QString&,QClipboard::Mode)
func (q *QClipboard) TextWithSubtypeMode(subtype *string, mode QClipboard_Mode) string {
	var __rv C.string_head
	q.Drv(216000, 216130, unsafe.Pointer(subtype), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QColorDialog_ColorDialogOption - QColorDialog::ColorDialogOption
type QColorDialog_ColorDialogOption uint32

const (
	QColorDialog_ShowAlphaChannel    QColorDialog_ColorDialogOption = 0x00000001
	QColorDialog_NoButtons           QColorDialog_ColorDialogOption = 0x00000002
	QColorDialog_DontUseNativeDialog QColorDialog_ColorDialogOption = 0x00000004
)

//struct QColorDialog : QColorDialog
type QColorDialog struct {
	QDialog
}

// New QColorDialog from driver
func NewColorDialogFromDriver(drv Driver) *QColorDialog {
	_p := &QColorDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QColorDialog) OnCurrentColorChanged(fn func(*QColor)) uintptr {
	var __rv uintptr
	q.Drv(217000, 217102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QColorDialog) OnColorSelected(fn func(*QColor)) uintptr {
	var __rv uintptr
	q.Drv(217000, 217103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QColorDialog::QColorDialog()
func NewColorDialog() *QColorDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 217000, 217104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColorDialog{}
	_p.SetDriver(__rv, 217000, false)
	return _p
}

//QColorDialog::QColorDialog(QWidget*)
func NewColorDialogWithParent(parent QWidgetInterface) *QColorDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 217000, 217105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColorDialog{}
	_p.SetDriver(__rv, 217000, false)
	return _p
}

//QColorDialog::QColorDialog(QColor const&,QWidget*)
func NewColorDialogWithColorParent(initial *QColor, parent QWidgetInterface) *QColorDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 217000, 217106, Native(initial), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColorDialog{}
	_p.SetDriver(__rv, 217000, false)
	return _p
}

//QColorDialog::currentColor()
func (q *QColorDialog) CurrentColor() *QColor {
	var __rv uintptr
	q.Drv(217000, 217107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::customColor(int)
func QColorDialogCustomColor(index int32) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 217000, 217108, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::customColor(int)
func (q *QColorDialog) CustomColor(index int32) *QColor {
	var __rv uintptr
	q.Drv(217000, 217108, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::customCount()
func QColorDialogCustomCount() int32 {
	var __rv int32
	DirectQtDrv(nil, 217000, 217109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::customCount()
func (q *QColorDialog) CustomCount() int32 {
	var __rv int32
	q.Drv(217000, 217109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::getColor()
func QColorDialogGetColor() *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 217000, 217110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getColor()
func (q *QColorDialog) GetColor() *QColor {
	var __rv uintptr
	q.Drv(217000, 217110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getColor(QColor const&,QWidget*)
func QColorDialogGetColorWithColorParent(initial *QColor, parent QWidgetInterface) *QColor {
	var __rv uintptr
	DirectQtDrv(nil, 217000, 217111, Native(initial), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getColor(QColor const&,QWidget*)
func (q *QColorDialog) GetColorWithColorParent(initial *QColor, parent QWidgetInterface) *QColor {
	var __rv uintptr
	q.Drv(217000, 217111, Native(initial), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getColor(QColor const&,QWidget*,QString const&,QFlags<QColorDialog::ColorDialogOption>)
func QColorDialogGetColorWithColorParentTitleOptions(initial *QColor, parent QWidgetInterface, title string, options QColorDialog_ColorDialogOption) *QColor {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	DirectQtDrv(nil, 217000, 217112, Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getColor(QColor const&,QWidget*,QString const&,QFlags<QColorDialog::ColorDialogOption>)
func (q *QColorDialog) GetColorWithColorParentTitleOptions(initial *QColor, parent QWidgetInterface, title string, options QColorDialog_ColorDialogOption) *QColor {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(217000, 217112, Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::getRgba()
func QColorDialogGetRgba() uint32 {
	var __rv uint32
	DirectQtDrv(nil, 217000, 217113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::getRgba()
func (q *QColorDialog) GetRgba() uint32 {
	var __rv uint32
	q.Drv(217000, 217113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::getRgba(unsigned int,bool*,QWidget*)
func QColorDialogGetRgbaWithRgbaOkParent(rgba uint32, ok *bool, parent QWidgetInterface) uint32 {
	var __rv uint32
	DirectQtDrv(nil, 217000, 217114, unsafe.Pointer(&rgba), unsafe.Pointer(&ok), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::getRgba(unsigned int,bool*,QWidget*)
func (q *QColorDialog) GetRgbaWithRgbaOkParent(rgba uint32, ok *bool, parent QWidgetInterface) uint32 {
	var __rv uint32
	q.Drv(217000, 217114, unsafe.Pointer(&rgba), unsafe.Pointer(&ok), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::open()
func (q *QColorDialog) Open() {
	q.Drv(217000, 217115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::open(QObject*,char const*)
func (q *QColorDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(217000, 217116, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::options()
func (q *QColorDialog) Options() QColorDialog_ColorDialogOption {
	var __rv QColorDialog_ColorDialogOption
	q.Drv(217000, 217117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColorDialog::selectedColor()
func (q *QColorDialog) SelectedColor() *QColor {
	var __rv uintptr
	q.Drv(217000, 217118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QColorDialog::setCurrentColor(QColor const&)
func (q *QColorDialog) SetCurrentColor(color *QColor) {
	q.Drv(217000, 217119, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setCustomColor(int,QColor)
func QColorDialogSetCustomColor(index int32, color *QColor) {
	DirectQtDrv(nil, 217000, 217120, unsafe.Pointer(&index), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setCustomColor(int,QColor)
func (q *QColorDialog) SetCustomColor(index int32, color *QColor) {
	q.Drv(217000, 217120, unsafe.Pointer(&index), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setOption(QColorDialog::ColorDialogOption)
func (q *QColorDialog) SetOption(option QColorDialog_ColorDialogOption) {
	q.Drv(217000, 217121, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setOption(QColorDialog::ColorDialogOption,bool)
func (q *QColorDialog) SetOptionWithOptionOn(option QColorDialog_ColorDialogOption, on bool) {
	q.Drv(217000, 217122, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setOptions(QFlags<QColorDialog::ColorDialogOption>)
func (q *QColorDialog) SetOptions(options QColorDialog_ColorDialogOption) {
	q.Drv(217000, 217123, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setStandardColor(int,QColor)
func QColorDialogSetStandardColor(index int32, color *QColor) {
	DirectQtDrv(nil, 217000, 217124, unsafe.Pointer(&index), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::setStandardColor(int,QColor)
func (q *QColorDialog) SetStandardColor(index int32, color *QColor) {
	q.Drv(217000, 217124, unsafe.Pointer(&index), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColorDialog::testOption(QColorDialog::ColorDialogOption)
func (q *QColorDialog) TestOption(option QColorDialog_ColorDialogOption) bool {
	var __rv bool
	q.Drv(217000, 217125, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QColumnView : QColumnView
type QColumnView struct {
	QAbstractItemView
}

// New QColumnView from driver
func NewColumnViewFromDriver(drv Driver) *QColumnView {
	_p := &QColumnView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QColumnView) OnUpdatePreviewWidget(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(218000, 218102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QColumnView::QColumnView()
func NewColumnView() *QColumnView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 218000, 218103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColumnView{}
	_p.SetDriver(__rv, 218000, false)
	return _p
}

//QColumnView::QColumnView(QWidget*)
func NewColumnViewWithParent(parent QWidgetInterface) *QColumnView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 218000, 218104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QColumnView{}
	_p.SetDriver(__rv, 218000, false)
	return _p
}

//QColumnView::columnWidths()
func (q *QColumnView) ColumnWidths() []int32 {
	var __rv []int32
	q.Drv(218000, 218105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColumnView::createColumn(QModelIndex const&)
func (q *QColumnView) CreateColumn(rootIndex *QModelIndex) *QAbstractItemView {
	var __rv uintptr
	q.Drv(218000, 218106, Native(rootIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemView{}
	_rp.SetDriver(__rv, 198000, false)
	return _rp
}

//QColumnView::initializeColumn(QAbstractItemView*)
func (q *QColumnView) InitializeColumn(column *QAbstractItemView) {
	q.Drv(218000, 218107, Native(column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColumnView::previewWidget()
func (q *QColumnView) PreviewWidget() *QWidget {
	var __rv uintptr
	q.Drv(218000, 218108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QColumnView::resizeGripsVisible()
func (q *QColumnView) ResizeGripsVisible() bool {
	var __rv bool
	q.Drv(218000, 218109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QColumnView::setColumnWidths(QList<int> const&)
func (q *QColumnView) SetColumnWidths(list []int32) {
	_list := NewCIntArrayHead(list)
	defer FreeCIntArrayHead(_list)
	q.Drv(218000, 218110, unsafe.Pointer(_list), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColumnView::setPreviewWidget(QWidget*)
func (q *QColumnView) SetPreviewWidget(widget QWidgetInterface) {
	q.Drv(218000, 218111, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QColumnView::setResizeGripsVisible(bool)
func (q *QColumnView) SetResizeGripsVisible(visible bool) {
	q.Drv(218000, 218112, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QComboBox_InsertPolicy - QComboBox::InsertPolicy
type QComboBox_InsertPolicy uint32

const (
	QComboBox_NoInsert             QComboBox_InsertPolicy = 0
	QComboBox_InsertAtTop          QComboBox_InsertPolicy = 1
	QComboBox_InsertAtCurrent      QComboBox_InsertPolicy = 2
	QComboBox_InsertAtBottom       QComboBox_InsertPolicy = 3
	QComboBox_InsertAfterCurrent   QComboBox_InsertPolicy = 4
	QComboBox_InsertBeforeCurrent  QComboBox_InsertPolicy = 5
	QComboBox_InsertAlphabetically QComboBox_InsertPolicy = 6
)

//enum QComboBox_SizeAdjustPolicy - QComboBox::SizeAdjustPolicy
type QComboBox_SizeAdjustPolicy uint32

const (
	QComboBox_AdjustToContents                      QComboBox_SizeAdjustPolicy = 0
	QComboBox_AdjustToContentsOnFirstShow           QComboBox_SizeAdjustPolicy = 1
	QComboBox_AdjustToMinimumContentsLength         QComboBox_SizeAdjustPolicy = 2
	QComboBox_AdjustToMinimumContentsLengthWithIcon QComboBox_SizeAdjustPolicy = 3
)

//struct QComboBox : QComboBox
type QComboBox struct {
	QWidget
}

// New QComboBox from driver
func NewComboBoxFromDriver(drv Driver) *QComboBox {
	_p := &QComboBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QComboBox) OnHighlighted(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnHighlightedWithIndex(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnEditTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnActivated(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnActivatedWithIndex(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnCurrentIndexChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QComboBox) OnCurrentIndexChangedWithIndex(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(219000, 219108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QComboBox::QComboBox()
func NewComboBox() *QComboBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 219000, 219109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QComboBox{}
	_p.SetDriver(__rv, 219000, false)
	return _p
}

//QComboBox::QComboBox(QWidget*)
func NewComboBoxWithParent(parent QWidgetInterface) *QComboBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 219000, 219110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QComboBox{}
	_p.SetDriver(__rv, 219000, false)
	return _p
}

//QComboBox::addItem(QString const&)
func (q *QComboBox) AddItem(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219111, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::addItem(QString const&,QVariant const&)
func (q *QComboBox) AddItemWithTextUserdata(text string, userData *QVariant) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219112, unsafe.Pointer(_text), Native(userData), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::addItem(QIcon const&,QString const&,QVariant const&)
func (q *QComboBox) AddItemWithIconTextUserdata(icon *QIcon, text string, userData *QVariant) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219113, Native(icon), unsafe.Pointer(_text), Native(userData), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::addItems(QStringList const&)
func (q *QComboBox) AddItems(texts []string) {
	_texts, _texts_size := NewCSArray(texts)
	defer FreeCSArray(_texts, _texts_size)
	q.Drv(219000, 219114, unsafe.Pointer(&_texts[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::autoCompletion()
func (q *QComboBox) AutoCompletion() bool {
	var __rv bool
	q.Drv(219000, 219115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::autoCompletionCaseSensitivity()
func (q *QComboBox) AutoCompletionCaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(219000, 219116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::clear()
func (q *QComboBox) Clear() {
	q.Drv(219000, 219117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::clearEditText()
func (q *QComboBox) ClearEditText() {
	q.Drv(219000, 219118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::completer()
func (q *QComboBox) Completer() *QCompleter {
	var __rv uintptr
	q.Drv(219000, 219119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCompleter{}
	_rp.SetDriver(__rv, 222000, false)
	return _rp
}

//QComboBox::count()
func (q *QComboBox) Count() int32 {
	var __rv int32
	q.Drv(219000, 219120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::currentIndex()
func (q *QComboBox) CurrentIndex() int32 {
	var __rv int32
	q.Drv(219000, 219121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::currentText()
func (q *QComboBox) CurrentText() string {
	var __rv C.string_head
	q.Drv(219000, 219122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QComboBox::duplicatesEnabled()
func (q *QComboBox) DuplicatesEnabled() bool {
	var __rv bool
	q.Drv(219000, 219123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::findData(QVariant const&)
func (q *QComboBox) FindData(data *QVariant) int32 {
	var __rv int32
	q.Drv(219000, 219124, Native(data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::findData(QVariant const&,int,QFlags<Qt::MatchFlag>)
func (q *QComboBox) FindDataWithDataRoleFlags(data *QVariant, role int32, flags Qt_MatchFlag) int32 {
	var __rv int32
	q.Drv(219000, 219125, Native(data), unsafe.Pointer(&role), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::findText(QString const&)
func (q *QComboBox) FindText(text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(219000, 219126, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::findText(QString const&,QFlags<Qt::MatchFlag>)
func (q *QComboBox) FindTextWithTextFlags(text string, flags Qt_MatchFlag) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(219000, 219127, unsafe.Pointer(_text), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::hasFrame()
func (q *QComboBox) HasFrame() bool {
	var __rv bool
	q.Drv(219000, 219128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::hidePopup()
func (q *QComboBox) HidePopup() {
	q.Drv(219000, 219129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::iconSize()
func (q *QComboBox) IconSize() *QSize {
	var __rv uintptr
	q.Drv(219000, 219130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QComboBox::insertItem(int,QString const&,QVariant const&)
func (q *QComboBox) InsertItemWithIndexTextUserdata(index int32, text string, userData *QVariant) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219131, unsafe.Pointer(&index), unsafe.Pointer(_text), Native(userData), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::insertItem(int,QIcon const&,QString const&,QVariant const&)
func (q *QComboBox) InsertItemWithIndexIconTextUserdata(index int32, icon *QIcon, text string, userData *QVariant) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219132, unsafe.Pointer(&index), Native(icon), unsafe.Pointer(_text), Native(userData), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::insertItems(int,QStringList const&)
func (q *QComboBox) InsertItems(index int32, texts []string) {
	_texts, _texts_size := NewCSArray(texts)
	defer FreeCSArray(_texts, _texts_size)
	q.Drv(219000, 219133, unsafe.Pointer(&index), unsafe.Pointer(&_texts[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::insertPolicy()
func (q *QComboBox) InsertPolicy() QComboBox_InsertPolicy {
	var __rv QComboBox_InsertPolicy
	q.Drv(219000, 219134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::insertSeparator(int)
func (q *QComboBox) InsertSeparator(index int32) {
	q.Drv(219000, 219135, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::isEditable()
func (q *QComboBox) IsEditable() bool {
	var __rv bool
	q.Drv(219000, 219136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::itemData(int)
func (q *QComboBox) ItemData(index int32) *QVariant {
	var __rv uintptr
	q.Drv(219000, 219137, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QComboBox::itemData(int,int)
func (q *QComboBox) ItemDataWithIndexRole(index int32, role int32) *QVariant {
	var __rv uintptr
	q.Drv(219000, 219138, unsafe.Pointer(&index), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QComboBox::itemDelegate()
func (q *QComboBox) ItemDelegate() *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(219000, 219139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QComboBox::itemIcon(int)
func (q *QComboBox) ItemIcon(index int32) *QIcon {
	var __rv uintptr
	q.Drv(219000, 219140, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QComboBox::itemText(int)
func (q *QComboBox) ItemText(index int32) string {
	var __rv C.string_head
	q.Drv(219000, 219141, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QComboBox::lineEdit()
func (q *QComboBox) LineEdit() *QLineEdit {
	var __rv uintptr
	q.Drv(219000, 219142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineEdit{}
	_rp.SetDriver(__rv, 304000, false)
	return _rp
}

//QComboBox::maxCount()
func (q *QComboBox) MaxCount() int32 {
	var __rv int32
	q.Drv(219000, 219143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::maxVisibleItems()
func (q *QComboBox) MaxVisibleItems() int32 {
	var __rv int32
	q.Drv(219000, 219144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::minimumContentsLength()
func (q *QComboBox) MinimumContentsLength() int32 {
	var __rv int32
	q.Drv(219000, 219145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::model()
func (q *QComboBox) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(219000, 219146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QComboBox::modelColumn()
func (q *QComboBox) ModelColumn() int32 {
	var __rv int32
	q.Drv(219000, 219147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::removeItem(int)
func (q *QComboBox) RemoveItem(index int32) {
	q.Drv(219000, 219148, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::rootModelIndex()
func (q *QComboBox) RootModelIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(219000, 219149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QComboBox::setAutoCompletion(bool)
func (q *QComboBox) SetAutoCompletion(enable bool) {
	q.Drv(219000, 219150, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setAutoCompletionCaseSensitivity(Qt::CaseSensitivity)
func (q *QComboBox) SetAutoCompletionCaseSensitivity(sensitivity Qt_CaseSensitivity) {
	q.Drv(219000, 219151, unsafe.Pointer(&sensitivity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setCompleter(QCompleter*)
func (q *QComboBox) SetCompleter(c *QCompleter) {
	q.Drv(219000, 219152, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setCurrentIndex(int)
func (q *QComboBox) SetCurrentIndex(index int32) {
	q.Drv(219000, 219153, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setDuplicatesEnabled(bool)
func (q *QComboBox) SetDuplicatesEnabled(enable bool) {
	q.Drv(219000, 219154, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setEditText(QString const&)
func (q *QComboBox) SetEditText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219155, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setEditable(bool)
func (q *QComboBox) SetEditable(editable bool) {
	q.Drv(219000, 219156, unsafe.Pointer(&editable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setFrame(bool)
func (q *QComboBox) SetFrame(value bool) {
	q.Drv(219000, 219157, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setIconSize(QSize const&)
func (q *QComboBox) SetIconSize(size *QSize) {
	q.Drv(219000, 219158, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setInsertPolicy(QComboBox::InsertPolicy)
func (q *QComboBox) SetInsertPolicy(policy QComboBox_InsertPolicy) {
	q.Drv(219000, 219159, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setItemData(int,QVariant const&,int)
func (q *QComboBox) SetItemData(index int32, value *QVariant, role int32) {
	q.Drv(219000, 219160, unsafe.Pointer(&index), Native(value), unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setItemDelegate(QAbstractItemDelegate*)
func (q *QComboBox) SetItemDelegate(delegate *QAbstractItemDelegate) {
	q.Drv(219000, 219161, Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setItemIcon(int,QIcon const&)
func (q *QComboBox) SetItemIcon(index int32, icon *QIcon) {
	q.Drv(219000, 219162, unsafe.Pointer(&index), Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setItemText(int,QString const&)
func (q *QComboBox) SetItemText(index int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(219000, 219163, unsafe.Pointer(&index), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setLineEdit(QLineEdit*)
func (q *QComboBox) SetLineEdit(edit *QLineEdit) {
	q.Drv(219000, 219164, Native(edit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setMaxCount(int)
func (q *QComboBox) SetMaxCount(max int32) {
	q.Drv(219000, 219165, unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setMaxVisibleItems(int)
func (q *QComboBox) SetMaxVisibleItems(maxItems int32) {
	q.Drv(219000, 219166, unsafe.Pointer(&maxItems), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setMinimumContentsLength(int)
func (q *QComboBox) SetMinimumContentsLength(characters int32) {
	q.Drv(219000, 219167, unsafe.Pointer(&characters), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setModel(QAbstractItemModel*)
func (q *QComboBox) SetModel(model QAbstractItemModelInterface) {
	q.Drv(219000, 219168, Native(model), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setModelColumn(int)
func (q *QComboBox) SetModelColumn(visibleColumn int32) {
	q.Drv(219000, 219169, unsafe.Pointer(&visibleColumn), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setRootModelIndex(QModelIndex const&)
func (q *QComboBox) SetRootModelIndex(index *QModelIndex) {
	q.Drv(219000, 219170, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setSizeAdjustPolicy(QComboBox::SizeAdjustPolicy)
func (q *QComboBox) SetSizeAdjustPolicy(policy QComboBox_SizeAdjustPolicy) {
	q.Drv(219000, 219171, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setValidator(QValidator const*)
func (q *QComboBox) SetValidator(v *QValidator) {
	q.Drv(219000, 219172, Native(v), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::setView(QAbstractItemView*)
func (q *QComboBox) SetView(itemView *QAbstractItemView) {
	q.Drv(219000, 219173, Native(itemView), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::showPopup()
func (q *QComboBox) ShowPopup() {
	q.Drv(219000, 219174, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QComboBox::sizeAdjustPolicy()
func (q *QComboBox) SizeAdjustPolicy() QComboBox_SizeAdjustPolicy {
	var __rv QComboBox_SizeAdjustPolicy
	q.Drv(219000, 219175, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QComboBox::validator()
func (q *QComboBox) Validator() *QValidator {
	var __rv uintptr
	q.Drv(219000, 219176, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QValidator{}
	_rp.SetDriver(__rv, 395000, false)
	return _rp
}

//QComboBox::view()
func (q *QComboBox) View() *QAbstractItemView {
	var __rv uintptr
	q.Drv(219000, 219177, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemView{}
	_rp.SetDriver(__rv, 198000, false)
	return _rp
}

//struct QCommandLinkButton : QCommandLinkButton
type QCommandLinkButton struct {
	QPushButton
}

// New QCommandLinkButton from driver
func NewCommandLinkButtonFromDriver(drv Driver) *QCommandLinkButton {
	_p := &QCommandLinkButton{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QCommandLinkButton::QCommandLinkButton()
func NewCommandLinkButton() *QCommandLinkButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 220000, 220102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCommandLinkButton{}
	_p.SetDriver(__rv, 220000, false)
	return _p
}

//QCommandLinkButton::QCommandLinkButton(QWidget*)
func NewCommandLinkButtonWithParent(parent QWidgetInterface) *QCommandLinkButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 220000, 220103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCommandLinkButton{}
	_p.SetDriver(__rv, 220000, false)
	return _p
}

//QCommandLinkButton::QCommandLinkButton(QString const&,QWidget*)
func NewCommandLinkButtonWithTextParent(text string, parent QWidgetInterface) *QCommandLinkButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 220000, 220104, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCommandLinkButton{}
	_p.SetDriver(__rv, 220000, false)
	return _p
}

//QCommandLinkButton::QCommandLinkButton(QString const&,QString const&,QWidget*)
func NewCommandLinkButtonWithTextDescriptionParent(text string, description string, parent QWidgetInterface) *QCommandLinkButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_description := NewCStringHead(description)
	defer FreeCStringHead(_description)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 220000, 220105, unsafe.Pointer(_text), unsafe.Pointer(_description), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCommandLinkButton{}
	_p.SetDriver(__rv, 220000, false)
	return _p
}

//QCommandLinkButton::description()
func (q *QCommandLinkButton) Description() string {
	var __rv C.string_head
	q.Drv(220000, 220106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCommandLinkButton::setDescription(QString const&)
func (q *QCommandLinkButton) SetDescription(description string) {
	_description := NewCStringHead(description)
	defer FreeCStringHead(_description)
	q.Drv(220000, 220107, unsafe.Pointer(_description), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QCommonStyle : QCommonStyle
type QCommonStyle struct {
	QStyle
}

// New QCommonStyle from driver
func NewCommonStyleFromDriver(drv Driver) *QCommonStyle {
	_p := &QCommonStyle{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QCommonStyle::QCommonStyle()
func NewCommonStyle() *QCommonStyle {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 221000, 221102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCommonStyle{}
	_p.SetDriver(__rv, 221000, false)
	return _p
}

//enum QCompleter_ModelSorting - QCompleter::ModelSorting
type QCompleter_ModelSorting uint32

const (
	QCompleter_UnsortedModel                QCompleter_ModelSorting = 0
	QCompleter_CaseSensitivelySortedModel   QCompleter_ModelSorting = 0
	QCompleter_CaseInsensitivelySortedModel QCompleter_ModelSorting = 1
)

//enum QCompleter_CompletionMode - QCompleter::CompletionMode
type QCompleter_CompletionMode uint32

const (
	QCompleter_PopupCompletion           QCompleter_CompletionMode = 0
	QCompleter_UnfilteredPopupCompletion QCompleter_CompletionMode = 1
	QCompleter_InlineCompletion          QCompleter_CompletionMode = 2
)

//struct QCompleter : QCompleter
type QCompleter struct {
	QObject
}

// New QCompleter from driver
func NewCompleterFromDriver(drv Driver) *QCompleter {
	_p := &QCompleter{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QCompleter) OnHighlighted(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(222000, 222102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCompleter) OnHighlightedWithText(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(222000, 222103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCompleter) OnActivated(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(222000, 222104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QCompleter) OnActivatedWithText(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(222000, 222105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QCompleter::QCompleter()
func NewCompleter() *QCompleter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 222000, 222106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCompleter{}
	_p.SetDriver(__rv, 222000, false)
	return _p
}

//QCompleter::QCompleter(QObject*)
func NewCompleterWithParent(parent QObjectInterface) *QCompleter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 222000, 222107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCompleter{}
	_p.SetDriver(__rv, 222000, false)
	return _p
}

//QCompleter::QCompleter(QAbstractItemModel*,QObject*)
func NewCompleterWithModelParent(model QAbstractItemModelInterface, parent QObjectInterface) *QCompleter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 222000, 222108, Native(model), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCompleter{}
	_p.SetDriver(__rv, 222000, false)
	return _p
}

//QCompleter::QCompleter(QStringList const&,QObject*)
func NewCompleterWithCompletionsParent(completions []string, parent QObjectInterface) *QCompleter {
	_completions, _completions_size := NewCSArray(completions)
	defer FreeCSArray(_completions, _completions_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 222000, 222109, unsafe.Pointer(&_completions[0]), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QCompleter{}
	_p.SetDriver(__rv, 222000, false)
	return _p
}

//QCompleter::caseSensitivity()
func (q *QCompleter) CaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(222000, 222110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::complete()
func (q *QCompleter) Complete() {
	q.Drv(222000, 222111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::complete(QRect const&)
func (q *QCompleter) CompleteWithRect(rect *QRect) {
	q.Drv(222000, 222112, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::completionColumn()
func (q *QCompleter) CompletionColumn() int32 {
	var __rv int32
	q.Drv(222000, 222113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::completionCount()
func (q *QCompleter) CompletionCount() int32 {
	var __rv int32
	q.Drv(222000, 222114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::completionMode()
func (q *QCompleter) CompletionMode() QCompleter_CompletionMode {
	var __rv QCompleter_CompletionMode
	q.Drv(222000, 222115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::completionModel()
func (q *QCompleter) CompletionModel() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(222000, 222116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QCompleter::completionPrefix()
func (q *QCompleter) CompletionPrefix() string {
	var __rv C.string_head
	q.Drv(222000, 222117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCompleter::completionRole()
func (q *QCompleter) CompletionRole() int32 {
	var __rv int32
	q.Drv(222000, 222118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::currentCompletion()
func (q *QCompleter) CurrentCompletion() string {
	var __rv C.string_head
	q.Drv(222000, 222119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCompleter::currentIndex()
func (q *QCompleter) CurrentIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(222000, 222120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QCompleter::currentRow()
func (q *QCompleter) CurrentRow() int32 {
	var __rv int32
	q.Drv(222000, 222121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::maxVisibleItems()
func (q *QCompleter) MaxVisibleItems() int32 {
	var __rv int32
	q.Drv(222000, 222122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::model()
func (q *QCompleter) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(222000, 222123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QCompleter::modelSorting()
func (q *QCompleter) ModelSorting() QCompleter_ModelSorting {
	var __rv QCompleter_ModelSorting
	q.Drv(222000, 222124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::pathFromIndex(QModelIndex const&)
func (q *QCompleter) PathFromIndex(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(222000, 222125, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QCompleter::popup()
func (q *QCompleter) Popup() *QAbstractItemView {
	var __rv uintptr
	q.Drv(222000, 222126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemView{}
	_rp.SetDriver(__rv, 198000, false)
	return _rp
}

//QCompleter::setCaseSensitivity(Qt::CaseSensitivity)
func (q *QCompleter) SetCaseSensitivity(caseSensitivity Qt_CaseSensitivity) {
	q.Drv(222000, 222127, unsafe.Pointer(&caseSensitivity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setCompletionColumn(int)
func (q *QCompleter) SetCompletionColumn(column int32) {
	q.Drv(222000, 222128, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setCompletionMode(QCompleter::CompletionMode)
func (q *QCompleter) SetCompletionMode(mode QCompleter_CompletionMode) {
	q.Drv(222000, 222129, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setCompletionPrefix(QString const&)
func (q *QCompleter) SetCompletionPrefix(prefix string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(222000, 222130, unsafe.Pointer(_prefix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setCompletionRole(int)
func (q *QCompleter) SetCompletionRole(role int32) {
	q.Drv(222000, 222131, unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setCurrentRow(int)
func (q *QCompleter) SetCurrentRow(row int32) bool {
	var __rv bool
	q.Drv(222000, 222132, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::setMaxVisibleItems(int)
func (q *QCompleter) SetMaxVisibleItems(maxItems int32) {
	q.Drv(222000, 222133, unsafe.Pointer(&maxItems), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setModel(QAbstractItemModel*)
func (q *QCompleter) SetModel(c QAbstractItemModelInterface) {
	q.Drv(222000, 222134, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setModelSorting(QCompleter::ModelSorting)
func (q *QCompleter) SetModelSorting(sorting QCompleter_ModelSorting) {
	q.Drv(222000, 222135, unsafe.Pointer(&sorting), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setPopup(QAbstractItemView*)
func (q *QCompleter) SetPopup(popup *QAbstractItemView) {
	q.Drv(222000, 222136, Native(popup), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setWidget(QWidget*)
func (q *QCompleter) SetWidget(widget QWidgetInterface) {
	q.Drv(222000, 222137, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::setWrapAround(bool)
func (q *QCompleter) SetWrapAround(wrap bool) {
	q.Drv(222000, 222138, unsafe.Pointer(&wrap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QCompleter::splitPath(QString const&)
func (q *QCompleter) SplitPath(path string) []string {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv []string
	q.Drv(222000, 222139, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QCompleter::widget()
func (q *QCompleter) Widget() *QWidget {
	var __rv uintptr
	q.Drv(222000, 222140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QCompleter::wrapAround()
func (q *QCompleter) WrapAround() bool {
	var __rv bool
	q.Drv(222000, 222141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDataWidgetMapper_SubmitPolicy - QDataWidgetMapper::SubmitPolicy
type QDataWidgetMapper_SubmitPolicy uint32

const (
	QDataWidgetMapper_AutoSubmit   QDataWidgetMapper_SubmitPolicy = 0
	QDataWidgetMapper_ManualSubmit QDataWidgetMapper_SubmitPolicy = 1
)

//struct QDataWidgetMapper : QDataWidgetMapper
type QDataWidgetMapper struct {
	QObject
}

// New QDataWidgetMapper from driver
func NewDataWidgetMapperFromDriver(drv Driver) *QDataWidgetMapper {
	_p := &QDataWidgetMapper{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDataWidgetMapper) OnCurrentIndexChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(223000, 223102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDataWidgetMapper::QDataWidgetMapper()
func NewDataWidgetMapper() *QDataWidgetMapper {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 223000, 223103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDataWidgetMapper{}
	_p.SetDriver(__rv, 223000, false)
	return _p
}

//QDataWidgetMapper::QDataWidgetMapper(QObject*)
func NewDataWidgetMapperWithParent(parent QObjectInterface) *QDataWidgetMapper {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 223000, 223104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDataWidgetMapper{}
	_p.SetDriver(__rv, 223000, false)
	return _p
}

//QDataWidgetMapper::addMapping(QWidget*,int)
func (q *QDataWidgetMapper) AddMappingWithWidgetSection(widget QWidgetInterface, section int32) {
	q.Drv(223000, 223105, Native(widget), unsafe.Pointer(&section), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::addMapping(QWidget*,int,QByteArray const&)
func (q *QDataWidgetMapper) AddMappingWithWidgetSectionPropertyname(widget QWidgetInterface, section int32, propertyName []byte) {
	_propertyName := NewCByteArrayHead(propertyName)
	defer FreeCByteArrayHead(_propertyName)
	q.Drv(223000, 223106, Native(widget), unsafe.Pointer(&section), unsafe.Pointer(_propertyName), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::clearMapping()
func (q *QDataWidgetMapper) ClearMapping() {
	q.Drv(223000, 223107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::currentIndex()
func (q *QDataWidgetMapper) CurrentIndex() int32 {
	var __rv int32
	q.Drv(223000, 223108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::itemDelegate()
func (q *QDataWidgetMapper) ItemDelegate() *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(223000, 223109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QDataWidgetMapper::mappedPropertyName(QWidget*)
func (q *QDataWidgetMapper) MappedPropertyName(widget QWidgetInterface) []byte {
	var __rv []byte
	q.Drv(223000, 223110, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::mappedSection(QWidget*)
func (q *QDataWidgetMapper) MappedSection(widget QWidgetInterface) int32 {
	var __rv int32
	q.Drv(223000, 223111, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::mappedWidgetAt(int)
func (q *QDataWidgetMapper) MappedWidgetAt(section int32) *QWidget {
	var __rv uintptr
	q.Drv(223000, 223112, unsafe.Pointer(&section), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDataWidgetMapper::model()
func (q *QDataWidgetMapper) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(223000, 223113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QDataWidgetMapper::orientation()
func (q *QDataWidgetMapper) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(223000, 223114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::removeMapping(QWidget*)
func (q *QDataWidgetMapper) RemoveMapping(widget QWidgetInterface) {
	q.Drv(223000, 223115, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::revert()
func (q *QDataWidgetMapper) Revert() {
	q.Drv(223000, 223116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::rootIndex()
func (q *QDataWidgetMapper) RootIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(223000, 223117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QDataWidgetMapper::setCurrentIndex(int)
func (q *QDataWidgetMapper) SetCurrentIndex(index int32) {
	q.Drv(223000, 223118, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setCurrentModelIndex(QModelIndex const&)
func (q *QDataWidgetMapper) SetCurrentModelIndex(index *QModelIndex) {
	q.Drv(223000, 223119, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setItemDelegate(QAbstractItemDelegate*)
func (q *QDataWidgetMapper) SetItemDelegate(delegate *QAbstractItemDelegate) {
	q.Drv(223000, 223120, Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setModel(QAbstractItemModel*)
func (q *QDataWidgetMapper) SetModel(model QAbstractItemModelInterface) {
	q.Drv(223000, 223121, Native(model), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setOrientation(Qt::Orientation)
func (q *QDataWidgetMapper) SetOrientation(aOrientation Qt_Orientation) {
	q.Drv(223000, 223122, unsafe.Pointer(&aOrientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setRootIndex(QModelIndex const&)
func (q *QDataWidgetMapper) SetRootIndex(index *QModelIndex) {
	q.Drv(223000, 223123, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::setSubmitPolicy(QDataWidgetMapper::SubmitPolicy)
func (q *QDataWidgetMapper) SetSubmitPolicy(policy QDataWidgetMapper_SubmitPolicy) {
	q.Drv(223000, 223124, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::submit()
func (q *QDataWidgetMapper) Submit() bool {
	var __rv bool
	q.Drv(223000, 223125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::submitPolicy()
func (q *QDataWidgetMapper) SubmitPolicy() QDataWidgetMapper_SubmitPolicy {
	var __rv QDataWidgetMapper_SubmitPolicy
	q.Drv(223000, 223126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDataWidgetMapper::toFirst()
func (q *QDataWidgetMapper) ToFirst() {
	q.Drv(223000, 223127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::toLast()
func (q *QDataWidgetMapper) ToLast() {
	q.Drv(223000, 223128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::toNext()
func (q *QDataWidgetMapper) ToNext() {
	q.Drv(223000, 223129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDataWidgetMapper::toPrevious()
func (q *QDataWidgetMapper) ToPrevious() {
	q.Drv(223000, 223130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QDateEdit : QDateEdit
type QDateEdit struct {
	QDateTimeEdit
}

// New QDateEdit from driver
func NewDateEditFromDriver(drv Driver) *QDateEdit {
	_p := &QDateEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QDateEdit::QDateEdit()
func NewDateEdit() *QDateEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 224000, 224102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateEdit{}
	_p.SetDriver(__rv, 224000, false)
	return _p
}

//QDateEdit::QDateEdit(QWidget*)
func NewDateEditWithParent(parent QWidgetInterface) *QDateEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 224000, 224103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateEdit{}
	_p.SetDriver(__rv, 224000, false)
	return _p
}

//QDateEdit::QDateEdit(QDate const&,QWidget*)
func NewDateEditWithDateParent(date *QDate, parent QWidgetInterface) *QDateEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 224000, 224104, Native(date), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateEdit{}
	_p.SetDriver(__rv, 224000, false)
	return _p
}

//enum QDateTimeEdit_Section - QDateTimeEdit::Section
type QDateTimeEdit_Section uint32

const (
	QDateTimeEdit_NoSection         QDateTimeEdit_Section = 0x0000
	QDateTimeEdit_AmPmSection       QDateTimeEdit_Section = 0x0001
	QDateTimeEdit_MSecSection       QDateTimeEdit_Section = 0x0002
	QDateTimeEdit_SecondSection     QDateTimeEdit_Section = 0x0004
	QDateTimeEdit_MinuteSection     QDateTimeEdit_Section = 0x0008
	QDateTimeEdit_HourSection       QDateTimeEdit_Section = 0x0010
	QDateTimeEdit_DaySection        QDateTimeEdit_Section = 0x0100
	QDateTimeEdit_MonthSection      QDateTimeEdit_Section = 0x0200
	QDateTimeEdit_YearSection       QDateTimeEdit_Section = 0x0400
	QDateTimeEdit_TimeSections_Mask QDateTimeEdit_Section = QDateTimeEdit_AmPmSection | QDateTimeEdit_MSecSection | QDateTimeEdit_SecondSection | QDateTimeEdit_MinuteSection | QDateTimeEdit_HourSection
	QDateTimeEdit_DateSections_Mask QDateTimeEdit_Section = QDateTimeEdit_DaySection | QDateTimeEdit_MonthSection | QDateTimeEdit_YearSection
)

//struct QDateTimeEdit : QDateTimeEdit
type QDateTimeEdit struct {
	QAbstractSpinBox
}

// New QDateTimeEdit from driver
func NewDateTimeEditFromDriver(drv Driver) *QDateTimeEdit {
	_p := &QDateTimeEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDateTimeEdit) OnDateTimeChanged(fn func(*QDateTime)) uintptr {
	var __rv uintptr
	q.Drv(225000, 225102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDateTimeEdit) OnDateChanged(fn func(*QDate)) uintptr {
	var __rv uintptr
	q.Drv(225000, 225103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDateTimeEdit) OnTimeChanged(fn func(*QTime)) uintptr {
	var __rv uintptr
	q.Drv(225000, 225104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDateTimeEdit::QDateTimeEdit()
func NewDateTimeEdit() *QDateTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 225000, 225105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTimeEdit{}
	_p.SetDriver(__rv, 225000, false)
	return _p
}

//QDateTimeEdit::QDateTimeEdit(QWidget*)
func NewDateTimeEditWithParent(parent QWidgetInterface) *QDateTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 225000, 225106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTimeEdit{}
	_p.SetDriver(__rv, 225000, false)
	return _p
}

//QDateTimeEdit::QDateTimeEdit(QDate const&,QWidget*)
func NewDateTimeEditWithDParent(d *QDate, parent QWidgetInterface) *QDateTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 225000, 225107, Native(d), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTimeEdit{}
	_p.SetDriver(__rv, 225000, false)
	return _p
}

//QDateTimeEdit::QDateTimeEdit(QDateTime const&,QWidget*)
func NewDateTimeEditWithDtParent(dt *QDateTime, parent QWidgetInterface) *QDateTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 225000, 225108, Native(dt), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTimeEdit{}
	_p.SetDriver(__rv, 225000, false)
	return _p
}

//QDateTimeEdit::QDateTimeEdit(QTime const&,QWidget*)
func NewDateTimeEditWithTParent(t *QTime, parent QWidgetInterface) *QDateTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 225000, 225109, Native(t), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDateTimeEdit{}
	_p.SetDriver(__rv, 225000, false)
	return _p
}

//QDateTimeEdit::calendarPopup()
func (q *QDateTimeEdit) CalendarPopup() bool {
	var __rv bool
	q.Drv(225000, 225110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::calendarWidget()
func (q *QDateTimeEdit) CalendarWidget() *QCalendarWidget {
	var __rv uintptr
	q.Drv(225000, 225111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCalendarWidget{}
	_rp.SetDriver(__rv, 214000, false)
	return _rp
}

//QDateTimeEdit::clearMaximumDate()
func (q *QDateTimeEdit) ClearMaximumDate() {
	q.Drv(225000, 225112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::clearMaximumDateTime()
func (q *QDateTimeEdit) ClearMaximumDateTime() {
	q.Drv(225000, 225113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::clearMaximumTime()
func (q *QDateTimeEdit) ClearMaximumTime() {
	q.Drv(225000, 225114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::clearMinimumDate()
func (q *QDateTimeEdit) ClearMinimumDate() {
	q.Drv(225000, 225115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::clearMinimumDateTime()
func (q *QDateTimeEdit) ClearMinimumDateTime() {
	q.Drv(225000, 225116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::clearMinimumTime()
func (q *QDateTimeEdit) ClearMinimumTime() {
	q.Drv(225000, 225117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::currentSection()
func (q *QDateTimeEdit) CurrentSection() QDateTimeEdit_Section {
	var __rv QDateTimeEdit_Section
	q.Drv(225000, 225118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::currentSectionIndex()
func (q *QDateTimeEdit) CurrentSectionIndex() int32 {
	var __rv int32
	q.Drv(225000, 225119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::date()
func (q *QDateTimeEdit) Date() *QDate {
	var __rv uintptr
	q.Drv(225000, 225120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDateTimeEdit::dateTime()
func (q *QDateTimeEdit) DateTime() *QDateTime {
	var __rv uintptr
	q.Drv(225000, 225121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTimeEdit::dateTimeFromText(QString const&)
func (q *QDateTimeEdit) DateTimeFromText(text string) *QDateTime {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(225000, 225122, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTimeEdit::displayFormat()
func (q *QDateTimeEdit) DisplayFormat() string {
	var __rv C.string_head
	q.Drv(225000, 225123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTimeEdit::displayedSections()
func (q *QDateTimeEdit) DisplayedSections() QDateTimeEdit_Section {
	var __rv QDateTimeEdit_Section
	q.Drv(225000, 225124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::maximumDate()
func (q *QDateTimeEdit) MaximumDate() *QDate {
	var __rv uintptr
	q.Drv(225000, 225125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDateTimeEdit::maximumDateTime()
func (q *QDateTimeEdit) MaximumDateTime() *QDateTime {
	var __rv uintptr
	q.Drv(225000, 225126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTimeEdit::maximumTime()
func (q *QDateTimeEdit) MaximumTime() *QTime {
	var __rv uintptr
	q.Drv(225000, 225127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QDateTimeEdit::minimumDate()
func (q *QDateTimeEdit) MinimumDate() *QDate {
	var __rv uintptr
	q.Drv(225000, 225128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDate{}
	_rp.SetDriver(__rv, 19000, true)
	return _rp
}

//QDateTimeEdit::minimumDateTime()
func (q *QDateTimeEdit) MinimumDateTime() *QDateTime {
	var __rv uintptr
	q.Drv(225000, 225129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QDateTimeEdit::minimumTime()
func (q *QDateTimeEdit) MinimumTime() *QTime {
	var __rv uintptr
	q.Drv(225000, 225130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QDateTimeEdit::sectionAt(int)
func (q *QDateTimeEdit) SectionAt(index int32) QDateTimeEdit_Section {
	var __rv QDateTimeEdit_Section
	q.Drv(225000, 225131, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::sectionCount()
func (q *QDateTimeEdit) SectionCount() int32 {
	var __rv int32
	q.Drv(225000, 225132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDateTimeEdit::sectionText(QDateTimeEdit::Section)
func (q *QDateTimeEdit) SectionText(section QDateTimeEdit_Section) string {
	var __rv C.string_head
	q.Drv(225000, 225133, unsafe.Pointer(&section), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTimeEdit::setCalendarPopup(bool)
func (q *QDateTimeEdit) SetCalendarPopup(enable bool) {
	q.Drv(225000, 225134, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setCalendarWidget(QCalendarWidget*)
func (q *QDateTimeEdit) SetCalendarWidget(calendarWidget *QCalendarWidget) {
	q.Drv(225000, 225135, Native(calendarWidget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setCurrentSection(QDateTimeEdit::Section)
func (q *QDateTimeEdit) SetCurrentSection(section QDateTimeEdit_Section) {
	q.Drv(225000, 225136, unsafe.Pointer(&section), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setCurrentSectionIndex(int)
func (q *QDateTimeEdit) SetCurrentSectionIndex(index int32) {
	q.Drv(225000, 225137, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setDate(QDate const&)
func (q *QDateTimeEdit) SetDate(date *QDate) {
	q.Drv(225000, 225138, Native(date), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setDateRange(QDate const&,QDate const&)
func (q *QDateTimeEdit) SetDateRange(min *QDate, max *QDate) {
	q.Drv(225000, 225139, Native(min), Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setDateTime(QDateTime const&)
func (q *QDateTimeEdit) SetDateTime(dateTime *QDateTime) {
	q.Drv(225000, 225140, Native(dateTime), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setDateTimeRange(QDateTime const&,QDateTime const&)
func (q *QDateTimeEdit) SetDateTimeRange(min *QDateTime, max *QDateTime) {
	q.Drv(225000, 225141, Native(min), Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setDisplayFormat(QString const&)
func (q *QDateTimeEdit) SetDisplayFormat(format string) {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	q.Drv(225000, 225142, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMaximumDate(QDate const&)
func (q *QDateTimeEdit) SetMaximumDate(max *QDate) {
	q.Drv(225000, 225143, Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMaximumDateTime(QDateTime const&)
func (q *QDateTimeEdit) SetMaximumDateTime(dt *QDateTime) {
	q.Drv(225000, 225144, Native(dt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMaximumTime(QTime const&)
func (q *QDateTimeEdit) SetMaximumTime(max *QTime) {
	q.Drv(225000, 225145, Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMinimumDate(QDate const&)
func (q *QDateTimeEdit) SetMinimumDate(min *QDate) {
	q.Drv(225000, 225146, Native(min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMinimumDateTime(QDateTime const&)
func (q *QDateTimeEdit) SetMinimumDateTime(dt *QDateTime) {
	q.Drv(225000, 225147, Native(dt), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setMinimumTime(QTime const&)
func (q *QDateTimeEdit) SetMinimumTime(min *QTime) {
	q.Drv(225000, 225148, Native(min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setSelectedSection(QDateTimeEdit::Section)
func (q *QDateTimeEdit) SetSelectedSection(section QDateTimeEdit_Section) {
	q.Drv(225000, 225149, unsafe.Pointer(&section), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setTime(QTime const&)
func (q *QDateTimeEdit) SetTime(time *QTime) {
	q.Drv(225000, 225150, Native(time), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setTimeRange(QTime const&,QTime const&)
func (q *QDateTimeEdit) SetTimeRange(min *QTime, max *QTime) {
	q.Drv(225000, 225151, Native(min), Native(max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::setTimeSpec(Qt::TimeSpec)
func (q *QDateTimeEdit) SetTimeSpec(spec Qt_TimeSpec) {
	q.Drv(225000, 225152, unsafe.Pointer(&spec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDateTimeEdit::textFromDateTime(QDateTime const&)
func (q *QDateTimeEdit) TextFromDateTime(dt *QDateTime) string {
	var __rv C.string_head
	q.Drv(225000, 225153, Native(dt), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDateTimeEdit::time()
func (q *QDateTimeEdit) Time() *QTime {
	var __rv uintptr
	q.Drv(225000, 225154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTime{}
	_rp.SetDriver(__rv, 172000, true)
	return _rp
}

//QDateTimeEdit::timeSpec()
func (q *QDateTimeEdit) TimeSpec() Qt_TimeSpec {
	var __rv Qt_TimeSpec
	q.Drv(225000, 225155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QDesktopWidget : QDesktopWidget
type QDesktopWidget struct {
	QWidget
}

// New QDesktopWidget from driver
func NewDesktopWidgetFromDriver(drv Driver) *QDesktopWidget {
	_p := &QDesktopWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDesktopWidget) OnResized(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(226000, 226102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDesktopWidget) OnWorkAreaResized(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(226000, 226103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDesktopWidget) OnScreenCountChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(226000, 226104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDesktopWidget::QDesktopWidget()
func NewDesktopWidget() *QDesktopWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 226000, 226105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDesktopWidget{}
	_p.SetDriver(__rv, 226000, false)
	return _p
}

//QDesktopWidget::availableGeometry()
func (q *QDesktopWidget) AvailableGeometry() *QRect {
	var __rv uintptr
	q.Drv(226000, 226106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::availableGeometry(QPoint const&)
func (q *QDesktopWidget) AvailableGeometryWithPoint(point *QPoint) *QRect {
	var __rv uintptr
	q.Drv(226000, 226107, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::availableGeometry(QWidget const*)
func (q *QDesktopWidget) AvailableGeometryWithWidget(widget QWidgetInterface) *QRect {
	var __rv uintptr
	q.Drv(226000, 226108, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::availableGeometry(int)
func (q *QDesktopWidget) AvailableGeometryWithScreen(screen int32) *QRect {
	var __rv uintptr
	q.Drv(226000, 226109, unsafe.Pointer(&screen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::isVirtualDesktop()
func (q *QDesktopWidget) IsVirtualDesktop() bool {
	var __rv bool
	q.Drv(226000, 226110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::numScreens()
func (q *QDesktopWidget) NumScreens() int32 {
	var __rv int32
	q.Drv(226000, 226111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::primaryScreen()
func (q *QDesktopWidget) PrimaryScreen() int32 {
	var __rv int32
	q.Drv(226000, 226112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::screen()
func (q *QDesktopWidget) Screen() *QWidget {
	var __rv uintptr
	q.Drv(226000, 226113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDesktopWidget::screen(int)
func (q *QDesktopWidget) ScreenWithScreen(screen int32) *QWidget {
	var __rv uintptr
	q.Drv(226000, 226114, unsafe.Pointer(&screen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDesktopWidget::screenCount()
func (q *QDesktopWidget) ScreenCount() int32 {
	var __rv int32
	q.Drv(226000, 226115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::screenGeometry()
func (q *QDesktopWidget) ScreenGeometry() *QRect {
	var __rv uintptr
	q.Drv(226000, 226116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::screenGeometry(QPoint const&)
func (q *QDesktopWidget) ScreenGeometryWithPoint(point *QPoint) *QRect {
	var __rv uintptr
	q.Drv(226000, 226117, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::screenGeometry(QWidget const*)
func (q *QDesktopWidget) ScreenGeometryWithWidget(widget QWidgetInterface) *QRect {
	var __rv uintptr
	q.Drv(226000, 226118, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::screenGeometry(int)
func (q *QDesktopWidget) ScreenGeometryWithScreen(screen int32) *QRect {
	var __rv uintptr
	q.Drv(226000, 226119, unsafe.Pointer(&screen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QDesktopWidget::screenNumber()
func (q *QDesktopWidget) ScreenNumber() int32 {
	var __rv int32
	q.Drv(226000, 226120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::screenNumber(QPoint const&)
func (q *QDesktopWidget) ScreenNumberWithPoint(value *QPoint) int32 {
	var __rv int32
	q.Drv(226000, 226121, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDesktopWidget::screenNumber(QWidget const*)
func (q *QDesktopWidget) ScreenNumberWithWidget(widget QWidgetInterface) int32 {
	var __rv int32
	q.Drv(226000, 226122, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QDial : QDial
type QDial struct {
	QAbstractSlider
}

// New QDial from driver
func NewDialFromDriver(drv Driver) *QDial {
	_p := &QDial{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QDial::QDial()
func NewDial() *QDial {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 227000, 227102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDial{}
	_p.SetDriver(__rv, 227000, false)
	return _p
}

//QDial::QDial(QWidget*)
func NewDialWithParent(parent QWidgetInterface) *QDial {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 227000, 227103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDial{}
	_p.SetDriver(__rv, 227000, false)
	return _p
}

//QDial::notchSize()
func (q *QDial) NotchSize() int32 {
	var __rv int32
	q.Drv(227000, 227104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDial::notchTarget()
func (q *QDial) NotchTarget() float64 {
	var __rv float64
	q.Drv(227000, 227105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDial::notchesVisible()
func (q *QDial) NotchesVisible() bool {
	var __rv bool
	q.Drv(227000, 227106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDial::setNotchTarget(double)
func (q *QDial) SetNotchTarget(target float64) {
	q.Drv(227000, 227107, unsafe.Pointer(&target), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDial::setNotchesVisible(bool)
func (q *QDial) SetNotchesVisible(visible bool) {
	q.Drv(227000, 227108, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDial::setWrapping(bool)
func (q *QDial) SetWrapping(on bool) {
	q.Drv(227000, 227109, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDial::wrapping()
func (q *QDial) Wrapping() bool {
	var __rv bool
	q.Drv(227000, 227110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDialog_DialogCode - QDialog::DialogCode
type QDialog_DialogCode uint32

const (
	QDialog_Rejected QDialog_DialogCode = 0
	QDialog_Accepted QDialog_DialogCode = 1
)

//struct QDialog : QDialog
type QDialog struct {
	QWidget
}

// New QDialog from driver
func NewDialogFromDriver(drv Driver) *QDialog {
	_p := &QDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDialog) OnFinished(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(228000, 228102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDialog) OnAccepted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(228000, 228103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDialog) OnRejected(fn func()) uintptr {
	var __rv uintptr
	q.Drv(228000, 228104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDialog::QDialog()
func NewDialog() *QDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 228000, 228105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialog{}
	_p.SetDriver(__rv, 228000, false)
	return _p
}

//QDialog::QDialog(QWidget*,QFlags<Qt::WindowType>)
func NewDialogWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 228000, 228106, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialog{}
	_p.SetDriver(__rv, 228000, false)
	return _p
}

//QDialog::accept()
func (q *QDialog) Accept() {
	q.Drv(228000, 228107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::adjustPosition(QWidget*)
func (q *QDialog) AdjustPosition(value QWidgetInterface) {
	q.Drv(228000, 228108, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::done(int)
func (q *QDialog) Done(value int32) {
	q.Drv(228000, 228109, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::exec()
func (q *QDialog) Exec() int32 {
	var __rv int32
	q.Drv(228000, 228110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialog::extension()
func (q *QDialog) Extension() *QWidget {
	var __rv uintptr
	q.Drv(228000, 228111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDialog::isSizeGripEnabled()
func (q *QDialog) IsSizeGripEnabled() bool {
	var __rv bool
	q.Drv(228000, 228112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialog::open()
func (q *QDialog) Open() {
	q.Drv(228000, 228113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::orientation()
func (q *QDialog) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(228000, 228114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialog::reject()
func (q *QDialog) Reject() {
	q.Drv(228000, 228115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::result()
func (q *QDialog) Result() int32 {
	var __rv int32
	q.Drv(228000, 228116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialog::setExtension(QWidget*)
func (q *QDialog) SetExtension(extension QWidgetInterface) {
	q.Drv(228000, 228117, Native(extension), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::setModal(bool)
func (q *QDialog) SetModal(modal bool) {
	q.Drv(228000, 228118, unsafe.Pointer(&modal), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::setOrientation(Qt::Orientation)
func (q *QDialog) SetOrientation(orientation Qt_Orientation) {
	q.Drv(228000, 228119, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::setResult(int)
func (q *QDialog) SetResult(r int32) {
	q.Drv(228000, 228120, unsafe.Pointer(&r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::setSizeGripEnabled(bool)
func (q *QDialog) SetSizeGripEnabled(value bool) {
	q.Drv(228000, 228121, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialog::showExtension(bool)
func (q *QDialog) ShowExtension(value bool) {
	q.Drv(228000, 228122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QDialogButtonBox_ButtonLayout - QDialogButtonBox::ButtonLayout
type QDialogButtonBox_ButtonLayout uint32

const (
	QDialogButtonBox_WinLayout   QDialogButtonBox_ButtonLayout = 0
	QDialogButtonBox_MacLayout   QDialogButtonBox_ButtonLayout = 1
	QDialogButtonBox_KdeLayout   QDialogButtonBox_ButtonLayout = 2
	QDialogButtonBox_GnomeLayout QDialogButtonBox_ButtonLayout = 3
)

//enum QDialogButtonBox_ButtonRole - QDialogButtonBox::ButtonRole
type QDialogButtonBox_ButtonRole int32

const (
	QDialogButtonBox_InvalidRole     QDialogButtonBox_ButtonRole = -1
	QDialogButtonBox_AcceptRole      QDialogButtonBox_ButtonRole = -1 + 1
	QDialogButtonBox_RejectRole      QDialogButtonBox_ButtonRole = -1 + 1 + 1
	QDialogButtonBox_DestructiveRole QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1
	QDialogButtonBox_ActionRole      QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1
	QDialogButtonBox_HelpRole        QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1
	QDialogButtonBox_YesRole         QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1
	QDialogButtonBox_NoRole          QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QDialogButtonBox_ResetRole       QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QDialogButtonBox_ApplyRole       QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QDialogButtonBox_NRoles          QDialogButtonBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
)

//enum QDialogButtonBox_StandardButton - QDialogButtonBox::StandardButton
type QDialogButtonBox_StandardButton uint32

const (
	QDialogButtonBox_NoButton        QDialogButtonBox_StandardButton = 0x00000000
	QDialogButtonBox_Ok              QDialogButtonBox_StandardButton = 0x00000400
	QDialogButtonBox_Save            QDialogButtonBox_StandardButton = 0x00000800
	QDialogButtonBox_SaveAll         QDialogButtonBox_StandardButton = 0x00001000
	QDialogButtonBox_Open            QDialogButtonBox_StandardButton = 0x00002000
	QDialogButtonBox_Yes             QDialogButtonBox_StandardButton = 0x00004000
	QDialogButtonBox_YesToAll        QDialogButtonBox_StandardButton = 0x00008000
	QDialogButtonBox_No              QDialogButtonBox_StandardButton = 0x00010000
	QDialogButtonBox_NoToAll         QDialogButtonBox_StandardButton = 0x00020000
	QDialogButtonBox_Abort           QDialogButtonBox_StandardButton = 0x00040000
	QDialogButtonBox_Retry           QDialogButtonBox_StandardButton = 0x00080000
	QDialogButtonBox_Ignore          QDialogButtonBox_StandardButton = 0x00100000
	QDialogButtonBox_Close           QDialogButtonBox_StandardButton = 0x00200000
	QDialogButtonBox_Cancel          QDialogButtonBox_StandardButton = 0x00400000
	QDialogButtonBox_Discard         QDialogButtonBox_StandardButton = 0x00800000
	QDialogButtonBox_Help            QDialogButtonBox_StandardButton = 0x01000000
	QDialogButtonBox_Apply           QDialogButtonBox_StandardButton = 0x02000000
	QDialogButtonBox_Reset           QDialogButtonBox_StandardButton = 0x04000000
	QDialogButtonBox_RestoreDefaults QDialogButtonBox_StandardButton = 0x08000000
	QDialogButtonBox_FirstButton     QDialogButtonBox_StandardButton = QDialogButtonBox_Ok
	QDialogButtonBox_LastButton      QDialogButtonBox_StandardButton = QDialogButtonBox_RestoreDefaults
)

//struct QDialogButtonBox : QDialogButtonBox
type QDialogButtonBox struct {
	QWidget
}

// New QDialogButtonBox from driver
func NewDialogButtonBoxFromDriver(drv Driver) *QDialogButtonBox {
	_p := &QDialogButtonBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDialogButtonBox) OnAccepted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(229000, 229102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDialogButtonBox) OnClicked(fn func(*QAbstractButton)) uintptr {
	var __rv uintptr
	q.Drv(229000, 229103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDialogButtonBox) OnHelpRequested(fn func()) uintptr {
	var __rv uintptr
	q.Drv(229000, 229104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDialogButtonBox) OnRejected(fn func()) uintptr {
	var __rv uintptr
	q.Drv(229000, 229105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDialogButtonBox::QDialogButtonBox()
func NewDialogButtonBox() *QDialogButtonBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 229000, 229106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialogButtonBox{}
	_p.SetDriver(__rv, 229000, false)
	return _p
}

//QDialogButtonBox::QDialogButtonBox(QWidget*)
func NewDialogButtonBoxWithParent(parent QWidgetInterface) *QDialogButtonBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 229000, 229107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialogButtonBox{}
	_p.SetDriver(__rv, 229000, false)
	return _p
}

//QDialogButtonBox::QDialogButtonBox(Qt::Orientation,QWidget*)
func NewDialogButtonBoxWithOrientationParent(orientation Qt_Orientation, parent QWidgetInterface) *QDialogButtonBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 229000, 229108, unsafe.Pointer(&orientation), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialogButtonBox{}
	_p.SetDriver(__rv, 229000, false)
	return _p
}

//QDialogButtonBox::QDialogButtonBox(QFlags<QDialogButtonBox::StandardButton>,Qt::Orientation,QWidget*)
func NewDialogButtonBoxWithButtonsOrientationParent(buttons QDialogButtonBox_StandardButton, orientation Qt_Orientation, parent QWidgetInterface) *QDialogButtonBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 229000, 229109, unsafe.Pointer(&buttons), unsafe.Pointer(&orientation), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDialogButtonBox{}
	_p.SetDriver(__rv, 229000, false)
	return _p
}

//QDialogButtonBox::addButton(QDialogButtonBox::StandardButton)
func (q *QDialogButtonBox) AddButton(button QDialogButtonBox_StandardButton) *QPushButton {
	var __rv uintptr
	q.Drv(229000, 229110, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QDialogButtonBox::addButton(QAbstractButton*,QDialogButtonBox::ButtonRole)
func (q *QDialogButtonBox) AddButtonWithButtonRole(button *QAbstractButton, role QDialogButtonBox_ButtonRole) {
	q.Drv(229000, 229111, Native(button), unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::addButton(QString const&,QDialogButtonBox::ButtonRole)
func (q *QDialogButtonBox) AddButtonWithTextRole(text string, role QDialogButtonBox_ButtonRole) *QPushButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(229000, 229112, unsafe.Pointer(_text), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QDialogButtonBox::button(QDialogButtonBox::StandardButton)
func (q *QDialogButtonBox) Button(which QDialogButtonBox_StandardButton) *QPushButton {
	var __rv uintptr
	q.Drv(229000, 229113, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QDialogButtonBox::buttonRole(QAbstractButton*)
func (q *QDialogButtonBox) ButtonRole(button *QAbstractButton) QDialogButtonBox_ButtonRole {
	var __rv QDialogButtonBox_ButtonRole
	q.Drv(229000, 229114, Native(button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialogButtonBox::buttons()
func (q *QDialogButtonBox) Buttons() []*QAbstractButton {
	var __rv []*QAbstractButton
	q.Drv(229000, 229115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialogButtonBox::centerButtons()
func (q *QDialogButtonBox) CenterButtons() bool {
	var __rv bool
	q.Drv(229000, 229116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialogButtonBox::clear()
func (q *QDialogButtonBox) Clear() {
	q.Drv(229000, 229117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::orientation()
func (q *QDialogButtonBox) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(229000, 229118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialogButtonBox::removeButton(QAbstractButton*)
func (q *QDialogButtonBox) RemoveButton(button *QAbstractButton) {
	q.Drv(229000, 229119, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::setCenterButtons(bool)
func (q *QDialogButtonBox) SetCenterButtons(center bool) {
	q.Drv(229000, 229120, unsafe.Pointer(&center), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::setOrientation(Qt::Orientation)
func (q *QDialogButtonBox) SetOrientation(orientation Qt_Orientation) {
	q.Drv(229000, 229121, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::setStandardButtons(QFlags<QDialogButtonBox::StandardButton>)
func (q *QDialogButtonBox) SetStandardButtons(buttons QDialogButtonBox_StandardButton) {
	q.Drv(229000, 229122, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDialogButtonBox::standardButton(QAbstractButton*)
func (q *QDialogButtonBox) StandardButton(button *QAbstractButton) QDialogButtonBox_StandardButton {
	var __rv QDialogButtonBox_StandardButton
	q.Drv(229000, 229123, Native(button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDialogButtonBox::standardButtons()
func (q *QDialogButtonBox) StandardButtons() QDialogButtonBox_StandardButton {
	var __rv QDialogButtonBox_StandardButton
	q.Drv(229000, 229124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDirModel_Roles - QDirModel::Roles
type QDirModel_Roles uint32

const (
	QDirModel_FileIconRole QDirModel_Roles = QDirModel_Roles(Qt_DecorationRole)
	QDirModel_FilePathRole QDirModel_Roles = QDirModel_Roles(Qt_UserRole + 1)
	QDirModel_FileNameRole QDirModel_Roles = QDirModel_Roles(Qt_UserRole + 1 + 1)
)

//struct QDirModel : QDirModel
type QDirModel struct {
	QAbstractItemModel
}

// New QDirModel from driver
func NewDirModelFromDriver(drv Driver) *QDirModel {
	_p := &QDirModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QDirModel::QDirModel()
func NewDirModel() *QDirModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 230000, 230102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirModel{}
	_p.SetDriver(__rv, 230000, false)
	return _p
}

//QDirModel::QDirModel(QObject*)
func NewDirModelWithParent(parent QObjectInterface) *QDirModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 230000, 230103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirModel{}
	_p.SetDriver(__rv, 230000, false)
	return _p
}

//QDirModel::QDirModel(QStringList const&,QFlags<QDir::Filter>,QFlags<QDir::SortFlag>,QObject*)
func NewDirModelWithNamefiltersFiltersSortParent(nameFilters []string, filters QDir_Filter, sort QDir_SortFlag, parent QObjectInterface) *QDirModel {
	_nameFilters, _nameFilters_size := NewCSArray(nameFilters)
	defer FreeCSArray(_nameFilters, _nameFilters_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 230000, 230104, unsafe.Pointer(&_nameFilters[0]), unsafe.Pointer(&filters), unsafe.Pointer(&sort), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDirModel{}
	_p.SetDriver(__rv, 230000, false)
	return _p
}

//QDirModel::fileIcon(QModelIndex const&)
func (q *QDirModel) FileIcon(index *QModelIndex) *QIcon {
	var __rv uintptr
	q.Drv(230000, 230105, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QDirModel::fileInfo(QModelIndex const&)
func (q *QDirModel) FileInfo(index *QModelIndex) *QFileInfo {
	var __rv uintptr
	q.Drv(230000, 230106, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileInfo{}
	_rp.SetDriver(__rv, 34000, true)
	return _rp
}

//QDirModel::fileName(QModelIndex const&)
func (q *QDirModel) FileName(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(230000, 230107, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDirModel::filePath(QModelIndex const&)
func (q *QDirModel) FilePath(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(230000, 230108, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDirModel::filter()
func (q *QDirModel) Filter() QDir_Filter {
	var __rv QDir_Filter
	q.Drv(230000, 230109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::iconProvider()
func (q *QDirModel) IconProvider() *QFileIconProvider {
	var __rv uintptr
	q.Drv(230000, 230110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileIconProvider{}
	_rp.SetDriver(__rv, 33000, true)
	return _rp
}

//QDirModel::index(QString const&)
func (q *QDirModel) Index(path string) *QModelIndex {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	q.Drv(230000, 230111, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QDirModel::index(QString const&,int)
func (q *QDirModel) IndexWithPathColumn(path string, column int32) *QModelIndex {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	q.Drv(230000, 230112, unsafe.Pointer(_path), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QDirModel::isDir(QModelIndex const&)
func (q *QDirModel) IsDir(index *QModelIndex) bool {
	var __rv bool
	q.Drv(230000, 230113, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::isReadOnly()
func (q *QDirModel) IsReadOnly() bool {
	var __rv bool
	q.Drv(230000, 230114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::lazyChildCount()
func (q *QDirModel) LazyChildCount() bool {
	var __rv bool
	q.Drv(230000, 230115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::mkdir(QModelIndex const&,QString const&)
func (q *QDirModel) Mkdir(parent *QModelIndex, name string) *QModelIndex {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(230000, 230116, Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QDirModel::nameFilters()
func (q *QDirModel) NameFilters() []string {
	var __rv []string
	q.Drv(230000, 230117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::parent()
func (q *QDirModel) Parent() *QObject {
	var __rv uintptr
	q.Drv(230000, 230118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QDirModel::refresh()
func (q *QDirModel) Refresh() {
	q.Drv(230000, 230119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::refresh(QModelIndex const&)
func (q *QDirModel) RefreshWithParent(parent *QModelIndex) {
	q.Drv(230000, 230120, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::remove(QModelIndex const&)
func (q *QDirModel) Remove(index *QModelIndex) bool {
	var __rv bool
	q.Drv(230000, 230121, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::resolveSymlinks()
func (q *QDirModel) ResolveSymlinks() bool {
	var __rv bool
	q.Drv(230000, 230122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::rmdir(QModelIndex const&)
func (q *QDirModel) Rmdir(index *QModelIndex) bool {
	var __rv bool
	q.Drv(230000, 230123, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDirModel::setFilter(QFlags<QDir::Filter>)
func (q *QDirModel) SetFilter(filters QDir_Filter) {
	q.Drv(230000, 230124, unsafe.Pointer(&filters), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setIconProvider(QFileIconProvider*)
func (q *QDirModel) SetIconProvider(provider *QFileIconProvider) {
	q.Drv(230000, 230125, Native(provider), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setLazyChildCount(bool)
func (q *QDirModel) SetLazyChildCount(enable bool) {
	q.Drv(230000, 230126, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setNameFilters(QStringList const&)
func (q *QDirModel) SetNameFilters(filters []string) {
	_filters, _filters_size := NewCSArray(filters)
	defer FreeCSArray(_filters, _filters_size)
	q.Drv(230000, 230127, unsafe.Pointer(&_filters[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setReadOnly(bool)
func (q *QDirModel) SetReadOnly(enable bool) {
	q.Drv(230000, 230128, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setResolveSymlinks(bool)
func (q *QDirModel) SetResolveSymlinks(enable bool) {
	q.Drv(230000, 230129, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::setSorting(QFlags<QDir::SortFlag>)
func (q *QDirModel) SetSorting(sort QDir_SortFlag) {
	q.Drv(230000, 230130, unsafe.Pointer(&sort), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDirModel::sorting()
func (q *QDirModel) Sorting() QDir_SortFlag {
	var __rv QDir_SortFlag
	q.Drv(230000, 230131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDockWidget_DockWidgetFeature - QDockWidget::DockWidgetFeature
type QDockWidget_DockWidgetFeature uint32

const (
	QDockWidget_DockWidgetClosable         QDockWidget_DockWidgetFeature = 0x01
	QDockWidget_DockWidgetMovable          QDockWidget_DockWidgetFeature = 0x02
	QDockWidget_DockWidgetFloatable        QDockWidget_DockWidgetFeature = 0x04
	QDockWidget_DockWidgetVerticalTitleBar QDockWidget_DockWidgetFeature = 0x08
	QDockWidget_DockWidgetFeatureMask      QDockWidget_DockWidgetFeature = 0x0f
	QDockWidget_AllDockWidgetFeatures      QDockWidget_DockWidgetFeature = QDockWidget_DockWidgetClosable | QDockWidget_DockWidgetMovable | QDockWidget_DockWidgetFloatable
	QDockWidget_NoDockWidgetFeatures       QDockWidget_DockWidgetFeature = 0x00
	QDockWidget_Reserved                   QDockWidget_DockWidgetFeature = 0xff
)

//struct QDockWidget : QDockWidget
type QDockWidget struct {
	QWidget
}

// New QDockWidget from driver
func NewDockWidgetFromDriver(drv Driver) *QDockWidget {
	_p := &QDockWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDockWidget) OnTopLevelChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(231000, 231102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDockWidget) OnFeaturesChanged(fn func(QDockWidget_DockWidgetFeature)) uintptr {
	var __rv uintptr
	q.Drv(231000, 231103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDockWidget) OnAllowedAreasChanged(fn func(Qt_DockWidgetArea)) uintptr {
	var __rv uintptr
	q.Drv(231000, 231104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDockWidget) OnDockLocationChanged(fn func(Qt_DockWidgetArea)) uintptr {
	var __rv uintptr
	q.Drv(231000, 231105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDockWidget) OnVisibilityChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(231000, 231106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDockWidget::QDockWidget()
func NewDockWidget() *QDockWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 231000, 231107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDockWidget{}
	_p.SetDriver(__rv, 231000, false)
	return _p
}

//QDockWidget::QDockWidget(QWidget*,QFlags<Qt::WindowType>)
func NewDockWidgetWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QDockWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 231000, 231108, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDockWidget{}
	_p.SetDriver(__rv, 231000, false)
	return _p
}

//QDockWidget::QDockWidget(QString const&,QWidget*,QFlags<Qt::WindowType>)
func NewDockWidgetWithTitleParentFlags(title string, parent QWidgetInterface, flags Qt_WindowType) *QDockWidget {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 231000, 231109, unsafe.Pointer(_title), Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDockWidget{}
	_p.SetDriver(__rv, 231000, false)
	return _p
}

//QDockWidget::allowedAreas()
func (q *QDockWidget) AllowedAreas() Qt_DockWidgetArea {
	var __rv Qt_DockWidgetArea
	q.Drv(231000, 231110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDockWidget::features()
func (q *QDockWidget) Features() QDockWidget_DockWidgetFeature {
	var __rv QDockWidget_DockWidgetFeature
	q.Drv(231000, 231111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDockWidget::isAreaAllowed(Qt::DockWidgetArea)
func (q *QDockWidget) IsAreaAllowed(area Qt_DockWidgetArea) bool {
	var __rv bool
	q.Drv(231000, 231112, unsafe.Pointer(&area), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDockWidget::isFloating()
func (q *QDockWidget) IsFloating() bool {
	var __rv bool
	q.Drv(231000, 231113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDockWidget::setAllowedAreas(QFlags<Qt::DockWidgetArea>)
func (q *QDockWidget) SetAllowedAreas(areas Qt_DockWidgetArea) {
	q.Drv(231000, 231114, unsafe.Pointer(&areas), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDockWidget::setFeatures(QFlags<QDockWidget::DockWidgetFeature>)
func (q *QDockWidget) SetFeatures(features QDockWidget_DockWidgetFeature) {
	q.Drv(231000, 231115, unsafe.Pointer(&features), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDockWidget::setFloating(bool)
func (q *QDockWidget) SetFloating(floating bool) {
	q.Drv(231000, 231116, unsafe.Pointer(&floating), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDockWidget::setTitleBarWidget(QWidget*)
func (q *QDockWidget) SetTitleBarWidget(widget QWidgetInterface) {
	q.Drv(231000, 231117, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDockWidget::setWidget(QWidget*)
func (q *QDockWidget) SetWidget(widget QWidgetInterface) {
	q.Drv(231000, 231118, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDockWidget::titleBarWidget()
func (q *QDockWidget) TitleBarWidget() *QWidget {
	var __rv uintptr
	q.Drv(231000, 231119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDockWidget::toggleViewAction()
func (q *QDockWidget) ToggleViewAction() *QAction {
	var __rv uintptr
	q.Drv(231000, 231120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QDockWidget::widget()
func (q *QDockWidget) Widget() *QWidget {
	var __rv uintptr
	q.Drv(231000, 231121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QDoubleSpinBox : QDoubleSpinBox
type QDoubleSpinBox struct {
	QAbstractSpinBox
}

// New QDoubleSpinBox from driver
func NewDoubleSpinBoxFromDriver(drv Driver) *QDoubleSpinBox {
	_p := &QDoubleSpinBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDoubleSpinBox) OnValueChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(232000, 232102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDoubleSpinBox) OnValueChangedFWithFloat64(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(232000, 232103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDoubleSpinBox::QDoubleSpinBox()
func NewDoubleSpinBox() *QDoubleSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 232000, 232104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDoubleSpinBox{}
	_p.SetDriver(__rv, 232000, false)
	return _p
}

//QDoubleSpinBox::QDoubleSpinBox(QWidget*)
func NewDoubleSpinBoxWithParent(parent QWidgetInterface) *QDoubleSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 232000, 232105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDoubleSpinBox{}
	_p.SetDriver(__rv, 232000, false)
	return _p
}

//QDoubleSpinBox::cleanText()
func (q *QDoubleSpinBox) CleanText() string {
	var __rv C.string_head
	q.Drv(232000, 232106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDoubleSpinBox::decimals()
func (q *QDoubleSpinBox) Decimals() int32 {
	var __rv int32
	q.Drv(232000, 232107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleSpinBox::maximum()
func (q *QDoubleSpinBox) Maximum() float64 {
	var __rv float64
	q.Drv(232000, 232108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleSpinBox::minimum()
func (q *QDoubleSpinBox) Minimum() float64 {
	var __rv float64
	q.Drv(232000, 232109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleSpinBox::prefix()
func (q *QDoubleSpinBox) Prefix() string {
	var __rv C.string_head
	q.Drv(232000, 232110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDoubleSpinBox::setDecimals(int)
func (q *QDoubleSpinBox) SetDecimals(prec int32) {
	q.Drv(232000, 232111, unsafe.Pointer(&prec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setMaximum(double)
func (q *QDoubleSpinBox) SetMaximum(max float64) {
	q.Drv(232000, 232112, unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setMinimum(double)
func (q *QDoubleSpinBox) SetMinimum(min float64) {
	q.Drv(232000, 232113, unsafe.Pointer(&min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setPrefix(QString const&)
func (q *QDoubleSpinBox) SetPrefix(prefix string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(232000, 232114, unsafe.Pointer(_prefix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setRange(double,double)
func (q *QDoubleSpinBox) SetRange(min float64, max float64) {
	q.Drv(232000, 232115, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setSingleStep(double)
func (q *QDoubleSpinBox) SetSingleStep(val float64) {
	q.Drv(232000, 232116, unsafe.Pointer(&val), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setSuffix(QString const&)
func (q *QDoubleSpinBox) SetSuffix(suffix string) {
	_suffix := NewCStringHead(suffix)
	defer FreeCStringHead(_suffix)
	q.Drv(232000, 232117, unsafe.Pointer(_suffix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::setValue(double)
func (q *QDoubleSpinBox) SetValue(val float64) {
	q.Drv(232000, 232118, unsafe.Pointer(&val), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleSpinBox::singleStep()
func (q *QDoubleSpinBox) SingleStep() float64 {
	var __rv float64
	q.Drv(232000, 232119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleSpinBox::suffix()
func (q *QDoubleSpinBox) Suffix() string {
	var __rv C.string_head
	q.Drv(232000, 232120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDoubleSpinBox::textFromValue(double)
func (q *QDoubleSpinBox) TextFromValue(val float64) string {
	var __rv C.string_head
	q.Drv(232000, 232121, unsafe.Pointer(&val), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QDoubleSpinBox::value()
func (q *QDoubleSpinBox) Value() float64 {
	var __rv float64
	q.Drv(232000, 232122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleSpinBox::valueFromText(QString const&)
func (q *QDoubleSpinBox) ValueFromText(text string) float64 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv float64
	q.Drv(232000, 232123, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QDoubleValidator_Notation - QDoubleValidator::Notation
type QDoubleValidator_Notation uint32

const (
	QDoubleValidator_StandardNotation   QDoubleValidator_Notation = 0
	QDoubleValidator_ScientificNotation QDoubleValidator_Notation = 1
)

//struct QDoubleValidator : QDoubleValidator
type QDoubleValidator struct {
	QValidator
}

// New QDoubleValidator from driver
func NewDoubleValidatorFromDriver(drv Driver) *QDoubleValidator {
	_p := &QDoubleValidator{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QDoubleValidator::QDoubleValidator()
func NewDoubleValidator() *QDoubleValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 233000, 233102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDoubleValidator{}
	_p.SetDriver(__rv, 233000, false)
	return _p
}

//QDoubleValidator::QDoubleValidator(QObject*)
func NewDoubleValidatorWithParent(parent QObjectInterface) *QDoubleValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 233000, 233103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDoubleValidator{}
	_p.SetDriver(__rv, 233000, false)
	return _p
}

//QDoubleValidator::QDoubleValidator(double,double,int,QObject*)
func NewDoubleValidatorWithBottomTopDecimalsParent(bottom float64, top float64, decimals int32, parent QObjectInterface) *QDoubleValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 233000, 233104, unsafe.Pointer(&bottom), unsafe.Pointer(&top), unsafe.Pointer(&decimals), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDoubleValidator{}
	_p.SetDriver(__rv, 233000, false)
	return _p
}

//QDoubleValidator::bottom()
func (q *QDoubleValidator) Bottom() float64 {
	var __rv float64
	q.Drv(233000, 233105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleValidator::decimals()
func (q *QDoubleValidator) Decimals() int32 {
	var __rv int32
	q.Drv(233000, 233106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleValidator::notation()
func (q *QDoubleValidator) Notation() QDoubleValidator_Notation {
	var __rv QDoubleValidator_Notation
	q.Drv(233000, 233107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDoubleValidator::setBottom(double)
func (q *QDoubleValidator) SetBottom(value float64) {
	q.Drv(233000, 233108, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleValidator::setDecimals(int)
func (q *QDoubleValidator) SetDecimals(value int32) {
	q.Drv(233000, 233109, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleValidator::setNotation(QDoubleValidator::Notation)
func (q *QDoubleValidator) SetNotation(value QDoubleValidator_Notation) {
	q.Drv(233000, 233110, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleValidator::setRange(double,double,int)
func (q *QDoubleValidator) SetRange(bottom float64, top float64, decimals int32) {
	q.Drv(233000, 233111, unsafe.Pointer(&bottom), unsafe.Pointer(&top), unsafe.Pointer(&decimals), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleValidator::setTop(double)
func (q *QDoubleValidator) SetTop(value float64) {
	q.Drv(233000, 233112, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDoubleValidator::top()
func (q *QDoubleValidator) Top() float64 {
	var __rv float64
	q.Drv(233000, 233113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QDrag : QDrag
type QDrag struct {
	QObject
}

// New QDrag from driver
func NewDragFromDriver(drv Driver) *QDrag {
	_p := &QDrag{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QDrag) OnTargetChanged(fn func(*QWidget)) uintptr {
	var __rv uintptr
	q.Drv(234000, 234102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QDrag) OnActionChanged(fn func(Qt_DropAction)) uintptr {
	var __rv uintptr
	q.Drv(234000, 234103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QDrag::QDrag(QWidget*)
func NewDrag(dragSource QWidgetInterface) *QDrag {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 234000, 234104, Native(dragSource), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QDrag{}
	_p.SetDriver(__rv, 234000, false)
	return _p
}

//QDrag::exec()
func (q *QDrag) Exec() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(234000, 234105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDrag::exec(QFlags<Qt::DropAction>)
func (q *QDrag) ExecWithSupportedactions(supportedActions Qt_DropAction) Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(234000, 234106, unsafe.Pointer(&supportedActions), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDrag::exec(QFlags<Qt::DropAction>,Qt::DropAction)
func (q *QDrag) ExecWithSupportedactionsDefaultaction(supportedActions Qt_DropAction, defaultAction Qt_DropAction) Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(234000, 234107, unsafe.Pointer(&supportedActions), unsafe.Pointer(&defaultAction), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDrag::hotSpot()
func (q *QDrag) HotSpot() *QPoint {
	var __rv uintptr
	q.Drv(234000, 234108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QDrag::mimeData()
func (q *QDrag) MimeData() *QMimeData {
	var __rv uintptr
	q.Drv(234000, 234109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QDrag::pixmap()
func (q *QDrag) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(234000, 234110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QDrag::setDragCursor(QPixmap const&,Qt::DropAction)
func (q *QDrag) SetDragCursor(cursor *QPixmap, action Qt_DropAction) {
	q.Drv(234000, 234111, Native(cursor), unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDrag::setHotSpot(QPoint const&)
func (q *QDrag) SetHotSpot(hotspot *QPoint) {
	q.Drv(234000, 234112, Native(hotspot), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDrag::setMimeData(QMimeData*)
func (q *QDrag) SetMimeData(data *QMimeData) {
	q.Drv(234000, 234113, Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDrag::setPixmap(QPixmap const&)
func (q *QDrag) SetPixmap(value *QPixmap) {
	q.Drv(234000, 234114, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QDrag::source()
func (q *QDrag) Source() *QWidget {
	var __rv uintptr
	q.Drv(234000, 234115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QDrag::start()
func (q *QDrag) Start() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(234000, 234116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDrag::start(QFlags<Qt::DropAction>)
func (q *QDrag) StartWithSupportedactions(supportedActions Qt_DropAction) Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(234000, 234117, unsafe.Pointer(&supportedActions), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QDrag::target()
func (q *QDrag) Target() *QWidget {
	var __rv uintptr
	q.Drv(234000, 234118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QErrorMessage : QErrorMessage
type QErrorMessage struct {
	QDialog
}

// New QErrorMessage from driver
func NewErrorMessageFromDriver(drv Driver) *QErrorMessage {
	_p := &QErrorMessage{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QErrorMessage::QErrorMessage()
func NewErrorMessage() *QErrorMessage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 235000, 235102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QErrorMessage{}
	_p.SetDriver(__rv, 235000, false)
	return _p
}

//QErrorMessage::QErrorMessage(QWidget*)
func NewErrorMessageWithParent(parent QWidgetInterface) *QErrorMessage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 235000, 235103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QErrorMessage{}
	_p.SetDriver(__rv, 235000, false)
	return _p
}

//QErrorMessage::qtHandler()
func QErrorMessageQtHandler() *QErrorMessage {
	var __rv uintptr
	DirectQtDrv(nil, 235000, 235104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QErrorMessage{}
	_rp.SetDriver(__rv, 235000, false)
	return _rp
}

//QErrorMessage::qtHandler()
func (q *QErrorMessage) QtHandler() *QErrorMessage {
	var __rv uintptr
	q.Drv(235000, 235104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QErrorMessage{}
	_rp.SetDriver(__rv, 235000, false)
	return _rp
}

//QErrorMessage::showMessage(QString const&)
func (q *QErrorMessage) ShowMessage(message string) {
	_message := NewCStringHead(message)
	defer FreeCStringHead(_message)
	q.Drv(235000, 235105, unsafe.Pointer(_message), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QErrorMessage::showMessage(QString const&,QString const&)
func (q *QErrorMessage) ShowMessageWithMessageType(message string, _type string) {
	_message := NewCStringHead(message)
	defer FreeCStringHead(_message)
	__type := NewCStringHead(_type)
	defer FreeCStringHead(__type)
	q.Drv(235000, 235106, unsafe.Pointer(_message), unsafe.Pointer(__type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QEventLoop_ProcessEventsFlag - QEventLoop::ProcessEventsFlag
type QEventLoop_ProcessEventsFlag uint32

const (
	QEventLoop_AllEvents              QEventLoop_ProcessEventsFlag = 0x00
	QEventLoop_ExcludeUserInputEvents QEventLoop_ProcessEventsFlag = 0x01
	QEventLoop_ExcludeSocketNotifiers QEventLoop_ProcessEventsFlag = 0x02
	QEventLoop_WaitForMoreEvents      QEventLoop_ProcessEventsFlag = 0x04
	QEventLoop_X11ExcludeTimers       QEventLoop_ProcessEventsFlag = 0x08
	QEventLoop_DeferredDeletion       QEventLoop_ProcessEventsFlag = 0x10
	QEventLoop_EventLoopExec          QEventLoop_ProcessEventsFlag = 0x20
	QEventLoop_DialogExec             QEventLoop_ProcessEventsFlag = 0x40
)

//struct QEventLoop : QEventLoop
type QEventLoop struct {
	QObject
}

// New QEventLoop from driver
func NewEventLoopFromDriver(drv Driver) *QEventLoop {
	_p := &QEventLoop{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QEventLoop::QEventLoop()
func NewEventLoop() *QEventLoop {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 236000, 236102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEventLoop{}
	_p.SetDriver(__rv, 236000, false)
	return _p
}

//QEventLoop::QEventLoop(QObject*)
func NewEventLoopWithParent(parent QObjectInterface) *QEventLoop {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 236000, 236103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEventLoop{}
	_p.SetDriver(__rv, 236000, false)
	return _p
}

//QEventLoop::exec()
func (q *QEventLoop) Exec() int32 {
	var __rv int32
	q.Drv(236000, 236104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)
func (q *QEventLoop) ExecWithFlags(flags QEventLoop_ProcessEventsFlag) int32 {
	var __rv int32
	q.Drv(236000, 236105, unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventLoop::exit()
func (q *QEventLoop) Exit() {
	q.Drv(236000, 236106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEventLoop::exit(int)
func (q *QEventLoop) ExitWithReturncode(returnCode int32) {
	q.Drv(236000, 236107, unsafe.Pointer(&returnCode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEventLoop::isRunning()
func (q *QEventLoop) IsRunning() bool {
	var __rv bool
	q.Drv(236000, 236108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventLoop::processEvents()
func (q *QEventLoop) ProcessEvents() bool {
	var __rv bool
	q.Drv(236000, 236109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)
func (q *QEventLoop) ProcessEventsWithFlags(flags QEventLoop_ProcessEventsFlag) bool {
	var __rv bool
	q.Drv(236000, 236110, unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>,int)
func (q *QEventLoop) ProcessEventsWithFlagsMaximumtime(flags QEventLoop_ProcessEventsFlag, maximumTime int32) {
	q.Drv(236000, 236111, unsafe.Pointer(&flags), unsafe.Pointer(&maximumTime), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEventLoop::quit()
func (q *QEventLoop) Quit() {
	q.Drv(236000, 236112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEventLoop::wakeUp()
func (q *QEventLoop) WakeUp() {
	q.Drv(236000, 236113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QEventTransition : QEventTransition
type QEventTransition struct {
	QAbstractTransition
}

// New QEventTransition from driver
func NewEventTransitionFromDriver(drv Driver) *QEventTransition {
	_p := &QEventTransition{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QEventTransition::QEventTransition()
func NewEventTransition() *QEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 237000, 237102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEventTransition{}
	_p.SetDriver(__rv, 237000, false)
	return _p
}

//QEventTransition::QEventTransition(QState*)
func NewEventTransitionWithSourcestate(sourceState *QState) *QEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 237000, 237103, Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEventTransition{}
	_p.SetDriver(__rv, 237000, false)
	return _p
}

//QEventTransition::QEventTransition(QObject*,QEvent::Type,QState*)
func NewEventTransitionWithObjectTypeSourcestate(object QObjectInterface, _type QEvent_Type, sourceState *QState) *QEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 237000, 237104, Native(object), unsafe.Pointer(&_type), Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QEventTransition{}
	_p.SetDriver(__rv, 237000, false)
	return _p
}

//QEventTransition::eventSource()
func (q *QEventTransition) EventSource() *QObject {
	var __rv uintptr
	q.Drv(237000, 237105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QEventTransition::eventType()
func (q *QEventTransition) EventType() QEvent_Type {
	var __rv QEvent_Type
	q.Drv(237000, 237106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QEventTransition::setEventSource(QObject*)
func (q *QEventTransition) SetEventSource(object QObjectInterface) {
	q.Drv(237000, 237107, Native(object), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QEventTransition::setEventType(QEvent::Type)
func (q *QEventTransition) SetEventType(_type QEvent_Type) {
	q.Drv(237000, 237108, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QFile_FileError - QFile::FileError
type QFile_FileError uint32

const (
	QFile_NoError          QFile_FileError = 0
	QFile_ReadError        QFile_FileError = 1
	QFile_WriteError       QFile_FileError = 2
	QFile_FatalError       QFile_FileError = 3
	QFile_ResourceError    QFile_FileError = 4
	QFile_OpenError        QFile_FileError = 5
	QFile_AbortError       QFile_FileError = 6
	QFile_TimeOutError     QFile_FileError = 7
	QFile_UnspecifiedError QFile_FileError = 8
	QFile_RemoveError      QFile_FileError = 9
	QFile_RenameError      QFile_FileError = 10
	QFile_PositionError    QFile_FileError = 11
	QFile_ResizeError      QFile_FileError = 12
	QFile_PermissionsError QFile_FileError = 13
	QFile_CopyError        QFile_FileError = 14
)

//enum QFile_MemoryMapFlags - QFile::MemoryMapFlags
type QFile_MemoryMapFlags uint32

const (
	QFile_NoOptions QFile_MemoryMapFlags = 0
)

//enum QFile_Permission - QFile::Permission
type QFile_Permission uint32

const (
	QFile_ReadOwner  QFile_Permission = 0x4000
	QFile_WriteOwner QFile_Permission = 0x2000
	QFile_ExeOwner   QFile_Permission = 0x1000
	QFile_ReadUser   QFile_Permission = 0x0400
	QFile_WriteUser  QFile_Permission = 0x0200
	QFile_ExeUser    QFile_Permission = 0x0100
	QFile_ReadGroup  QFile_Permission = 0x0040
	QFile_WriteGroup QFile_Permission = 0x0020
	QFile_ExeGroup   QFile_Permission = 0x0010
	QFile_ReadOther  QFile_Permission = 0x0004
	QFile_WriteOther QFile_Permission = 0x0002
	QFile_ExeOther   QFile_Permission = 0x0001
)

//struct QFile : QFile
type QFile struct {
	QIODevice
}

// New QFile from driver
func NewFileFromDriver(drv Driver) *QFile {
	_p := &QFile{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QFile::QFile()
func NewFile() *QFile {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 238000, 238102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFile{}
	_p.SetDriver(__rv, 238000, false)
	return _p
}

//QFile::QFile(QObject*)
func NewFileWithParent(parent QObjectInterface) *QFile {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 238000, 238103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFile{}
	_p.SetDriver(__rv, 238000, false)
	return _p
}

//QFile::QFile(QString const&)
func NewFileWithName(name string) *QFile {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 238000, 238104, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFile{}
	_p.SetDriver(__rv, 238000, false)
	return _p
}

//QFile::QFile(QString const&,QObject*)
func NewFileWithNameParent(name string, parent QObjectInterface) *QFile {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 238000, 238105, unsafe.Pointer(_name), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFile{}
	_p.SetDriver(__rv, 238000, false)
	return _p
}

//QFile::copy(QString const&)
func (q *QFile) Copy(newName string) bool {
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238106, unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::copy(QString const&,QString const&)
func QFileCopyWithFilenameNewname(fileName string, newName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	DirectQtDrv(nil, 238000, 238107, unsafe.Pointer(_fileName), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::copy(QString const&,QString const&)
func (q *QFile) CopyWithFilenameNewname(fileName string, newName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238107, unsafe.Pointer(_fileName), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::decodeName(QByteArray const&)
func QFileDecodeName(localFileName []byte) string {
	_localFileName := NewCByteArrayHead(localFileName)
	defer FreeCByteArrayHead(_localFileName)
	var __rv C.string_head
	DirectQtDrv(nil, 238000, 238108, unsafe.Pointer(_localFileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::decodeName(QByteArray const&)
func (q *QFile) DecodeName(localFileName []byte) string {
	_localFileName := NewCByteArrayHead(localFileName)
	defer FreeCByteArrayHead(_localFileName)
	var __rv C.string_head
	q.Drv(238000, 238108, unsafe.Pointer(_localFileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::encodeName(QString const&)
func QFileEncodeName(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	DirectQtDrv(nil, 238000, 238109, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::encodeName(QString const&)
func (q *QFile) EncodeName(fileName string) []byte {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv []byte
	q.Drv(238000, 238109, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::error()
func (q *QFile) Error() QFile_FileError {
	var __rv QFile_FileError
	q.Drv(238000, 238110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::exists()
func (q *QFile) Exists() bool {
	var __rv bool
	q.Drv(238000, 238111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::exists(QString const&)
func QFileExistsWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	DirectQtDrv(nil, 238000, 238112, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::exists(QString const&)
func (q *QFile) ExistsWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(238000, 238112, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::fileName()
func (q *QFile) FileName() string {
	var __rv C.string_head
	q.Drv(238000, 238113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::flush()
func (q *QFile) Flush() bool {
	var __rv bool
	q.Drv(238000, 238114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::handle()
func (q *QFile) Handle() int32 {
	var __rv int32
	q.Drv(238000, 238115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::link(QString const&)
func (q *QFile) Link(newName string) bool {
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238116, unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::link(QString const&,QString const&)
func QFileLinkWithOldnameNewname(oldname string, newName string) bool {
	_oldname := NewCStringHead(oldname)
	defer FreeCStringHead(_oldname)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	DirectQtDrv(nil, 238000, 238117, unsafe.Pointer(_oldname), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::link(QString const&,QString const&)
func (q *QFile) LinkWithOldnameNewname(oldname string, newName string) bool {
	_oldname := NewCStringHead(oldname)
	defer FreeCStringHead(_oldname)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238117, unsafe.Pointer(_oldname), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::map(qint64,qint64,QFile::MemoryMapFlags)
func (q *QFile) Map(offset int64, size int64, flags QFile_MemoryMapFlags) *byte {
	var __rv *byte
	q.Drv(238000, 238118, unsafe.Pointer(&offset), unsafe.Pointer(&size), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::open(FILE*,QFlags<QIODevice::OpenModeFlag>)
func (q *QFile) OpenWithFFlags(f uintptr, flags QIODevice_OpenModeFlag) bool {
	var __rv bool
	q.Drv(238000, 238119, unsafe.Pointer(&f), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::open(int,QFlags<QIODevice::OpenModeFlag>)
func (q *QFile) OpenWithFdFlags(fd int32, flags QIODevice_OpenModeFlag) bool {
	var __rv bool
	q.Drv(238000, 238120, unsafe.Pointer(&fd), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::permissions()
func (q *QFile) Permissions() QFile_Permission {
	var __rv QFile_Permission
	q.Drv(238000, 238121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::permissions(QString const&)
func QFilePermissionsWithFilename(filename string) QFile_Permission {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv QFile_Permission
	DirectQtDrv(nil, 238000, 238122, unsafe.Pointer(_filename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::permissions(QString const&)
func (q *QFile) PermissionsWithFilename(filename string) QFile_Permission {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv QFile_Permission
	q.Drv(238000, 238122, unsafe.Pointer(_filename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::readLink()
func (q *QFile) ReadLink() string {
	var __rv C.string_head
	q.Drv(238000, 238123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::readLink(QString const&)
func QFileReadLinkWithFilename(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	DirectQtDrv(nil, 238000, 238124, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::readLink(QString const&)
func (q *QFile) ReadLinkWithFilename(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(238000, 238124, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::remove()
func (q *QFile) Remove() bool {
	var __rv bool
	q.Drv(238000, 238125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::remove(QString const&)
func QFileRemoveWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	DirectQtDrv(nil, 238000, 238126, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::remove(QString const&)
func (q *QFile) RemoveWithFilename(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(238000, 238126, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::rename(QString const&)
func (q *QFile) Rename(newName string) bool {
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238127, unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::rename(QString const&,QString const&)
func QFileRenameWithOldnameNewname(oldName string, newName string) bool {
	_oldName := NewCStringHead(oldName)
	defer FreeCStringHead(_oldName)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	DirectQtDrv(nil, 238000, 238128, unsafe.Pointer(_oldName), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::rename(QString const&,QString const&)
func (q *QFile) RenameWithOldnameNewname(oldName string, newName string) bool {
	_oldName := NewCStringHead(oldName)
	defer FreeCStringHead(_oldName)
	_newName := NewCStringHead(newName)
	defer FreeCStringHead(_newName)
	var __rv bool
	q.Drv(238000, 238128, unsafe.Pointer(_oldName), unsafe.Pointer(_newName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::resize(qint64)
func (q *QFile) Resize(sz int64) bool {
	var __rv bool
	q.Drv(238000, 238129, unsafe.Pointer(&sz), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::resize(QString const&,qint64)
func QFileResizeWithFilenameSz(filename string, sz int64) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv bool
	DirectQtDrv(nil, 238000, 238130, unsafe.Pointer(_filename), unsafe.Pointer(&sz), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::resize(QString const&,qint64)
func (q *QFile) ResizeWithFilenameSz(filename string, sz int64) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv bool
	q.Drv(238000, 238130, unsafe.Pointer(_filename), unsafe.Pointer(&sz), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::setFileName(QString const&)
func (q *QFile) SetFileName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(238000, 238131, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFile::setPermissions(QFlags<QFile::Permission>)
func (q *QFile) SetPermissions(permissionSpec QFile_Permission) bool {
	var __rv bool
	q.Drv(238000, 238132, unsafe.Pointer(&permissionSpec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::setPermissions(QString const&,QFlags<QFile::Permission>)
func QFileSetPermissionsWithFilenamePermissionspec(filename string, permissionSpec QFile_Permission) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv bool
	DirectQtDrv(nil, 238000, 238133, unsafe.Pointer(_filename), unsafe.Pointer(&permissionSpec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::setPermissions(QString const&,QFlags<QFile::Permission>)
func (q *QFile) SetPermissionsWithFilenamePermissionspec(filename string, permissionSpec QFile_Permission) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv bool
	q.Drv(238000, 238133, unsafe.Pointer(_filename), unsafe.Pointer(&permissionSpec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::symLinkTarget()
func (q *QFile) SymLinkTarget() string {
	var __rv C.string_head
	q.Drv(238000, 238134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::symLinkTarget(QString const&)
func QFileSymLinkTargetWithFilename(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	DirectQtDrv(nil, 238000, 238135, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::symLinkTarget(QString const&)
func (q *QFile) SymLinkTargetWithFilename(fileName string) string {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv C.string_head
	q.Drv(238000, 238135, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFile::unmap(unsigned char*)
func (q *QFile) Unmap(address *byte) bool {
	var __rv bool
	q.Drv(238000, 238136, unsafe.Pointer(&address), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFile::unsetError()
func (q *QFile) UnsetError() {
	q.Drv(238000, 238137, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QFileDialog_FileMode - QFileDialog::FileMode
type QFileDialog_FileMode uint32

const (
	QFileDialog_AnyFile       QFileDialog_FileMode = 0
	QFileDialog_ExistingFile  QFileDialog_FileMode = 1
	QFileDialog_Directory     QFileDialog_FileMode = 2
	QFileDialog_ExistingFiles QFileDialog_FileMode = 3
	QFileDialog_DirectoryOnly QFileDialog_FileMode = 4
)

//enum QFileDialog_Option - QFileDialog::Option
type QFileDialog_Option uint32

const (
	QFileDialog_ShowDirsOnly          QFileDialog_Option = 0x00000001
	QFileDialog_DontResolveSymlinks   QFileDialog_Option = 0x00000002
	QFileDialog_DontConfirmOverwrite  QFileDialog_Option = 0x00000004
	QFileDialog_DontUseSheet          QFileDialog_Option = 0x00000008
	QFileDialog_DontUseNativeDialog   QFileDialog_Option = 0x00000010
	QFileDialog_ReadOnly              QFileDialog_Option = 0x00000020
	QFileDialog_HideNameFilterDetails QFileDialog_Option = 0x00000040
)

//enum QFileDialog_DialogLabel - QFileDialog::DialogLabel
type QFileDialog_DialogLabel uint32

const (
	QFileDialog_LookIn   QFileDialog_DialogLabel = 0
	QFileDialog_FileName QFileDialog_DialogLabel = 1
	QFileDialog_FileType QFileDialog_DialogLabel = 2
	QFileDialog_Accept   QFileDialog_DialogLabel = 3
	QFileDialog_Reject   QFileDialog_DialogLabel = 4
)

//enum QFileDialog_ViewMode - QFileDialog::ViewMode
type QFileDialog_ViewMode uint32

const (
	QFileDialog_Detail QFileDialog_ViewMode = 0
	QFileDialog_List   QFileDialog_ViewMode = 1
)

//enum QFileDialog_AcceptMode - QFileDialog::AcceptMode
type QFileDialog_AcceptMode uint32

const (
	QFileDialog_AcceptOpen QFileDialog_AcceptMode = 0
	QFileDialog_AcceptSave QFileDialog_AcceptMode = 1
)

//struct QFileDialog : QFileDialog
type QFileDialog struct {
	QDialog
}

// New QFileDialog from driver
func NewFileDialogFromDriver(drv Driver) *QFileDialog {
	_p := &QFileDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QFileDialog) OnFilesSelected(fn func([]string)) uintptr {
	var __rv uintptr
	q.Drv(239000, 239102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileDialog) OnCurrentChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(239000, 239103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileDialog) OnDirectoryEntered(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(239000, 239104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileDialog) OnFileSelected(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(239000, 239105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileDialog) OnFilterSelected(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(239000, 239106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFileDialog::QFileDialog()
func NewFileDialog() *QFileDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 239000, 239107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileDialog{}
	_p.SetDriver(__rv, 239000, false)
	return _p
}

//QFileDialog::QFileDialog(QWidget*,QFlags<Qt::WindowType>)
func NewFileDialogWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QFileDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 239000, 239108, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileDialog{}
	_p.SetDriver(__rv, 239000, false)
	return _p
}

//QFileDialog::QFileDialog(QWidget*,QString const&,QString const&,QString const&)
func NewFileDialogWithParentCaptionDirectoryFilter(parent QWidgetInterface, caption string, directory string, filter string) *QFileDialog {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_directory := NewCStringHead(directory)
	defer FreeCStringHead(_directory)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 239000, 239109, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_directory), unsafe.Pointer(_filter), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileDialog{}
	_p.SetDriver(__rv, 239000, false)
	return _p
}

//QFileDialog::acceptMode()
func (q *QFileDialog) AcceptMode() QFileDialog_AcceptMode {
	var __rv QFileDialog_AcceptMode
	q.Drv(239000, 239110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::confirmOverwrite()
func (q *QFileDialog) ConfirmOverwrite() bool {
	var __rv bool
	q.Drv(239000, 239111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::defaultSuffix()
func (q *QFileDialog) DefaultSuffix() string {
	var __rv C.string_head
	q.Drv(239000, 239112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::directory()
func (q *QFileDialog) Directory() *QDir {
	var __rv uintptr
	q.Drv(239000, 239113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QFileDialog::fileMode()
func (q *QFileDialog) FileMode() QFileDialog_FileMode {
	var __rv QFileDialog_FileMode
	q.Drv(239000, 239114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::filter()
func (q *QFileDialog) Filter() QDir_Filter {
	var __rv QDir_Filter
	q.Drv(239000, 239115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::getExistingDirectory()
func QFileDialogGetExistingDirectory() string {
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getExistingDirectory()
func (q *QFileDialog) GetExistingDirectory() string {
	var __rv C.string_head
	q.Drv(239000, 239116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getExistingDirectory(QWidget*,QString const&,QString const&,QFlags<QFileDialog::Option>)
func QFileDialogGetExistingDirectoryWithParentCaptionDirOptions(parent QWidgetInterface, caption string, dir string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239117, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getExistingDirectory(QWidget*,QString const&,QString const&,QFlags<QFileDialog::Option>)
func (q *QFileDialog) GetExistingDirectoryWithParentCaptionDirOptions(parent QWidgetInterface, caption string, dir string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	var __rv C.string_head
	q.Drv(239000, 239117, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getOpenFileName()
func QFileDialogGetOpenFileName() string {
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getOpenFileName()
func (q *QFileDialog) GetOpenFileName() string {
	var __rv C.string_head
	q.Drv(239000, 239118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getOpenFileName(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func QFileDialogGetOpenFileNameWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239119, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getOpenFileName(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func (q *QFileDialog) GetOpenFileNameWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv C.string_head
	q.Drv(239000, 239119, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getOpenFileNames()
func QFileDialogGetOpenFileNames() []string {
	var __rv []string
	DirectQtDrv(nil, 239000, 239120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::getOpenFileNames()
func (q *QFileDialog) GetOpenFileNames() []string {
	var __rv []string
	q.Drv(239000, 239120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::getOpenFileNames(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func QFileDialogGetOpenFileNamesWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) []string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv []string
	DirectQtDrv(nil, 239000, 239121, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::getOpenFileNames(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func (q *QFileDialog) GetOpenFileNamesWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) []string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv []string
	q.Drv(239000, 239121, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::getSaveFileName()
func QFileDialogGetSaveFileName() string {
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getSaveFileName()
func (q *QFileDialog) GetSaveFileName() string {
	var __rv C.string_head
	q.Drv(239000, 239122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getSaveFileName(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func QFileDialogGetSaveFileNameWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv C.string_head
	DirectQtDrv(nil, 239000, 239123, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::getSaveFileName(QWidget*,QString const&,QString const&,QString const&,QString*,QFlags<QFileDialog::Option>)
func (q *QFileDialog) GetSaveFileNameWithParentCaptionDirFilterSelectedfilterOptions(parent QWidgetInterface, caption string, dir string, filter string, selectedFilter *string, options QFileDialog_Option) string {
	_caption := NewCStringHead(caption)
	defer FreeCStringHead(_caption)
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	var __rv C.string_head
	q.Drv(239000, 239123, Native(parent), unsafe.Pointer(_caption), unsafe.Pointer(_dir), unsafe.Pointer(_filter), unsafe.Pointer(selectedFilter), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::history()
func (q *QFileDialog) History() []string {
	var __rv []string
	q.Drv(239000, 239124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::iconProvider()
func (q *QFileDialog) IconProvider() *QFileIconProvider {
	var __rv uintptr
	q.Drv(239000, 239125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileIconProvider{}
	_rp.SetDriver(__rv, 33000, true)
	return _rp
}

//QFileDialog::isNameFilterDetailsVisible()
func (q *QFileDialog) IsNameFilterDetailsVisible() bool {
	var __rv bool
	q.Drv(239000, 239126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::isReadOnly()
func (q *QFileDialog) IsReadOnly() bool {
	var __rv bool
	q.Drv(239000, 239127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::itemDelegate()
func (q *QFileDialog) ItemDelegate() *QAbstractItemDelegate {
	var __rv uintptr
	q.Drv(239000, 239128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemDelegate{}
	_rp.SetDriver(__rv, 196000, false)
	return _rp
}

//QFileDialog::labelText(QFileDialog::DialogLabel)
func (q *QFileDialog) LabelText(label QFileDialog_DialogLabel) string {
	var __rv C.string_head
	q.Drv(239000, 239129, unsafe.Pointer(&label), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::nameFilters()
func (q *QFileDialog) NameFilters() []string {
	var __rv []string
	q.Drv(239000, 239130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::open()
func (q *QFileDialog) Open() {
	q.Drv(239000, 239131, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::open(QObject*,char const*)
func (q *QFileDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(239000, 239132, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::options()
func (q *QFileDialog) Options() QFileDialog_Option {
	var __rv QFileDialog_Option
	q.Drv(239000, 239133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::proxyModel()
func (q *QFileDialog) ProxyModel() *QAbstractProxyModel {
	var __rv uintptr
	q.Drv(239000, 239134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractProxyModel{}
	_rp.SetDriver(__rv, 201000, false)
	return _rp
}

//QFileDialog::resolveSymlinks()
func (q *QFileDialog) ResolveSymlinks() bool {
	var __rv bool
	q.Drv(239000, 239135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::restoreState(QByteArray const&)
func (q *QFileDialog) RestoreState(state []byte) bool {
	_state := NewCByteArrayHead(state)
	defer FreeCByteArrayHead(_state)
	var __rv bool
	q.Drv(239000, 239136, unsafe.Pointer(_state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::saveState()
func (q *QFileDialog) SaveState() []byte {
	var __rv []byte
	q.Drv(239000, 239137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::selectFile(QString const&)
func (q *QFileDialog) SelectFile(filename string) {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	q.Drv(239000, 239138, unsafe.Pointer(_filename), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::selectNameFilter(QString const&)
func (q *QFileDialog) SelectNameFilter(filter string) {
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	q.Drv(239000, 239139, unsafe.Pointer(_filter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::selectedFiles()
func (q *QFileDialog) SelectedFiles() []string {
	var __rv []string
	q.Drv(239000, 239140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::selectedNameFilter()
func (q *QFileDialog) SelectedNameFilter() string {
	var __rv C.string_head
	q.Drv(239000, 239141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileDialog::setAcceptMode(QFileDialog::AcceptMode)
func (q *QFileDialog) SetAcceptMode(mode QFileDialog_AcceptMode) {
	q.Drv(239000, 239142, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setConfirmOverwrite(bool)
func (q *QFileDialog) SetConfirmOverwrite(enabled bool) {
	q.Drv(239000, 239143, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setDefaultSuffix(QString const&)
func (q *QFileDialog) SetDefaultSuffix(suffix string) {
	_suffix := NewCStringHead(suffix)
	defer FreeCStringHead(_suffix)
	q.Drv(239000, 239144, unsafe.Pointer(_suffix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setDirectory(QDir const&)
func (q *QFileDialog) SetDirectory(directory *QDir) {
	q.Drv(239000, 239145, Native(directory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setDirectory(QString const&)
func (q *QFileDialog) SetDirectoryWithDirectory(directory string) {
	_directory := NewCStringHead(directory)
	defer FreeCStringHead(_directory)
	q.Drv(239000, 239146, unsafe.Pointer(_directory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setFileMode(QFileDialog::FileMode)
func (q *QFileDialog) SetFileMode(mode QFileDialog_FileMode) {
	q.Drv(239000, 239147, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setFilter(QFlags<QDir::Filter>)
func (q *QFileDialog) SetFilter(filters QDir_Filter) {
	q.Drv(239000, 239148, unsafe.Pointer(&filters), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setHistory(QStringList const&)
func (q *QFileDialog) SetHistory(paths []string) {
	_paths, _paths_size := NewCSArray(paths)
	defer FreeCSArray(_paths, _paths_size)
	q.Drv(239000, 239149, unsafe.Pointer(&_paths[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setIconProvider(QFileIconProvider*)
func (q *QFileDialog) SetIconProvider(provider *QFileIconProvider) {
	q.Drv(239000, 239150, Native(provider), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setItemDelegate(QAbstractItemDelegate*)
func (q *QFileDialog) SetItemDelegate(delegate *QAbstractItemDelegate) {
	q.Drv(239000, 239151, Native(delegate), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setLabelText(QFileDialog::DialogLabel,QString const&)
func (q *QFileDialog) SetLabelText(label QFileDialog_DialogLabel, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(239000, 239152, unsafe.Pointer(&label), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setNameFilter(QString const&)
func (q *QFileDialog) SetNameFilter(filter string) {
	_filter := NewCStringHead(filter)
	defer FreeCStringHead(_filter)
	q.Drv(239000, 239153, unsafe.Pointer(_filter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setNameFilterDetailsVisible(bool)
func (q *QFileDialog) SetNameFilterDetailsVisible(enabled bool) {
	q.Drv(239000, 239154, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setNameFilters(QStringList const&)
func (q *QFileDialog) SetNameFilters(filters []string) {
	_filters, _filters_size := NewCSArray(filters)
	defer FreeCSArray(_filters, _filters_size)
	q.Drv(239000, 239155, unsafe.Pointer(&_filters[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setOption(QFileDialog::Option)
func (q *QFileDialog) SetOption(option QFileDialog_Option) {
	q.Drv(239000, 239156, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setOption(QFileDialog::Option,bool)
func (q *QFileDialog) SetOptionWithOptionOn(option QFileDialog_Option, on bool) {
	q.Drv(239000, 239157, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setOptions(QFlags<QFileDialog::Option>)
func (q *QFileDialog) SetOptions(options QFileDialog_Option) {
	q.Drv(239000, 239158, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setProxyModel(QAbstractProxyModel*)
func (q *QFileDialog) SetProxyModel(model *QAbstractProxyModel) {
	q.Drv(239000, 239159, Native(model), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setReadOnly(bool)
func (q *QFileDialog) SetReadOnly(enabled bool) {
	q.Drv(239000, 239160, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setResolveSymlinks(bool)
func (q *QFileDialog) SetResolveSymlinks(enabled bool) {
	q.Drv(239000, 239161, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setSidebarUrls(QList<QUrl> const&)
func (q *QFileDialog) SetSidebarUrls(urls []*QUrl) {
	_urls := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&urls)))
	defer FreeCNoObjectArrayHead(_urls)
	q.Drv(239000, 239162, unsafe.Pointer(_urls), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::setViewMode(QFileDialog::ViewMode)
func (q *QFileDialog) SetViewMode(mode QFileDialog_ViewMode) {
	q.Drv(239000, 239163, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileDialog::sidebarUrls()
func (q *QFileDialog) SidebarUrls() []*QUrl {
	var __rv []*QUrl
	q.Drv(239000, 239164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::testOption(QFileDialog::Option)
func (q *QFileDialog) TestOption(option QFileDialog_Option) bool {
	var __rv bool
	q.Drv(239000, 239165, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileDialog::viewMode()
func (q *QFileDialog) ViewMode() QFileDialog_ViewMode {
	var __rv QFileDialog_ViewMode
	q.Drv(239000, 239166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFileSystemModel_Roles - QFileSystemModel::Roles
type QFileSystemModel_Roles uint32

const (
	QFileSystemModel_FileIconRole    QFileSystemModel_Roles = QFileSystemModel_Roles(Qt_DecorationRole)
	QFileSystemModel_FilePathRole    QFileSystemModel_Roles = QFileSystemModel_Roles(Qt_UserRole + 1)
	QFileSystemModel_FileNameRole    QFileSystemModel_Roles = QFileSystemModel_Roles(Qt_UserRole + 2)
	QFileSystemModel_FilePermissions QFileSystemModel_Roles = QFileSystemModel_Roles(Qt_UserRole + 3)
)

//struct QFileSystemModel : QFileSystemModel
type QFileSystemModel struct {
	QAbstractItemModel
}

// New QFileSystemModel from driver
func NewFileSystemModelFromDriver(drv Driver) *QFileSystemModel {
	_p := &QFileSystemModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QFileSystemModel) OnDirectoryLoaded(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(240000, 240102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileSystemModel) OnRootPathChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(240000, 240103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileSystemModel) OnFileRenamed(fn func(string, string, string)) uintptr {
	var __rv uintptr
	q.Drv(240000, 240104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFileSystemModel::QFileSystemModel()
func NewFileSystemModel() *QFileSystemModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 240000, 240105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileSystemModel{}
	_p.SetDriver(__rv, 240000, false)
	return _p
}

//QFileSystemModel::QFileSystemModel(QObject*)
func NewFileSystemModelWithParent(parent QObjectInterface) *QFileSystemModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 240000, 240106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileSystemModel{}
	_p.SetDriver(__rv, 240000, false)
	return _p
}

//QFileSystemModel::fileIcon(QModelIndex const&)
func (q *QFileSystemModel) FileIcon(index *QModelIndex) *QIcon {
	var __rv uintptr
	q.Drv(240000, 240107, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QFileSystemModel::fileInfo(QModelIndex const&)
func (q *QFileSystemModel) FileInfo(index *QModelIndex) *QFileInfo {
	var __rv uintptr
	q.Drv(240000, 240108, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileInfo{}
	_rp.SetDriver(__rv, 34000, true)
	return _rp
}

//QFileSystemModel::fileName(QModelIndex const&)
func (q *QFileSystemModel) FileName(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(240000, 240109, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileSystemModel::filePath(QModelIndex const&)
func (q *QFileSystemModel) FilePath(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(240000, 240110, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileSystemModel::filter()
func (q *QFileSystemModel) Filter() QDir_Filter {
	var __rv QDir_Filter
	q.Drv(240000, 240111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::iconProvider()
func (q *QFileSystemModel) IconProvider() *QFileIconProvider {
	var __rv uintptr
	q.Drv(240000, 240112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFileIconProvider{}
	_rp.SetDriver(__rv, 33000, true)
	return _rp
}

//QFileSystemModel::index(QString const&)
func (q *QFileSystemModel) Index(path string) *QModelIndex {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	q.Drv(240000, 240113, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QFileSystemModel::index(QString const&,int)
func (q *QFileSystemModel) IndexWithPathColumn(path string, column int32) *QModelIndex {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	q.Drv(240000, 240114, unsafe.Pointer(_path), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QFileSystemModel::isDir(QModelIndex const&)
func (q *QFileSystemModel) IsDir(index *QModelIndex) bool {
	var __rv bool
	q.Drv(240000, 240115, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::isReadOnly()
func (q *QFileSystemModel) IsReadOnly() bool {
	var __rv bool
	q.Drv(240000, 240116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::lastModified(QModelIndex const&)
func (q *QFileSystemModel) LastModified(index *QModelIndex) *QDateTime {
	var __rv uintptr
	q.Drv(240000, 240117, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDateTime{}
	_rp.SetDriver(__rv, 20000, true)
	return _rp
}

//QFileSystemModel::mkdir(QModelIndex const&,QString const&)
func (q *QFileSystemModel) Mkdir(parent *QModelIndex, name string) *QModelIndex {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(240000, 240118, Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QFileSystemModel::myComputer()
func (q *QFileSystemModel) MyComputer() *QVariant {
	var __rv uintptr
	q.Drv(240000, 240119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QFileSystemModel::myComputer(int)
func (q *QFileSystemModel) MyComputerWithRole(role int32) *QVariant {
	var __rv uintptr
	q.Drv(240000, 240120, unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QFileSystemModel::nameFilterDisables()
func (q *QFileSystemModel) NameFilterDisables() bool {
	var __rv bool
	q.Drv(240000, 240121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::nameFilters()
func (q *QFileSystemModel) NameFilters() []string {
	var __rv []string
	q.Drv(240000, 240122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::permissions(QModelIndex const&)
func (q *QFileSystemModel) Permissions(index *QModelIndex) QFile_Permission {
	var __rv QFile_Permission
	q.Drv(240000, 240123, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::remove(QModelIndex const&)
func (q *QFileSystemModel) Remove(index *QModelIndex) bool {
	var __rv bool
	q.Drv(240000, 240124, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::resolveSymlinks()
func (q *QFileSystemModel) ResolveSymlinks() bool {
	var __rv bool
	q.Drv(240000, 240125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::rmdir(QModelIndex const&)
func (q *QFileSystemModel) Rmdir(index *QModelIndex) bool {
	var __rv bool
	q.Drv(240000, 240126, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::rootDirectory()
func (q *QFileSystemModel) RootDirectory() *QDir {
	var __rv uintptr
	q.Drv(240000, 240127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//QFileSystemModel::rootPath()
func (q *QFileSystemModel) RootPath() string {
	var __rv C.string_head
	q.Drv(240000, 240128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFileSystemModel::setFilter(QFlags<QDir::Filter>)
func (q *QFileSystemModel) SetFilter(filters QDir_Filter) {
	q.Drv(240000, 240129, unsafe.Pointer(&filters), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setIconProvider(QFileIconProvider*)
func (q *QFileSystemModel) SetIconProvider(provider *QFileIconProvider) {
	q.Drv(240000, 240130, Native(provider), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setNameFilterDisables(bool)
func (q *QFileSystemModel) SetNameFilterDisables(enable bool) {
	q.Drv(240000, 240131, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setNameFilters(QStringList const&)
func (q *QFileSystemModel) SetNameFilters(filters []string) {
	_filters, _filters_size := NewCSArray(filters)
	defer FreeCSArray(_filters, _filters_size)
	q.Drv(240000, 240132, unsafe.Pointer(&_filters[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setReadOnly(bool)
func (q *QFileSystemModel) SetReadOnly(enable bool) {
	q.Drv(240000, 240133, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setResolveSymlinks(bool)
func (q *QFileSystemModel) SetResolveSymlinks(enable bool) {
	q.Drv(240000, 240134, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemModel::setRootPath(QString const&)
func (q *QFileSystemModel) SetRootPath(path string) *QModelIndex {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	var __rv uintptr
	q.Drv(240000, 240135, unsafe.Pointer(_path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QFileSystemModel::size(QModelIndex const&)
func (q *QFileSystemModel) Size(index *QModelIndex) int64 {
	var __rv int64
	q.Drv(240000, 240136, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemModel::type(QModelIndex const&)
func (q *QFileSystemModel) Type(index *QModelIndex) string {
	var __rv C.string_head
	q.Drv(240000, 240137, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QFileSystemWatcher : QFileSystemWatcher
type QFileSystemWatcher struct {
	QObject
}

// New QFileSystemWatcher from driver
func NewFileSystemWatcherFromDriver(drv Driver) *QFileSystemWatcher {
	_p := &QFileSystemWatcher{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QFileSystemWatcher) OnFileChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(241000, 241102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFileSystemWatcher) OnDirectoryChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(241000, 241103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFileSystemWatcher::QFileSystemWatcher()
func NewFileSystemWatcher() *QFileSystemWatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 241000, 241104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileSystemWatcher{}
	_p.SetDriver(__rv, 241000, false)
	return _p
}

//QFileSystemWatcher::QFileSystemWatcher(QObject*)
func NewFileSystemWatcherWithParent(parent QObjectInterface) *QFileSystemWatcher {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 241000, 241105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileSystemWatcher{}
	_p.SetDriver(__rv, 241000, false)
	return _p
}

//QFileSystemWatcher::QFileSystemWatcher(QStringList const&,QObject*)
func NewFileSystemWatcherWithPathsParent(paths []string, parent QObjectInterface) *QFileSystemWatcher {
	_paths, _paths_size := NewCSArray(paths)
	defer FreeCSArray(_paths, _paths_size)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 241000, 241106, unsafe.Pointer(&_paths[0]), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFileSystemWatcher{}
	_p.SetDriver(__rv, 241000, false)
	return _p
}

//QFileSystemWatcher::addPath(QString const&)
func (q *QFileSystemWatcher) AddPath(file string) {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	q.Drv(241000, 241107, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemWatcher::addPaths(QStringList const&)
func (q *QFileSystemWatcher) AddPaths(files []string) {
	_files, _files_size := NewCSArray(files)
	defer FreeCSArray(_files, _files_size)
	q.Drv(241000, 241108, unsafe.Pointer(&_files[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemWatcher::directories()
func (q *QFileSystemWatcher) Directories() []string {
	var __rv []string
	q.Drv(241000, 241109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemWatcher::files()
func (q *QFileSystemWatcher) Files() []string {
	var __rv []string
	q.Drv(241000, 241110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFileSystemWatcher::removePath(QString const&)
func (q *QFileSystemWatcher) RemovePath(file string) {
	_file := NewCStringHead(file)
	defer FreeCStringHead(_file)
	q.Drv(241000, 241111, unsafe.Pointer(_file), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFileSystemWatcher::removePaths(QStringList const&)
func (q *QFileSystemWatcher) RemovePaths(files []string) {
	_files, _files_size := NewCSArray(files)
	defer FreeCSArray(_files, _files_size)
	q.Drv(241000, 241112, unsafe.Pointer(&_files[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QFinalState : QFinalState
type QFinalState struct {
	QAbstractState
}

// New QFinalState from driver
func NewFinalStateFromDriver(drv Driver) *QFinalState {
	_p := &QFinalState{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QFinalState::QFinalState()
func NewFinalState() *QFinalState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 242000, 242102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFinalState{}
	_p.SetDriver(__rv, 242000, false)
	return _p
}

//QFinalState::QFinalState(QState*)
func NewFinalStateWithParent(parent *QState) *QFinalState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 242000, 242103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFinalState{}
	_p.SetDriver(__rv, 242000, false)
	return _p
}

//struct QFocusFrame : QFocusFrame
type QFocusFrame struct {
	QWidget
}

// New QFocusFrame from driver
func NewFocusFrameFromDriver(drv Driver) *QFocusFrame {
	_p := &QFocusFrame{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QFocusFrame::QFocusFrame()
func NewFocusFrame() *QFocusFrame {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 243000, 243102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFocusFrame{}
	_p.SetDriver(__rv, 243000, false)
	return _p
}

//QFocusFrame::QFocusFrame(QWidget*)
func NewFocusFrameWithParent(parent QWidgetInterface) *QFocusFrame {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 243000, 243103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFocusFrame{}
	_p.SetDriver(__rv, 243000, false)
	return _p
}

//QFocusFrame::setWidget(QWidget*)
func (q *QFocusFrame) SetWidget(widget QWidgetInterface) {
	q.Drv(243000, 243104, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFocusFrame::widget()
func (q *QFocusFrame) Widget() *QWidget {
	var __rv uintptr
	q.Drv(243000, 243105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//enum QFontComboBox_FontFilter - QFontComboBox::FontFilter
type QFontComboBox_FontFilter uint32

const (
	QFontComboBox_AllFonts          QFontComboBox_FontFilter = 0
	QFontComboBox_ScalableFonts     QFontComboBox_FontFilter = 0x1
	QFontComboBox_NonScalableFonts  QFontComboBox_FontFilter = 0x2
	QFontComboBox_MonospacedFonts   QFontComboBox_FontFilter = 0x4
	QFontComboBox_ProportionalFonts QFontComboBox_FontFilter = 0x8
)

//struct QFontComboBox : QFontComboBox
type QFontComboBox struct {
	QComboBox
}

// New QFontComboBox from driver
func NewFontComboBoxFromDriver(drv Driver) *QFontComboBox {
	_p := &QFontComboBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QFontComboBox) OnCurrentFontChanged(fn func(*QFont)) uintptr {
	var __rv uintptr
	q.Drv(244000, 244102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFontComboBox::QFontComboBox()
func NewFontComboBox() *QFontComboBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 244000, 244103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontComboBox{}
	_p.SetDriver(__rv, 244000, false)
	return _p
}

//QFontComboBox::QFontComboBox(QWidget*)
func NewFontComboBoxWithParent(parent QWidgetInterface) *QFontComboBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 244000, 244104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontComboBox{}
	_p.SetDriver(__rv, 244000, false)
	return _p
}

//QFontComboBox::currentFont()
func (q *QFontComboBox) CurrentFont() *QFont {
	var __rv uintptr
	q.Drv(244000, 244105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontComboBox::fontFilters()
func (q *QFontComboBox) FontFilters() QFontComboBox_FontFilter {
	var __rv QFontComboBox_FontFilter
	q.Drv(244000, 244106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontComboBox::setCurrentFont(QFont const&)
func (q *QFontComboBox) SetCurrentFont(f *QFont) {
	q.Drv(244000, 244107, Native(f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontComboBox::setFontFilters(QFlags<QFontComboBox::FontFilter>)
func (q *QFontComboBox) SetFontFilters(filters QFontComboBox_FontFilter) {
	q.Drv(244000, 244108, unsafe.Pointer(&filters), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontComboBox::setWritingSystem(QFontDatabase::WritingSystem)
func (q *QFontComboBox) SetWritingSystem(value QFontDatabase_WritingSystem) {
	q.Drv(244000, 244109, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontComboBox::writingSystem()
func (q *QFontComboBox) WritingSystem() QFontDatabase_WritingSystem {
	var __rv QFontDatabase_WritingSystem
	q.Drv(244000, 244110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFontDialog_FontDialogOption - QFontDialog::FontDialogOption
type QFontDialog_FontDialogOption uint32

const (
	QFontDialog_NoButtons           QFontDialog_FontDialogOption = 0x00000001
	QFontDialog_DontUseNativeDialog QFontDialog_FontDialogOption = 0x00000002
)

//struct QFontDialog : QFontDialog
type QFontDialog struct {
	QDialog
}

// New QFontDialog from driver
func NewFontDialogFromDriver(drv Driver) *QFontDialog {
	_p := &QFontDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QFontDialog) OnFontSelected(fn func(*QFont)) uintptr {
	var __rv uintptr
	q.Drv(245000, 245102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFontDialog) OnCurrentFontChanged(fn func(*QFont)) uintptr {
	var __rv uintptr
	q.Drv(245000, 245103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFontDialog::QFontDialog()
func NewFontDialog() *QFontDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 245000, 245104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontDialog{}
	_p.SetDriver(__rv, 245000, false)
	return _p
}

//QFontDialog::QFontDialog(QWidget*)
func NewFontDialogWithParent(parent QWidgetInterface) *QFontDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 245000, 245105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontDialog{}
	_p.SetDriver(__rv, 245000, false)
	return _p
}

//QFontDialog::QFontDialog(QFont const&,QWidget*)
func NewFontDialogWithInitialParent(initial *QFont, parent QWidgetInterface) *QFontDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 245000, 245106, Native(initial), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFontDialog{}
	_p.SetDriver(__rv, 245000, false)
	return _p
}

//QFontDialog::currentFont()
func (q *QFontDialog) CurrentFont() *QFont {
	var __rv uintptr
	q.Drv(245000, 245107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*)
func QFontDialogGetFont(ok *bool) *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 245000, 245108, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*)
func (q *QFontDialog) GetFont(ok *bool) *QFont {
	var __rv uintptr
	q.Drv(245000, 245108, unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QWidget*)
func QFontDialogGetFontWithOkParent(ok *bool, parent QWidgetInterface) *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 245000, 245109, unsafe.Pointer(&ok), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QWidget*)
func (q *QFontDialog) GetFontWithOkParent(ok *bool, parent QWidgetInterface) *QFont {
	var __rv uintptr
	q.Drv(245000, 245109, unsafe.Pointer(&ok), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*)
func QFontDialogGetFontWithOkInitialParent(ok *bool, initial *QFont, parent QWidgetInterface) *QFont {
	var __rv uintptr
	DirectQtDrv(nil, 245000, 245110, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*)
func (q *QFontDialog) GetFontWithOkInitialParent(ok *bool, initial *QFont, parent QWidgetInterface) *QFont {
	var __rv uintptr
	q.Drv(245000, 245110, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*,QString const&)
func QFontDialogGetFontWithOkInitialParentTitle(ok *bool, initial *QFont, parent QWidgetInterface, title string) *QFont {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	DirectQtDrv(nil, 245000, 245111, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*,QString const&)
func (q *QFontDialog) GetFontWithOkInitialParentTitle(ok *bool, initial *QFont, parent QWidgetInterface, title string) *QFont {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(245000, 245111, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*,QString const&,QFlags<QFontDialog::FontDialogOption>)
func QFontDialogGetFontWithOkInitialParentTitleOptions(ok *bool, initial *QFont, parent QWidgetInterface, title string, options QFontDialog_FontDialogOption) *QFont {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	DirectQtDrv(nil, 245000, 245112, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::getFont(bool*,QFont const&,QWidget*,QString const&,QFlags<QFontDialog::FontDialogOption>)
func (q *QFontDialog) GetFontWithOkInitialParentTitleOptions(ok *bool, initial *QFont, parent QWidgetInterface, title string, options QFontDialog_FontDialogOption) *QFont {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(245000, 245112, unsafe.Pointer(&ok), Native(initial), Native(parent), unsafe.Pointer(_title), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::open()
func (q *QFontDialog) Open() {
	q.Drv(245000, 245113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::open(QObject*,char const*)
func (q *QFontDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(245000, 245114, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::options()
func (q *QFontDialog) Options() QFontDialog_FontDialogOption {
	var __rv QFontDialog_FontDialogOption
	q.Drv(245000, 245115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFontDialog::selectedFont()
func (q *QFontDialog) SelectedFont() *QFont {
	var __rv uintptr
	q.Drv(245000, 245116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QFontDialog::setCurrentFont(QFont const&)
func (q *QFontDialog) SetCurrentFont(font *QFont) {
	q.Drv(245000, 245117, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::setOption(QFontDialog::FontDialogOption)
func (q *QFontDialog) SetOption(option QFontDialog_FontDialogOption) {
	q.Drv(245000, 245118, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::setOption(QFontDialog::FontDialogOption,bool)
func (q *QFontDialog) SetOptionWithOptionOn(option QFontDialog_FontDialogOption, on bool) {
	q.Drv(245000, 245119, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::setOptions(QFlags<QFontDialog::FontDialogOption>)
func (q *QFontDialog) SetOptions(options QFontDialog_FontDialogOption) {
	q.Drv(245000, 245120, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFontDialog::testOption(QFontDialog::FontDialogOption)
func (q *QFontDialog) TestOption(option QFontDialog_FontDialogOption) bool {
	var __rv bool
	q.Drv(245000, 245121, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFormLayout_FieldGrowthPolicy - QFormLayout::FieldGrowthPolicy
type QFormLayout_FieldGrowthPolicy uint32

const (
	QFormLayout_FieldsStayAtSizeHint  QFormLayout_FieldGrowthPolicy = 0
	QFormLayout_ExpandingFieldsGrow   QFormLayout_FieldGrowthPolicy = 1
	QFormLayout_AllNonFixedFieldsGrow QFormLayout_FieldGrowthPolicy = 2
)

//enum QFormLayout_RowWrapPolicy - QFormLayout::RowWrapPolicy
type QFormLayout_RowWrapPolicy uint32

const (
	QFormLayout_DontWrapRows QFormLayout_RowWrapPolicy = 0
	QFormLayout_WrapLongRows QFormLayout_RowWrapPolicy = 1
	QFormLayout_WrapAllRows  QFormLayout_RowWrapPolicy = 2
)

//enum QFormLayout_ItemRole - QFormLayout::ItemRole
type QFormLayout_ItemRole uint32

const (
	QFormLayout_LabelRole    QFormLayout_ItemRole = 0
	QFormLayout_FieldRole    QFormLayout_ItemRole = 1
	QFormLayout_SpanningRole QFormLayout_ItemRole = 2
)

//struct QFormLayout : QFormLayout
type QFormLayout struct {
	QLayout
}

// New QFormLayout from driver
func NewFormLayoutFromDriver(drv Driver) *QFormLayout {
	_p := &QFormLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QFormLayout::QFormLayout()
func NewFormLayout() *QFormLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 246000, 246102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFormLayout{}
	_p.SetDriver(__rv, 246000, false)
	return _p
}

//QFormLayout::QFormLayout(QWidget*)
func NewFormLayoutWithParent(parent QWidgetInterface) *QFormLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 246000, 246103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFormLayout{}
	_p.SetDriver(__rv, 246000, false)
	return _p
}

//QFormLayout::addRow(QLayout*)
func (q *QFormLayout) AddRow(layout QLayoutInterface) {
	q.Drv(246000, 246104, Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::addRow(QWidget*)
func (q *QFormLayout) AddRowWithWidget(widget QWidgetInterface) {
	q.Drv(246000, 246105, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::addRow(QString const&,QLayout*)
func (q *QFormLayout) AddRowWithLabeltextLayout(labelText string, field QLayoutInterface) {
	_labelText := NewCStringHead(labelText)
	defer FreeCStringHead(_labelText)
	q.Drv(246000, 246106, unsafe.Pointer(_labelText), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::addRow(QString const&,QWidget*)
func (q *QFormLayout) AddRowWithLabeltextWidget(labelText string, field QWidgetInterface) {
	_labelText := NewCStringHead(labelText)
	defer FreeCStringHead(_labelText)
	q.Drv(246000, 246107, unsafe.Pointer(_labelText), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::addRow(QWidget*,QLayout*)
func (q *QFormLayout) AddRowWithWidgetLayout(label QWidgetInterface, field QLayoutInterface) {
	q.Drv(246000, 246108, Native(label), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::addRow(QWidget*,QWidget*)
func (q *QFormLayout) AddRowWithWidgetWidget(label QWidgetInterface, field QWidgetInterface) {
	q.Drv(246000, 246109, Native(label), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::fieldGrowthPolicy()
func (q *QFormLayout) FieldGrowthPolicy() QFormLayout_FieldGrowthPolicy {
	var __rv QFormLayout_FieldGrowthPolicy
	q.Drv(246000, 246110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::formAlignment()
func (q *QFormLayout) FormAlignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(246000, 246111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::getItemPosition(int,int*,QFormLayout::ItemRole*)
func (q *QFormLayout) GetItemPosition(index int32, rowPtr *int32, rolePtr *QFormLayout_ItemRole) {
	q.Drv(246000, 246112, unsafe.Pointer(&index), unsafe.Pointer(&rowPtr), unsafe.Pointer(&rolePtr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::getLayoutPosition(QLayout*,int*,QFormLayout::ItemRole*)
func (q *QFormLayout) GetLayoutPosition(layout QLayoutInterface, rowPtr *int32, rolePtr *QFormLayout_ItemRole) {
	q.Drv(246000, 246113, Native(layout), unsafe.Pointer(&rowPtr), unsafe.Pointer(&rolePtr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::getWidgetPosition(QWidget*,int*,QFormLayout::ItemRole*)
func (q *QFormLayout) GetWidgetPosition(widget QWidgetInterface, rowPtr *int32, rolePtr *QFormLayout_ItemRole) {
	q.Drv(246000, 246114, Native(widget), unsafe.Pointer(&rowPtr), unsafe.Pointer(&rolePtr), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::horizontalSpacing()
func (q *QFormLayout) HorizontalSpacing() int32 {
	var __rv int32
	q.Drv(246000, 246115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::insertRow(int,QLayout*)
func (q *QFormLayout) InsertRowWithRowLayout(row int32, layout QLayoutInterface) {
	q.Drv(246000, 246116, unsafe.Pointer(&row), Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::insertRow(int,QWidget*)
func (q *QFormLayout) InsertRowWithRowWidget(row int32, widget QWidgetInterface) {
	q.Drv(246000, 246117, unsafe.Pointer(&row), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::insertRow(int,QString const&,QLayout*)
func (q *QFormLayout) InsertRowWithRowLabeltextLayout(row int32, labelText string, field QLayoutInterface) {
	_labelText := NewCStringHead(labelText)
	defer FreeCStringHead(_labelText)
	q.Drv(246000, 246118, unsafe.Pointer(&row), unsafe.Pointer(_labelText), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::insertRow(int,QString const&,QWidget*)
func (q *QFormLayout) InsertRowWithRowLabeltextWidget(row int32, labelText string, field QWidgetInterface) {
	_labelText := NewCStringHead(labelText)
	defer FreeCStringHead(_labelText)
	q.Drv(246000, 246119, unsafe.Pointer(&row), unsafe.Pointer(_labelText), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::insertRow(int,QWidget*,QLayout*)
func (q *QFormLayout) InsertRowWithRowWidgetLayout(row int32, label QWidgetInterface, field QLayoutInterface) {
	q.Drv(246000, 246120, unsafe.Pointer(&row), Native(label), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::insertRow(int,QWidget*,QWidget*)
func (q *QFormLayout) InsertRowWithRowWidgetWidget(row int32, label QWidgetInterface, field QWidgetInterface) {
	q.Drv(246000, 246121, unsafe.Pointer(&row), Native(label), Native(field), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::itemAt(int,QFormLayout::ItemRole)
func (q *QFormLayout) ItemAtWithRowRole(row int32, role QFormLayout_ItemRole) *QLayoutItem {
	var __rv uintptr
	q.Drv(246000, 246122, unsafe.Pointer(&row), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayoutItem{}
	_rp.SetDriver(__rv, 67000, true)
	return _rp
}

//QFormLayout::labelAlignment()
func (q *QFormLayout) LabelAlignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(246000, 246123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::labelForField(QLayout*)
func (q *QFormLayout) LabelForField(field QLayoutInterface) *QWidget {
	var __rv uintptr
	q.Drv(246000, 246124, Native(field), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QFormLayout::labelForField(QWidget*)
func (q *QFormLayout) LabelForFieldWithWidget(field QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(246000, 246125, Native(field), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QFormLayout::rowCount()
func (q *QFormLayout) RowCount() int32 {
	var __rv int32
	q.Drv(246000, 246126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::rowWrapPolicy()
func (q *QFormLayout) RowWrapPolicy() QFormLayout_RowWrapPolicy {
	var __rv QFormLayout_RowWrapPolicy
	q.Drv(246000, 246127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::setFieldGrowthPolicy(QFormLayout::FieldGrowthPolicy)
func (q *QFormLayout) SetFieldGrowthPolicy(policy QFormLayout_FieldGrowthPolicy) {
	q.Drv(246000, 246128, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setFormAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QFormLayout) SetFormAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(246000, 246129, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setHorizontalSpacing(int)
func (q *QFormLayout) SetHorizontalSpacing(spacing int32) {
	q.Drv(246000, 246130, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setItem(int,QFormLayout::ItemRole,QLayoutItem*)
func (q *QFormLayout) SetItem(row int32, role QFormLayout_ItemRole, item *QLayoutItem) {
	q.Drv(246000, 246131, unsafe.Pointer(&row), unsafe.Pointer(&role), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setLabelAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QFormLayout) SetLabelAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(246000, 246132, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setLayout(int,QFormLayout::ItemRole,QLayout*)
func (q *QFormLayout) SetLayout(row int32, role QFormLayout_ItemRole, layout QLayoutInterface) {
	q.Drv(246000, 246133, unsafe.Pointer(&row), unsafe.Pointer(&role), Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setRowWrapPolicy(QFormLayout::RowWrapPolicy)
func (q *QFormLayout) SetRowWrapPolicy(policy QFormLayout_RowWrapPolicy) {
	q.Drv(246000, 246134, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setSpacing(int)
func (q *QFormLayout) SetSpacing(value int32) {
	q.Drv(246000, 246135, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setVerticalSpacing(int)
func (q *QFormLayout) SetVerticalSpacing(spacing int32) {
	q.Drv(246000, 246136, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::setWidget(int,QFormLayout::ItemRole,QWidget*)
func (q *QFormLayout) SetWidget(row int32, role QFormLayout_ItemRole, widget QWidgetInterface) {
	q.Drv(246000, 246137, unsafe.Pointer(&row), unsafe.Pointer(&role), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFormLayout::spacing()
func (q *QFormLayout) Spacing() int32 {
	var __rv int32
	q.Drv(246000, 246138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFormLayout::verticalSpacing()
func (q *QFormLayout) VerticalSpacing() int32 {
	var __rv int32
	q.Drv(246000, 246139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QFrame_StyleMask - QFrame::StyleMask
type QFrame_StyleMask uint32

const (
	QFrame_Shadow_Mask QFrame_StyleMask = 0x00f0
	QFrame_Shape_Mask  QFrame_StyleMask = 0x000f
)

//enum QFrame_Shape - QFrame::Shape
type QFrame_Shape uint32

const (
	QFrame_NoFrame     QFrame_Shape = 0
	QFrame_Box         QFrame_Shape = 0x0001
	QFrame_Panel       QFrame_Shape = 0x0002
	QFrame_WinPanel    QFrame_Shape = 0x0003
	QFrame_HLine       QFrame_Shape = 0x0004
	QFrame_VLine       QFrame_Shape = 0x0005
	QFrame_StyledPanel QFrame_Shape = 0x0006
)

//enum QFrame_Shadow - QFrame::Shadow
type QFrame_Shadow uint32

const (
	QFrame_Plain  QFrame_Shadow = 0x0010
	QFrame_Raised QFrame_Shadow = 0x0020
	QFrame_Sunken QFrame_Shadow = 0x0030
)

//struct QFrame : QFrame
type QFrame struct {
	QWidget
}

// New QFrame from driver
func NewFrameFromDriver(drv Driver) *QFrame {
	_p := &QFrame{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QFrame::QFrame()
func NewFrame() *QFrame {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 247000, 247102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFrame{}
	_p.SetDriver(__rv, 247000, false)
	return _p
}

//QFrame::QFrame(QWidget*,QFlags<Qt::WindowType>)
func NewFrameWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QFrame {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 247000, 247103, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QFrame{}
	_p.SetDriver(__rv, 247000, false)
	return _p
}

//QFrame::drawFrame(QPainter*)
func (q *QFrame) DrawFrame(value *QPainter) {
	q.Drv(247000, 247104, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::frameRect()
func (q *QFrame) FrameRect() *QRect {
	var __rv uintptr
	q.Drv(247000, 247105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QFrame::frameShadow()
func (q *QFrame) FrameShadow() QFrame_Shadow {
	var __rv QFrame_Shadow
	q.Drv(247000, 247106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::frameShape()
func (q *QFrame) FrameShape() QFrame_Shape {
	var __rv QFrame_Shape
	q.Drv(247000, 247107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::frameStyle()
func (q *QFrame) FrameStyle() int32 {
	var __rv int32
	q.Drv(247000, 247108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::frameWidth()
func (q *QFrame) FrameWidth() int32 {
	var __rv int32
	q.Drv(247000, 247109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::lineWidth()
func (q *QFrame) LineWidth() int32 {
	var __rv int32
	q.Drv(247000, 247110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::midLineWidth()
func (q *QFrame) MidLineWidth() int32 {
	var __rv int32
	q.Drv(247000, 247111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFrame::setFrameRect(QRect const&)
func (q *QFrame) SetFrameRect(value *QRect) {
	q.Drv(247000, 247112, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::setFrameShadow(QFrame::Shadow)
func (q *QFrame) SetFrameShadow(value QFrame_Shadow) {
	q.Drv(247000, 247113, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::setFrameShape(QFrame::Shape)
func (q *QFrame) SetFrameShape(value QFrame_Shape) {
	q.Drv(247000, 247114, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::setFrameStyle(int)
func (q *QFrame) SetFrameStyle(value int32) {
	q.Drv(247000, 247115, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::setLineWidth(int)
func (q *QFrame) SetLineWidth(value int32) {
	q.Drv(247000, 247116, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFrame::setMidLineWidth(int)
func (q *QFrame) SetMidLineWidth(value int32) {
	q.Drv(247000, 247117, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QFutureWatcherBase : QFutureWatcherBase
type QFutureWatcherBase struct {
	QObject
}

func (q *QFutureWatcherBase) OnFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(248000, 248102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnProgressTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(248000, 248103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnCanceled(fn func()) uintptr {
	var __rv uintptr
	q.Drv(248000, 248104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnProgressValueChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(248000, 248105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnStarted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(248000, 248106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnProgressRangeChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(248000, 248107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnResultsReadyAt(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(248000, 248108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnPaused(fn func()) uintptr {
	var __rv uintptr
	q.Drv(248000, 248109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnResumed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(248000, 248110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QFutureWatcherBase) OnResultReadyAt(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(248000, 248111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QFutureWatcherBase::cancel()
func (q *QFutureWatcherBase) Cancel() {
	q.Drv(248000, 248112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::connectOutputInterface()
func (q *QFutureWatcherBase) ConnectOutputInterface() {
	q.Drv(248000, 248113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::disconnectOutputInterface(bool)
func (q *QFutureWatcherBase) DisconnectOutputInterface(pendingAssignment bool) {
	q.Drv(248000, 248114, unsafe.Pointer(&pendingAssignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::isCanceled()
func (q *QFutureWatcherBase) IsCanceled() bool {
	var __rv bool
	q.Drv(248000, 248115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::isFinished()
func (q *QFutureWatcherBase) IsFinished() bool {
	var __rv bool
	q.Drv(248000, 248116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::isPaused()
func (q *QFutureWatcherBase) IsPaused() bool {
	var __rv bool
	q.Drv(248000, 248117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::isRunning()
func (q *QFutureWatcherBase) IsRunning() bool {
	var __rv bool
	q.Drv(248000, 248118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::isStarted()
func (q *QFutureWatcherBase) IsStarted() bool {
	var __rv bool
	q.Drv(248000, 248119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::pause()
func (q *QFutureWatcherBase) Pause() {
	q.Drv(248000, 248120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::progressMaximum()
func (q *QFutureWatcherBase) ProgressMaximum() int32 {
	var __rv int32
	q.Drv(248000, 248121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::progressMinimum()
func (q *QFutureWatcherBase) ProgressMinimum() int32 {
	var __rv int32
	q.Drv(248000, 248122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::progressText()
func (q *QFutureWatcherBase) ProgressText() string {
	var __rv C.string_head
	q.Drv(248000, 248123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QFutureWatcherBase::progressValue()
func (q *QFutureWatcherBase) ProgressValue() int32 {
	var __rv int32
	q.Drv(248000, 248124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QFutureWatcherBase::resume()
func (q *QFutureWatcherBase) Resume() {
	q.Drv(248000, 248125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::setPaused(bool)
func (q *QFutureWatcherBase) SetPaused(paused bool) {
	q.Drv(248000, 248126, unsafe.Pointer(&paused), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::setPendingResultsLimit(int)
func (q *QFutureWatcherBase) SetPendingResultsLimit(limit int32) {
	q.Drv(248000, 248127, unsafe.Pointer(&limit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::togglePaused()
func (q *QFutureWatcherBase) TogglePaused() {
	q.Drv(248000, 248128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QFutureWatcherBase::waitForFinished()
func (q *QFutureWatcherBase) WaitForFinished() {
	q.Drv(248000, 248129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGesture_GestureCancelPolicy - QGesture::GestureCancelPolicy
type QGesture_GestureCancelPolicy uint32

const (
	QGesture_CancelNone         QGesture_GestureCancelPolicy = 0
	QGesture_CancelAllInContext QGesture_GestureCancelPolicy = 0
)

//struct QGesture : QGesture
type QGesture struct {
	QObject
}

// New QGesture from driver
func NewGestureFromDriver(drv Driver) *QGesture {
	_p := &QGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGesture::QGesture()
func NewGesture() *QGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 249000, 249102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGesture{}
	_p.SetDriver(__rv, 249000, false)
	return _p
}

//QGesture::QGesture(QObject*)
func NewGestureWithParent(parent QObjectInterface) *QGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 249000, 249103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGesture{}
	_p.SetDriver(__rv, 249000, false)
	return _p
}

//QGesture::gestureCancelPolicy()
func (q *QGesture) GestureCancelPolicy() QGesture_GestureCancelPolicy {
	var __rv QGesture_GestureCancelPolicy
	q.Drv(249000, 249104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGesture::gestureType()
func (q *QGesture) GestureType() Qt_GestureType {
	var __rv Qt_GestureType
	q.Drv(249000, 249105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGesture::hasHotSpot()
func (q *QGesture) HasHotSpot() bool {
	var __rv bool
	q.Drv(249000, 249106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGesture::hotSpot()
func (q *QGesture) HotSpot() *QPointF {
	var __rv uintptr
	q.Drv(249000, 249107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGesture::setGestureCancelPolicy(QGesture::GestureCancelPolicy)
func (q *QGesture) SetGestureCancelPolicy(policy QGesture_GestureCancelPolicy) {
	q.Drv(249000, 249108, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGesture::setHotSpot(QPointF const&)
func (q *QGesture) SetHotSpot(value *QPointF) {
	q.Drv(249000, 249109, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGesture::state()
func (q *QGesture) State() Qt_GestureState {
	var __rv Qt_GestureState
	q.Drv(249000, 249110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGesture::unsetHotSpot()
func (q *QGesture) UnsetHotSpot() {
	q.Drv(249000, 249111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsAnchor : QGraphicsAnchor
type QGraphicsAnchor struct {
	QObject
}

// New QGraphicsAnchor from driver
func NewGraphicsAnchorFromDriver(drv Driver) *QGraphicsAnchor {
	_p := &QGraphicsAnchor{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGraphicsAnchor::setSizePolicy(QSizePolicy::Policy)
func (q *QGraphicsAnchor) SetSizePolicy(policy QSizePolicy_Policy) {
	q.Drv(250000, 250102, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchor::setSpacing(double)
func (q *QGraphicsAnchor) SetSpacing(spacing float64) {
	q.Drv(250000, 250103, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchor::sizePolicy()
func (q *QGraphicsAnchor) SizePolicy() QSizePolicy_Policy {
	var __rv QSizePolicy_Policy
	q.Drv(250000, 250104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsAnchor::spacing()
func (q *QGraphicsAnchor) Spacing() float64 {
	var __rv float64
	q.Drv(250000, 250105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsAnchor::unsetSpacing()
func (q *QGraphicsAnchor) UnsetSpacing() {
	q.Drv(250000, 250106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsAnchorLayout : QGraphicsAnchorLayout
type QGraphicsAnchorLayout struct {
	QGraphicsLayout
}

//QGraphicsAnchorLayout::QGraphicsAnchorLayout()
func NewGraphicsAnchorLayout() *QGraphicsAnchorLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 251000, 251102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsAnchorLayout{}
	_p.SetDriver(__rv, 251000, true)
	return _p
}

//QGraphicsAnchorLayout::QGraphicsAnchorLayout(QGraphicsLayoutItem*)
func NewGraphicsAnchorLayoutWithParent(parent *QGraphicsLayoutItem) *QGraphicsAnchorLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 251000, 251103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsAnchorLayout{}
	_p.SetDriver(__rv, 251000, true)
	return _p
}

//QGraphicsAnchorLayout::addAnchor(QGraphicsLayoutItem*,Qt::AnchorPoint,QGraphicsLayoutItem*,Qt::AnchorPoint)
func (q *QGraphicsAnchorLayout) AddAnchor(firstItem *QGraphicsLayoutItem, firstEdge Qt_AnchorPoint, secondItem *QGraphicsLayoutItem, secondEdge Qt_AnchorPoint) *QGraphicsAnchor {
	var __rv uintptr
	q.Drv(251000, 251104, Native(firstItem), unsafe.Pointer(&firstEdge), Native(secondItem), unsafe.Pointer(&secondEdge), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsAnchor{}
	_rp.SetDriver(__rv, 250000, false)
	return _rp
}

//QGraphicsAnchorLayout::addAnchors(QGraphicsLayoutItem*,QGraphicsLayoutItem*,QFlags<Qt::Orientation>)
func (q *QGraphicsAnchorLayout) AddAnchors(firstItem *QGraphicsLayoutItem, secondItem *QGraphicsLayoutItem, orientations Qt_Orientation) {
	q.Drv(251000, 251105, Native(firstItem), Native(secondItem), unsafe.Pointer(&orientations), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchorLayout::addCornerAnchors(QGraphicsLayoutItem*,Qt::Corner,QGraphicsLayoutItem*,Qt::Corner)
func (q *QGraphicsAnchorLayout) AddCornerAnchors(firstItem *QGraphicsLayoutItem, firstCorner Qt_Corner, secondItem *QGraphicsLayoutItem, secondCorner Qt_Corner) {
	q.Drv(251000, 251106, Native(firstItem), unsafe.Pointer(&firstCorner), Native(secondItem), unsafe.Pointer(&secondCorner), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchorLayout::anchor(QGraphicsLayoutItem*,Qt::AnchorPoint,QGraphicsLayoutItem*,Qt::AnchorPoint)
func (q *QGraphicsAnchorLayout) Anchor(firstItem *QGraphicsLayoutItem, firstEdge Qt_AnchorPoint, secondItem *QGraphicsLayoutItem, secondEdge Qt_AnchorPoint) *QGraphicsAnchor {
	var __rv uintptr
	q.Drv(251000, 251107, Native(firstItem), unsafe.Pointer(&firstEdge), Native(secondItem), unsafe.Pointer(&secondEdge), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsAnchor{}
	_rp.SetDriver(__rv, 250000, false)
	return _rp
}

//QGraphicsAnchorLayout::horizontalSpacing()
func (q *QGraphicsAnchorLayout) HorizontalSpacing() float64 {
	var __rv float64
	q.Drv(251000, 251108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsAnchorLayout::setHorizontalSpacing(double)
func (q *QGraphicsAnchorLayout) SetHorizontalSpacing(spacing float64) {
	q.Drv(251000, 251109, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchorLayout::setSpacing(double)
func (q *QGraphicsAnchorLayout) SetSpacing(spacing float64) {
	q.Drv(251000, 251110, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchorLayout::setVerticalSpacing(double)
func (q *QGraphicsAnchorLayout) SetVerticalSpacing(spacing float64) {
	q.Drv(251000, 251111, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsAnchorLayout::verticalSpacing()
func (q *QGraphicsAnchorLayout) VerticalSpacing() float64 {
	var __rv float64
	q.Drv(251000, 251112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsBlurEffect_BlurHint - QGraphicsBlurEffect::BlurHint
type QGraphicsBlurEffect_BlurHint uint32

const (
	QGraphicsBlurEffect_PerformanceHint QGraphicsBlurEffect_BlurHint = 0x00
	QGraphicsBlurEffect_QualityHint     QGraphicsBlurEffect_BlurHint = 0x01
	QGraphicsBlurEffect_AnimationHint   QGraphicsBlurEffect_BlurHint = 0x02
)

//struct QGraphicsBlurEffect : QGraphicsBlurEffect
type QGraphicsBlurEffect struct {
	QGraphicsEffect
}

// New QGraphicsBlurEffect from driver
func NewGraphicsBlurEffectFromDriver(drv Driver) *QGraphicsBlurEffect {
	_p := &QGraphicsBlurEffect{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsBlurEffect) OnBlurRadiusChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(252000, 252102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsBlurEffect) OnBlurHintsChanged(fn func(QGraphicsBlurEffect_BlurHint)) uintptr {
	var __rv uintptr
	q.Drv(252000, 252103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsBlurEffect::QGraphicsBlurEffect()
func NewGraphicsBlurEffect() *QGraphicsBlurEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 252000, 252104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsBlurEffect{}
	_p.SetDriver(__rv, 252000, false)
	return _p
}

//QGraphicsBlurEffect::QGraphicsBlurEffect(QObject*)
func NewGraphicsBlurEffectWithParent(parent QObjectInterface) *QGraphicsBlurEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 252000, 252105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsBlurEffect{}
	_p.SetDriver(__rv, 252000, false)
	return _p
}

//QGraphicsBlurEffect::blurHints()
func (q *QGraphicsBlurEffect) BlurHints() QGraphicsBlurEffect_BlurHint {
	var __rv QGraphicsBlurEffect_BlurHint
	q.Drv(252000, 252106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsBlurEffect::blurRadius()
func (q *QGraphicsBlurEffect) BlurRadius() float64 {
	var __rv float64
	q.Drv(252000, 252107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsBlurEffect::setBlurHints(QFlags<QGraphicsBlurEffect::BlurHint>)
func (q *QGraphicsBlurEffect) SetBlurHints(hints QGraphicsBlurEffect_BlurHint) {
	q.Drv(252000, 252108, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsBlurEffect::setBlurRadius(double)
func (q *QGraphicsBlurEffect) SetBlurRadius(blurRadius float64) {
	q.Drv(252000, 252109, unsafe.Pointer(&blurRadius), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsColorizeEffect : QGraphicsColorizeEffect
type QGraphicsColorizeEffect struct {
	QGraphicsEffect
}

// New QGraphicsColorizeEffect from driver
func NewGraphicsColorizeEffectFromDriver(drv Driver) *QGraphicsColorizeEffect {
	_p := &QGraphicsColorizeEffect{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsColorizeEffect) OnColorChanged(fn func(*QColor)) uintptr {
	var __rv uintptr
	q.Drv(253000, 253102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsColorizeEffect) OnStrengthChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(253000, 253103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsColorizeEffect::QGraphicsColorizeEffect()
func NewGraphicsColorizeEffect() *QGraphicsColorizeEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 253000, 253104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsColorizeEffect{}
	_p.SetDriver(__rv, 253000, false)
	return _p
}

//QGraphicsColorizeEffect::QGraphicsColorizeEffect(QObject*)
func NewGraphicsColorizeEffectWithParent(parent QObjectInterface) *QGraphicsColorizeEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 253000, 253105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsColorizeEffect{}
	_p.SetDriver(__rv, 253000, false)
	return _p
}

//QGraphicsColorizeEffect::color()
func (q *QGraphicsColorizeEffect) Color() *QColor {
	var __rv uintptr
	q.Drv(253000, 253106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QGraphicsColorizeEffect::setColor(QColor const&)
func (q *QGraphicsColorizeEffect) SetColor(c *QColor) {
	q.Drv(253000, 253107, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsColorizeEffect::setStrength(double)
func (q *QGraphicsColorizeEffect) SetStrength(strength float64) {
	q.Drv(253000, 253108, unsafe.Pointer(&strength), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsColorizeEffect::strength()
func (q *QGraphicsColorizeEffect) Strength() float64 {
	var __rv float64
	q.Drv(253000, 253109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGraphicsDropShadowEffect : QGraphicsDropShadowEffect
type QGraphicsDropShadowEffect struct {
	QGraphicsEffect
}

// New QGraphicsDropShadowEffect from driver
func NewGraphicsDropShadowEffectFromDriver(drv Driver) *QGraphicsDropShadowEffect {
	_p := &QGraphicsDropShadowEffect{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsDropShadowEffect) OnBlurRadiusChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(254000, 254102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsDropShadowEffect) OnOffsetChanged(fn func(*QPointF)) uintptr {
	var __rv uintptr
	q.Drv(254000, 254103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsDropShadowEffect) OnColorChanged(fn func(*QColor)) uintptr {
	var __rv uintptr
	q.Drv(254000, 254104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsDropShadowEffect::QGraphicsDropShadowEffect()
func NewGraphicsDropShadowEffect() *QGraphicsDropShadowEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 254000, 254105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsDropShadowEffect{}
	_p.SetDriver(__rv, 254000, false)
	return _p
}

//QGraphicsDropShadowEffect::QGraphicsDropShadowEffect(QObject*)
func NewGraphicsDropShadowEffectWithParent(parent QObjectInterface) *QGraphicsDropShadowEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 254000, 254106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsDropShadowEffect{}
	_p.SetDriver(__rv, 254000, false)
	return _p
}

//QGraphicsDropShadowEffect::blurRadius()
func (q *QGraphicsDropShadowEffect) BlurRadius() float64 {
	var __rv float64
	q.Drv(254000, 254107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsDropShadowEffect::color()
func (q *QGraphicsDropShadowEffect) Color() *QColor {
	var __rv uintptr
	q.Drv(254000, 254108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QGraphicsDropShadowEffect::offset()
func (q *QGraphicsDropShadowEffect) Offset() *QPointF {
	var __rv uintptr
	q.Drv(254000, 254109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsDropShadowEffect::setBlurRadius(double)
func (q *QGraphicsDropShadowEffect) SetBlurRadius(blurRadius float64) {
	q.Drv(254000, 254110, unsafe.Pointer(&blurRadius), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setColor(QColor const&)
func (q *QGraphicsDropShadowEffect) SetColor(color *QColor) {
	q.Drv(254000, 254111, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setOffset(QPointF const&)
func (q *QGraphicsDropShadowEffect) SetOffset(ofs *QPointF) {
	q.Drv(254000, 254112, Native(ofs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setOffset(double)
func (q *QGraphicsDropShadowEffect) SetOffsetFWithFloat64(d float64) {
	q.Drv(254000, 254113, unsafe.Pointer(&d), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setOffset(double,double)
func (q *QGraphicsDropShadowEffect) SetOffsetFWithDxDy(dx float64, dy float64) {
	q.Drv(254000, 254114, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setXOffset(double)
func (q *QGraphicsDropShadowEffect) SetXOffset(dx float64) {
	q.Drv(254000, 254115, unsafe.Pointer(&dx), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::setYOffset(double)
func (q *QGraphicsDropShadowEffect) SetYOffset(dy float64) {
	q.Drv(254000, 254116, unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsDropShadowEffect::xOffset()
func (q *QGraphicsDropShadowEffect) XOffset() float64 {
	var __rv float64
	q.Drv(254000, 254117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsDropShadowEffect::yOffset()
func (q *QGraphicsDropShadowEffect) YOffset() float64 {
	var __rv float64
	q.Drv(254000, 254118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsEffect_PixmapPadMode - QGraphicsEffect::PixmapPadMode
type QGraphicsEffect_PixmapPadMode uint32

const (
	QGraphicsEffect_NoPad                      QGraphicsEffect_PixmapPadMode = 0
	QGraphicsEffect_PadToTransparentBorder     QGraphicsEffect_PixmapPadMode = 1
	QGraphicsEffect_PadToEffectiveBoundingRect QGraphicsEffect_PixmapPadMode = 2
)

//enum QGraphicsEffect_ChangeFlag - QGraphicsEffect::ChangeFlag
type QGraphicsEffect_ChangeFlag uint32

const (
	QGraphicsEffect_SourceAttached            QGraphicsEffect_ChangeFlag = 0x1
	QGraphicsEffect_SourceDetached            QGraphicsEffect_ChangeFlag = 0x2
	QGraphicsEffect_SourceBoundingRectChanged QGraphicsEffect_ChangeFlag = 0x4
	QGraphicsEffect_SourceInvalidated         QGraphicsEffect_ChangeFlag = 0x8
)

//struct QGraphicsEffect : QGraphicsEffect
type QGraphicsEffect struct {
	QObject
}

func (q *QGraphicsEffect) OnEnabledChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(255000, 255102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsEffect::boundingRect()
func (q *QGraphicsEffect) BoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(255000, 255103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsEffect::boundingRectFor(QRectF const&)
func (q *QGraphicsEffect) BoundingRectFor(sourceRect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(255000, 255104, Native(sourceRect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsEffect::draw(QPainter*)
func (q *QGraphicsEffect) Draw(painter *QPainter) {
	q.Drv(255000, 255105, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEffect::drawSource(QPainter*)
func (q *QGraphicsEffect) DrawSource(painter *QPainter) {
	q.Drv(255000, 255106, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEffect::isEnabled()
func (q *QGraphicsEffect) IsEnabled() bool {
	var __rv bool
	q.Drv(255000, 255107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsEffect::setEnabled(bool)
func (q *QGraphicsEffect) SetEnabled(enable bool) {
	q.Drv(255000, 255108, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEffect::sourceBoundingRect(Qt::CoordinateSystem)
func (q *QGraphicsEffect) SourceBoundingRect(system Qt_CoordinateSystem) *QRectF {
	var __rv uintptr
	q.Drv(255000, 255109, unsafe.Pointer(&system), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsEffect::sourceChanged(QFlags<QGraphicsEffect::ChangeFlag>)
func (q *QGraphicsEffect) SourceChanged(flags QGraphicsEffect_ChangeFlag) {
	q.Drv(255000, 255110, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEffect::sourceIsPixmap()
func (q *QGraphicsEffect) SourceIsPixmap() bool {
	var __rv bool
	q.Drv(255000, 255111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsEffect::sourcePixmap(Qt::CoordinateSystem,QPoint*,QGraphicsEffect::PixmapPadMode)
func (q *QGraphicsEffect) SourcePixmap(system Qt_CoordinateSystem, offset *QPoint, mode QGraphicsEffect_PixmapPadMode) *QPixmap {
	var __rv uintptr
	q.Drv(255000, 255112, unsafe.Pointer(&system), Native(offset), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QGraphicsEffect::update()
func (q *QGraphicsEffect) Update() {
	q.Drv(255000, 255113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEffect::updateBoundingRect()
func (q *QGraphicsEffect) UpdateBoundingRect() {
	q.Drv(255000, 255114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsEllipseItem_enum_1 - QGraphicsEllipseItem::enum_1
type QGraphicsEllipseItem_enum_1 uint32

const (
	QGraphicsEllipseItem_Type QGraphicsEllipseItem_enum_1 = 4
)

//struct QGraphicsEllipseItem : QGraphicsEllipseItem
type QGraphicsEllipseItem struct {
	QAbstractGraphicsShapeItem
}

//QGraphicsEllipseItem::QGraphicsEllipseItem()
func NewGraphicsEllipseItem() *QGraphicsEllipseItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 256000, 256102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsEllipseItem{}
	_p.SetDriver(__rv, 256000, true)
	return _p
}

//QGraphicsEllipseItem::QGraphicsEllipseItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsEllipseItemWithParentScene(parent *QGraphicsItem) *QGraphicsEllipseItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 256000, 256103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsEllipseItem{}
	_p.SetDriver(__rv, 256000, true)
	return _p
}

//QGraphicsEllipseItem::QGraphicsEllipseItem(QRectF const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsEllipseItemWithRectParentScene(rect *QRectF, parent *QGraphicsItem) *QGraphicsEllipseItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 256000, 256104, Native(rect), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsEllipseItem{}
	_p.SetDriver(__rv, 256000, true)
	return _p
}

//QGraphicsEllipseItem::QGraphicsEllipseItem(double,double,double,double,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsEllipseItemWithXYWidthHeightParentScene(x float64, y float64, w float64, h float64, parent *QGraphicsItem) *QGraphicsEllipseItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 256000, 256105, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(parent), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsEllipseItem{}
	_p.SetDriver(__rv, 256000, true)
	return _p
}

//QGraphicsEllipseItem::rect()
func (q *QGraphicsEllipseItem) Rect() *QRectF {
	var __rv uintptr
	q.Drv(256000, 256106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsEllipseItem::setRect(QRectF const&)
func (q *QGraphicsEllipseItem) SetRect(rect *QRectF) {
	q.Drv(256000, 256107, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEllipseItem::setRect(double,double,double,double)
func (q *QGraphicsEllipseItem) SetRectFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(256000, 256108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEllipseItem::setSpanAngle(int)
func (q *QGraphicsEllipseItem) SetSpanAngle(angle int32) {
	q.Drv(256000, 256109, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEllipseItem::setStartAngle(int)
func (q *QGraphicsEllipseItem) SetStartAngle(angle int32) {
	q.Drv(256000, 256110, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsEllipseItem::spanAngle()
func (q *QGraphicsEllipseItem) SpanAngle() int32 {
	var __rv int32
	q.Drv(256000, 256111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsEllipseItem::startAngle()
func (q *QGraphicsEllipseItem) StartAngle() int32 {
	var __rv int32
	q.Drv(256000, 256112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGraphicsGridLayout : QGraphicsGridLayout
type QGraphicsGridLayout struct {
	QGraphicsLayout
}

//QGraphicsGridLayout::QGraphicsGridLayout()
func NewGraphicsGridLayout() *QGraphicsGridLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 257000, 257102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsGridLayout{}
	_p.SetDriver(__rv, 257000, true)
	return _p
}

//QGraphicsGridLayout::QGraphicsGridLayout(QGraphicsLayoutItem*)
func NewGraphicsGridLayoutWithParent(parent *QGraphicsLayoutItem) *QGraphicsGridLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 257000, 257103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsGridLayout{}
	_p.SetDriver(__rv, 257000, true)
	return _p
}

//QGraphicsGridLayout::addItem(QGraphicsLayoutItem*,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsGridLayout) AddItemWithItemRowColumnAlignment(item *QGraphicsLayoutItem, row int32, column int32, alignment Qt_AlignmentFlag) {
	q.Drv(257000, 257104, Native(item), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::addItem(QGraphicsLayoutItem*,int,int,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsGridLayout) AddItemWithItemRowColumnRowspanColumnspanAlignment(item *QGraphicsLayoutItem, row int32, column int32, rowSpan int32, columnSpan int32, alignment Qt_AlignmentFlag) {
	q.Drv(257000, 257105, Native(item), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::alignment(QGraphicsLayoutItem*)
func (q *QGraphicsGridLayout) Alignment(item *QGraphicsLayoutItem) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(257000, 257106, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnAlignment(int)
func (q *QGraphicsGridLayout) ColumnAlignment(column int32) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(257000, 257107, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnCount()
func (q *QGraphicsGridLayout) ColumnCount() int32 {
	var __rv int32
	q.Drv(257000, 257108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnMaximumWidth(int)
func (q *QGraphicsGridLayout) ColumnMaximumWidth(column int32) float64 {
	var __rv float64
	q.Drv(257000, 257109, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnMinimumWidth(int)
func (q *QGraphicsGridLayout) ColumnMinimumWidth(column int32) float64 {
	var __rv float64
	q.Drv(257000, 257110, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnPreferredWidth(int)
func (q *QGraphicsGridLayout) ColumnPreferredWidth(column int32) float64 {
	var __rv float64
	q.Drv(257000, 257111, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnSpacing(int)
func (q *QGraphicsGridLayout) ColumnSpacing(column int32) float64 {
	var __rv float64
	q.Drv(257000, 257112, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::columnStretchFactor(int)
func (q *QGraphicsGridLayout) ColumnStretchFactor(column int32) int32 {
	var __rv int32
	q.Drv(257000, 257113, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::horizontalSpacing()
func (q *QGraphicsGridLayout) HorizontalSpacing() float64 {
	var __rv float64
	q.Drv(257000, 257114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::itemAt(int,int)
func (q *QGraphicsGridLayout) ItemAtWithRowColumn(row int32, column int32) *QGraphicsLayoutItem {
	var __rv uintptr
	q.Drv(257000, 257115, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLayoutItem{}
	_rp.SetDriver(__rv, 262000, true)
	return _rp
}

//QGraphicsGridLayout::rowAlignment(int)
func (q *QGraphicsGridLayout) RowAlignment(row int32) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(257000, 257116, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowCount()
func (q *QGraphicsGridLayout) RowCount() int32 {
	var __rv int32
	q.Drv(257000, 257117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowMaximumHeight(int)
func (q *QGraphicsGridLayout) RowMaximumHeight(row int32) float64 {
	var __rv float64
	q.Drv(257000, 257118, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowMinimumHeight(int)
func (q *QGraphicsGridLayout) RowMinimumHeight(row int32) float64 {
	var __rv float64
	q.Drv(257000, 257119, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowPreferredHeight(int)
func (q *QGraphicsGridLayout) RowPreferredHeight(row int32) float64 {
	var __rv float64
	q.Drv(257000, 257120, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowSpacing(int)
func (q *QGraphicsGridLayout) RowSpacing(row int32) float64 {
	var __rv float64
	q.Drv(257000, 257121, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::rowStretchFactor(int)
func (q *QGraphicsGridLayout) RowStretchFactor(row int32) int32 {
	var __rv int32
	q.Drv(257000, 257122, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsGridLayout::setAlignment(QGraphicsLayoutItem*,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsGridLayout) SetAlignment(item *QGraphicsLayoutItem, alignment Qt_AlignmentFlag) {
	q.Drv(257000, 257123, Native(item), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnAlignment(int,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsGridLayout) SetColumnAlignment(column int32, alignment Qt_AlignmentFlag) {
	q.Drv(257000, 257124, unsafe.Pointer(&column), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnFixedWidth(int,double)
func (q *QGraphicsGridLayout) SetColumnFixedWidth(column int32, width float64) {
	q.Drv(257000, 257125, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnMaximumWidth(int,double)
func (q *QGraphicsGridLayout) SetColumnMaximumWidth(column int32, width float64) {
	q.Drv(257000, 257126, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnMinimumWidth(int,double)
func (q *QGraphicsGridLayout) SetColumnMinimumWidth(column int32, width float64) {
	q.Drv(257000, 257127, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnPreferredWidth(int,double)
func (q *QGraphicsGridLayout) SetColumnPreferredWidth(column int32, width float64) {
	q.Drv(257000, 257128, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnSpacing(int,double)
func (q *QGraphicsGridLayout) SetColumnSpacing(column int32, spacing float64) {
	q.Drv(257000, 257129, unsafe.Pointer(&column), unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setColumnStretchFactor(int,int)
func (q *QGraphicsGridLayout) SetColumnStretchFactor(column int32, stretch int32) {
	q.Drv(257000, 257130, unsafe.Pointer(&column), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setHorizontalSpacing(double)
func (q *QGraphicsGridLayout) SetHorizontalSpacing(spacing float64) {
	q.Drv(257000, 257131, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowAlignment(int,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsGridLayout) SetRowAlignment(row int32, alignment Qt_AlignmentFlag) {
	q.Drv(257000, 257132, unsafe.Pointer(&row), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowFixedHeight(int,double)
func (q *QGraphicsGridLayout) SetRowFixedHeight(row int32, height float64) {
	q.Drv(257000, 257133, unsafe.Pointer(&row), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowMaximumHeight(int,double)
func (q *QGraphicsGridLayout) SetRowMaximumHeight(row int32, height float64) {
	q.Drv(257000, 257134, unsafe.Pointer(&row), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowMinimumHeight(int,double)
func (q *QGraphicsGridLayout) SetRowMinimumHeight(row int32, height float64) {
	q.Drv(257000, 257135, unsafe.Pointer(&row), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowPreferredHeight(int,double)
func (q *QGraphicsGridLayout) SetRowPreferredHeight(row int32, height float64) {
	q.Drv(257000, 257136, unsafe.Pointer(&row), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowSpacing(int,double)
func (q *QGraphicsGridLayout) SetRowSpacing(row int32, spacing float64) {
	q.Drv(257000, 257137, unsafe.Pointer(&row), unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setRowStretchFactor(int,int)
func (q *QGraphicsGridLayout) SetRowStretchFactor(row int32, stretch int32) {
	q.Drv(257000, 257138, unsafe.Pointer(&row), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setSpacing(double)
func (q *QGraphicsGridLayout) SetSpacing(spacing float64) {
	q.Drv(257000, 257139, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::setVerticalSpacing(double)
func (q *QGraphicsGridLayout) SetVerticalSpacing(spacing float64) {
	q.Drv(257000, 257140, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsGridLayout::sizeHint(Qt::SizeHint)
func (q *QGraphicsGridLayout) SizeHint(which Qt_SizeHint) *QSizeF {
	var __rv uintptr
	q.Drv(257000, 257141, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsGridLayout::verticalSpacing()
func (q *QGraphicsGridLayout) VerticalSpacing() float64 {
	var __rv float64
	q.Drv(257000, 257142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsItem_CacheMode - QGraphicsItem::CacheMode
type QGraphicsItem_CacheMode uint32

const (
	QGraphicsItem_NoCache               QGraphicsItem_CacheMode = 0
	QGraphicsItem_ItemCoordinateCache   QGraphicsItem_CacheMode = 1
	QGraphicsItem_DeviceCoordinateCache QGraphicsItem_CacheMode = 2
)

//enum QGraphicsItem_PanelModality - QGraphicsItem::PanelModality
type QGraphicsItem_PanelModality uint32

const (
	QGraphicsItem_NonModal   QGraphicsItem_PanelModality = 0
	QGraphicsItem_PanelModal QGraphicsItem_PanelModality = 1
	QGraphicsItem_SceneModal QGraphicsItem_PanelModality = 2
)

//enum QGraphicsItem_enum_1 - QGraphicsItem::enum_1
type QGraphicsItem_enum_1 uint32

const (
	QGraphicsItem_Type     QGraphicsItem_enum_1 = 1
	QGraphicsItem_UserType QGraphicsItem_enum_1 = 65536
)

//enum QGraphicsItem_GraphicsItemFlag - QGraphicsItem::GraphicsItemFlag
type QGraphicsItem_GraphicsItemFlag uint32

const (
	QGraphicsItem_ItemIsMovable                        QGraphicsItem_GraphicsItemFlag = 0x1
	QGraphicsItem_ItemIsSelectable                     QGraphicsItem_GraphicsItemFlag = 0x2
	QGraphicsItem_ItemIsFocusable                      QGraphicsItem_GraphicsItemFlag = 0x4
	QGraphicsItem_ItemClipsToShape                     QGraphicsItem_GraphicsItemFlag = 0x8
	QGraphicsItem_ItemClipsChildrenToShape             QGraphicsItem_GraphicsItemFlag = 0x10
	QGraphicsItem_ItemIgnoresTransformations           QGraphicsItem_GraphicsItemFlag = 0x20
	QGraphicsItem_ItemIgnoresParentOpacity             QGraphicsItem_GraphicsItemFlag = 0x40
	QGraphicsItem_ItemDoesntPropagateOpacityToChildren QGraphicsItem_GraphicsItemFlag = 0x80
	QGraphicsItem_ItemStacksBehindParent               QGraphicsItem_GraphicsItemFlag = 0x100
	QGraphicsItem_ItemUsesExtendedStyleOption          QGraphicsItem_GraphicsItemFlag = 0x200
	QGraphicsItem_ItemHasNoContents                    QGraphicsItem_GraphicsItemFlag = 0x400
	QGraphicsItem_ItemSendsGeometryChanges             QGraphicsItem_GraphicsItemFlag = 0x800
	QGraphicsItem_ItemAcceptsInputMethod               QGraphicsItem_GraphicsItemFlag = 0x1000
	QGraphicsItem_ItemNegativeZStacksBehindParent      QGraphicsItem_GraphicsItemFlag = 0x2000
	QGraphicsItem_ItemIsPanel                          QGraphicsItem_GraphicsItemFlag = 0x4000
	QGraphicsItem_ItemIsFocusScope                     QGraphicsItem_GraphicsItemFlag = 0x8000
	QGraphicsItem_ItemSendsScenePositionChanges        QGraphicsItem_GraphicsItemFlag = 0x10000
	QGraphicsItem_ItemStopsClickFocusPropagation       QGraphicsItem_GraphicsItemFlag = 0x20000
	QGraphicsItem_ItemStopsFocusHandling               QGraphicsItem_GraphicsItemFlag = 0x40000
)

//enum QGraphicsItem_GraphicsItemChange - QGraphicsItem::GraphicsItemChange
type QGraphicsItem_GraphicsItemChange uint32

const (
	QGraphicsItem_ItemPositionChange                 QGraphicsItem_GraphicsItemChange = 0
	QGraphicsItem_ItemMatrixChange                   QGraphicsItem_GraphicsItemChange = 1
	QGraphicsItem_ItemVisibleChange                  QGraphicsItem_GraphicsItemChange = 2
	QGraphicsItem_ItemEnabledChange                  QGraphicsItem_GraphicsItemChange = 3
	QGraphicsItem_ItemSelectedChange                 QGraphicsItem_GraphicsItemChange = 4
	QGraphicsItem_ItemParentChange                   QGraphicsItem_GraphicsItemChange = 5
	QGraphicsItem_ItemChildAddedChange               QGraphicsItem_GraphicsItemChange = 6
	QGraphicsItem_ItemChildRemovedChange             QGraphicsItem_GraphicsItemChange = 7
	QGraphicsItem_ItemTransformChange                QGraphicsItem_GraphicsItemChange = 8
	QGraphicsItem_ItemPositionHasChanged             QGraphicsItem_GraphicsItemChange = 9
	QGraphicsItem_ItemTransformHasChanged            QGraphicsItem_GraphicsItemChange = 10
	QGraphicsItem_ItemSceneChange                    QGraphicsItem_GraphicsItemChange = 11
	QGraphicsItem_ItemVisibleHasChanged              QGraphicsItem_GraphicsItemChange = 12
	QGraphicsItem_ItemEnabledHasChanged              QGraphicsItem_GraphicsItemChange = 13
	QGraphicsItem_ItemSelectedHasChanged             QGraphicsItem_GraphicsItemChange = 14
	QGraphicsItem_ItemParentHasChanged               QGraphicsItem_GraphicsItemChange = 15
	QGraphicsItem_ItemSceneHasChanged                QGraphicsItem_GraphicsItemChange = 16
	QGraphicsItem_ItemCursorChange                   QGraphicsItem_GraphicsItemChange = 17
	QGraphicsItem_ItemCursorHasChanged               QGraphicsItem_GraphicsItemChange = 18
	QGraphicsItem_ItemToolTipChange                  QGraphicsItem_GraphicsItemChange = 19
	QGraphicsItem_ItemToolTipHasChanged              QGraphicsItem_GraphicsItemChange = 20
	QGraphicsItem_ItemFlagsChange                    QGraphicsItem_GraphicsItemChange = 21
	QGraphicsItem_ItemFlagsHaveChanged               QGraphicsItem_GraphicsItemChange = 22
	QGraphicsItem_ItemZValueChange                   QGraphicsItem_GraphicsItemChange = 23
	QGraphicsItem_ItemZValueHasChanged               QGraphicsItem_GraphicsItemChange = 24
	QGraphicsItem_ItemOpacityChange                  QGraphicsItem_GraphicsItemChange = 25
	QGraphicsItem_ItemOpacityHasChanged              QGraphicsItem_GraphicsItemChange = 26
	QGraphicsItem_ItemScenePositionHasChanged        QGraphicsItem_GraphicsItemChange = 27
	QGraphicsItem_ItemRotationChange                 QGraphicsItem_GraphicsItemChange = 28
	QGraphicsItem_ItemRotationHasChanged             QGraphicsItem_GraphicsItemChange = 29
	QGraphicsItem_ItemScaleChange                    QGraphicsItem_GraphicsItemChange = 30
	QGraphicsItem_ItemScaleHasChanged                QGraphicsItem_GraphicsItemChange = 31
	QGraphicsItem_ItemTransformOriginPointChange     QGraphicsItem_GraphicsItemChange = 32
	QGraphicsItem_ItemTransformOriginPointHasChanged QGraphicsItem_GraphicsItemChange = 33
)

//enum QGraphicsItem_Extension - QGraphicsItem::Extension
type QGraphicsItem_Extension uint32

const (
	QGraphicsItem_UserExtension QGraphicsItem_Extension = 0x80000000
)

//struct QGraphicsItem : QGraphicsItem
type QGraphicsItem struct {
	BaseDrv
}

//QGraphicsItem::acceptDrops()
func (q *QGraphicsItem) AcceptDrops() bool {
	var __rv bool
	q.Drv(258000, 258102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::acceptHoverEvents()
func (q *QGraphicsItem) AcceptHoverEvents() bool {
	var __rv bool
	q.Drv(258000, 258103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::acceptTouchEvents()
func (q *QGraphicsItem) AcceptTouchEvents() bool {
	var __rv bool
	q.Drv(258000, 258104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::acceptedMouseButtons()
func (q *QGraphicsItem) AcceptedMouseButtons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(258000, 258105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::advance(int)
func (q *QGraphicsItem) Advance(phase int32) {
	q.Drv(258000, 258106, unsafe.Pointer(&phase), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::boundingRect()
func (q *QGraphicsItem) BoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(258000, 258107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::boundingRegion(QTransform const&)
func (q *QGraphicsItem) BoundingRegion(itemToDeviceTransform *QTransform) *QRegion {
	var __rv uintptr
	q.Drv(258000, 258108, Native(itemToDeviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QGraphicsItem::boundingRegionGranularity()
func (q *QGraphicsItem) BoundingRegionGranularity() float64 {
	var __rv float64
	q.Drv(258000, 258109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::cacheMode()
func (q *QGraphicsItem) CacheMode() QGraphicsItem_CacheMode {
	var __rv QGraphicsItem_CacheMode
	q.Drv(258000, 258110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::childItems()
func (q *QGraphicsItem) ChildItems() []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(258000, 258111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::childrenBoundingRect()
func (q *QGraphicsItem) ChildrenBoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(258000, 258112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::clearFocus()
func (q *QGraphicsItem) ClearFocus() {
	q.Drv(258000, 258113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::clipPath()
func (q *QGraphicsItem) ClipPath() *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::collidesWithItem(QGraphicsItem const*)
func (q *QGraphicsItem) CollidesWithItem(other *QGraphicsItem) bool {
	var __rv bool
	q.Drv(258000, 258115, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::collidesWithItem(QGraphicsItem const*,Qt::ItemSelectionMode)
func (q *QGraphicsItem) CollidesWithItemWithOtherMode(other *QGraphicsItem, mode Qt_ItemSelectionMode) bool {
	var __rv bool
	q.Drv(258000, 258116, Native(other), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::collidesWithPath(QPainterPath const&)
func (q *QGraphicsItem) CollidesWithPath(path *QPainterPath) bool {
	var __rv bool
	q.Drv(258000, 258117, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::collidesWithPath(QPainterPath const&,Qt::ItemSelectionMode)
func (q *QGraphicsItem) CollidesWithPathWithPathMode(path *QPainterPath, mode Qt_ItemSelectionMode) bool {
	var __rv bool
	q.Drv(258000, 258118, Native(path), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::collidingItems()
func (q *QGraphicsItem) CollidingItems() []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(258000, 258119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::collidingItems(Qt::ItemSelectionMode)
func (q *QGraphicsItem) CollidingItemsWithMode(mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(258000, 258120, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::commonAncestorItem(QGraphicsItem const*)
func (q *QGraphicsItem) CommonAncestorItem(other *QGraphicsItem) *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258121, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::contains(QPointF const&)
func (q *QGraphicsItem) Contains(point *QPointF) bool {
	var __rv bool
	q.Drv(258000, 258122, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::cursor()
func (q *QGraphicsItem) Cursor() *QCursor {
	var __rv uintptr
	q.Drv(258000, 258123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCursor{}
	_rp.SetDriver(__rv, 18000, true)
	return _rp
}

//QGraphicsItem::data(int)
func (q *QGraphicsItem) Data(key int32) *QVariant {
	var __rv uintptr
	q.Drv(258000, 258124, unsafe.Pointer(&key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QGraphicsItem::deviceTransform(QTransform const&)
func (q *QGraphicsItem) DeviceTransform(viewportTransform *QTransform) *QTransform {
	var __rv uintptr
	q.Drv(258000, 258125, Native(viewportTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsItem::effectiveOpacity()
func (q *QGraphicsItem) EffectiveOpacity() float64 {
	var __rv float64
	q.Drv(258000, 258126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::ensureVisible()
func (q *QGraphicsItem) EnsureVisible() {
	q.Drv(258000, 258127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::ensureVisible(QRectF const&,int,int)
func (q *QGraphicsItem) EnsureVisibleFWithRectXmarginYmargin(rect *QRectF, xmargin int32, ymargin int32) {
	q.Drv(258000, 258128, Native(rect), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::ensureVisible(double,double,double,double,int,int)
func (q *QGraphicsItem) EnsureVisibleFWithXYWidthHeightXmarginYmargin(x float64, y float64, w float64, h float64, xmargin int32, ymargin int32) {
	q.Drv(258000, 258129, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::filtersChildEvents()
func (q *QGraphicsItem) FiltersChildEvents() bool {
	var __rv bool
	q.Drv(258000, 258130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::flags()
func (q *QGraphicsItem) Flags() QGraphicsItem_GraphicsItemFlag {
	var __rv QGraphicsItem_GraphicsItemFlag
	q.Drv(258000, 258131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::focusItem()
func (q *QGraphicsItem) FocusItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::focusProxy()
func (q *QGraphicsItem) FocusProxy() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::focusScopeItem()
func (q *QGraphicsItem) FocusScopeItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::grabKeyboard()
func (q *QGraphicsItem) GrabKeyboard() {
	q.Drv(258000, 258135, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::grabMouse()
func (q *QGraphicsItem) GrabMouse() {
	q.Drv(258000, 258136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::graphicsEffect()
func (q *QGraphicsItem) GraphicsEffect() *QGraphicsEffect {
	var __rv uintptr
	q.Drv(258000, 258137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsEffect{}
	_rp.SetDriver(__rv, 255000, false)
	return _rp
}

//QGraphicsItem::group()
func (q *QGraphicsItem) Group() *QGraphicsItemGroup {
	var __rv uintptr
	q.Drv(258000, 258138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItemGroup{}
	_rp.SetDriver(__rv, 260000, true)
	return _rp
}

//QGraphicsItem::handlesChildEvents()
func (q *QGraphicsItem) HandlesChildEvents() bool {
	var __rv bool
	q.Drv(258000, 258139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::hasCursor()
func (q *QGraphicsItem) HasCursor() bool {
	var __rv bool
	q.Drv(258000, 258140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::hasFocus()
func (q *QGraphicsItem) HasFocus() bool {
	var __rv bool
	q.Drv(258000, 258141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::hide()
func (q *QGraphicsItem) Hide() {
	q.Drv(258000, 258142, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::inputMethodHints()
func (q *QGraphicsItem) InputMethodHints() Qt_InputMethodHint {
	var __rv Qt_InputMethodHint
	q.Drv(258000, 258143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::installSceneEventFilter(QGraphicsItem*)
func (q *QGraphicsItem) InstallSceneEventFilter(filterItem *QGraphicsItem) {
	q.Drv(258000, 258144, Native(filterItem), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::isActive()
func (q *QGraphicsItem) IsActive() bool {
	var __rv bool
	q.Drv(258000, 258145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isAncestorOf(QGraphicsItem const*)
func (q *QGraphicsItem) IsAncestorOf(child *QGraphicsItem) bool {
	var __rv bool
	q.Drv(258000, 258146, Native(child), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isClipped()
func (q *QGraphicsItem) IsClipped() bool {
	var __rv bool
	q.Drv(258000, 258147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isEnabled()
func (q *QGraphicsItem) IsEnabled() bool {
	var __rv bool
	q.Drv(258000, 258148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isObscured()
func (q *QGraphicsItem) IsObscured() bool {
	var __rv bool
	q.Drv(258000, 258149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isObscured(QRectF const&)
func (q *QGraphicsItem) IsObscuredFWithRect(rect *QRectF) bool {
	var __rv bool
	q.Drv(258000, 258150, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isObscured(double,double,double,double)
func (q *QGraphicsItem) IsObscuredFWithXYWidthHeight(x float64, y float64, w float64, h float64) bool {
	var __rv bool
	q.Drv(258000, 258151, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isObscuredBy(QGraphicsItem const*)
func (q *QGraphicsItem) IsObscuredBy(item *QGraphicsItem) bool {
	var __rv bool
	q.Drv(258000, 258152, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isPanel()
func (q *QGraphicsItem) IsPanel() bool {
	var __rv bool
	q.Drv(258000, 258153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isSelected()
func (q *QGraphicsItem) IsSelected() bool {
	var __rv bool
	q.Drv(258000, 258154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isUnderMouse()
func (q *QGraphicsItem) IsUnderMouse() bool {
	var __rv bool
	q.Drv(258000, 258155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isVisible()
func (q *QGraphicsItem) IsVisible() bool {
	var __rv bool
	q.Drv(258000, 258156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isVisibleTo(QGraphicsItem const*)
func (q *QGraphicsItem) IsVisibleTo(parent *QGraphicsItem) bool {
	var __rv bool
	q.Drv(258000, 258157, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isWidget()
func (q *QGraphicsItem) IsWidget() bool {
	var __rv bool
	q.Drv(258000, 258158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::isWindow()
func (q *QGraphicsItem) IsWindow() bool {
	var __rv bool
	q.Drv(258000, 258159, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::itemTransform(QGraphicsItem const*)
func (q *QGraphicsItem) ItemTransform(other *QGraphicsItem) *QTransform {
	var __rv uintptr
	q.Drv(258000, 258160, Native(other), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsItem::itemTransform(QGraphicsItem const*,bool*)
func (q *QGraphicsItem) ItemTransformWithOtherOk(other *QGraphicsItem, ok *bool) *QTransform {
	var __rv uintptr
	q.Drv(258000, 258161, Native(other), unsafe.Pointer(&ok), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,QPainterPath const&)
func (q *QGraphicsItem) MapFromItemWithItemPath(item *QGraphicsItem, path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258162, Native(item), Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,QPointF const&)
func (q *QGraphicsItem) MapFromItemFWithItemPoint(item *QGraphicsItem, point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258163, Native(item), Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,QPolygonF const&)
func (q *QGraphicsItem) MapFromItemFWithItemPolygon(item *QGraphicsItem, polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258164, Native(item), Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,QRectF const&)
func (q *QGraphicsItem) MapFromItemFWithItemRect(item *QGraphicsItem, rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258165, Native(item), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,double,double)
func (q *QGraphicsItem) MapFromItemFWithItemXY(item *QGraphicsItem, x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258166, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromItem(QGraphicsItem const*,double,double,double,double)
func (q *QGraphicsItem) MapFromItemFWithItemXYWidthHeight(item *QGraphicsItem, x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258167, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(QPainterPath const&)
func (q *QGraphicsItem) MapFromParent(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258168, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(QPointF const&)
func (q *QGraphicsItem) MapFromParentFWithPoint(point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258169, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(QPolygonF const&)
func (q *QGraphicsItem) MapFromParentFWithPolygon(polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258170, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(QRectF const&)
func (q *QGraphicsItem) MapFromParentFWithRect(rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258171, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(double,double)
func (q *QGraphicsItem) MapFromParentFWithXY(x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258172, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromParent(double,double,double,double)
func (q *QGraphicsItem) MapFromParentFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258173, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(QPainterPath const&)
func (q *QGraphicsItem) MapFromScene(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258174, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(QPointF const&)
func (q *QGraphicsItem) MapFromSceneFWithPoint(point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258175, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(QPolygonF const&)
func (q *QGraphicsItem) MapFromSceneFWithPolygon(polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258176, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(QRectF const&)
func (q *QGraphicsItem) MapFromSceneFWithRect(rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258177, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(double,double)
func (q *QGraphicsItem) MapFromSceneFWithXY(x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258178, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapFromScene(double,double,double,double)
func (q *QGraphicsItem) MapFromSceneFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258179, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapRectFromItem(QGraphicsItem const*,QRectF const&)
func (q *QGraphicsItem) MapRectFromItemFWithItemRect(item *QGraphicsItem, rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258180, Native(item), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectFromItem(QGraphicsItem const*,double,double,double,double)
func (q *QGraphicsItem) MapRectFromItemFWithItemXYWidthHeight(item *QGraphicsItem, x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258181, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectFromParent(QRectF const&)
func (q *QGraphicsItem) MapRectFromParent(rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258182, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectFromParent(double,double,double,double)
func (q *QGraphicsItem) MapRectFromParentFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258183, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectFromScene(QRectF const&)
func (q *QGraphicsItem) MapRectFromScene(rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258184, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectFromScene(double,double,double,double)
func (q *QGraphicsItem) MapRectFromSceneFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258185, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToItem(QGraphicsItem const*,QRectF const&)
func (q *QGraphicsItem) MapRectToItemFWithItemRect(item *QGraphicsItem, rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258186, Native(item), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToItem(QGraphicsItem const*,double,double,double,double)
func (q *QGraphicsItem) MapRectToItemFWithItemXYWidthHeight(item *QGraphicsItem, x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258187, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToParent(QRectF const&)
func (q *QGraphicsItem) MapRectToParent(rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258188, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToParent(double,double,double,double)
func (q *QGraphicsItem) MapRectToParentFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258189, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToScene(QRectF const&)
func (q *QGraphicsItem) MapRectToScene(rect *QRectF) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258190, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapRectToScene(double,double,double,double)
func (q *QGraphicsItem) MapRectToSceneFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QRectF {
	var __rv uintptr
	q.Drv(258000, 258191, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,QPainterPath const&)
func (q *QGraphicsItem) MapToItemWithItemPath(item *QGraphicsItem, path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258192, Native(item), Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,QPointF const&)
func (q *QGraphicsItem) MapToItemFWithItemPoint(item *QGraphicsItem, point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258193, Native(item), Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,QPolygonF const&)
func (q *QGraphicsItem) MapToItemFWithItemPolygon(item *QGraphicsItem, polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258194, Native(item), Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,QRectF const&)
func (q *QGraphicsItem) MapToItemFWithItemRect(item *QGraphicsItem, rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258195, Native(item), Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,double,double)
func (q *QGraphicsItem) MapToItemFWithItemXY(item *QGraphicsItem, x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258196, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToItem(QGraphicsItem const*,double,double,double,double)
func (q *QGraphicsItem) MapToItemFWithItemXYWidthHeight(item *QGraphicsItem, x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258197, Native(item), unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToParent(QPainterPath const&)
func (q *QGraphicsItem) MapToParent(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258198, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapToParent(QPointF const&)
func (q *QGraphicsItem) MapToParentFWithPoint(point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258199, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToParent(QPolygonF const&)
func (q *QGraphicsItem) MapToParentFWithPolygon(polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258200, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToParent(QRectF const&)
func (q *QGraphicsItem) MapToParentFWithRect(rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258201, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToParent(double,double)
func (q *QGraphicsItem) MapToParentFWithXY(x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258202, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToParent(double,double,double,double)
func (q *QGraphicsItem) MapToParentFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258203, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToScene(QPainterPath const&)
func (q *QGraphicsItem) MapToScene(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258204, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::mapToScene(QPointF const&)
func (q *QGraphicsItem) MapToSceneFWithPoint(point *QPointF) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258205, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToScene(QPolygonF const&)
func (q *QGraphicsItem) MapToSceneFWithPolygon(polygon *QPolygonF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258206, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToScene(QRectF const&)
func (q *QGraphicsItem) MapToSceneFWithRect(rect *QRectF) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258207, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::mapToScene(double,double)
func (q *QGraphicsItem) MapToSceneFWithXY(x float64, y float64) *QPointF {
	var __rv uintptr
	q.Drv(258000, 258208, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::mapToScene(double,double,double,double)
func (q *QGraphicsItem) MapToSceneFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QPolygonF {
	var __rv uintptr
	q.Drv(258000, 258209, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsItem::matrix()
func (q *QGraphicsItem) Matrix() *QMatrix {
	var __rv uintptr
	q.Drv(258000, 258210, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QGraphicsItem::moveBy(double,double)
func (q *QGraphicsItem) MoveBy(dx float64, dy float64) {
	q.Drv(258000, 258211, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::opacity()
func (q *QGraphicsItem) Opacity() float64 {
	var __rv float64
	q.Drv(258000, 258212, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::opaqueArea()
func (q *QGraphicsItem) OpaqueArea() *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258213, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::panel()
func (q *QGraphicsItem) Panel() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258214, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::panelModality()
func (q *QGraphicsItem) PanelModality() QGraphicsItem_PanelModality {
	var __rv QGraphicsItem_PanelModality
	q.Drv(258000, 258215, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::parentItem()
func (q *QGraphicsItem) ParentItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258216, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::parentObject()
func (q *QGraphicsItem) ParentObject() *QGraphicsObject {
	var __rv uintptr
	q.Drv(258000, 258217, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsObject{}
	_rp.SetDriver(__rv, 265000, false)
	return _rp
}

//QGraphicsItem::parentWidget()
func (q *QGraphicsItem) ParentWidget() *QGraphicsWidget {
	var __rv uintptr
	q.Drv(258000, 258218, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsWidget{}
	_rp.SetDriver(__rv, 288000, false)
	return _rp
}

//QGraphicsItem::pos()
func (q *QGraphicsItem) Pos() *QPointF {
	var __rv uintptr
	q.Drv(258000, 258219, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::removeSceneEventFilter(QGraphicsItem*)
func (q *QGraphicsItem) RemoveSceneEventFilter(filterItem *QGraphicsItem) {
	q.Drv(258000, 258220, Native(filterItem), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::resetMatrix()
func (q *QGraphicsItem) ResetMatrix() {
	q.Drv(258000, 258221, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::resetTransform()
func (q *QGraphicsItem) ResetTransform() {
	q.Drv(258000, 258222, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::rotation()
func (q *QGraphicsItem) Rotation() float64 {
	var __rv float64
	q.Drv(258000, 258223, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::scene()
func (q *QGraphicsItem) Scene() *QGraphicsScene {
	var __rv uintptr
	q.Drv(258000, 258224, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsScene{}
	_rp.SetDriver(__rv, 274000, false)
	return _rp
}

//QGraphicsItem::sceneBoundingRect()
func (q *QGraphicsItem) SceneBoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(258000, 258225, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsItem::sceneMatrix()
func (q *QGraphicsItem) SceneMatrix() *QMatrix {
	var __rv uintptr
	q.Drv(258000, 258226, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QGraphicsItem::scenePos()
func (q *QGraphicsItem) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(258000, 258227, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::sceneTransform()
func (q *QGraphicsItem) SceneTransform() *QTransform {
	var __rv uintptr
	q.Drv(258000, 258228, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsItem::scroll(double,double,QRectF const&)
func (q *QGraphicsItem) Scroll(dx float64, dy float64, rect *QRectF) {
	q.Drv(258000, 258229, unsafe.Pointer(&dx), unsafe.Pointer(&dy), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setAcceptDrops(bool)
func (q *QGraphicsItem) SetAcceptDrops(on bool) {
	q.Drv(258000, 258230, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setAcceptHoverEvents(bool)
func (q *QGraphicsItem) SetAcceptHoverEvents(enabled bool) {
	q.Drv(258000, 258231, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setAcceptTouchEvents(bool)
func (q *QGraphicsItem) SetAcceptTouchEvents(enabled bool) {
	q.Drv(258000, 258232, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setAcceptedMouseButtons(QFlags<Qt::MouseButton>)
func (q *QGraphicsItem) SetAcceptedMouseButtons(buttons Qt_MouseButton) {
	q.Drv(258000, 258233, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setActive(bool)
func (q *QGraphicsItem) SetActive(active bool) {
	q.Drv(258000, 258234, unsafe.Pointer(&active), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setBoundingRegionGranularity(double)
func (q *QGraphicsItem) SetBoundingRegionGranularity(granularity float64) {
	q.Drv(258000, 258235, unsafe.Pointer(&granularity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setCacheMode(QGraphicsItem::CacheMode)
func (q *QGraphicsItem) SetCacheMode(mode QGraphicsItem_CacheMode) {
	q.Drv(258000, 258236, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setCacheMode(QGraphicsItem::CacheMode,QSize const&)
func (q *QGraphicsItem) SetCacheModeWithModeCachesize(mode QGraphicsItem_CacheMode, cacheSize *QSize) {
	q.Drv(258000, 258237, unsafe.Pointer(&mode), Native(cacheSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setCursor(QCursor const&)
func (q *QGraphicsItem) SetCursor(cursor *QCursor) {
	q.Drv(258000, 258238, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setData(int,QVariant const&)
func (q *QGraphicsItem) SetData(key int32, value *QVariant) {
	q.Drv(258000, 258239, unsafe.Pointer(&key), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setEnabled(bool)
func (q *QGraphicsItem) SetEnabled(enabled bool) {
	q.Drv(258000, 258240, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFiltersChildEvents(bool)
func (q *QGraphicsItem) SetFiltersChildEvents(enabled bool) {
	q.Drv(258000, 258241, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFlag(QGraphicsItem::GraphicsItemFlag)
func (q *QGraphicsItem) SetFlag(flag QGraphicsItem_GraphicsItemFlag) {
	q.Drv(258000, 258242, unsafe.Pointer(&flag), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFlag(QGraphicsItem::GraphicsItemFlag,bool)
func (q *QGraphicsItem) SetFlagWithFlagEnabled(flag QGraphicsItem_GraphicsItemFlag, enabled bool) {
	q.Drv(258000, 258243, unsafe.Pointer(&flag), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFlags(QFlags<QGraphicsItem::GraphicsItemFlag>)
func (q *QGraphicsItem) SetFlags(flags QGraphicsItem_GraphicsItemFlag) {
	q.Drv(258000, 258244, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFocus()
func (q *QGraphicsItem) SetFocus() {
	q.Drv(258000, 258245, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFocus(Qt::FocusReason)
func (q *QGraphicsItem) SetFocusWithFocusreason(focusReason Qt_FocusReason) {
	q.Drv(258000, 258246, unsafe.Pointer(&focusReason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setFocusProxy(QGraphicsItem*)
func (q *QGraphicsItem) SetFocusProxy(item *QGraphicsItem) {
	q.Drv(258000, 258247, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setGraphicsEffect(QGraphicsEffect*)
func (q *QGraphicsItem) SetGraphicsEffect(effect *QGraphicsEffect) {
	q.Drv(258000, 258248, Native(effect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setGroup(QGraphicsItemGroup*)
func (q *QGraphicsItem) SetGroup(group *QGraphicsItemGroup) {
	q.Drv(258000, 258249, Native(group), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setHandlesChildEvents(bool)
func (q *QGraphicsItem) SetHandlesChildEvents(enabled bool) {
	q.Drv(258000, 258250, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setInputMethodHints(QFlags<Qt::InputMethodHint>)
func (q *QGraphicsItem) SetInputMethodHints(hints Qt_InputMethodHint) {
	q.Drv(258000, 258251, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setMatrix(QMatrix const&)
func (q *QGraphicsItem) SetMatrix(matrix *QMatrix) {
	q.Drv(258000, 258252, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setMatrix(QMatrix const&,bool)
func (q *QGraphicsItem) SetMatrixWithMatrixCombine(matrix *QMatrix, combine bool) {
	q.Drv(258000, 258253, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setOpacity(double)
func (q *QGraphicsItem) SetOpacity(opacity float64) {
	q.Drv(258000, 258254, unsafe.Pointer(&opacity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setPanelModality(QGraphicsItem::PanelModality)
func (q *QGraphicsItem) SetPanelModality(panelModality QGraphicsItem_PanelModality) {
	q.Drv(258000, 258255, unsafe.Pointer(&panelModality), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setParentItem(QGraphicsItem*)
func (q *QGraphicsItem) SetParentItem(parent *QGraphicsItem) {
	q.Drv(258000, 258256, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setPos(QPointF const&)
func (q *QGraphicsItem) SetPos(pos *QPointF) {
	q.Drv(258000, 258257, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setPos(double,double)
func (q *QGraphicsItem) SetPosFWithXY(x float64, y float64) {
	q.Drv(258000, 258258, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setRotation(double)
func (q *QGraphicsItem) SetRotation(angle float64) {
	q.Drv(258000, 258259, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setScale(double)
func (q *QGraphicsItem) SetScale(scale float64) {
	q.Drv(258000, 258260, unsafe.Pointer(&scale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setSelected(bool)
func (q *QGraphicsItem) SetSelected(selected bool) {
	q.Drv(258000, 258261, unsafe.Pointer(&selected), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setToolTip(QString const&)
func (q *QGraphicsItem) SetToolTip(toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(258000, 258262, unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setTransform(QTransform const&)
func (q *QGraphicsItem) SetTransform(matrix *QTransform) {
	q.Drv(258000, 258263, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setTransform(QTransform const&,bool)
func (q *QGraphicsItem) SetTransformWithTransformCombine(matrix *QTransform, combine bool) {
	q.Drv(258000, 258264, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setTransformOriginPoint(QPointF const&)
func (q *QGraphicsItem) SetTransformOriginPoint(origin *QPointF) {
	q.Drv(258000, 258265, Native(origin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setTransformOriginPoint(double,double)
func (q *QGraphicsItem) SetTransformOriginPointFWithAxAy(ax float64, ay float64) {
	q.Drv(258000, 258266, unsafe.Pointer(&ax), unsafe.Pointer(&ay), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setTransformations(QList<QGraphicsTransform*> const&)
func (q *QGraphicsItem) SetTransformations(transformations []*QGraphicsTransform) {
	_transformations := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&transformations)))
	defer FreeCObjectArrayHead(_transformations)
	q.Drv(258000, 258267, unsafe.Pointer(_transformations), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setVisible(bool)
func (q *QGraphicsItem) SetVisible(visible bool) {
	q.Drv(258000, 258268, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setX(double)
func (q *QGraphicsItem) SetX(x float64) {
	q.Drv(258000, 258269, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setY(double)
func (q *QGraphicsItem) SetY(y float64) {
	q.Drv(258000, 258270, unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::setZValue(double)
func (q *QGraphicsItem) SetZValue(z float64) {
	q.Drv(258000, 258271, unsafe.Pointer(&z), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::shape()
func (q *QGraphicsItem) Shape() *QPainterPath {
	var __rv uintptr
	q.Drv(258000, 258272, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsItem::show()
func (q *QGraphicsItem) Show() {
	q.Drv(258000, 258273, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::stackBefore(QGraphicsItem const*)
func (q *QGraphicsItem) StackBefore(sibling *QGraphicsItem) {
	q.Drv(258000, 258274, Native(sibling), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::toGraphicsObject()
func (q *QGraphicsItem) ToGraphicsObject() *QGraphicsObject {
	var __rv uintptr
	q.Drv(258000, 258275, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsObject{}
	_rp.SetDriver(__rv, 265000, false)
	return _rp
}

//QGraphicsItem::toolTip()
func (q *QGraphicsItem) ToolTip() string {
	var __rv C.string_head
	q.Drv(258000, 258276, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QGraphicsItem::topLevelItem()
func (q *QGraphicsItem) TopLevelItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(258000, 258277, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItem::topLevelWidget()
func (q *QGraphicsItem) TopLevelWidget() *QGraphicsWidget {
	var __rv uintptr
	q.Drv(258000, 258278, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsWidget{}
	_rp.SetDriver(__rv, 288000, false)
	return _rp
}

//QGraphicsItem::transform()
func (q *QGraphicsItem) Transform() *QTransform {
	var __rv uintptr
	q.Drv(258000, 258279, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsItem::transformOriginPoint()
func (q *QGraphicsItem) TransformOriginPoint() *QPointF {
	var __rv uintptr
	q.Drv(258000, 258280, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItem::transformations()
func (q *QGraphicsItem) Transformations() []*QGraphicsTransform {
	var __rv []*QGraphicsTransform
	q.Drv(258000, 258281, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::type()
func (q *QGraphicsItem) Type() int32 {
	var __rv int32
	q.Drv(258000, 258282, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::ungrabKeyboard()
func (q *QGraphicsItem) UngrabKeyboard() {
	q.Drv(258000, 258283, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::ungrabMouse()
func (q *QGraphicsItem) UngrabMouse() {
	q.Drv(258000, 258284, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::unsetCursor()
func (q *QGraphicsItem) UnsetCursor() {
	q.Drv(258000, 258285, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::update()
func (q *QGraphicsItem) Update() {
	q.Drv(258000, 258286, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::update(QRectF const&)
func (q *QGraphicsItem) UpdateFWithRect(rect *QRectF) {
	q.Drv(258000, 258287, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::update(double,double,double,double)
func (q *QGraphicsItem) UpdateFWithXYWidthHeight(x float64, y float64, width float64, height float64) {
	q.Drv(258000, 258288, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&width), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItem::window()
func (q *QGraphicsItem) Window() *QGraphicsWidget {
	var __rv uintptr
	q.Drv(258000, 258289, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsWidget{}
	_rp.SetDriver(__rv, 288000, false)
	return _rp
}

//QGraphicsItem::x()
func (q *QGraphicsItem) X() float64 {
	var __rv float64
	q.Drv(258000, 258290, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::y()
func (q *QGraphicsItem) Y() float64 {
	var __rv float64
	q.Drv(258000, 258291, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItem::zValue()
func (q *QGraphicsItem) ZValue() float64 {
	var __rv float64
	q.Drv(258000, 258292, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGraphicsItemAnimation : QGraphicsItemAnimation
type QGraphicsItemAnimation struct {
	QObject
}

// New QGraphicsItemAnimation from driver
func NewGraphicsItemAnimationFromDriver(drv Driver) *QGraphicsItemAnimation {
	_p := &QGraphicsItemAnimation{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGraphicsItemAnimation::QGraphicsItemAnimation()
func NewGraphicsItemAnimation() *QGraphicsItemAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 259000, 259102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsItemAnimation{}
	_p.SetDriver(__rv, 259000, false)
	return _p
}

//QGraphicsItemAnimation::QGraphicsItemAnimation(QObject*)
func NewGraphicsItemAnimationWithParent(parent QObjectInterface) *QGraphicsItemAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 259000, 259103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsItemAnimation{}
	_p.SetDriver(__rv, 259000, false)
	return _p
}

//QGraphicsItemAnimation::afterAnimationStep(double)
func (q *QGraphicsItemAnimation) AfterAnimationStep(step float64) {
	q.Drv(259000, 259104, unsafe.Pointer(&step), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::beforeAnimationStep(double)
func (q *QGraphicsItemAnimation) BeforeAnimationStep(step float64) {
	q.Drv(259000, 259105, unsafe.Pointer(&step), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::clear()
func (q *QGraphicsItemAnimation) Clear() {
	q.Drv(259000, 259106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::horizontalScaleAt(double)
func (q *QGraphicsItemAnimation) HorizontalScaleAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259107, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::horizontalShearAt(double)
func (q *QGraphicsItemAnimation) HorizontalShearAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259108, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::item()
func (q *QGraphicsItemAnimation) Item() *QGraphicsItem {
	var __rv uintptr
	q.Drv(259000, 259109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsItemAnimation::matrixAt(double)
func (q *QGraphicsItemAnimation) MatrixAt(step float64) *QMatrix {
	var __rv uintptr
	q.Drv(259000, 259110, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QGraphicsItemAnimation::posAt(double)
func (q *QGraphicsItemAnimation) PosAt(step float64) *QPointF {
	var __rv uintptr
	q.Drv(259000, 259111, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsItemAnimation::reset()
func (q *QGraphicsItemAnimation) Reset() {
	q.Drv(259000, 259112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::rotationAt(double)
func (q *QGraphicsItemAnimation) RotationAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259113, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::setItem(QGraphicsItem*)
func (q *QGraphicsItemAnimation) SetItem(item *QGraphicsItem) {
	q.Drv(259000, 259114, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setPosAt(double,QPointF const&)
func (q *QGraphicsItemAnimation) SetPosAt(step float64, pos *QPointF) {
	q.Drv(259000, 259115, unsafe.Pointer(&step), Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setRotationAt(double,double)
func (q *QGraphicsItemAnimation) SetRotationAt(step float64, angle float64) {
	q.Drv(259000, 259116, unsafe.Pointer(&step), unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setScaleAt(double,double,double)
func (q *QGraphicsItemAnimation) SetScaleAt(step float64, sx float64, sy float64) {
	q.Drv(259000, 259117, unsafe.Pointer(&step), unsafe.Pointer(&sx), unsafe.Pointer(&sy), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setShearAt(double,double,double)
func (q *QGraphicsItemAnimation) SetShearAt(step float64, sh float64, sv float64) {
	q.Drv(259000, 259118, unsafe.Pointer(&step), unsafe.Pointer(&sh), unsafe.Pointer(&sv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setStep(double)
func (q *QGraphicsItemAnimation) SetStep(x float64) {
	q.Drv(259000, 259119, unsafe.Pointer(&x), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setTimeLine(QTimeLine*)
func (q *QGraphicsItemAnimation) SetTimeLine(timeLine *QTimeLine) {
	q.Drv(259000, 259120, Native(timeLine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::setTranslationAt(double,double,double)
func (q *QGraphicsItemAnimation) SetTranslationAt(step float64, dx float64, dy float64) {
	q.Drv(259000, 259121, unsafe.Pointer(&step), unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemAnimation::timeLine()
func (q *QGraphicsItemAnimation) TimeLine() *QTimeLine {
	var __rv uintptr
	q.Drv(259000, 259122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTimeLine{}
	_rp.SetDriver(__rv, 381000, false)
	return _rp
}

//QGraphicsItemAnimation::verticalScaleAt(double)
func (q *QGraphicsItemAnimation) VerticalScaleAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259123, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::verticalShearAt(double)
func (q *QGraphicsItemAnimation) VerticalShearAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259124, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::xTranslationAt(double)
func (q *QGraphicsItemAnimation) XTranslationAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259125, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsItemAnimation::yTranslationAt(double)
func (q *QGraphicsItemAnimation) YTranslationAt(step float64) float64 {
	var __rv float64
	q.Drv(259000, 259126, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsItemGroup_enum_1 - QGraphicsItemGroup::enum_1
type QGraphicsItemGroup_enum_1 uint32

const (
	QGraphicsItemGroup_Type QGraphicsItemGroup_enum_1 = 10
)

//struct QGraphicsItemGroup : QGraphicsItemGroup
type QGraphicsItemGroup struct {
	QGraphicsItem
}

//QGraphicsItemGroup::QGraphicsItemGroup()
func NewGraphicsItemGroup() *QGraphicsItemGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 260000, 260102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsItemGroup{}
	_p.SetDriver(__rv, 260000, true)
	return _p
}

//QGraphicsItemGroup::QGraphicsItemGroup(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsItemGroupWithParentScene(parent *QGraphicsItem) *QGraphicsItemGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 260000, 260103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsItemGroup{}
	_p.SetDriver(__rv, 260000, true)
	return _p
}

//QGraphicsItemGroup::addToGroup(QGraphicsItem*)
func (q *QGraphicsItemGroup) AddToGroup(item *QGraphicsItem) {
	q.Drv(260000, 260104, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsItemGroup::removeFromGroup(QGraphicsItem*)
func (q *QGraphicsItemGroup) RemoveFromGroup(item *QGraphicsItem) {
	q.Drv(260000, 260105, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsLayout : QGraphicsLayout
type QGraphicsLayout struct {
	QGraphicsLayoutItem
}

//QGraphicsLayout::activate()
func (q *QGraphicsLayout) Activate() {
	q.Drv(261000, 261102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::count()
func (q *QGraphicsLayout) Count() int32 {
	var __rv int32
	q.Drv(261000, 261103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayout::instantInvalidatePropagation()
func QGraphicsLayoutInstantInvalidatePropagation() bool {
	var __rv bool
	DirectQtDrv(nil, 261000, 261104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayout::instantInvalidatePropagation()
func (q *QGraphicsLayout) InstantInvalidatePropagation() bool {
	var __rv bool
	q.Drv(261000, 261104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayout::invalidate()
func (q *QGraphicsLayout) Invalidate() {
	q.Drv(261000, 261105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::isActivated()
func (q *QGraphicsLayout) IsActivated() bool {
	var __rv bool
	q.Drv(261000, 261106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayout::itemAt(int)
func (q *QGraphicsLayout) ItemAt(i int32) *QGraphicsLayoutItem {
	var __rv uintptr
	q.Drv(261000, 261107, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLayoutItem{}
	_rp.SetDriver(__rv, 262000, true)
	return _rp
}

//QGraphicsLayout::removeAt(int)
func (q *QGraphicsLayout) RemoveAt(index int32) {
	q.Drv(261000, 261108, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::setContentsMargins(double,double,double,double)
func (q *QGraphicsLayout) SetContentsMargins(left float64, top float64, right float64, bottom float64) {
	q.Drv(261000, 261109, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::setInstantInvalidatePropagation(bool)
func QGraphicsLayoutSetInstantInvalidatePropagation(enable bool) {
	DirectQtDrv(nil, 261000, 261110, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::setInstantInvalidatePropagation(bool)
func (q *QGraphicsLayout) SetInstantInvalidatePropagation(enable bool) {
	q.Drv(261000, 261110, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayout::widgetEvent(QEvent*)
func (q *QGraphicsLayout) WidgetEvent(e *QEvent) {
	q.Drv(261000, 261111, Native(e), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsLayoutItem : QGraphicsLayoutItem
type QGraphicsLayoutItem struct {
	BaseDrv
}

//QGraphicsLayoutItem::contentsRect()
func (q *QGraphicsLayoutItem) ContentsRect() *QRectF {
	var __rv uintptr
	q.Drv(262000, 262102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsLayoutItem::effectiveSizeHint(Qt::SizeHint)
func (q *QGraphicsLayoutItem) EffectiveSizeHint(which Qt_SizeHint) *QSizeF {
	var __rv uintptr
	q.Drv(262000, 262103, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLayoutItem::effectiveSizeHint(Qt::SizeHint,QSizeF const&)
func (q *QGraphicsLayoutItem) EffectiveSizeHintFWithWhichConstraint(which Qt_SizeHint, constraint *QSizeF) *QSizeF {
	var __rv uintptr
	q.Drv(262000, 262104, unsafe.Pointer(&which), Native(constraint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLayoutItem::geometry()
func (q *QGraphicsLayoutItem) Geometry() *QRectF {
	var __rv uintptr
	q.Drv(262000, 262105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsLayoutItem::getContentsMargins(double*,double*,double*,double*)
func (q *QGraphicsLayoutItem) GetContentsMargins(left *float64, top *float64, right *float64, bottom *float64) {
	q.Drv(262000, 262106, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::graphicsItem()
func (q *QGraphicsLayoutItem) GraphicsItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(262000, 262107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsLayoutItem::isLayout()
func (q *QGraphicsLayoutItem) IsLayout() bool {
	var __rv bool
	q.Drv(262000, 262108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::maximumHeight()
func (q *QGraphicsLayoutItem) MaximumHeight() float64 {
	var __rv float64
	q.Drv(262000, 262109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::maximumSize()
func (q *QGraphicsLayoutItem) MaximumSize() *QSizeF {
	var __rv uintptr
	q.Drv(262000, 262110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLayoutItem::maximumWidth()
func (q *QGraphicsLayoutItem) MaximumWidth() float64 {
	var __rv float64
	q.Drv(262000, 262111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::minimumHeight()
func (q *QGraphicsLayoutItem) MinimumHeight() float64 {
	var __rv float64
	q.Drv(262000, 262112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::minimumSize()
func (q *QGraphicsLayoutItem) MinimumSize() *QSizeF {
	var __rv uintptr
	q.Drv(262000, 262113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLayoutItem::minimumWidth()
func (q *QGraphicsLayoutItem) MinimumWidth() float64 {
	var __rv float64
	q.Drv(262000, 262114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::ownedByLayout()
func (q *QGraphicsLayoutItem) OwnedByLayout() bool {
	var __rv bool
	q.Drv(262000, 262115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::parentLayoutItem()
func (q *QGraphicsLayoutItem) ParentLayoutItem() *QGraphicsLayoutItem {
	var __rv uintptr
	q.Drv(262000, 262116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLayoutItem{}
	_rp.SetDriver(__rv, 262000, true)
	return _rp
}

//QGraphicsLayoutItem::preferredHeight()
func (q *QGraphicsLayoutItem) PreferredHeight() float64 {
	var __rv float64
	q.Drv(262000, 262117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::preferredSize()
func (q *QGraphicsLayoutItem) PreferredSize() *QSizeF {
	var __rv uintptr
	q.Drv(262000, 262118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLayoutItem::preferredWidth()
func (q *QGraphicsLayoutItem) PreferredWidth() float64 {
	var __rv float64
	q.Drv(262000, 262119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLayoutItem::setGeometry(QRectF const&)
func (q *QGraphicsLayoutItem) SetGeometry(rect *QRectF) {
	q.Drv(262000, 262120, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMaximumHeight(double)
func (q *QGraphicsLayoutItem) SetMaximumHeight(height float64) {
	q.Drv(262000, 262121, unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMaximumSize(QSizeF const&)
func (q *QGraphicsLayoutItem) SetMaximumSize(size *QSizeF) {
	q.Drv(262000, 262122, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMaximumSize(double,double)
func (q *QGraphicsLayoutItem) SetMaximumSizeFWithWidthHeight(w float64, h float64) {
	q.Drv(262000, 262123, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMaximumWidth(double)
func (q *QGraphicsLayoutItem) SetMaximumWidth(width float64) {
	q.Drv(262000, 262124, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMinimumHeight(double)
func (q *QGraphicsLayoutItem) SetMinimumHeight(height float64) {
	q.Drv(262000, 262125, unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMinimumSize(QSizeF const&)
func (q *QGraphicsLayoutItem) SetMinimumSize(size *QSizeF) {
	q.Drv(262000, 262126, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMinimumSize(double,double)
func (q *QGraphicsLayoutItem) SetMinimumSizeFWithWidthHeight(w float64, h float64) {
	q.Drv(262000, 262127, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setMinimumWidth(double)
func (q *QGraphicsLayoutItem) SetMinimumWidth(width float64) {
	q.Drv(262000, 262128, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setParentLayoutItem(QGraphicsLayoutItem*)
func (q *QGraphicsLayoutItem) SetParentLayoutItem(parent *QGraphicsLayoutItem) {
	q.Drv(262000, 262129, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setPreferredHeight(double)
func (q *QGraphicsLayoutItem) SetPreferredHeight(height float64) {
	q.Drv(262000, 262130, unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setPreferredSize(QSizeF const&)
func (q *QGraphicsLayoutItem) SetPreferredSize(size *QSizeF) {
	q.Drv(262000, 262131, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setPreferredSize(double,double)
func (q *QGraphicsLayoutItem) SetPreferredSizeFWithWidthHeight(w float64, h float64) {
	q.Drv(262000, 262132, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setPreferredWidth(double)
func (q *QGraphicsLayoutItem) SetPreferredWidth(width float64) {
	q.Drv(262000, 262133, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setSizePolicy(QSizePolicy const&)
func (q *QGraphicsLayoutItem) SetSizePolicy(policy *QSizePolicy) {
	q.Drv(262000, 262134, Native(policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::setSizePolicy(QSizePolicy::Policy,QSizePolicy::Policy,QSizePolicy::ControlType)
func (q *QGraphicsLayoutItem) SetSizePolicyWithHpolicyVpolicyControltype(hPolicy QSizePolicy_Policy, vPolicy QSizePolicy_Policy, controlType QSizePolicy_ControlType) {
	q.Drv(262000, 262135, unsafe.Pointer(&hPolicy), unsafe.Pointer(&vPolicy), unsafe.Pointer(&controlType), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLayoutItem::sizePolicy()
func (q *QGraphicsLayoutItem) SizePolicy() *QSizePolicy {
	var __rv uintptr
	q.Drv(262000, 262136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizePolicy{}
	_rp.SetDriver(__rv, 122000, true)
	return _rp
}

//QGraphicsLayoutItem::updateGeometry()
func (q *QGraphicsLayoutItem) UpdateGeometry() {
	q.Drv(262000, 262137, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsLineItem_enum_1 - QGraphicsLineItem::enum_1
type QGraphicsLineItem_enum_1 uint32

const (
	QGraphicsLineItem_Type QGraphicsLineItem_enum_1 = 6
)

//struct QGraphicsLineItem : QGraphicsLineItem
type QGraphicsLineItem struct {
	QGraphicsItem
}

//QGraphicsLineItem::QGraphicsLineItem()
func NewGraphicsLineItem() *QGraphicsLineItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 263000, 263102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLineItem{}
	_p.SetDriver(__rv, 263000, true)
	return _p
}

//QGraphicsLineItem::QGraphicsLineItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsLineItemWithParentScene(parent *QGraphicsItem) *QGraphicsLineItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 263000, 263103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLineItem{}
	_p.SetDriver(__rv, 263000, true)
	return _p
}

//QGraphicsLineItem::QGraphicsLineItem(QLineF const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsLineItemWithLineParentScene(line *QLineF, parent *QGraphicsItem) *QGraphicsLineItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 263000, 263104, Native(line), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLineItem{}
	_p.SetDriver(__rv, 263000, true)
	return _p
}

//QGraphicsLineItem::QGraphicsLineItem(double,double,double,double,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsLineItemWithX1Y1X2Y2ParentScene(x1 float64, y1 float64, x2 float64, y2 float64, parent *QGraphicsItem) *QGraphicsLineItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 263000, 263105, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), Native(parent), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLineItem{}
	_p.SetDriver(__rv, 263000, true)
	return _p
}

//QGraphicsLineItem::line()
func (q *QGraphicsLineItem) Line() *QLineF {
	var __rv uintptr
	q.Drv(263000, 263106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLineF{}
	_rp.SetDriver(__rv, 70000, true)
	return _rp
}

//QGraphicsLineItem::pen()
func (q *QGraphicsLineItem) Pen() *QPen {
	var __rv uintptr
	q.Drv(263000, 263107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPen{}
	_rp.SetDriver(__rv, 93000, true)
	return _rp
}

//QGraphicsLineItem::setLine(QLineF const&)
func (q *QGraphicsLineItem) SetLine(line *QLineF) {
	q.Drv(263000, 263108, Native(line), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLineItem::setLine(double,double,double,double)
func (q *QGraphicsLineItem) SetLineFWithX1Y1X2Y2(x1 float64, y1 float64, x2 float64, y2 float64) {
	q.Drv(263000, 263109, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLineItem::setPen(QPen const&)
func (q *QGraphicsLineItem) SetPen(pen *QPen) {
	q.Drv(263000, 263110, Native(pen), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsLinearLayout : QGraphicsLinearLayout
type QGraphicsLinearLayout struct {
	QGraphicsLayout
}

//QGraphicsLinearLayout::QGraphicsLinearLayout()
func NewGraphicsLinearLayout() *QGraphicsLinearLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 264000, 264102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLinearLayout{}
	_p.SetDriver(__rv, 264000, true)
	return _p
}

//QGraphicsLinearLayout::QGraphicsLinearLayout(QGraphicsLayoutItem*)
func NewGraphicsLinearLayoutWithParent(parent *QGraphicsLayoutItem) *QGraphicsLinearLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 264000, 264103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLinearLayout{}
	_p.SetDriver(__rv, 264000, true)
	return _p
}

//QGraphicsLinearLayout::QGraphicsLinearLayout(Qt::Orientation,QGraphicsLayoutItem*)
func NewGraphicsLinearLayoutWithOrientationParent(orientation Qt_Orientation, parent *QGraphicsLayoutItem) *QGraphicsLinearLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 264000, 264104, unsafe.Pointer(&orientation), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsLinearLayout{}
	_p.SetDriver(__rv, 264000, true)
	return _p
}

//QGraphicsLinearLayout::addItem(QGraphicsLayoutItem*)
func (q *QGraphicsLinearLayout) AddItem(item *QGraphicsLayoutItem) {
	q.Drv(264000, 264105, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::addStretch()
func (q *QGraphicsLinearLayout) AddStretch() {
	q.Drv(264000, 264106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::addStretch(int)
func (q *QGraphicsLinearLayout) AddStretchWithStretch(stretch int32) {
	q.Drv(264000, 264107, unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::alignment(QGraphicsLayoutItem*)
func (q *QGraphicsLinearLayout) Alignment(item *QGraphicsLayoutItem) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(264000, 264108, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLinearLayout::dump()
func (q *QGraphicsLinearLayout) Dump() {
	q.Drv(264000, 264109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::dump(int)
func (q *QGraphicsLinearLayout) DumpWithIndent(indent int32) {
	q.Drv(264000, 264110, unsafe.Pointer(&indent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::insertItem(int,QGraphicsLayoutItem*)
func (q *QGraphicsLinearLayout) InsertItem(index int32, item *QGraphicsLayoutItem) {
	q.Drv(264000, 264111, unsafe.Pointer(&index), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::insertStretch(int)
func (q *QGraphicsLinearLayout) InsertStretch(index int32) {
	q.Drv(264000, 264112, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::insertStretch(int,int)
func (q *QGraphicsLinearLayout) InsertStretchWithIndexStretch(index int32, stretch int32) {
	q.Drv(264000, 264113, unsafe.Pointer(&index), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::itemSpacing(int)
func (q *QGraphicsLinearLayout) ItemSpacing(index int32) float64 {
	var __rv float64
	q.Drv(264000, 264114, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLinearLayout::orientation()
func (q *QGraphicsLinearLayout) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(264000, 264115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLinearLayout::removeItem(QGraphicsLayoutItem*)
func (q *QGraphicsLinearLayout) RemoveItem(item *QGraphicsLayoutItem) {
	q.Drv(264000, 264116, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::setAlignment(QGraphicsLayoutItem*,QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsLinearLayout) SetAlignment(item *QGraphicsLayoutItem, alignment Qt_AlignmentFlag) {
	q.Drv(264000, 264117, Native(item), unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::setItemSpacing(int,double)
func (q *QGraphicsLinearLayout) SetItemSpacing(index int32, spacing float64) {
	q.Drv(264000, 264118, unsafe.Pointer(&index), unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::setOrientation(Qt::Orientation)
func (q *QGraphicsLinearLayout) SetOrientation(orientation Qt_Orientation) {
	q.Drv(264000, 264119, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::setSpacing(double)
func (q *QGraphicsLinearLayout) SetSpacing(spacing float64) {
	q.Drv(264000, 264120, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::setStretchFactor(QGraphicsLayoutItem*,int)
func (q *QGraphicsLinearLayout) SetStretchFactor(item *QGraphicsLayoutItem, stretch int32) {
	q.Drv(264000, 264121, Native(item), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsLinearLayout::sizeHint(Qt::SizeHint)
func (q *QGraphicsLinearLayout) SizeHint(which Qt_SizeHint) *QSizeF {
	var __rv uintptr
	q.Drv(264000, 264122, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsLinearLayout::spacing()
func (q *QGraphicsLinearLayout) Spacing() float64 {
	var __rv float64
	q.Drv(264000, 264123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsLinearLayout::stretchFactor(QGraphicsLayoutItem*)
func (q *QGraphicsLinearLayout) StretchFactor(item *QGraphicsLayoutItem) int32 {
	var __rv int32
	q.Drv(264000, 264124, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGraphicsObject : QGraphicsObject
type QGraphicsObject struct {
	QObject
}

// New QGraphicsObject from driver
func NewGraphicsObjectFromDriver(drv Driver) *QGraphicsObject {
	_p := &QGraphicsObject{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsObject) OnRotationChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnYChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnScaleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnEnabledChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnOpacityChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnVisibleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnWidthChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnHeightChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnParentChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnZChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnChildrenChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265112, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsObject) OnXChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(265000, 265113, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsObject::children()
func (q *QGraphicsObject) Children() []*QObject {
	var __rv []*QObject
	q.Drv(265000, 265114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsObject::grabGesture(Qt::GestureType)
func (q *QGraphicsObject) GrabGesture(_type Qt_GestureType) {
	q.Drv(265000, 265115, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsObject::grabGesture(Qt::GestureType,QFlags<Qt::GestureFlag>)
func (q *QGraphicsObject) GrabGestureWithTypeFlags(_type Qt_GestureType, flags Qt_GestureFlag) {
	q.Drv(265000, 265116, unsafe.Pointer(&_type), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsObject::ungrabGesture(Qt::GestureType)
func (q *QGraphicsObject) UngrabGesture(_type Qt_GestureType) {
	q.Drv(265000, 265117, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsObject::updateMicroFocus()
func (q *QGraphicsObject) UpdateMicroFocus() {
	q.Drv(265000, 265118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsOpacityEffect : QGraphicsOpacityEffect
type QGraphicsOpacityEffect struct {
	QGraphicsEffect
}

// New QGraphicsOpacityEffect from driver
func NewGraphicsOpacityEffectFromDriver(drv Driver) *QGraphicsOpacityEffect {
	_p := &QGraphicsOpacityEffect{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsOpacityEffect) OnOpacityChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(266000, 266102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsOpacityEffect) OnOpacityMaskChanged(fn func(*QBrush)) uintptr {
	var __rv uintptr
	q.Drv(266000, 266103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsOpacityEffect::QGraphicsOpacityEffect()
func NewGraphicsOpacityEffect() *QGraphicsOpacityEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 266000, 266104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsOpacityEffect{}
	_p.SetDriver(__rv, 266000, false)
	return _p
}

//QGraphicsOpacityEffect::QGraphicsOpacityEffect(QObject*)
func NewGraphicsOpacityEffectWithParent(parent QObjectInterface) *QGraphicsOpacityEffect {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 266000, 266105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsOpacityEffect{}
	_p.SetDriver(__rv, 266000, false)
	return _p
}

//QGraphicsOpacityEffect::opacity()
func (q *QGraphicsOpacityEffect) Opacity() float64 {
	var __rv float64
	q.Drv(266000, 266106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsOpacityEffect::opacityMask()
func (q *QGraphicsOpacityEffect) OpacityMask() *QBrush {
	var __rv uintptr
	q.Drv(266000, 266107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QGraphicsOpacityEffect::setOpacity(double)
func (q *QGraphicsOpacityEffect) SetOpacity(opacity float64) {
	q.Drv(266000, 266108, unsafe.Pointer(&opacity), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsOpacityEffect::setOpacityMask(QBrush const&)
func (q *QGraphicsOpacityEffect) SetOpacityMask(mask *QBrush) {
	q.Drv(266000, 266109, Native(mask), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsPathItem_enum_1 - QGraphicsPathItem::enum_1
type QGraphicsPathItem_enum_1 uint32

const (
	QGraphicsPathItem_Type QGraphicsPathItem_enum_1 = 2
)

//struct QGraphicsPathItem : QGraphicsPathItem
type QGraphicsPathItem struct {
	QAbstractGraphicsShapeItem
}

//QGraphicsPathItem::QGraphicsPathItem()
func NewGraphicsPathItem() *QGraphicsPathItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 267000, 267102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPathItem{}
	_p.SetDriver(__rv, 267000, true)
	return _p
}

//QGraphicsPathItem::QGraphicsPathItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPathItemWithParentScene(parent *QGraphicsItem) *QGraphicsPathItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 267000, 267103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPathItem{}
	_p.SetDriver(__rv, 267000, true)
	return _p
}

//QGraphicsPathItem::QGraphicsPathItem(QPainterPath const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPathItemWithPathParentScene(path *QPainterPath, parent *QGraphicsItem) *QGraphicsPathItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 267000, 267104, Native(path), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPathItem{}
	_p.SetDriver(__rv, 267000, true)
	return _p
}

//QGraphicsPathItem::path()
func (q *QGraphicsPathItem) Path() *QPainterPath {
	var __rv uintptr
	q.Drv(267000, 267105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsPathItem::setPath(QPainterPath const&)
func (q *QGraphicsPathItem) SetPath(path *QPainterPath) {
	q.Drv(267000, 267106, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsPixmapItem_ShapeMode - QGraphicsPixmapItem::ShapeMode
type QGraphicsPixmapItem_ShapeMode uint32

const (
	QGraphicsPixmapItem_MaskShape          QGraphicsPixmapItem_ShapeMode = 0
	QGraphicsPixmapItem_BoundingRectShape  QGraphicsPixmapItem_ShapeMode = 1
	QGraphicsPixmapItem_HeuristicMaskShape QGraphicsPixmapItem_ShapeMode = 2
)

//enum QGraphicsPixmapItem_enum_1 - QGraphicsPixmapItem::enum_1
type QGraphicsPixmapItem_enum_1 uint32

const (
	QGraphicsPixmapItem_Type QGraphicsPixmapItem_enum_1 = 7
)

//struct QGraphicsPixmapItem : QGraphicsPixmapItem
type QGraphicsPixmapItem struct {
	QGraphicsItem
}

//QGraphicsPixmapItem::QGraphicsPixmapItem()
func NewGraphicsPixmapItem() *QGraphicsPixmapItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 268000, 268102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPixmapItem{}
	_p.SetDriver(__rv, 268000, true)
	return _p
}

//QGraphicsPixmapItem::QGraphicsPixmapItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPixmapItemWithParentScene(parent *QGraphicsItem) *QGraphicsPixmapItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 268000, 268103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPixmapItem{}
	_p.SetDriver(__rv, 268000, true)
	return _p
}

//QGraphicsPixmapItem::QGraphicsPixmapItem(QPixmap const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPixmapItemWithPixmapParentScene(pixmap *QPixmap, parent *QGraphicsItem) *QGraphicsPixmapItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 268000, 268104, Native(pixmap), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPixmapItem{}
	_p.SetDriver(__rv, 268000, true)
	return _p
}

//QGraphicsPixmapItem::offset()
func (q *QGraphicsPixmapItem) Offset() *QPointF {
	var __rv uintptr
	q.Drv(268000, 268105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsPixmapItem::pixmap()
func (q *QGraphicsPixmapItem) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(268000, 268106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QGraphicsPixmapItem::setOffset(QPointF const&)
func (q *QGraphicsPixmapItem) SetOffset(offset *QPointF) {
	q.Drv(268000, 268107, Native(offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPixmapItem::setOffset(double,double)
func (q *QGraphicsPixmapItem) SetOffsetFWithXY(x float64, y float64) {
	q.Drv(268000, 268108, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPixmapItem::setPixmap(QPixmap const&)
func (q *QGraphicsPixmapItem) SetPixmap(pixmap *QPixmap) {
	q.Drv(268000, 268109, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPixmapItem::setShapeMode(QGraphicsPixmapItem::ShapeMode)
func (q *QGraphicsPixmapItem) SetShapeMode(mode QGraphicsPixmapItem_ShapeMode) {
	q.Drv(268000, 268110, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPixmapItem::setTransformationMode(Qt::TransformationMode)
func (q *QGraphicsPixmapItem) SetTransformationMode(mode Qt_TransformationMode) {
	q.Drv(268000, 268111, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPixmapItem::shapeMode()
func (q *QGraphicsPixmapItem) ShapeMode() QGraphicsPixmapItem_ShapeMode {
	var __rv QGraphicsPixmapItem_ShapeMode
	q.Drv(268000, 268112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsPixmapItem::transformationMode()
func (q *QGraphicsPixmapItem) TransformationMode() Qt_TransformationMode {
	var __rv Qt_TransformationMode
	q.Drv(268000, 268113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsPolygonItem_enum_1 - QGraphicsPolygonItem::enum_1
type QGraphicsPolygonItem_enum_1 uint32

const (
	QGraphicsPolygonItem_Type QGraphicsPolygonItem_enum_1 = 5
)

//struct QGraphicsPolygonItem : QGraphicsPolygonItem
type QGraphicsPolygonItem struct {
	QAbstractGraphicsShapeItem
}

//QGraphicsPolygonItem::QGraphicsPolygonItem()
func NewGraphicsPolygonItem() *QGraphicsPolygonItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 269000, 269102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPolygonItem{}
	_p.SetDriver(__rv, 269000, true)
	return _p
}

//QGraphicsPolygonItem::QGraphicsPolygonItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPolygonItemWithParentScene(parent *QGraphicsItem) *QGraphicsPolygonItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 269000, 269103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPolygonItem{}
	_p.SetDriver(__rv, 269000, true)
	return _p
}

//QGraphicsPolygonItem::QGraphicsPolygonItem(QPolygonF const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsPolygonItemWithPolygonParentScene(polygon *QPolygonF, parent *QGraphicsItem) *QGraphicsPolygonItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 269000, 269104, Native(polygon), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsPolygonItem{}
	_p.SetDriver(__rv, 269000, true)
	return _p
}

//QGraphicsPolygonItem::fillRule()
func (q *QGraphicsPolygonItem) FillRule() Qt_FillRule {
	var __rv Qt_FillRule
	q.Drv(269000, 269105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsPolygonItem::polygon()
func (q *QGraphicsPolygonItem) Polygon() *QPolygonF {
	var __rv uintptr
	q.Drv(269000, 269106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsPolygonItem::setFillRule(Qt::FillRule)
func (q *QGraphicsPolygonItem) SetFillRule(rule Qt_FillRule) {
	q.Drv(269000, 269107, unsafe.Pointer(&rule), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsPolygonItem::setPolygon(QPolygonF const&)
func (q *QGraphicsPolygonItem) SetPolygon(polygon *QPolygonF) {
	q.Drv(269000, 269108, Native(polygon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsProxyWidget_enum_1 - QGraphicsProxyWidget::enum_1
type QGraphicsProxyWidget_enum_1 uint32

const (
	QGraphicsProxyWidget_Type QGraphicsProxyWidget_enum_1 = 12
)

//struct QGraphicsProxyWidget : QGraphicsProxyWidget
type QGraphicsProxyWidget struct {
	QGraphicsWidget
}

// New QGraphicsProxyWidget from driver
func NewGraphicsProxyWidgetFromDriver(drv Driver) *QGraphicsProxyWidget {
	_p := &QGraphicsProxyWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGraphicsProxyWidget::QGraphicsProxyWidget()
func NewGraphicsProxyWidget() *QGraphicsProxyWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 270000, 270102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsProxyWidget{}
	_p.SetDriver(__rv, 270000, false)
	return _p
}

//QGraphicsProxyWidget::QGraphicsProxyWidget(QGraphicsItem*,QFlags<Qt::WindowType>)
func NewGraphicsProxyWidgetWithParentFlags(parent *QGraphicsItem, wFlags Qt_WindowType) *QGraphicsProxyWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 270000, 270103, Native(parent), unsafe.Pointer(&wFlags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsProxyWidget{}
	_p.SetDriver(__rv, 270000, false)
	return _p
}

//QGraphicsProxyWidget::createProxyForChildWidget(QWidget*)
func (q *QGraphicsProxyWidget) CreateProxyForChildWidget(child QWidgetInterface) *QGraphicsProxyWidget {
	var __rv uintptr
	q.Drv(270000, 270104, Native(child), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsProxyWidget{}
	_rp.SetDriver(__rv, 270000, false)
	return _rp
}

//QGraphicsProxyWidget::newProxyWidget(QWidget const*)
func (q *QGraphicsProxyWidget) NewProxyWidget(value QWidgetInterface) *QGraphicsProxyWidget {
	var __rv uintptr
	q.Drv(270000, 270105, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsProxyWidget{}
	_rp.SetDriver(__rv, 270000, false)
	return _rp
}

//QGraphicsProxyWidget::setWidget(QWidget*)
func (q *QGraphicsProxyWidget) SetWidget(widget QWidgetInterface) {
	q.Drv(270000, 270106, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsProxyWidget::subWidgetRect(QWidget const*)
func (q *QGraphicsProxyWidget) SubWidgetRect(widget QWidgetInterface) *QRectF {
	var __rv uintptr
	q.Drv(270000, 270107, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsProxyWidget::widget()
func (q *QGraphicsProxyWidget) Widget() *QWidget {
	var __rv uintptr
	q.Drv(270000, 270108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//enum QGraphicsRectItem_enum_1 - QGraphicsRectItem::enum_1
type QGraphicsRectItem_enum_1 uint32

const (
	QGraphicsRectItem_Type QGraphicsRectItem_enum_1 = 3
)

//struct QGraphicsRectItem : QGraphicsRectItem
type QGraphicsRectItem struct {
	QAbstractGraphicsShapeItem
}

//QGraphicsRectItem::QGraphicsRectItem()
func NewGraphicsRectItem() *QGraphicsRectItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 271000, 271102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRectItem{}
	_p.SetDriver(__rv, 271000, true)
	return _p
}

//QGraphicsRectItem::QGraphicsRectItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsRectItemWithParentScene(parent *QGraphicsItem) *QGraphicsRectItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 271000, 271103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRectItem{}
	_p.SetDriver(__rv, 271000, true)
	return _p
}

//QGraphicsRectItem::QGraphicsRectItem(QRectF const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsRectItemWithRectParentScene(rect *QRectF, parent *QGraphicsItem) *QGraphicsRectItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 271000, 271104, Native(rect), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRectItem{}
	_p.SetDriver(__rv, 271000, true)
	return _p
}

//QGraphicsRectItem::QGraphicsRectItem(double,double,double,double,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsRectItemWithXYWidthHeightParentScene(x float64, y float64, w float64, h float64, parent *QGraphicsItem) *QGraphicsRectItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 271000, 271105, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(parent), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRectItem{}
	_p.SetDriver(__rv, 271000, true)
	return _p
}

//QGraphicsRectItem::rect()
func (q *QGraphicsRectItem) Rect() *QRectF {
	var __rv uintptr
	q.Drv(271000, 271106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsRectItem::setRect(QRectF const&)
func (q *QGraphicsRectItem) SetRect(rect *QRectF) {
	q.Drv(271000, 271107, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsRectItem::setRect(double,double,double,double)
func (q *QGraphicsRectItem) SetRectFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(271000, 271108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsRotation : QGraphicsRotation
type QGraphicsRotation struct {
	QGraphicsTransform
}

// New QGraphicsRotation from driver
func NewGraphicsRotationFromDriver(drv Driver) *QGraphicsRotation {
	_p := &QGraphicsRotation{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsRotation) OnAxisChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(272000, 272102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsRotation) OnAngleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(272000, 272103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsRotation) OnOriginChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(272000, 272104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsRotation::QGraphicsRotation()
func NewGraphicsRotation() *QGraphicsRotation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 272000, 272105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRotation{}
	_p.SetDriver(__rv, 272000, false)
	return _p
}

//QGraphicsRotation::QGraphicsRotation(QObject*)
func NewGraphicsRotationWithParent(parent QObjectInterface) *QGraphicsRotation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 272000, 272106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsRotation{}
	_p.SetDriver(__rv, 272000, false)
	return _p
}

//QGraphicsRotation::angle()
func (q *QGraphicsRotation) Angle() float64 {
	var __rv float64
	q.Drv(272000, 272107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsRotation::axis()
func (q *QGraphicsRotation) Axis() *QVector3D {
	var __rv uintptr
	q.Drv(272000, 272108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QGraphicsRotation::origin()
func (q *QGraphicsRotation) Origin() *QVector3D {
	var __rv uintptr
	q.Drv(272000, 272109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QGraphicsRotation::setAngle(double)
func (q *QGraphicsRotation) SetAngle(value float64) {
	q.Drv(272000, 272110, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsRotation::setAxis(QVector3D const&)
func (q *QGraphicsRotation) SetAxis(axis *QVector3D) {
	q.Drv(272000, 272111, Native(axis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsRotation::setAxis(Qt::Axis)
func (q *QGraphicsRotation) SetAxisWithAxis(axis Qt_Axis) {
	q.Drv(272000, 272112, unsafe.Pointer(&axis), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsRotation::setOrigin(QVector3D const&)
func (q *QGraphicsRotation) SetOrigin(point *QVector3D) {
	q.Drv(272000, 272113, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsScale : QGraphicsScale
type QGraphicsScale struct {
	QGraphicsTransform
}

// New QGraphicsScale from driver
func NewGraphicsScaleFromDriver(drv Driver) *QGraphicsScale {
	_p := &QGraphicsScale{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsScale) OnXScaleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(273000, 273102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScale) OnScaleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(273000, 273103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScale) OnZScaleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(273000, 273104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScale) OnOriginChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(273000, 273105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScale) OnYScaleChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(273000, 273106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsScale::QGraphicsScale()
func NewGraphicsScale() *QGraphicsScale {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 273000, 273107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScale{}
	_p.SetDriver(__rv, 273000, false)
	return _p
}

//QGraphicsScale::QGraphicsScale(QObject*)
func NewGraphicsScaleWithParent(parent QObjectInterface) *QGraphicsScale {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 273000, 273108, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScale{}
	_p.SetDriver(__rv, 273000, false)
	return _p
}

//QGraphicsScale::origin()
func (q *QGraphicsScale) Origin() *QVector3D {
	var __rv uintptr
	q.Drv(273000, 273109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVector3D{}
	_rp.SetDriver(__rv, 187000, true)
	return _rp
}

//QGraphicsScale::setOrigin(QVector3D const&)
func (q *QGraphicsScale) SetOrigin(point *QVector3D) {
	q.Drv(273000, 273110, Native(point), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScale::setXScale(double)
func (q *QGraphicsScale) SetXScale(value float64) {
	q.Drv(273000, 273111, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScale::setYScale(double)
func (q *QGraphicsScale) SetYScale(value float64) {
	q.Drv(273000, 273112, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScale::setZScale(double)
func (q *QGraphicsScale) SetZScale(value float64) {
	q.Drv(273000, 273113, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScale::xScale()
func (q *QGraphicsScale) XScale() float64 {
	var __rv float64
	q.Drv(273000, 273114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScale::yScale()
func (q *QGraphicsScale) YScale() float64 {
	var __rv float64
	q.Drv(273000, 273115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScale::zScale()
func (q *QGraphicsScale) ZScale() float64 {
	var __rv float64
	q.Drv(273000, 273116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsScene_SceneLayer - QGraphicsScene::SceneLayer
type QGraphicsScene_SceneLayer uint32

const (
	QGraphicsScene_ItemLayer       QGraphicsScene_SceneLayer = 0x1
	QGraphicsScene_BackgroundLayer QGraphicsScene_SceneLayer = 0x2
	QGraphicsScene_ForegroundLayer QGraphicsScene_SceneLayer = 0x4
	QGraphicsScene_AllLayers       QGraphicsScene_SceneLayer = 0xffff
)

//enum QGraphicsScene_ItemIndexMethod - QGraphicsScene::ItemIndexMethod
type QGraphicsScene_ItemIndexMethod int32

const (
	QGraphicsScene_BspTreeIndex QGraphicsScene_ItemIndexMethod = 0
	QGraphicsScene_NoIndex      QGraphicsScene_ItemIndexMethod = -1
)

//struct QGraphicsScene : QGraphicsScene
type QGraphicsScene struct {
	QObject
}

// New QGraphicsScene from driver
func NewGraphicsSceneFromDriver(drv Driver) *QGraphicsScene {
	_p := &QGraphicsScene{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsScene) OnSceneRectChanged(fn func(*QRectF)) uintptr {
	var __rv uintptr
	q.Drv(274000, 274102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScene) OnChanged(fn func([]*QRectF)) uintptr {
	var __rv uintptr
	q.Drv(274000, 274103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsScene) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(274000, 274104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsScene::QGraphicsScene()
func NewGraphicsScene() *QGraphicsScene {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 274000, 274105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScene{}
	_p.SetDriver(__rv, 274000, false)
	return _p
}

//QGraphicsScene::QGraphicsScene(QObject*)
func NewGraphicsSceneWithParent(parent QObjectInterface) *QGraphicsScene {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 274000, 274106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScene{}
	_p.SetDriver(__rv, 274000, false)
	return _p
}

//QGraphicsScene::QGraphicsScene(QRectF const&,QObject*)
func NewGraphicsSceneWithScenerectParent(sceneRect *QRectF, parent QObjectInterface) *QGraphicsScene {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 274000, 274107, Native(sceneRect), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScene{}
	_p.SetDriver(__rv, 274000, false)
	return _p
}

//QGraphicsScene::QGraphicsScene(double,double,double,double,QObject*)
func NewGraphicsSceneWithXYWidthHeightParent(x float64, y float64, width float64, height float64, parent QObjectInterface) *QGraphicsScene {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 274000, 274108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&width), unsafe.Pointer(&height), Native(parent), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsScene{}
	_p.SetDriver(__rv, 274000, false)
	return _p
}

//QGraphicsScene::activePanel()
func (q *QGraphicsScene) ActivePanel() *QGraphicsItem {
	var __rv uintptr
	q.Drv(274000, 274109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsScene::activeWindow()
func (q *QGraphicsScene) ActiveWindow() *QGraphicsWidget {
	var __rv uintptr
	q.Drv(274000, 274110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsWidget{}
	_rp.SetDriver(__rv, 288000, false)
	return _rp
}

//QGraphicsScene::addEllipse(QRectF const&)
func (q *QGraphicsScene) AddEllipse(rect *QRectF) *QGraphicsEllipseItem {
	var __rv uintptr
	q.Drv(274000, 274111, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsEllipseItem{}
	_rp.SetDriver(__rv, 256000, true)
	return _rp
}

//QGraphicsScene::addEllipse(QRectF const&,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddEllipseFWithRectPenBrush(rect *QRectF, pen *QPen, brush *QBrush) *QGraphicsEllipseItem {
	var __rv uintptr
	q.Drv(274000, 274112, Native(rect), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsEllipseItem{}
	_rp.SetDriver(__rv, 256000, true)
	return _rp
}

//QGraphicsScene::addEllipse(double,double,double,double,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddEllipseFWithXYWidthHeightPenBrush(x float64, y float64, w float64, h float64, pen *QPen, brush *QBrush) *QGraphicsEllipseItem {
	var __rv uintptr
	q.Drv(274000, 274113, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsEllipseItem{}
	_rp.SetDriver(__rv, 256000, true)
	return _rp
}

//QGraphicsScene::addItem(QGraphicsItem*)
func (q *QGraphicsScene) AddItem(item *QGraphicsItem) {
	q.Drv(274000, 274114, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::addLine(QLineF const&)
func (q *QGraphicsScene) AddLine(line *QLineF) *QGraphicsLineItem {
	var __rv uintptr
	q.Drv(274000, 274115, Native(line), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLineItem{}
	_rp.SetDriver(__rv, 263000, true)
	return _rp
}

//QGraphicsScene::addLine(QLineF const&,QPen const&)
func (q *QGraphicsScene) AddLineFWithLinePen(line *QLineF, pen *QPen) *QGraphicsLineItem {
	var __rv uintptr
	q.Drv(274000, 274116, Native(line), Native(pen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLineItem{}
	_rp.SetDriver(__rv, 263000, true)
	return _rp
}

//QGraphicsScene::addLine(double,double,double,double,QPen const&)
func (q *QGraphicsScene) AddLineFWithX1Y1X2Y2Pen(x1 float64, y1 float64, x2 float64, y2 float64, pen *QPen) *QGraphicsLineItem {
	var __rv uintptr
	q.Drv(274000, 274117, unsafe.Pointer(&x1), unsafe.Pointer(&y1), unsafe.Pointer(&x2), unsafe.Pointer(&y2), Native(pen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLineItem{}
	_rp.SetDriver(__rv, 263000, true)
	return _rp
}

//QGraphicsScene::addPath(QPainterPath const&)
func (q *QGraphicsScene) AddPath(path *QPainterPath) *QGraphicsPathItem {
	var __rv uintptr
	q.Drv(274000, 274118, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsPathItem{}
	_rp.SetDriver(__rv, 267000, true)
	return _rp
}

//QGraphicsScene::addPath(QPainterPath const&,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddPathWithPathPenBrush(path *QPainterPath, pen *QPen, brush *QBrush) *QGraphicsPathItem {
	var __rv uintptr
	q.Drv(274000, 274119, Native(path), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsPathItem{}
	_rp.SetDriver(__rv, 267000, true)
	return _rp
}

//QGraphicsScene::addPixmap(QPixmap const&)
func (q *QGraphicsScene) AddPixmap(pixmap *QPixmap) *QGraphicsPixmapItem {
	var __rv uintptr
	q.Drv(274000, 274120, Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsPixmapItem{}
	_rp.SetDriver(__rv, 268000, true)
	return _rp
}

//QGraphicsScene::addPolygon(QPolygonF const&)
func (q *QGraphicsScene) AddPolygon(polygon *QPolygonF) *QGraphicsPolygonItem {
	var __rv uintptr
	q.Drv(274000, 274121, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsPolygonItem{}
	_rp.SetDriver(__rv, 269000, true)
	return _rp
}

//QGraphicsScene::addPolygon(QPolygonF const&,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddPolygonFWithPolygonPenBrush(polygon *QPolygonF, pen *QPen, brush *QBrush) *QGraphicsPolygonItem {
	var __rv uintptr
	q.Drv(274000, 274122, Native(polygon), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsPolygonItem{}
	_rp.SetDriver(__rv, 269000, true)
	return _rp
}

//QGraphicsScene::addRect(QRectF const&)
func (q *QGraphicsScene) AddRect(rect *QRectF) *QGraphicsRectItem {
	var __rv uintptr
	q.Drv(274000, 274123, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsRectItem{}
	_rp.SetDriver(__rv, 271000, true)
	return _rp
}

//QGraphicsScene::addRect(QRectF const&,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddRectFWithRectPenBrush(rect *QRectF, pen *QPen, brush *QBrush) *QGraphicsRectItem {
	var __rv uintptr
	q.Drv(274000, 274124, Native(rect), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsRectItem{}
	_rp.SetDriver(__rv, 271000, true)
	return _rp
}

//QGraphicsScene::addRect(double,double,double,double,QPen const&,QBrush const&)
func (q *QGraphicsScene) AddRectFWithXYWidthHeightPenBrush(x float64, y float64, w float64, h float64, pen *QPen, brush *QBrush) *QGraphicsRectItem {
	var __rv uintptr
	q.Drv(274000, 274125, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), Native(pen), Native(brush), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsRectItem{}
	_rp.SetDriver(__rv, 271000, true)
	return _rp
}

//QGraphicsScene::addSimpleText(QString const&)
func (q *QGraphicsScene) AddSimpleText(text string) *QGraphicsSimpleTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(274000, 274126, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsSimpleTextItem{}
	_rp.SetDriver(__rv, 284000, true)
	return _rp
}

//QGraphicsScene::addSimpleText(QString const&,QFont const&)
func (q *QGraphicsScene) AddSimpleTextWithTextFont(text string, font *QFont) *QGraphicsSimpleTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(274000, 274127, unsafe.Pointer(_text), Native(font), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsSimpleTextItem{}
	_rp.SetDriver(__rv, 284000, true)
	return _rp
}

//QGraphicsScene::addText(QString const&)
func (q *QGraphicsScene) AddText(text string) *QGraphicsTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(274000, 274128, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsTextItem{}
	_rp.SetDriver(__rv, 285000, false)
	return _rp
}

//QGraphicsScene::addText(QString const&,QFont const&)
func (q *QGraphicsScene) AddTextWithTextFont(text string, font *QFont) *QGraphicsTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(274000, 274129, unsafe.Pointer(_text), Native(font), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsTextItem{}
	_rp.SetDriver(__rv, 285000, false)
	return _rp
}

//QGraphicsScene::addWidget(QWidget*)
func (q *QGraphicsScene) AddWidget(widget QWidgetInterface) *QGraphicsProxyWidget {
	var __rv uintptr
	q.Drv(274000, 274130, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsProxyWidget{}
	_rp.SetDriver(__rv, 270000, false)
	return _rp
}

//QGraphicsScene::addWidget(QWidget*,QFlags<Qt::WindowType>)
func (q *QGraphicsScene) AddWidgetWithWidgetFlags(widget QWidgetInterface, wFlags Qt_WindowType) *QGraphicsProxyWidget {
	var __rv uintptr
	q.Drv(274000, 274131, Native(widget), unsafe.Pointer(&wFlags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsProxyWidget{}
	_rp.SetDriver(__rv, 270000, false)
	return _rp
}

//QGraphicsScene::advance()
func (q *QGraphicsScene) Advance() {
	q.Drv(274000, 274132, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::backgroundBrush()
func (q *QGraphicsScene) BackgroundBrush() *QBrush {
	var __rv uintptr
	q.Drv(274000, 274133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QGraphicsScene::bspTreeDepth()
func (q *QGraphicsScene) BspTreeDepth() int32 {
	var __rv int32
	q.Drv(274000, 274134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::clear()
func (q *QGraphicsScene) Clear() {
	q.Drv(274000, 274135, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::clearFocus()
func (q *QGraphicsScene) ClearFocus() {
	q.Drv(274000, 274136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::clearSelection()
func (q *QGraphicsScene) ClearSelection() {
	q.Drv(274000, 274137, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::collidingItems(QGraphicsItem const*)
func (q *QGraphicsScene) CollidingItems(item *QGraphicsItem) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274138, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::collidingItems(QGraphicsItem const*,Qt::ItemSelectionMode)
func (q *QGraphicsScene) CollidingItemsWithItemMode(item *QGraphicsItem, mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274139, Native(item), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::contextMenuEvent(QGraphicsSceneContextMenuEvent*)
func (q *QGraphicsScene) ContextMenuEvent(event *QGraphicsSceneContextMenuEvent) {
	q.Drv(274000, 274140, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::createItemGroup(QList<QGraphicsItem*> const&)
func (q *QGraphicsScene) CreateItemGroup(items []*QGraphicsItem) *QGraphicsItemGroup {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	var __rv uintptr
	q.Drv(274000, 274141, unsafe.Pointer(_items), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItemGroup{}
	_rp.SetDriver(__rv, 260000, true)
	return _rp
}

//QGraphicsScene::destroyItemGroup(QGraphicsItemGroup*)
func (q *QGraphicsScene) DestroyItemGroup(group *QGraphicsItemGroup) {
	q.Drv(274000, 274142, Native(group), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::dragEnterEvent(QGraphicsSceneDragDropEvent*)
func (q *QGraphicsScene) DragEnterEvent(event *QGraphicsSceneDragDropEvent) {
	q.Drv(274000, 274143, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::dragLeaveEvent(QGraphicsSceneDragDropEvent*)
func (q *QGraphicsScene) DragLeaveEvent(event *QGraphicsSceneDragDropEvent) {
	q.Drv(274000, 274144, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::dragMoveEvent(QGraphicsSceneDragDropEvent*)
func (q *QGraphicsScene) DragMoveEvent(event *QGraphicsSceneDragDropEvent) {
	q.Drv(274000, 274145, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::drawBackground(QPainter*,QRectF const&)
func (q *QGraphicsScene) DrawBackground(painter *QPainter, rect *QRectF) {
	q.Drv(274000, 274146, Native(painter), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::drawForeground(QPainter*,QRectF const&)
func (q *QGraphicsScene) DrawForeground(painter *QPainter, rect *QRectF) {
	q.Drv(274000, 274147, Native(painter), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::dropEvent(QGraphicsSceneDragDropEvent*)
func (q *QGraphicsScene) DropEvent(event *QGraphicsSceneDragDropEvent) {
	q.Drv(274000, 274148, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::focusInEvent(QFocusEvent*)
func (q *QGraphicsScene) FocusInEvent(event *QFocusEvent) {
	q.Drv(274000, 274149, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::focusItem()
func (q *QGraphicsScene) FocusItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(274000, 274150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsScene::focusNextPrevChild(bool)
func (q *QGraphicsScene) FocusNextPrevChild(next bool) bool {
	var __rv bool
	q.Drv(274000, 274151, unsafe.Pointer(&next), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::focusOutEvent(QFocusEvent*)
func (q *QGraphicsScene) FocusOutEvent(event *QFocusEvent) {
	q.Drv(274000, 274152, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::font()
func (q *QGraphicsScene) Font() *QFont {
	var __rv uintptr
	q.Drv(274000, 274153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QGraphicsScene::foregroundBrush()
func (q *QGraphicsScene) ForegroundBrush() *QBrush {
	var __rv uintptr
	q.Drv(274000, 274154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QGraphicsScene::hasFocus()
func (q *QGraphicsScene) HasFocus() bool {
	var __rv bool
	q.Drv(274000, 274155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::height()
func (q *QGraphicsScene) Height() float64 {
	var __rv float64
	q.Drv(274000, 274156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::helpEvent(QGraphicsSceneHelpEvent*)
func (q *QGraphicsScene) HelpEvent(event *QGraphicsSceneHelpEvent) {
	q.Drv(274000, 274157, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::inputMethodEvent(QInputMethodEvent*)
func (q *QGraphicsScene) InputMethodEvent(event *QInputMethodEvent) {
	q.Drv(274000, 274158, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::inputMethodQuery(Qt::InputMethodQuery)
func (q *QGraphicsScene) InputMethodQuery(query Qt_InputMethodQuery) *QVariant {
	var __rv uintptr
	q.Drv(274000, 274159, unsafe.Pointer(&query), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QGraphicsScene::invalidate()
func (q *QGraphicsScene) Invalidate() {
	q.Drv(274000, 274160, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::invalidate(QRectF const&,QFlags<QGraphicsScene::SceneLayer>)
func (q *QGraphicsScene) InvalidateFWithRectLayers(rect *QRectF, layers QGraphicsScene_SceneLayer) {
	q.Drv(274000, 274161, Native(rect), unsafe.Pointer(&layers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::invalidate(double,double,double,double,QFlags<QGraphicsScene::SceneLayer>)
func (q *QGraphicsScene) InvalidateFWithXYWidthHeightLayers(x float64, y float64, w float64, h float64, layers QGraphicsScene_SceneLayer) {
	q.Drv(274000, 274162, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&layers), nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::isActive()
func (q *QGraphicsScene) IsActive() bool {
	var __rv bool
	q.Drv(274000, 274163, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::isSortCacheEnabled()
func (q *QGraphicsScene) IsSortCacheEnabled() bool {
	var __rv bool
	q.Drv(274000, 274164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::itemAt(QPointF const&,QTransform const&)
func (q *QGraphicsScene) ItemAtFWithPosTransform(pos *QPointF, deviceTransform *QTransform) *QGraphicsItem {
	var __rv uintptr
	q.Drv(274000, 274165, Native(pos), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsScene::itemAt(double,double,QTransform const&)
func (q *QGraphicsScene) ItemAtFWithXYTransform(x float64, y float64, deviceTransform *QTransform) *QGraphicsItem {
	var __rv uintptr
	q.Drv(274000, 274166, unsafe.Pointer(&x), unsafe.Pointer(&y), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsScene::itemIndexMethod()
func (q *QGraphicsScene) ItemIndexMethod() QGraphicsScene_ItemIndexMethod {
	var __rv QGraphicsScene_ItemIndexMethod
	q.Drv(274000, 274167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items()
func (q *QGraphicsScene) Items() []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(Qt::SortOrder)
func (q *QGraphicsScene) ItemsWithOrder(order Qt_SortOrder) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274169, unsafe.Pointer(&order), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(QPainterPath const&,Qt::ItemSelectionMode,Qt::SortOrder,QTransform const&)
func (q *QGraphicsScene) ItemsWithPathModeOrderTransform(path *QPainterPath, mode Qt_ItemSelectionMode, order Qt_SortOrder, deviceTransform *QTransform) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274170, Native(path), unsafe.Pointer(&mode), unsafe.Pointer(&order), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(QPointF const&,Qt::ItemSelectionMode,Qt::SortOrder,QTransform const&)
func (q *QGraphicsScene) ItemsFWithPosModeOrderTransform(pos *QPointF, mode Qt_ItemSelectionMode, order Qt_SortOrder, deviceTransform *QTransform) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274171, Native(pos), unsafe.Pointer(&mode), unsafe.Pointer(&order), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(QPolygonF const&,Qt::ItemSelectionMode,Qt::SortOrder,QTransform const&)
func (q *QGraphicsScene) ItemsFWithPolygonModeOrderTransform(polygon *QPolygonF, mode Qt_ItemSelectionMode, order Qt_SortOrder, deviceTransform *QTransform) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274172, Native(polygon), unsafe.Pointer(&mode), unsafe.Pointer(&order), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(QRectF const&,Qt::ItemSelectionMode,Qt::SortOrder,QTransform const&)
func (q *QGraphicsScene) ItemsFWithRectModeOrderTransform(rect *QRectF, mode Qt_ItemSelectionMode, order Qt_SortOrder, deviceTransform *QTransform) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274173, Native(rect), unsafe.Pointer(&mode), unsafe.Pointer(&order), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::items(double,double,double,double,Qt::ItemSelectionMode,Qt::SortOrder,QTransform const&)
func (q *QGraphicsScene) ItemsFWithXYWidthHeightModeOrderTransform(x float64, y float64, w float64, h float64, mode Qt_ItemSelectionMode, order Qt_SortOrder, deviceTransform *QTransform) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274174, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&mode), unsafe.Pointer(&order), Native(deviceTransform), unsafe.Pointer(&__rv), nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::itemsBoundingRect()
func (q *QGraphicsScene) ItemsBoundingRect() *QRectF {
	var __rv uintptr
	q.Drv(274000, 274175, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsScene::keyPressEvent(QKeyEvent*)
func (q *QGraphicsScene) KeyPressEvent(event *QKeyEvent) {
	q.Drv(274000, 274176, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::keyReleaseEvent(QKeyEvent*)
func (q *QGraphicsScene) KeyReleaseEvent(event *QKeyEvent) {
	q.Drv(274000, 274177, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*)
func (q *QGraphicsScene) MouseDoubleClickEvent(event *QGraphicsSceneMouseEvent) {
	q.Drv(274000, 274178, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::mouseGrabberItem()
func (q *QGraphicsScene) MouseGrabberItem() *QGraphicsItem {
	var __rv uintptr
	q.Drv(274000, 274179, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsScene::mouseMoveEvent(QGraphicsSceneMouseEvent*)
func (q *QGraphicsScene) MouseMoveEvent(event *QGraphicsSceneMouseEvent) {
	q.Drv(274000, 274180, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::mousePressEvent(QGraphicsSceneMouseEvent*)
func (q *QGraphicsScene) MousePressEvent(event *QGraphicsSceneMouseEvent) {
	q.Drv(274000, 274181, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::mouseReleaseEvent(QGraphicsSceneMouseEvent*)
func (q *QGraphicsScene) MouseReleaseEvent(event *QGraphicsSceneMouseEvent) {
	q.Drv(274000, 274182, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::palette()
func (q *QGraphicsScene) Palette() *QPalette {
	var __rv uintptr
	q.Drv(274000, 274183, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QGraphicsScene::removeItem(QGraphicsItem*)
func (q *QGraphicsScene) RemoveItem(item *QGraphicsItem) {
	q.Drv(274000, 274184, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::render(QPainter*)
func (q *QGraphicsScene) Render(painter *QPainter) {
	q.Drv(274000, 274185, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::render(QPainter*,QRectF const&,QRectF const&,Qt::AspectRatioMode)
func (q *QGraphicsScene) RenderFWithPainterTargetSourceAspectratiomode(painter *QPainter, target *QRectF, source *QRectF, aspectRatioMode Qt_AspectRatioMode) {
	q.Drv(274000, 274186, Native(painter), Native(target), Native(source), unsafe.Pointer(&aspectRatioMode), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::sceneRect()
func (q *QGraphicsScene) SceneRect() *QRectF {
	var __rv uintptr
	q.Drv(274000, 274187, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsScene::selectedItems()
func (q *QGraphicsScene) SelectedItems() []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(274000, 274188, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::selectionArea()
func (q *QGraphicsScene) SelectionArea() *QPainterPath {
	var __rv uintptr
	q.Drv(274000, 274189, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsScene::sendEvent(QGraphicsItem*,QEvent*)
func (q *QGraphicsScene) SendEvent(item *QGraphicsItem, event *QEvent) bool {
	var __rv bool
	q.Drv(274000, 274190, Native(item), Native(event), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::setActivePanel(QGraphicsItem*)
func (q *QGraphicsScene) SetActivePanel(item *QGraphicsItem) {
	q.Drv(274000, 274191, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setActiveWindow(QGraphicsWidget*)
func (q *QGraphicsScene) SetActiveWindow(widget *QGraphicsWidget) {
	q.Drv(274000, 274192, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setBackgroundBrush(QBrush const&)
func (q *QGraphicsScene) SetBackgroundBrush(brush *QBrush) {
	q.Drv(274000, 274193, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setBspTreeDepth(int)
func (q *QGraphicsScene) SetBspTreeDepth(depth int32) {
	q.Drv(274000, 274194, unsafe.Pointer(&depth), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setFocus()
func (q *QGraphicsScene) SetFocus() {
	q.Drv(274000, 274195, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setFocus(Qt::FocusReason)
func (q *QGraphicsScene) SetFocusWithFocusreason(focusReason Qt_FocusReason) {
	q.Drv(274000, 274196, unsafe.Pointer(&focusReason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setFocusItem(QGraphicsItem*)
func (q *QGraphicsScene) SetFocusItem(item *QGraphicsItem) {
	q.Drv(274000, 274197, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setFocusItem(QGraphicsItem*,Qt::FocusReason)
func (q *QGraphicsScene) SetFocusItemWithItemFocusreason(item *QGraphicsItem, focusReason Qt_FocusReason) {
	q.Drv(274000, 274198, Native(item), unsafe.Pointer(&focusReason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setFont(QFont const&)
func (q *QGraphicsScene) SetFont(font *QFont) {
	q.Drv(274000, 274199, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setForegroundBrush(QBrush const&)
func (q *QGraphicsScene) SetForegroundBrush(brush *QBrush) {
	q.Drv(274000, 274200, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setItemIndexMethod(QGraphicsScene::ItemIndexMethod)
func (q *QGraphicsScene) SetItemIndexMethod(method QGraphicsScene_ItemIndexMethod) {
	q.Drv(274000, 274201, unsafe.Pointer(&method), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setPalette(QPalette const&)
func (q *QGraphicsScene) SetPalette(palette *QPalette) {
	q.Drv(274000, 274202, Native(palette), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSceneRect(QRectF const&)
func (q *QGraphicsScene) SetSceneRect(rect *QRectF) {
	q.Drv(274000, 274203, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSceneRect(double,double,double,double)
func (q *QGraphicsScene) SetSceneRectFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(274000, 274204, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSelectionArea(QPainterPath const&)
func (q *QGraphicsScene) SetSelectionArea(path *QPainterPath) {
	q.Drv(274000, 274205, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSelectionArea(QPainterPath const&,QTransform const&)
func (q *QGraphicsScene) SetSelectionAreaWithPathTransform(path *QPainterPath, deviceTransform *QTransform) {
	q.Drv(274000, 274206, Native(path), Native(deviceTransform), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSelectionArea(QPainterPath const&,Qt::ItemSelectionMode)
func (q *QGraphicsScene) SetSelectionAreaWithPathMode(path *QPainterPath, mode Qt_ItemSelectionMode) {
	q.Drv(274000, 274207, Native(path), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSelectionArea(QPainterPath const&,Qt::ItemSelectionMode,QTransform const&)
func (q *QGraphicsScene) SetSelectionAreaWithPathModeTransform(path *QPainterPath, mode Qt_ItemSelectionMode, deviceTransform *QTransform) {
	q.Drv(274000, 274208, Native(path), unsafe.Pointer(&mode), Native(deviceTransform), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setSortCacheEnabled(bool)
func (q *QGraphicsScene) SetSortCacheEnabled(enabled bool) {
	q.Drv(274000, 274209, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setStickyFocus(bool)
func (q *QGraphicsScene) SetStickyFocus(enabled bool) {
	q.Drv(274000, 274210, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::setStyle(QStyle*)
func (q *QGraphicsScene) SetStyle(style *QStyle) {
	q.Drv(274000, 274211, Native(style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::stickyFocus()
func (q *QGraphicsScene) StickyFocus() bool {
	var __rv bool
	q.Drv(274000, 274212, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::style()
func (q *QGraphicsScene) Style() *QStyle {
	var __rv uintptr
	q.Drv(274000, 274213, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QGraphicsScene::update()
func (q *QGraphicsScene) Update() {
	q.Drv(274000, 274214, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::update(QRectF const&)
func (q *QGraphicsScene) UpdateFWithRect(rect *QRectF) {
	q.Drv(274000, 274215, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::update(double,double,double,double)
func (q *QGraphicsScene) UpdateFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(274000, 274216, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::views()
func (q *QGraphicsScene) Views() []*QGraphicsView {
	var __rv []*QGraphicsView
	q.Drv(274000, 274217, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsScene::wheelEvent(QGraphicsSceneWheelEvent*)
func (q *QGraphicsScene) WheelEvent(event *QGraphicsSceneWheelEvent) {
	q.Drv(274000, 274218, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsScene::width()
func (q *QGraphicsScene) Width() float64 {
	var __rv float64
	q.Drv(274000, 274219, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsSceneContextMenuEvent_Reason - QGraphicsSceneContextMenuEvent::Reason
type QGraphicsSceneContextMenuEvent_Reason uint32

const (
	QGraphicsSceneContextMenuEvent_Mouse    QGraphicsSceneContextMenuEvent_Reason = 0
	QGraphicsSceneContextMenuEvent_Keyboard QGraphicsSceneContextMenuEvent_Reason = 1
	QGraphicsSceneContextMenuEvent_Other    QGraphicsSceneContextMenuEvent_Reason = 2
)

//struct QGraphicsSceneContextMenuEvent : QGraphicsSceneContextMenuEvent
type QGraphicsSceneContextMenuEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent()
func NewGraphicsSceneContextMenuEvent() *QGraphicsSceneContextMenuEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 275000, 275102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneContextMenuEvent{}
	_p.SetDriver(__rv, 275000, true)
	return _p
}

//QGraphicsSceneContextMenuEvent::QGraphicsSceneContextMenuEvent(QEvent::Type)
func NewGraphicsSceneContextMenuEventWithType(_type QEvent_Type) *QGraphicsSceneContextMenuEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 275000, 275103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneContextMenuEvent{}
	_p.SetDriver(__rv, 275000, true)
	return _p
}

//QGraphicsSceneContextMenuEvent::modifiers()
func (q *QGraphicsSceneContextMenuEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(275000, 275104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneContextMenuEvent::pos()
func (q *QGraphicsSceneContextMenuEvent) Pos() *QPointF {
	var __rv uintptr
	q.Drv(275000, 275105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneContextMenuEvent::reason()
func (q *QGraphicsSceneContextMenuEvent) Reason() QGraphicsSceneContextMenuEvent_Reason {
	var __rv QGraphicsSceneContextMenuEvent_Reason
	q.Drv(275000, 275106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneContextMenuEvent::scenePos()
func (q *QGraphicsSceneContextMenuEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(275000, 275107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneContextMenuEvent::screenPos()
func (q *QGraphicsSceneContextMenuEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(275000, 275108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneContextMenuEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QGraphicsSceneContextMenuEvent) SetModifiers(modifiers Qt_KeyboardModifier) {
	q.Drv(275000, 275109, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneContextMenuEvent::setPos(QPointF const&)
func (q *QGraphicsSceneContextMenuEvent) SetPos(pos *QPointF) {
	q.Drv(275000, 275110, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneContextMenuEvent::setReason(QGraphicsSceneContextMenuEvent::Reason)
func (q *QGraphicsSceneContextMenuEvent) SetReason(reason QGraphicsSceneContextMenuEvent_Reason) {
	q.Drv(275000, 275111, unsafe.Pointer(&reason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneContextMenuEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneContextMenuEvent) SetScenePos(pos *QPointF) {
	q.Drv(275000, 275112, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneContextMenuEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneContextMenuEvent) SetScreenPos(pos *QPoint) {
	q.Drv(275000, 275113, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneDragDropEvent : QGraphicsSceneDragDropEvent
type QGraphicsSceneDragDropEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneDragDropEvent::QGraphicsSceneDragDropEvent()
func NewGraphicsSceneDragDropEvent() *QGraphicsSceneDragDropEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 276000, 276102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneDragDropEvent{}
	_p.SetDriver(__rv, 276000, true)
	return _p
}

//QGraphicsSceneDragDropEvent::QGraphicsSceneDragDropEvent(QEvent::Type)
func NewGraphicsSceneDragDropEventWithType(_type QEvent_Type) *QGraphicsSceneDragDropEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 276000, 276103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneDragDropEvent{}
	_p.SetDriver(__rv, 276000, true)
	return _p
}

//QGraphicsSceneDragDropEvent::acceptProposedAction()
func (q *QGraphicsSceneDragDropEvent) AcceptProposedAction() {
	q.Drv(276000, 276104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::buttons()
func (q *QGraphicsSceneDragDropEvent) Buttons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(276000, 276105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneDragDropEvent::dropAction()
func (q *QGraphicsSceneDragDropEvent) DropAction() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(276000, 276106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneDragDropEvent::mimeData()
func (q *QGraphicsSceneDragDropEvent) MimeData() *QMimeData {
	var __rv uintptr
	q.Drv(276000, 276107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QGraphicsSceneDragDropEvent::modifiers()
func (q *QGraphicsSceneDragDropEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(276000, 276108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneDragDropEvent::pos()
func (q *QGraphicsSceneDragDropEvent) Pos() *QPointF {
	var __rv uintptr
	q.Drv(276000, 276109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneDragDropEvent::possibleActions()
func (q *QGraphicsSceneDragDropEvent) PossibleActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(276000, 276110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneDragDropEvent::proposedAction()
func (q *QGraphicsSceneDragDropEvent) ProposedAction() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(276000, 276111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneDragDropEvent::scenePos()
func (q *QGraphicsSceneDragDropEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(276000, 276112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneDragDropEvent::screenPos()
func (q *QGraphicsSceneDragDropEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(276000, 276113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneDragDropEvent::setButtons(QFlags<Qt::MouseButton>)
func (q *QGraphicsSceneDragDropEvent) SetButtons(buttons Qt_MouseButton) {
	q.Drv(276000, 276114, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setDropAction(Qt::DropAction)
func (q *QGraphicsSceneDragDropEvent) SetDropAction(action Qt_DropAction) {
	q.Drv(276000, 276115, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setMimeData(QMimeData const*)
func (q *QGraphicsSceneDragDropEvent) SetMimeData(data *QMimeData) {
	q.Drv(276000, 276116, Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QGraphicsSceneDragDropEvent) SetModifiers(modifiers Qt_KeyboardModifier) {
	q.Drv(276000, 276117, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setPos(QPointF const&)
func (q *QGraphicsSceneDragDropEvent) SetPos(pos *QPointF) {
	q.Drv(276000, 276118, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setPossibleActions(QFlags<Qt::DropAction>)
func (q *QGraphicsSceneDragDropEvent) SetPossibleActions(actions Qt_DropAction) {
	q.Drv(276000, 276119, unsafe.Pointer(&actions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setProposedAction(Qt::DropAction)
func (q *QGraphicsSceneDragDropEvent) SetProposedAction(action Qt_DropAction) {
	q.Drv(276000, 276120, unsafe.Pointer(&action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneDragDropEvent) SetScenePos(pos *QPointF) {
	q.Drv(276000, 276121, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneDragDropEvent) SetScreenPos(pos *QPoint) {
	q.Drv(276000, 276122, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::setSource(QWidget*)
func (q *QGraphicsSceneDragDropEvent) SetSource(source QWidgetInterface) {
	q.Drv(276000, 276123, Native(source), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneDragDropEvent::source()
func (q *QGraphicsSceneDragDropEvent) Source() *QWidget {
	var __rv uintptr
	q.Drv(276000, 276124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QGraphicsSceneEvent : QGraphicsSceneEvent
type QGraphicsSceneEvent struct {
	QEvent
}

//QGraphicsSceneEvent::QGraphicsSceneEvent(QEvent::Type)
func NewGraphicsSceneEvent(_type QEvent_Type) *QGraphicsSceneEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 277000, 277102, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneEvent{}
	_p.SetDriver(__rv, 277000, true)
	return _p
}

//QGraphicsSceneEvent::setWidget(QWidget*)
func (q *QGraphicsSceneEvent) SetWidget(widget QWidgetInterface) {
	q.Drv(277000, 277103, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneEvent::widget()
func (q *QGraphicsSceneEvent) Widget() *QWidget {
	var __rv uintptr
	q.Drv(277000, 277104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QGraphicsSceneHelpEvent : QGraphicsSceneHelpEvent
type QGraphicsSceneHelpEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneHelpEvent::QGraphicsSceneHelpEvent()
func NewGraphicsSceneHelpEvent() *QGraphicsSceneHelpEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 278000, 278102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneHelpEvent{}
	_p.SetDriver(__rv, 278000, true)
	return _p
}

//QGraphicsSceneHelpEvent::QGraphicsSceneHelpEvent(QEvent::Type)
func NewGraphicsSceneHelpEventWithType(_type QEvent_Type) *QGraphicsSceneHelpEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 278000, 278103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneHelpEvent{}
	_p.SetDriver(__rv, 278000, true)
	return _p
}

//QGraphicsSceneHelpEvent::scenePos()
func (q *QGraphicsSceneHelpEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(278000, 278104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneHelpEvent::screenPos()
func (q *QGraphicsSceneHelpEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(278000, 278105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneHelpEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneHelpEvent) SetScenePos(pos *QPointF) {
	q.Drv(278000, 278106, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHelpEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneHelpEvent) SetScreenPos(pos *QPoint) {
	q.Drv(278000, 278107, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneHoverEvent : QGraphicsSceneHoverEvent
type QGraphicsSceneHoverEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneHoverEvent::QGraphicsSceneHoverEvent()
func NewGraphicsSceneHoverEvent() *QGraphicsSceneHoverEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 279000, 279102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneHoverEvent{}
	_p.SetDriver(__rv, 279000, true)
	return _p
}

//QGraphicsSceneHoverEvent::QGraphicsSceneHoverEvent(QEvent::Type)
func NewGraphicsSceneHoverEventWithType(_type QEvent_Type) *QGraphicsSceneHoverEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 279000, 279103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneHoverEvent{}
	_p.SetDriver(__rv, 279000, true)
	return _p
}

//QGraphicsSceneHoverEvent::lastPos()
func (q *QGraphicsSceneHoverEvent) LastPos() *QPointF {
	var __rv uintptr
	q.Drv(279000, 279104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::lastScenePos()
func (q *QGraphicsSceneHoverEvent) LastScenePos() *QPointF {
	var __rv uintptr
	q.Drv(279000, 279105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::lastScreenPos()
func (q *QGraphicsSceneHoverEvent) LastScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(279000, 279106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::modifiers()
func (q *QGraphicsSceneHoverEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(279000, 279107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneHoverEvent::pos()
func (q *QGraphicsSceneHoverEvent) Pos() *QPointF {
	var __rv uintptr
	q.Drv(279000, 279108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::scenePos()
func (q *QGraphicsSceneHoverEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(279000, 279109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::screenPos()
func (q *QGraphicsSceneHoverEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(279000, 279110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneHoverEvent::setLastPos(QPointF const&)
func (q *QGraphicsSceneHoverEvent) SetLastPos(pos *QPointF) {
	q.Drv(279000, 279111, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setLastScenePos(QPointF const&)
func (q *QGraphicsSceneHoverEvent) SetLastScenePos(pos *QPointF) {
	q.Drv(279000, 279112, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setLastScreenPos(QPoint const&)
func (q *QGraphicsSceneHoverEvent) SetLastScreenPos(pos *QPoint) {
	q.Drv(279000, 279113, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QGraphicsSceneHoverEvent) SetModifiers(modifiers Qt_KeyboardModifier) {
	q.Drv(279000, 279114, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setPos(QPointF const&)
func (q *QGraphicsSceneHoverEvent) SetPos(pos *QPointF) {
	q.Drv(279000, 279115, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneHoverEvent) SetScenePos(pos *QPointF) {
	q.Drv(279000, 279116, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneHoverEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneHoverEvent) SetScreenPos(pos *QPoint) {
	q.Drv(279000, 279117, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneMouseEvent : QGraphicsSceneMouseEvent
type QGraphicsSceneMouseEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneMouseEvent::QGraphicsSceneMouseEvent()
func NewGraphicsSceneMouseEvent() *QGraphicsSceneMouseEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 280000, 280102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneMouseEvent{}
	_p.SetDriver(__rv, 280000, true)
	return _p
}

//QGraphicsSceneMouseEvent::QGraphicsSceneMouseEvent(QEvent::Type)
func NewGraphicsSceneMouseEventWithType(_type QEvent_Type) *QGraphicsSceneMouseEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 280000, 280103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneMouseEvent{}
	_p.SetDriver(__rv, 280000, true)
	return _p
}

//QGraphicsSceneMouseEvent::button()
func (q *QGraphicsSceneMouseEvent) Button() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(280000, 280104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneMouseEvent::buttonDownPos(Qt::MouseButton)
func (q *QGraphicsSceneMouseEvent) ButtonDownPos(button Qt_MouseButton) *QPointF {
	var __rv uintptr
	q.Drv(280000, 280105, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::buttonDownScenePos(Qt::MouseButton)
func (q *QGraphicsSceneMouseEvent) ButtonDownScenePos(button Qt_MouseButton) *QPointF {
	var __rv uintptr
	q.Drv(280000, 280106, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::buttonDownScreenPos(Qt::MouseButton)
func (q *QGraphicsSceneMouseEvent) ButtonDownScreenPos(button Qt_MouseButton) *QPoint {
	var __rv uintptr
	q.Drv(280000, 280107, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::buttons()
func (q *QGraphicsSceneMouseEvent) Buttons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(280000, 280108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneMouseEvent::lastPos()
func (q *QGraphicsSceneMouseEvent) LastPos() *QPointF {
	var __rv uintptr
	q.Drv(280000, 280109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::lastScenePos()
func (q *QGraphicsSceneMouseEvent) LastScenePos() *QPointF {
	var __rv uintptr
	q.Drv(280000, 280110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::lastScreenPos()
func (q *QGraphicsSceneMouseEvent) LastScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(280000, 280111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::modifiers()
func (q *QGraphicsSceneMouseEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(280000, 280112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneMouseEvent::pos()
func (q *QGraphicsSceneMouseEvent) Pos() *QPointF {
	var __rv uintptr
	q.Drv(280000, 280113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::scenePos()
func (q *QGraphicsSceneMouseEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(280000, 280114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::screenPos()
func (q *QGraphicsSceneMouseEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(280000, 280115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneMouseEvent::setButton(Qt::MouseButton)
func (q *QGraphicsSceneMouseEvent) SetButton(button Qt_MouseButton) {
	q.Drv(280000, 280116, unsafe.Pointer(&button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setButtonDownPos(Qt::MouseButton,QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetButtonDownPos(button Qt_MouseButton, pos *QPointF) {
	q.Drv(280000, 280117, unsafe.Pointer(&button), Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setButtonDownScenePos(Qt::MouseButton,QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetButtonDownScenePos(button Qt_MouseButton, pos *QPointF) {
	q.Drv(280000, 280118, unsafe.Pointer(&button), Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setButtonDownScreenPos(Qt::MouseButton,QPoint const&)
func (q *QGraphicsSceneMouseEvent) SetButtonDownScreenPos(button Qt_MouseButton, pos *QPoint) {
	q.Drv(280000, 280119, unsafe.Pointer(&button), Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setButtons(QFlags<Qt::MouseButton>)
func (q *QGraphicsSceneMouseEvent) SetButtons(buttons Qt_MouseButton) {
	q.Drv(280000, 280120, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setLastPos(QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetLastPos(pos *QPointF) {
	q.Drv(280000, 280121, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setLastScenePos(QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetLastScenePos(pos *QPointF) {
	q.Drv(280000, 280122, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setLastScreenPos(QPoint const&)
func (q *QGraphicsSceneMouseEvent) SetLastScreenPos(pos *QPoint) {
	q.Drv(280000, 280123, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QGraphicsSceneMouseEvent) SetModifiers(modifiers Qt_KeyboardModifier) {
	q.Drv(280000, 280124, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setPos(QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetPos(pos *QPointF) {
	q.Drv(280000, 280125, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneMouseEvent) SetScenePos(pos *QPointF) {
	q.Drv(280000, 280126, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMouseEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneMouseEvent) SetScreenPos(pos *QPoint) {
	q.Drv(280000, 280127, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneMoveEvent : QGraphicsSceneMoveEvent
type QGraphicsSceneMoveEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneMoveEvent::QGraphicsSceneMoveEvent()
func NewGraphicsSceneMoveEvent() *QGraphicsSceneMoveEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 281000, 281102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneMoveEvent{}
	_p.SetDriver(__rv, 281000, true)
	return _p
}

//QGraphicsSceneMoveEvent::newPos()
func (q *QGraphicsSceneMoveEvent) NewPos() *QPointF {
	var __rv uintptr
	q.Drv(281000, 281103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMoveEvent::oldPos()
func (q *QGraphicsSceneMoveEvent) OldPos() *QPointF {
	var __rv uintptr
	q.Drv(281000, 281104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneMoveEvent::setNewPos(QPointF const&)
func (q *QGraphicsSceneMoveEvent) SetNewPos(pos *QPointF) {
	q.Drv(281000, 281105, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneMoveEvent::setOldPos(QPointF const&)
func (q *QGraphicsSceneMoveEvent) SetOldPos(pos *QPointF) {
	q.Drv(281000, 281106, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneResizeEvent : QGraphicsSceneResizeEvent
type QGraphicsSceneResizeEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneResizeEvent::QGraphicsSceneResizeEvent()
func NewGraphicsSceneResizeEvent() *QGraphicsSceneResizeEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 282000, 282102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneResizeEvent{}
	_p.SetDriver(__rv, 282000, true)
	return _p
}

//QGraphicsSceneResizeEvent::newSize()
func (q *QGraphicsSceneResizeEvent) NewSize() *QSizeF {
	var __rv uintptr
	q.Drv(282000, 282103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsSceneResizeEvent::oldSize()
func (q *QGraphicsSceneResizeEvent) OldSize() *QSizeF {
	var __rv uintptr
	q.Drv(282000, 282104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsSceneResizeEvent::setNewSize(QSizeF const&)
func (q *QGraphicsSceneResizeEvent) SetNewSize(size *QSizeF) {
	q.Drv(282000, 282105, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneResizeEvent::setOldSize(QSizeF const&)
func (q *QGraphicsSceneResizeEvent) SetOldSize(size *QSizeF) {
	q.Drv(282000, 282106, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QGraphicsSceneWheelEvent : QGraphicsSceneWheelEvent
type QGraphicsSceneWheelEvent struct {
	QGraphicsSceneEvent
}

//QGraphicsSceneWheelEvent::QGraphicsSceneWheelEvent()
func NewGraphicsSceneWheelEvent() *QGraphicsSceneWheelEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 283000, 283102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneWheelEvent{}
	_p.SetDriver(__rv, 283000, true)
	return _p
}

//QGraphicsSceneWheelEvent::QGraphicsSceneWheelEvent(QEvent::Type)
func NewGraphicsSceneWheelEventWithType(_type QEvent_Type) *QGraphicsSceneWheelEvent {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 283000, 283103, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSceneWheelEvent{}
	_p.SetDriver(__rv, 283000, true)
	return _p
}

//QGraphicsSceneWheelEvent::buttons()
func (q *QGraphicsSceneWheelEvent) Buttons() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(283000, 283104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneWheelEvent::delta()
func (q *QGraphicsSceneWheelEvent) Delta() int32 {
	var __rv int32
	q.Drv(283000, 283105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneWheelEvent::modifiers()
func (q *QGraphicsSceneWheelEvent) Modifiers() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(283000, 283106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneWheelEvent::orientation()
func (q *QGraphicsSceneWheelEvent) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(283000, 283107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsSceneWheelEvent::pos()
func (q *QGraphicsSceneWheelEvent) Pos() *QPointF {
	var __rv uintptr
	q.Drv(283000, 283108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneWheelEvent::scenePos()
func (q *QGraphicsSceneWheelEvent) ScenePos() *QPointF {
	var __rv uintptr
	q.Drv(283000, 283109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsSceneWheelEvent::screenPos()
func (q *QGraphicsSceneWheelEvent) ScreenPos() *QPoint {
	var __rv uintptr
	q.Drv(283000, 283110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsSceneWheelEvent::setButtons(QFlags<Qt::MouseButton>)
func (q *QGraphicsSceneWheelEvent) SetButtons(buttons Qt_MouseButton) {
	q.Drv(283000, 283111, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setDelta(int)
func (q *QGraphicsSceneWheelEvent) SetDelta(delta int32) {
	q.Drv(283000, 283112, unsafe.Pointer(&delta), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setModifiers(QFlags<Qt::KeyboardModifier>)
func (q *QGraphicsSceneWheelEvent) SetModifiers(modifiers Qt_KeyboardModifier) {
	q.Drv(283000, 283113, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setOrientation(Qt::Orientation)
func (q *QGraphicsSceneWheelEvent) SetOrientation(orientation Qt_Orientation) {
	q.Drv(283000, 283114, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setPos(QPointF const&)
func (q *QGraphicsSceneWheelEvent) SetPos(pos *QPointF) {
	q.Drv(283000, 283115, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setScenePos(QPointF const&)
func (q *QGraphicsSceneWheelEvent) SetScenePos(pos *QPointF) {
	q.Drv(283000, 283116, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSceneWheelEvent::setScreenPos(QPoint const&)
func (q *QGraphicsSceneWheelEvent) SetScreenPos(pos *QPoint) {
	q.Drv(283000, 283117, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsSimpleTextItem_enum_1 - QGraphicsSimpleTextItem::enum_1
type QGraphicsSimpleTextItem_enum_1 uint32

const (
	QGraphicsSimpleTextItem_Type QGraphicsSimpleTextItem_enum_1 = 9
)

//struct QGraphicsSimpleTextItem : QGraphicsSimpleTextItem
type QGraphicsSimpleTextItem struct {
	QAbstractGraphicsShapeItem
}

//QGraphicsSimpleTextItem::QGraphicsSimpleTextItem()
func NewGraphicsSimpleTextItem() *QGraphicsSimpleTextItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 284000, 284102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSimpleTextItem{}
	_p.SetDriver(__rv, 284000, true)
	return _p
}

//QGraphicsSimpleTextItem::QGraphicsSimpleTextItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsSimpleTextItemWithParentScene(parent *QGraphicsItem) *QGraphicsSimpleTextItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 284000, 284103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSimpleTextItem{}
	_p.SetDriver(__rv, 284000, true)
	return _p
}

//QGraphicsSimpleTextItem::QGraphicsSimpleTextItem(QString const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsSimpleTextItemWithTextParentScene(text string, parent *QGraphicsItem) *QGraphicsSimpleTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 284000, 284104, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsSimpleTextItem{}
	_p.SetDriver(__rv, 284000, true)
	return _p
}

//QGraphicsSimpleTextItem::font()
func (q *QGraphicsSimpleTextItem) Font() *QFont {
	var __rv uintptr
	q.Drv(284000, 284105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QGraphicsSimpleTextItem::setFont(QFont const&)
func (q *QGraphicsSimpleTextItem) SetFont(font *QFont) {
	q.Drv(284000, 284106, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSimpleTextItem::setText(QString const&)
func (q *QGraphicsSimpleTextItem) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(284000, 284107, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsSimpleTextItem::text()
func (q *QGraphicsSimpleTextItem) Text() string {
	var __rv C.string_head
	q.Drv(284000, 284108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QGraphicsTextItem_enum_1 - QGraphicsTextItem::enum_1
type QGraphicsTextItem_enum_1 uint32

const (
	QGraphicsTextItem_Type QGraphicsTextItem_enum_1 = 8
)

//struct QGraphicsTextItem : QGraphicsTextItem
type QGraphicsTextItem struct {
	QGraphicsObject
}

// New QGraphicsTextItem from driver
func NewGraphicsTextItemFromDriver(drv Driver) *QGraphicsTextItem {
	_p := &QGraphicsTextItem{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsTextItem) OnLinkActivated(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(285000, 285102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsTextItem) OnLinkHovered(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(285000, 285103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsTextItem::QGraphicsTextItem()
func NewGraphicsTextItem() *QGraphicsTextItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 285000, 285104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsTextItem{}
	_p.SetDriver(__rv, 285000, false)
	return _p
}

//QGraphicsTextItem::QGraphicsTextItem(QGraphicsItem*,QGraphicsScene*)
func NewGraphicsTextItemWithParentScene(parent *QGraphicsItem) *QGraphicsTextItem {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 285000, 285105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsTextItem{}
	_p.SetDriver(__rv, 285000, false)
	return _p
}

//QGraphicsTextItem::QGraphicsTextItem(QString const&,QGraphicsItem*,QGraphicsScene*)
func NewGraphicsTextItemWithTextParentScene(text string, parent *QGraphicsItem) *QGraphicsTextItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 285000, 285106, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsTextItem{}
	_p.SetDriver(__rv, 285000, false)
	return _p
}

//QGraphicsTextItem::adjustSize()
func (q *QGraphicsTextItem) AdjustSize() {
	q.Drv(285000, 285107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::defaultTextColor()
func (q *QGraphicsTextItem) DefaultTextColor() *QColor {
	var __rv uintptr
	q.Drv(285000, 285108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QGraphicsTextItem::document()
func (q *QGraphicsTextItem) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(285000, 285109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QGraphicsTextItem::font()
func (q *QGraphicsTextItem) Font() *QFont {
	var __rv uintptr
	q.Drv(285000, 285110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QGraphicsTextItem::openExternalLinks()
func (q *QGraphicsTextItem) OpenExternalLinks() bool {
	var __rv bool
	q.Drv(285000, 285111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsTextItem::setDefaultTextColor(QColor const&)
func (q *QGraphicsTextItem) SetDefaultTextColor(c *QColor) {
	q.Drv(285000, 285112, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setDocument(QTextDocument*)
func (q *QGraphicsTextItem) SetDocument(document *QTextDocument) {
	q.Drv(285000, 285113, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setFont(QFont const&)
func (q *QGraphicsTextItem) SetFont(font *QFont) {
	q.Drv(285000, 285114, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setHtml(QString const&)
func (q *QGraphicsTextItem) SetHtml(html string) {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	q.Drv(285000, 285115, unsafe.Pointer(_html), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setOpenExternalLinks(bool)
func (q *QGraphicsTextItem) SetOpenExternalLinks(open bool) {
	q.Drv(285000, 285116, unsafe.Pointer(&open), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setPlainText(QString const&)
func (q *QGraphicsTextItem) SetPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(285000, 285117, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setTabChangesFocus(bool)
func (q *QGraphicsTextItem) SetTabChangesFocus(b bool) {
	q.Drv(285000, 285118, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setTextCursor(QTextCursor const&)
func (q *QGraphicsTextItem) SetTextCursor(cursor *QTextCursor) {
	q.Drv(285000, 285119, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setTextInteractionFlags(QFlags<Qt::TextInteractionFlag>)
func (q *QGraphicsTextItem) SetTextInteractionFlags(flags Qt_TextInteractionFlag) {
	q.Drv(285000, 285120, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::setTextWidth(double)
func (q *QGraphicsTextItem) SetTextWidth(width float64) {
	q.Drv(285000, 285121, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsTextItem::tabChangesFocus()
func (q *QGraphicsTextItem) TabChangesFocus() bool {
	var __rv bool
	q.Drv(285000, 285122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsTextItem::textCursor()
func (q *QGraphicsTextItem) TextCursor() *QTextCursor {
	var __rv uintptr
	q.Drv(285000, 285123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QGraphicsTextItem::textInteractionFlags()
func (q *QGraphicsTextItem) TextInteractionFlags() Qt_TextInteractionFlag {
	var __rv Qt_TextInteractionFlag
	q.Drv(285000, 285124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsTextItem::textWidth()
func (q *QGraphicsTextItem) TextWidth() float64 {
	var __rv float64
	q.Drv(285000, 285125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsTextItem::toHtml()
func (q *QGraphicsTextItem) ToHtml() string {
	var __rv C.string_head
	q.Drv(285000, 285126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QGraphicsTextItem::toPlainText()
func (q *QGraphicsTextItem) ToPlainText() string {
	var __rv C.string_head
	q.Drv(285000, 285127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QGraphicsTransform : QGraphicsTransform
type QGraphicsTransform struct {
	QObject
}

//QGraphicsTransform::update()
func (q *QGraphicsTransform) Update() {
	q.Drv(286000, 286102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QGraphicsView_OptimizationFlag - QGraphicsView::OptimizationFlag
type QGraphicsView_OptimizationFlag uint32

const (
	QGraphicsView_DontClipPainter           QGraphicsView_OptimizationFlag = 0x1
	QGraphicsView_DontSavePainterState      QGraphicsView_OptimizationFlag = 0x2
	QGraphicsView_DontAdjustForAntialiasing QGraphicsView_OptimizationFlag = 0x4
	QGraphicsView_IndirectPainting          QGraphicsView_OptimizationFlag = 0x8
)

//enum QGraphicsView_ViewportAnchor - QGraphicsView::ViewportAnchor
type QGraphicsView_ViewportAnchor uint32

const (
	QGraphicsView_NoAnchor         QGraphicsView_ViewportAnchor = 0
	QGraphicsView_AnchorViewCenter QGraphicsView_ViewportAnchor = 1
	QGraphicsView_AnchorUnderMouse QGraphicsView_ViewportAnchor = 2
)

//enum QGraphicsView_ViewportUpdateMode - QGraphicsView::ViewportUpdateMode
type QGraphicsView_ViewportUpdateMode uint32

const (
	QGraphicsView_FullViewportUpdate         QGraphicsView_ViewportUpdateMode = 0
	QGraphicsView_MinimalViewportUpdate      QGraphicsView_ViewportUpdateMode = 1
	QGraphicsView_SmartViewportUpdate        QGraphicsView_ViewportUpdateMode = 2
	QGraphicsView_NoViewportUpdate           QGraphicsView_ViewportUpdateMode = 3
	QGraphicsView_BoundingRectViewportUpdate QGraphicsView_ViewportUpdateMode = 4
)

//enum QGraphicsView_CacheModeFlag - QGraphicsView::CacheModeFlag
type QGraphicsView_CacheModeFlag uint32

const (
	QGraphicsView_CacheNone       QGraphicsView_CacheModeFlag = 0x0
	QGraphicsView_CacheBackground QGraphicsView_CacheModeFlag = 0x1
)

//enum QGraphicsView_DragMode - QGraphicsView::DragMode
type QGraphicsView_DragMode uint32

const (
	QGraphicsView_NoDrag         QGraphicsView_DragMode = 0
	QGraphicsView_ScrollHandDrag QGraphicsView_DragMode = 1
	QGraphicsView_RubberBandDrag QGraphicsView_DragMode = 2
)

//struct QGraphicsView : QGraphicsView
type QGraphicsView struct {
	QAbstractScrollArea
}

// New QGraphicsView from driver
func NewGraphicsViewFromDriver(drv Driver) *QGraphicsView {
	_p := &QGraphicsView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGraphicsView::QGraphicsView()
func NewGraphicsView() *QGraphicsView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 287000, 287102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsView{}
	_p.SetDriver(__rv, 287000, false)
	return _p
}

//QGraphicsView::QGraphicsView(QWidget*)
func NewGraphicsViewWithParent(parent QWidgetInterface) *QGraphicsView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 287000, 287103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsView{}
	_p.SetDriver(__rv, 287000, false)
	return _p
}

//QGraphicsView::alignment()
func (q *QGraphicsView) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(287000, 287104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::backgroundBrush()
func (q *QGraphicsView) BackgroundBrush() *QBrush {
	var __rv uintptr
	q.Drv(287000, 287105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QGraphicsView::cacheMode()
func (q *QGraphicsView) CacheMode() QGraphicsView_CacheModeFlag {
	var __rv QGraphicsView_CacheModeFlag
	q.Drv(287000, 287106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::centerOn(QGraphicsItem const*)
func (q *QGraphicsView) CenterOn(item *QGraphicsItem) {
	q.Drv(287000, 287107, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::centerOn(QPointF const&)
func (q *QGraphicsView) CenterOnFWithPos(pos *QPointF) {
	q.Drv(287000, 287108, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::centerOn(double,double)
func (q *QGraphicsView) CenterOnFWithXY(x float64, y float64) {
	q.Drv(287000, 287109, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::dragMode()
func (q *QGraphicsView) DragMode() QGraphicsView_DragMode {
	var __rv QGraphicsView_DragMode
	q.Drv(287000, 287110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::drawBackground(QPainter*,QRectF const&)
func (q *QGraphicsView) DrawBackground(painter *QPainter, rect *QRectF) {
	q.Drv(287000, 287111, Native(painter), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::drawForeground(QPainter*,QRectF const&)
func (q *QGraphicsView) DrawForeground(painter *QPainter, rect *QRectF) {
	q.Drv(287000, 287112, Native(painter), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::ensureVisible(QGraphicsItem const*)
func (q *QGraphicsView) EnsureVisible(item *QGraphicsItem) {
	q.Drv(287000, 287113, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::ensureVisible(QRectF const&)
func (q *QGraphicsView) EnsureVisibleFWithRect(rect *QRectF) {
	q.Drv(287000, 287114, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::ensureVisible(QGraphicsItem const*,int,int)
func (q *QGraphicsView) EnsureVisibleWithItemXmarginYmargin(item *QGraphicsItem, xmargin int32, ymargin int32) {
	q.Drv(287000, 287115, Native(item), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::ensureVisible(QRectF const&,int,int)
func (q *QGraphicsView) EnsureVisibleFWithRectXmarginYmargin(rect *QRectF, xmargin int32, ymargin int32) {
	q.Drv(287000, 287116, Native(rect), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::ensureVisible(double,double,double,double,int,int)
func (q *QGraphicsView) EnsureVisibleFWithXYWidthHeightXmarginYmargin(x float64, y float64, w float64, h float64, xmargin int32, ymargin int32) {
	q.Drv(287000, 287117, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::fitInView(QGraphicsItem const*)
func (q *QGraphicsView) FitInView(item *QGraphicsItem) {
	q.Drv(287000, 287118, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::fitInView(QRectF const&)
func (q *QGraphicsView) FitInViewFWithRect(rect *QRectF) {
	q.Drv(287000, 287119, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::fitInView(QGraphicsItem const*,Qt::AspectRatioMode)
func (q *QGraphicsView) FitInViewWithItemAspectradiomode(item *QGraphicsItem, aspectRadioMode Qt_AspectRatioMode) {
	q.Drv(287000, 287120, Native(item), unsafe.Pointer(&aspectRadioMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::fitInView(QRectF const&,Qt::AspectRatioMode)
func (q *QGraphicsView) FitInViewFWithRectAspectradiomode(rect *QRectF, aspectRadioMode Qt_AspectRatioMode) {
	q.Drv(287000, 287121, Native(rect), unsafe.Pointer(&aspectRadioMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::fitInView(double,double,double,double,Qt::AspectRatioMode)
func (q *QGraphicsView) FitInViewFWithXYWidthHeightAspectradiomode(x float64, y float64, w float64, h float64, aspectRadioMode Qt_AspectRatioMode) {
	q.Drv(287000, 287122, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&aspectRadioMode), nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::foregroundBrush()
func (q *QGraphicsView) ForegroundBrush() *QBrush {
	var __rv uintptr
	q.Drv(287000, 287123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QGraphicsView::invalidateScene()
func (q *QGraphicsView) InvalidateScene() {
	q.Drv(287000, 287124, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::invalidateScene(QRectF const&,QFlags<QGraphicsScene::SceneLayer>)
func (q *QGraphicsView) InvalidateSceneFWithRectLayers(rect *QRectF, layers QGraphicsScene_SceneLayer) {
	q.Drv(287000, 287125, Native(rect), unsafe.Pointer(&layers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::isInteractive()
func (q *QGraphicsView) IsInteractive() bool {
	var __rv bool
	q.Drv(287000, 287126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::isTransformed()
func (q *QGraphicsView) IsTransformed() bool {
	var __rv bool
	q.Drv(287000, 287127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::itemAt(QPoint const&)
func (q *QGraphicsView) ItemAt(pos *QPoint) *QGraphicsItem {
	var __rv uintptr
	q.Drv(287000, 287128, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsView::itemAt(int,int)
func (q *QGraphicsView) ItemAtWithXY(x int32, y int32) *QGraphicsItem {
	var __rv uintptr
	q.Drv(287000, 287129, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsItem{}
	_rp.SetDriver(__rv, 258000, true)
	return _rp
}

//QGraphicsView::items()
func (q *QGraphicsView) Items() []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QPainterPath const&)
func (q *QGraphicsView) ItemsWithPath(path *QPainterPath) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287131, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QPoint const&)
func (q *QGraphicsView) ItemsWithPos(pos *QPoint) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287132, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QPolygon const&)
func (q *QGraphicsView) ItemsWithPolygon(polygon *QPolygon) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287133, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QRect const&)
func (q *QGraphicsView) ItemsWithRect(rect *QRect) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287134, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QPainterPath const&,Qt::ItemSelectionMode)
func (q *QGraphicsView) ItemsWithPathMode(path *QPainterPath, mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287135, Native(path), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QPolygon const&,Qt::ItemSelectionMode)
func (q *QGraphicsView) ItemsWithPolygonMode(polygon *QPolygon, mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287136, Native(polygon), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(QRect const&,Qt::ItemSelectionMode)
func (q *QGraphicsView) ItemsWithRectMode(rect *QRect, mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287137, Native(rect), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(int,int)
func (q *QGraphicsView) ItemsWithXY(x int32, y int32) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287138, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::items(int,int,int,int,Qt::ItemSelectionMode)
func (q *QGraphicsView) ItemsWithXYWidthHeightMode(x int32, y int32, w int32, h int32, mode Qt_ItemSelectionMode) []*QGraphicsItem {
	var __rv []*QGraphicsItem
	q.Drv(287000, 287139, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::mapFromScene(QPainterPath const&)
func (q *QGraphicsView) MapFromScene(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(287000, 287140, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsView::mapFromScene(QPointF const&)
func (q *QGraphicsView) MapFromSceneFWithPoint(point *QPointF) *QPoint {
	var __rv uintptr
	q.Drv(287000, 287141, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsView::mapFromScene(QPolygonF const&)
func (q *QGraphicsView) MapFromSceneFWithPolygon(polygon *QPolygonF) *QPolygon {
	var __rv uintptr
	q.Drv(287000, 287142, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QGraphicsView::mapFromScene(QRectF const&)
func (q *QGraphicsView) MapFromSceneFWithRect(rect *QRectF) *QPolygon {
	var __rv uintptr
	q.Drv(287000, 287143, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QGraphicsView::mapFromScene(double,double)
func (q *QGraphicsView) MapFromSceneFWithXY(x float64, y float64) *QPoint {
	var __rv uintptr
	q.Drv(287000, 287144, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QGraphicsView::mapFromScene(double,double,double,double)
func (q *QGraphicsView) MapFromSceneFWithXYWidthHeight(x float64, y float64, w float64, h float64) *QPolygon {
	var __rv uintptr
	q.Drv(287000, 287145, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygon{}
	_rp.SetDriver(__rv, 102000, true)
	return _rp
}

//QGraphicsView::mapToScene(QPainterPath const&)
func (q *QGraphicsView) MapToScene(path *QPainterPath) *QPainterPath {
	var __rv uintptr
	q.Drv(287000, 287146, Native(path), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QGraphicsView::mapToScene(QPoint const&)
func (q *QGraphicsView) MapToSceneWithPoint(point *QPoint) *QPointF {
	var __rv uintptr
	q.Drv(287000, 287147, Native(point), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsView::mapToScene(QPolygon const&)
func (q *QGraphicsView) MapToSceneWithPolygon(polygon *QPolygon) *QPolygonF {
	var __rv uintptr
	q.Drv(287000, 287148, Native(polygon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsView::mapToScene(QRect const&)
func (q *QGraphicsView) MapToSceneWithRect(rect *QRect) *QPolygonF {
	var __rv uintptr
	q.Drv(287000, 287149, Native(rect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsView::mapToScene(int,int)
func (q *QGraphicsView) MapToSceneWithXY(x int32, y int32) *QPointF {
	var __rv uintptr
	q.Drv(287000, 287150, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QGraphicsView::mapToScene(int,int,int,int)
func (q *QGraphicsView) MapToSceneWithXYWidthHeight(x int32, y int32, w int32, h int32) *QPolygonF {
	var __rv uintptr
	q.Drv(287000, 287151, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPolygonF{}
	_rp.SetDriver(__rv, 103000, true)
	return _rp
}

//QGraphicsView::matrix()
func (q *QGraphicsView) Matrix() *QMatrix {
	var __rv uintptr
	q.Drv(287000, 287152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMatrix{}
	_rp.SetDriver(__rv, 75000, true)
	return _rp
}

//QGraphicsView::optimizationFlags()
func (q *QGraphicsView) OptimizationFlags() QGraphicsView_OptimizationFlag {
	var __rv QGraphicsView_OptimizationFlag
	q.Drv(287000, 287153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::render(QPainter*)
func (q *QGraphicsView) Render(painter *QPainter) {
	q.Drv(287000, 287154, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::render(QPainter*,QRectF const&,QRect const&,Qt::AspectRatioMode)
func (q *QGraphicsView) RenderWithPainterTargetSourceAspectratiomode(painter *QPainter, target *QRectF, source *QRect, aspectRatioMode Qt_AspectRatioMode) {
	q.Drv(287000, 287155, Native(painter), Native(target), Native(source), unsafe.Pointer(&aspectRatioMode), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::renderHints()
func (q *QGraphicsView) RenderHints() QPainter_RenderHint {
	var __rv QPainter_RenderHint
	q.Drv(287000, 287156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::resetCachedContent()
func (q *QGraphicsView) ResetCachedContent() {
	q.Drv(287000, 287157, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::resetMatrix()
func (q *QGraphicsView) ResetMatrix() {
	q.Drv(287000, 287158, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::resetTransform()
func (q *QGraphicsView) ResetTransform() {
	q.Drv(287000, 287159, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::resizeAnchor()
func (q *QGraphicsView) ResizeAnchor() QGraphicsView_ViewportAnchor {
	var __rv QGraphicsView_ViewportAnchor
	q.Drv(287000, 287160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::rotate(double)
func (q *QGraphicsView) Rotate(angle float64) {
	q.Drv(287000, 287161, unsafe.Pointer(&angle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::rubberBandSelectionMode()
func (q *QGraphicsView) RubberBandSelectionMode() Qt_ItemSelectionMode {
	var __rv Qt_ItemSelectionMode
	q.Drv(287000, 287162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::scale(double,double)
func (q *QGraphicsView) Scale(sx float64, sy float64) {
	q.Drv(287000, 287163, unsafe.Pointer(&sx), unsafe.Pointer(&sy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::scene()
func (q *QGraphicsView) Scene() *QGraphicsScene {
	var __rv uintptr
	q.Drv(287000, 287164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsScene{}
	_rp.SetDriver(__rv, 274000, false)
	return _rp
}

//QGraphicsView::sceneRect()
func (q *QGraphicsView) SceneRect() *QRectF {
	var __rv uintptr
	q.Drv(287000, 287165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsView::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QGraphicsView) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(287000, 287166, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setBackgroundBrush(QBrush const&)
func (q *QGraphicsView) SetBackgroundBrush(brush *QBrush) {
	q.Drv(287000, 287167, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setCacheMode(QFlags<QGraphicsView::CacheModeFlag>)
func (q *QGraphicsView) SetCacheMode(mode QGraphicsView_CacheModeFlag) {
	q.Drv(287000, 287168, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setDragMode(QGraphicsView::DragMode)
func (q *QGraphicsView) SetDragMode(mode QGraphicsView_DragMode) {
	q.Drv(287000, 287169, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setForegroundBrush(QBrush const&)
func (q *QGraphicsView) SetForegroundBrush(brush *QBrush) {
	q.Drv(287000, 287170, Native(brush), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setInteractive(bool)
func (q *QGraphicsView) SetInteractive(allowed bool) {
	q.Drv(287000, 287171, unsafe.Pointer(&allowed), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setMatrix(QMatrix const&)
func (q *QGraphicsView) SetMatrix(matrix *QMatrix) {
	q.Drv(287000, 287172, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setMatrix(QMatrix const&,bool)
func (q *QGraphicsView) SetMatrixWithMatrixCombine(matrix *QMatrix, combine bool) {
	q.Drv(287000, 287173, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setOptimizationFlag(QGraphicsView::OptimizationFlag)
func (q *QGraphicsView) SetOptimizationFlag(flag QGraphicsView_OptimizationFlag) {
	q.Drv(287000, 287174, unsafe.Pointer(&flag), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setOptimizationFlag(QGraphicsView::OptimizationFlag,bool)
func (q *QGraphicsView) SetOptimizationFlagWithFlagEnabled(flag QGraphicsView_OptimizationFlag, enabled bool) {
	q.Drv(287000, 287175, unsafe.Pointer(&flag), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setOptimizationFlags(QFlags<QGraphicsView::OptimizationFlag>)
func (q *QGraphicsView) SetOptimizationFlags(flags QGraphicsView_OptimizationFlag) {
	q.Drv(287000, 287176, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setRenderHint(QPainter::RenderHint)
func (q *QGraphicsView) SetRenderHint(hint QPainter_RenderHint) {
	q.Drv(287000, 287177, unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setRenderHint(QPainter::RenderHint,bool)
func (q *QGraphicsView) SetRenderHintWithHintEnabled(hint QPainter_RenderHint, enabled bool) {
	q.Drv(287000, 287178, unsafe.Pointer(&hint), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setRenderHints(QFlags<QPainter::RenderHint>)
func (q *QGraphicsView) SetRenderHints(hints QPainter_RenderHint) {
	q.Drv(287000, 287179, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setResizeAnchor(QGraphicsView::ViewportAnchor)
func (q *QGraphicsView) SetResizeAnchor(anchor QGraphicsView_ViewportAnchor) {
	q.Drv(287000, 287180, unsafe.Pointer(&anchor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setRubberBandSelectionMode(Qt::ItemSelectionMode)
func (q *QGraphicsView) SetRubberBandSelectionMode(mode Qt_ItemSelectionMode) {
	q.Drv(287000, 287181, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setScene(QGraphicsScene*)
func (q *QGraphicsView) SetScene(scene *QGraphicsScene) {
	q.Drv(287000, 287182, Native(scene), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setSceneRect(QRectF const&)
func (q *QGraphicsView) SetSceneRect(rect *QRectF) {
	q.Drv(287000, 287183, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setSceneRect(double,double,double,double)
func (q *QGraphicsView) SetSceneRectFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(287000, 287184, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setTransform(QTransform const&)
func (q *QGraphicsView) SetTransform(matrix *QTransform) {
	q.Drv(287000, 287185, Native(matrix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setTransform(QTransform const&,bool)
func (q *QGraphicsView) SetTransformWithTransformCombine(matrix *QTransform, combine bool) {
	q.Drv(287000, 287186, Native(matrix), unsafe.Pointer(&combine), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setTransformationAnchor(QGraphicsView::ViewportAnchor)
func (q *QGraphicsView) SetTransformationAnchor(anchor QGraphicsView_ViewportAnchor) {
	q.Drv(287000, 287187, unsafe.Pointer(&anchor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setViewportUpdateMode(QGraphicsView::ViewportUpdateMode)
func (q *QGraphicsView) SetViewportUpdateMode(mode QGraphicsView_ViewportUpdateMode) {
	q.Drv(287000, 287188, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::setupViewport(QWidget*)
func (q *QGraphicsView) SetupViewport(widget QWidgetInterface) {
	q.Drv(287000, 287189, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::shear(double,double)
func (q *QGraphicsView) Shear(sh float64, sv float64) {
	q.Drv(287000, 287190, unsafe.Pointer(&sh), unsafe.Pointer(&sv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::transform()
func (q *QGraphicsView) Transform() *QTransform {
	var __rv uintptr
	q.Drv(287000, 287191, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsView::transformationAnchor()
func (q *QGraphicsView) TransformationAnchor() QGraphicsView_ViewportAnchor {
	var __rv QGraphicsView_ViewportAnchor
	q.Drv(287000, 287192, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsView::translate(double,double)
func (q *QGraphicsView) Translate(dx float64, dy float64) {
	q.Drv(287000, 287193, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::updateScene(QList<QRectF> const&)
func (q *QGraphicsView) UpdateScene(rects []*QRectF) {
	_rects := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&rects)))
	defer FreeCNoObjectArrayHead(_rects)
	q.Drv(287000, 287194, unsafe.Pointer(_rects), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::updateSceneRect(QRectF const&)
func (q *QGraphicsView) UpdateSceneRect(rect *QRectF) {
	q.Drv(287000, 287195, Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsView::viewportTransform()
func (q *QGraphicsView) ViewportTransform() *QTransform {
	var __rv uintptr
	q.Drv(287000, 287196, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTransform{}
	_rp.SetDriver(__rv, 178000, true)
	return _rp
}

//QGraphicsView::viewportUpdateMode()
func (q *QGraphicsView) ViewportUpdateMode() QGraphicsView_ViewportUpdateMode {
	var __rv QGraphicsView_ViewportUpdateMode
	q.Drv(287000, 287197, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QGraphicsWidget_enum_1 - QGraphicsWidget::enum_1
type QGraphicsWidget_enum_1 uint32

const (
	QGraphicsWidget_Type QGraphicsWidget_enum_1 = 11
)

//struct QGraphicsWidget : QGraphicsWidget
type QGraphicsWidget struct {
	QGraphicsObject
}

// New QGraphicsWidget from driver
func NewGraphicsWidgetFromDriver(drv Driver) *QGraphicsWidget {
	_p := &QGraphicsWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGraphicsWidget) OnLayoutChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(288000, 288102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGraphicsWidget) OnGeometryChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(288000, 288103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGraphicsWidget::QGraphicsWidget()
func NewGraphicsWidget() *QGraphicsWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 288000, 288104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsWidget{}
	_p.SetDriver(__rv, 288000, false)
	return _p
}

//QGraphicsWidget::QGraphicsWidget(QGraphicsItem*,QFlags<Qt::WindowType>)
func NewGraphicsWidgetWithParentFlags(parent *QGraphicsItem, wFlags Qt_WindowType) *QGraphicsWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 288000, 288105, Native(parent), unsafe.Pointer(&wFlags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGraphicsWidget{}
	_p.SetDriver(__rv, 288000, false)
	return _p
}

//QGraphicsWidget::actions()
func (q *QGraphicsWidget) Actions() []*QAction {
	var __rv []*QAction
	q.Drv(288000, 288106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::addAction(QAction*)
func (q *QGraphicsWidget) AddAction(action *QAction) {
	q.Drv(288000, 288107, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::addActions(QList<QAction*>)
func (q *QGraphicsWidget) AddActions(actions []*QAction) {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	q.Drv(288000, 288108, unsafe.Pointer(_actions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::adjustSize()
func (q *QGraphicsWidget) AdjustSize() {
	q.Drv(288000, 288109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::autoFillBackground()
func (q *QGraphicsWidget) AutoFillBackground() bool {
	var __rv bool
	q.Drv(288000, 288110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::changeEvent(QEvent*)
func (q *QGraphicsWidget) ChangeEvent(event *QEvent) {
	q.Drv(288000, 288111, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::children()
func (q *QGraphicsWidget) Children() []*QObject {
	var __rv []*QObject
	q.Drv(288000, 288112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::close()
func (q *QGraphicsWidget) Close() bool {
	var __rv bool
	q.Drv(288000, 288113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::closeEvent(QCloseEvent*)
func (q *QGraphicsWidget) CloseEvent(event *QCloseEvent) {
	q.Drv(288000, 288114, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::focusNextPrevChild(bool)
func (q *QGraphicsWidget) FocusNextPrevChild(next bool) bool {
	var __rv bool
	q.Drv(288000, 288115, unsafe.Pointer(&next), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::focusPolicy()
func (q *QGraphicsWidget) FocusPolicy() Qt_FocusPolicy {
	var __rv Qt_FocusPolicy
	q.Drv(288000, 288116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::focusWidget()
func (q *QGraphicsWidget) FocusWidget() *QGraphicsWidget {
	var __rv uintptr
	q.Drv(288000, 288117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsWidget{}
	_rp.SetDriver(__rv, 288000, false)
	return _rp
}

//QGraphicsWidget::font()
func (q *QGraphicsWidget) Font() *QFont {
	var __rv uintptr
	q.Drv(288000, 288118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QGraphicsWidget::getWindowFrameMargins(double*,double*,double*,double*)
func (q *QGraphicsWidget) GetWindowFrameMargins(left *float64, top *float64, right *float64, bottom *float64) {
	q.Drv(288000, 288119, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::grabKeyboardEvent(QEvent*)
func (q *QGraphicsWidget) GrabKeyboardEvent(event *QEvent) {
	q.Drv(288000, 288120, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::grabMouseEvent(QEvent*)
func (q *QGraphicsWidget) GrabMouseEvent(event *QEvent) {
	q.Drv(288000, 288121, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::grabShortcut(QKeySequence const&)
func (q *QGraphicsWidget) GrabShortcut(sequence *QKeySequence) int32 {
	var __rv int32
	q.Drv(288000, 288122, Native(sequence), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::grabShortcut(QKeySequence const&,Qt::ShortcutContext)
func (q *QGraphicsWidget) GrabShortcutWithSequenceContext(sequence *QKeySequence, context Qt_ShortcutContext) int32 {
	var __rv int32
	q.Drv(288000, 288123, Native(sequence), unsafe.Pointer(&context), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::hideEvent(QHideEvent*)
func (q *QGraphicsWidget) HideEvent(event *QHideEvent) {
	q.Drv(288000, 288124, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::insertAction(QAction*,QAction*)
func (q *QGraphicsWidget) InsertAction(before *QAction, action *QAction) {
	q.Drv(288000, 288125, Native(before), Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::insertActions(QAction*,QList<QAction*>)
func (q *QGraphicsWidget) InsertActions(before *QAction, actions []*QAction) {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	q.Drv(288000, 288126, Native(before), unsafe.Pointer(_actions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::isActiveWindow()
func (q *QGraphicsWidget) IsActiveWindow() bool {
	var __rv bool
	q.Drv(288000, 288127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::layout()
func (q *QGraphicsWidget) Layout() *QGraphicsLayout {
	var __rv uintptr
	q.Drv(288000, 288128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsLayout{}
	_rp.SetDriver(__rv, 261000, true)
	return _rp
}

//QGraphicsWidget::layoutDirection()
func (q *QGraphicsWidget) LayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(288000, 288129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::moveEvent(QGraphicsSceneMoveEvent*)
func (q *QGraphicsWidget) MoveEvent(event *QGraphicsSceneMoveEvent) {
	q.Drv(288000, 288130, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::palette()
func (q *QGraphicsWidget) Palette() *QPalette {
	var __rv uintptr
	q.Drv(288000, 288131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QGraphicsWidget::polishEvent()
func (q *QGraphicsWidget) PolishEvent() {
	q.Drv(288000, 288132, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::propertyChange(QString const&,QVariant const&)
func (q *QGraphicsWidget) PropertyChange(propertyName string, value *QVariant) *QVariant {
	_propertyName := NewCStringHead(propertyName)
	defer FreeCStringHead(_propertyName)
	var __rv uintptr
	q.Drv(288000, 288133, unsafe.Pointer(_propertyName), Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QGraphicsWidget::rect()
func (q *QGraphicsWidget) Rect() *QRectF {
	var __rv uintptr
	q.Drv(288000, 288134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsWidget::releaseShortcut(int)
func (q *QGraphicsWidget) ReleaseShortcut(id int32) {
	q.Drv(288000, 288135, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::removeAction(QAction*)
func (q *QGraphicsWidget) RemoveAction(action *QAction) {
	q.Drv(288000, 288136, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::resize(QSizeF const&)
func (q *QGraphicsWidget) Resize(size *QSizeF) {
	q.Drv(288000, 288137, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::resize(double,double)
func (q *QGraphicsWidget) ResizeFWithWidthHeight(w float64, h float64) {
	q.Drv(288000, 288138, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::resizeEvent(QGraphicsSceneResizeEvent*)
func (q *QGraphicsWidget) ResizeEvent(event *QGraphicsSceneResizeEvent) {
	q.Drv(288000, 288139, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setAttribute(Qt::WidgetAttribute)
func (q *QGraphicsWidget) SetAttribute(attribute Qt_WidgetAttribute) {
	q.Drv(288000, 288140, unsafe.Pointer(&attribute), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setAttribute(Qt::WidgetAttribute,bool)
func (q *QGraphicsWidget) SetAttributeWithAttributeOn(attribute Qt_WidgetAttribute, on bool) {
	q.Drv(288000, 288141, unsafe.Pointer(&attribute), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setAutoFillBackground(bool)
func (q *QGraphicsWidget) SetAutoFillBackground(enabled bool) {
	q.Drv(288000, 288142, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setContentsMargins(double,double,double,double)
func (q *QGraphicsWidget) SetContentsMargins(left float64, top float64, right float64, bottom float64) {
	q.Drv(288000, 288143, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setFocusPolicy(Qt::FocusPolicy)
func (q *QGraphicsWidget) SetFocusPolicy(policy Qt_FocusPolicy) {
	q.Drv(288000, 288144, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setFont(QFont const&)
func (q *QGraphicsWidget) SetFont(font *QFont) {
	q.Drv(288000, 288145, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setGeometry(double,double,double,double)
func (q *QGraphicsWidget) SetGeometryFWithXYWidthHeight(x float64, y float64, w float64, h float64) {
	q.Drv(288000, 288146, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setLayout(QGraphicsLayout*)
func (q *QGraphicsWidget) SetLayout(layout *QGraphicsLayout) {
	q.Drv(288000, 288147, Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setLayoutDirection(Qt::LayoutDirection)
func (q *QGraphicsWidget) SetLayoutDirection(direction Qt_LayoutDirection) {
	q.Drv(288000, 288148, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setPalette(QPalette const&)
func (q *QGraphicsWidget) SetPalette(palette *QPalette) {
	q.Drv(288000, 288149, Native(palette), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setShortcutAutoRepeat(int)
func (q *QGraphicsWidget) SetShortcutAutoRepeat(id int32) {
	q.Drv(288000, 288150, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setShortcutAutoRepeat(int,bool)
func (q *QGraphicsWidget) SetShortcutAutoRepeatWithIdEnabled(id int32, enabled bool) {
	q.Drv(288000, 288151, unsafe.Pointer(&id), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setShortcutEnabled(int)
func (q *QGraphicsWidget) SetShortcutEnabled(id int32) {
	q.Drv(288000, 288152, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setShortcutEnabled(int,bool)
func (q *QGraphicsWidget) SetShortcutEnabledWithIdEnabled(id int32, enabled bool) {
	q.Drv(288000, 288153, unsafe.Pointer(&id), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setStyle(QStyle*)
func (q *QGraphicsWidget) SetStyle(style *QStyle) {
	q.Drv(288000, 288154, Native(style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setTabOrder(QGraphicsWidget*,QGraphicsWidget*)
func QGraphicsWidgetSetTabOrder(first *QGraphicsWidget, second *QGraphicsWidget) {
	DirectQtDrv(nil, 288000, 288155, Native(first), Native(second), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setTabOrder(QGraphicsWidget*,QGraphicsWidget*)
func (q *QGraphicsWidget) SetTabOrder(first *QGraphicsWidget, second *QGraphicsWidget) {
	q.Drv(288000, 288155, Native(first), Native(second), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setWindowFlags(QFlags<Qt::WindowType>)
func (q *QGraphicsWidget) SetWindowFlags(wFlags Qt_WindowType) {
	q.Drv(288000, 288156, unsafe.Pointer(&wFlags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setWindowFrameMargins(double,double,double,double)
func (q *QGraphicsWidget) SetWindowFrameMargins(left float64, top float64, right float64, bottom float64) {
	q.Drv(288000, 288157, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::setWindowTitle(QString const&)
func (q *QGraphicsWidget) SetWindowTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(288000, 288158, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::showEvent(QShowEvent*)
func (q *QGraphicsWidget) ShowEvent(event *QShowEvent) {
	q.Drv(288000, 288159, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::size()
func (q *QGraphicsWidget) Size() *QSizeF {
	var __rv uintptr
	q.Drv(288000, 288160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QGraphicsWidget::style()
func (q *QGraphicsWidget) Style() *QStyle {
	var __rv uintptr
	q.Drv(288000, 288161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QGraphicsWidget::testAttribute(Qt::WidgetAttribute)
func (q *QGraphicsWidget) TestAttribute(attribute Qt_WidgetAttribute) bool {
	var __rv bool
	q.Drv(288000, 288162, unsafe.Pointer(&attribute), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::ungrabKeyboardEvent(QEvent*)
func (q *QGraphicsWidget) UngrabKeyboardEvent(event *QEvent) {
	q.Drv(288000, 288163, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::ungrabMouseEvent(QEvent*)
func (q *QGraphicsWidget) UngrabMouseEvent(event *QEvent) {
	q.Drv(288000, 288164, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::unsetLayoutDirection()
func (q *QGraphicsWidget) UnsetLayoutDirection() {
	q.Drv(288000, 288165, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::unsetWindowFrameMargins()
func (q *QGraphicsWidget) UnsetWindowFrameMargins() {
	q.Drv(288000, 288166, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGraphicsWidget::windowFlags()
func (q *QGraphicsWidget) WindowFlags() Qt_WindowType {
	var __rv Qt_WindowType
	q.Drv(288000, 288167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::windowFrameEvent(QEvent*)
func (q *QGraphicsWidget) WindowFrameEvent(e *QEvent) bool {
	var __rv bool
	q.Drv(288000, 288168, Native(e), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::windowFrameGeometry()
func (q *QGraphicsWidget) WindowFrameGeometry() *QRectF {
	var __rv uintptr
	q.Drv(288000, 288169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsWidget::windowFrameRect()
func (q *QGraphicsWidget) WindowFrameRect() *QRectF {
	var __rv uintptr
	q.Drv(288000, 288170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QGraphicsWidget::windowFrameSectionAt(QPointF const&)
func (q *QGraphicsWidget) WindowFrameSectionAt(pos *QPointF) Qt_WindowFrameSection {
	var __rv Qt_WindowFrameSection
	q.Drv(288000, 288171, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGraphicsWidget::windowTitle()
func (q *QGraphicsWidget) WindowTitle() string {
	var __rv C.string_head
	q.Drv(288000, 288172, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QGraphicsWidget::windowType()
func (q *QGraphicsWidget) WindowType() Qt_WindowType {
	var __rv Qt_WindowType
	q.Drv(288000, 288173, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGridLayout : QGridLayout
type QGridLayout struct {
	QLayout
}

// New QGridLayout from driver
func NewGridLayoutFromDriver(drv Driver) *QGridLayout {
	_p := &QGridLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QGridLayout::QGridLayout()
func NewGridLayout() *QGridLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 289000, 289102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGridLayout{}
	_p.SetDriver(__rv, 289000, false)
	return _p
}

//QGridLayout::QGridLayout(QWidget*)
func NewGridLayoutWithParent(parent QWidgetInterface) *QGridLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 289000, 289103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGridLayout{}
	_p.SetDriver(__rv, 289000, false)
	return _p
}

//QGridLayout::addItem(QLayoutItem*,int,int,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGridLayout) AddItem(item *QLayoutItem, row int32, column int32, rowSpan int32, columnSpan int32, value2 Qt_AlignmentFlag) {
	q.Drv(289000, 289104, Native(item), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), unsafe.Pointer(&value2), nil, nil, nil, nil, nil, nil)
}

//QGridLayout::addLayout(QLayout*,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGridLayout) AddLayoutWithLayoutRowColumnAlignmentflag(value2 QLayoutInterface, row int32, column int32, value3 Qt_AlignmentFlag) {
	q.Drv(289000, 289105, Native(value2), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::addLayout(QLayout*,int,int,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGridLayout) AddLayoutWithLayoutRowColumnRowspanColumnspanAlignmentflag(value2 QLayoutInterface, row int32, column int32, rowSpan int32, columnSpan int32, value3 Qt_AlignmentFlag) {
	q.Drv(289000, 289106, Native(value2), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil)
}

//QGridLayout::addWidget(QWidget*)
func (q *QGridLayout) AddWidget(w QWidgetInterface) {
	q.Drv(289000, 289107, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::addWidget(QWidget*,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGridLayout) AddWidgetWithWidgetRowColumnAlignmentflag(value2 QWidgetInterface, row int32, column int32, value3 Qt_AlignmentFlag) {
	q.Drv(289000, 289108, Native(value2), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::addWidget(QWidget*,int,int,int,int,QFlags<Qt::AlignmentFlag>)
func (q *QGridLayout) AddWidgetWithWidgetRowColumnRowspanColumnspanAlignmentflag(value2 QWidgetInterface, row int32, column int32, rowSpan int32, columnSpan int32, value3 Qt_AlignmentFlag) {
	q.Drv(289000, 289109, Native(value2), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil)
}

//QGridLayout::cellRect(int,int)
func (q *QGridLayout) CellRect(row int32, column int32) *QRect {
	var __rv uintptr
	q.Drv(289000, 289110, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QGridLayout::columnCount()
func (q *QGridLayout) ColumnCount() int32 {
	var __rv int32
	q.Drv(289000, 289111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::columnMinimumWidth(int)
func (q *QGridLayout) ColumnMinimumWidth(column int32) int32 {
	var __rv int32
	q.Drv(289000, 289112, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::columnStretch(int)
func (q *QGridLayout) ColumnStretch(column int32) int32 {
	var __rv int32
	q.Drv(289000, 289113, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::getItemPosition(int,int*,int*,int*,int*)
func (q *QGridLayout) GetItemPosition(idx int32, row *int32, column *int32, rowSpan *int32, columnSpan *int32) {
	q.Drv(289000, 289114, unsafe.Pointer(&idx), unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::horizontalSpacing()
func (q *QGridLayout) HorizontalSpacing() int32 {
	var __rv int32
	q.Drv(289000, 289115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::itemAtPosition(int,int)
func (q *QGridLayout) ItemAtPosition(row int32, column int32) *QLayoutItem {
	var __rv uintptr
	q.Drv(289000, 289116, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayoutItem{}
	_rp.SetDriver(__rv, 67000, true)
	return _rp
}

//QGridLayout::originCorner()
func (q *QGridLayout) OriginCorner() Qt_Corner {
	var __rv Qt_Corner
	q.Drv(289000, 289117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::rowCount()
func (q *QGridLayout) RowCount() int32 {
	var __rv int32
	q.Drv(289000, 289118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::rowMinimumHeight(int)
func (q *QGridLayout) RowMinimumHeight(row int32) int32 {
	var __rv int32
	q.Drv(289000, 289119, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::rowStretch(int)
func (q *QGridLayout) RowStretch(row int32) int32 {
	var __rv int32
	q.Drv(289000, 289120, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::setColumnMinimumWidth(int,int)
func (q *QGridLayout) SetColumnMinimumWidth(column int32, minSize int32) {
	q.Drv(289000, 289121, unsafe.Pointer(&column), unsafe.Pointer(&minSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setColumnStretch(int,int)
func (q *QGridLayout) SetColumnStretch(column int32, stretch int32) {
	q.Drv(289000, 289122, unsafe.Pointer(&column), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setDefaultPositioning(int,Qt::Orientation)
func (q *QGridLayout) SetDefaultPositioning(n int32, orient Qt_Orientation) {
	q.Drv(289000, 289123, unsafe.Pointer(&n), unsafe.Pointer(&orient), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setHorizontalSpacing(int)
func (q *QGridLayout) SetHorizontalSpacing(spacing int32) {
	q.Drv(289000, 289124, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setOriginCorner(Qt::Corner)
func (q *QGridLayout) SetOriginCorner(value Qt_Corner) {
	q.Drv(289000, 289125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setRowMinimumHeight(int,int)
func (q *QGridLayout) SetRowMinimumHeight(row int32, minSize int32) {
	q.Drv(289000, 289126, unsafe.Pointer(&row), unsafe.Pointer(&minSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setRowStretch(int,int)
func (q *QGridLayout) SetRowStretch(row int32, stretch int32) {
	q.Drv(289000, 289127, unsafe.Pointer(&row), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setSpacing(int)
func (q *QGridLayout) SetSpacing(spacing int32) {
	q.Drv(289000, 289128, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::setVerticalSpacing(int)
func (q *QGridLayout) SetVerticalSpacing(spacing int32) {
	q.Drv(289000, 289129, unsafe.Pointer(&spacing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGridLayout::spacing()
func (q *QGridLayout) Spacing() int32 {
	var __rv int32
	q.Drv(289000, 289130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGridLayout::verticalSpacing()
func (q *QGridLayout) VerticalSpacing() int32 {
	var __rv int32
	q.Drv(289000, 289131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QGroupBox : QGroupBox
type QGroupBox struct {
	QWidget
}

// New QGroupBox from driver
func NewGroupBoxFromDriver(drv Driver) *QGroupBox {
	_p := &QGroupBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QGroupBox) OnClicked(fn func()) uintptr {
	var __rv uintptr
	q.Drv(290000, 290102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGroupBox) OnClickedEx(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(290000, 290103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QGroupBox) OnToggled(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(290000, 290104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QGroupBox::QGroupBox()
func NewGroupBox() *QGroupBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 290000, 290105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGroupBox{}
	_p.SetDriver(__rv, 290000, false)
	return _p
}

//QGroupBox::QGroupBox(QWidget*)
func NewGroupBoxWithParent(parent QWidgetInterface) *QGroupBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 290000, 290106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGroupBox{}
	_p.SetDriver(__rv, 290000, false)
	return _p
}

//QGroupBox::QGroupBox(QString const&,QWidget*)
func NewGroupBoxWithTitleParent(title string, parent QWidgetInterface) *QGroupBox {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 290000, 290107, unsafe.Pointer(_title), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QGroupBox{}
	_p.SetDriver(__rv, 290000, false)
	return _p
}

//QGroupBox::alignment()
func (q *QGroupBox) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(290000, 290108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGroupBox::isCheckable()
func (q *QGroupBox) IsCheckable() bool {
	var __rv bool
	q.Drv(290000, 290109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGroupBox::isChecked()
func (q *QGroupBox) IsChecked() bool {
	var __rv bool
	q.Drv(290000, 290110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGroupBox::isFlat()
func (q *QGroupBox) IsFlat() bool {
	var __rv bool
	q.Drv(290000, 290111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QGroupBox::setAlignment(int)
func (q *QGroupBox) SetAlignment(alignment int32) {
	q.Drv(290000, 290112, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGroupBox::setCheckable(bool)
func (q *QGroupBox) SetCheckable(checkable bool) {
	q.Drv(290000, 290113, unsafe.Pointer(&checkable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGroupBox::setChecked(bool)
func (q *QGroupBox) SetChecked(checked bool) {
	q.Drv(290000, 290114, unsafe.Pointer(&checked), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGroupBox::setFlat(bool)
func (q *QGroupBox) SetFlat(flat bool) {
	q.Drv(290000, 290115, unsafe.Pointer(&flat), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGroupBox::setTitle(QString const&)
func (q *QGroupBox) SetTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(290000, 290116, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QGroupBox::title()
func (q *QGroupBox) Title() string {
	var __rv C.string_head
	q.Drv(290000, 290117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QHBoxLayout : QHBoxLayout
type QHBoxLayout struct {
	QBoxLayout
}

// New QHBoxLayout from driver
func NewHBoxLayoutFromDriver(drv Driver) *QHBoxLayout {
	_p := &QHBoxLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QHBoxLayout::QHBoxLayout()
func NewHBoxLayout() *QHBoxLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 291000, 291102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHBoxLayout{}
	_p.SetDriver(__rv, 291000, false)
	return _p
}

//QHBoxLayout::QHBoxLayout(QWidget*)
func NewHBoxLayoutWithParent(parent QWidgetInterface) *QHBoxLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 291000, 291103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHBoxLayout{}
	_p.SetDriver(__rv, 291000, false)
	return _p
}

//enum QHeaderView_ResizeMode - QHeaderView::ResizeMode
type QHeaderView_ResizeMode uint32

const (
	QHeaderView_Interactive      QHeaderView_ResizeMode = 0
	QHeaderView_Stretch          QHeaderView_ResizeMode = 1
	QHeaderView_Fixed            QHeaderView_ResizeMode = 2
	QHeaderView_ResizeToContents QHeaderView_ResizeMode = 3
	QHeaderView_Custom           QHeaderView_ResizeMode = QHeaderView_Fixed
)

//struct QHeaderView : QHeaderView
type QHeaderView struct {
	QAbstractItemView
}

// New QHeaderView from driver
func NewHeaderViewFromDriver(drv Driver) *QHeaderView {
	_p := &QHeaderView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QHeaderView) OnSectionEntered(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionPressed(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionHandleDoubleClicked(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnGeometriesChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(292000, 292105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionResized(fn func(int32, int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSortIndicatorChanged(fn func(int32, Qt_SortOrder)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionMoved(fn func(int32, int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionAutoResize(fn func(int32, QHeaderView_ResizeMode)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionDoubleClicked(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionClicked(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QHeaderView) OnSectionCountChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(292000, 292112, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QHeaderView::cascadingSectionResizes()
func (q *QHeaderView) CascadingSectionResizes() bool {
	var __rv bool
	q.Drv(292000, 292113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::count()
func (q *QHeaderView) Count() int32 {
	var __rv int32
	q.Drv(292000, 292114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::defaultAlignment()
func (q *QHeaderView) DefaultAlignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(292000, 292115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::defaultSectionSize()
func (q *QHeaderView) DefaultSectionSize() int32 {
	var __rv int32
	q.Drv(292000, 292116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::headerDataChanged(Qt::Orientation,int,int)
func (q *QHeaderView) HeaderDataChanged(orientation Qt_Orientation, logicalFirst int32, logicalLast int32) {
	q.Drv(292000, 292117, unsafe.Pointer(&orientation), unsafe.Pointer(&logicalFirst), unsafe.Pointer(&logicalLast), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::hiddenSectionCount()
func (q *QHeaderView) HiddenSectionCount() int32 {
	var __rv int32
	q.Drv(292000, 292118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::hideSection(int)
func (q *QHeaderView) HideSection(logicalIndex int32) {
	q.Drv(292000, 292119, unsafe.Pointer(&logicalIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::highlightSections()
func (q *QHeaderView) HighlightSections() bool {
	var __rv bool
	q.Drv(292000, 292120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::initialize()
func (q *QHeaderView) Initialize() {
	q.Drv(292000, 292121, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::initializeSections()
func (q *QHeaderView) InitializeSections() {
	q.Drv(292000, 292122, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::initializeSections(int,int)
func (q *QHeaderView) InitializeSectionsWithStartEnd(start int32, end int32) {
	q.Drv(292000, 292123, unsafe.Pointer(&start), unsafe.Pointer(&end), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::isClickable()
func (q *QHeaderView) SectionsClickable() bool {
	var __rv bool
	q.Drv(292000, 292124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::isMovable()
func (q *QHeaderView) SectionsMovable() bool {
	var __rv bool
	q.Drv(292000, 292125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::isSectionHidden(int)
func (q *QHeaderView) IsSectionHidden(logicalIndex int32) bool {
	var __rv bool
	q.Drv(292000, 292126, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::isSortIndicatorShown()
func (q *QHeaderView) IsSortIndicatorShown() bool {
	var __rv bool
	q.Drv(292000, 292127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::length()
func (q *QHeaderView) Length() int32 {
	var __rv int32
	q.Drv(292000, 292128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::logicalIndex(int)
func (q *QHeaderView) LogicalIndex(visualIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292129, unsafe.Pointer(&visualIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::logicalIndexAt(QPoint const&)
func (q *QHeaderView) LogicalIndexAt(pos *QPoint) int32 {
	var __rv int32
	q.Drv(292000, 292130, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::logicalIndexAt(int)
func (q *QHeaderView) LogicalIndexAtWithPosition(position int32) int32 {
	var __rv int32
	q.Drv(292000, 292131, unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::logicalIndexAt(int,int)
func (q *QHeaderView) LogicalIndexAtWithXY(x int32, y int32) int32 {
	var __rv int32
	q.Drv(292000, 292132, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::minimumSectionSize()
func (q *QHeaderView) MinimumSectionSize() int32 {
	var __rv int32
	q.Drv(292000, 292133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::moveSection(int,int)
func (q *QHeaderView) MoveSection(from int32, to int32) {
	q.Drv(292000, 292134, unsafe.Pointer(&from), unsafe.Pointer(&to), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::offset()
func (q *QHeaderView) Offset() int32 {
	var __rv int32
	q.Drv(292000, 292135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::orientation()
func (q *QHeaderView) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(292000, 292136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::paintSection(QPainter*,QRect const&,int)
func (q *QHeaderView) PaintSection(painter *QPainter, rect *QRect, logicalIndex int32) {
	q.Drv(292000, 292137, Native(painter), Native(rect), unsafe.Pointer(&logicalIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::resizeMode(int)
func (q *QHeaderView) SectionResizeMode(logicalIndex int32) QHeaderView_ResizeMode {
	var __rv QHeaderView_ResizeMode
	q.Drv(292000, 292138, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::resizeSection(int,int)
func (q *QHeaderView) ResizeSection(logicalIndex int32, size int32) {
	q.Drv(292000, 292139, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::resizeSections()
func (q *QHeaderView) ResizeSections() {
	q.Drv(292000, 292140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::resizeSections(QHeaderView::ResizeMode)
func (q *QHeaderView) ResizeSectionsWithMode(mode QHeaderView_ResizeMode) {
	q.Drv(292000, 292141, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::restoreState(QByteArray const&)
func (q *QHeaderView) RestoreState(state []byte) bool {
	_state := NewCByteArrayHead(state)
	defer FreeCByteArrayHead(_state)
	var __rv bool
	q.Drv(292000, 292142, unsafe.Pointer(_state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::saveState()
func (q *QHeaderView) SaveState() []byte {
	var __rv []byte
	q.Drv(292000, 292143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionPosition(int)
func (q *QHeaderView) SectionPosition(logicalIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292144, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionSize(int)
func (q *QHeaderView) SectionSize(logicalIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292145, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionSizeFromContents(int)
func (q *QHeaderView) SectionSizeFromContents(logicalIndex int32) *QSize {
	var __rv uintptr
	q.Drv(292000, 292146, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QHeaderView::sectionSizeHint(int)
func (q *QHeaderView) SectionSizeHint(logicalIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292147, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionViewportPosition(int)
func (q *QHeaderView) SectionViewportPosition(logicalIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292148, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionsAboutToBeRemoved(QModelIndex const&,int,int)
func (q *QHeaderView) SectionsAboutToBeRemoved(parent *QModelIndex, logicalFirst int32, logicalLast int32) {
	q.Drv(292000, 292149, Native(parent), unsafe.Pointer(&logicalFirst), unsafe.Pointer(&logicalLast), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::sectionsHidden()
func (q *QHeaderView) SectionsHidden() bool {
	var __rv bool
	q.Drv(292000, 292150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sectionsInserted(QModelIndex const&,int,int)
func (q *QHeaderView) SectionsInserted(parent *QModelIndex, logicalFirst int32, logicalLast int32) {
	q.Drv(292000, 292151, Native(parent), unsafe.Pointer(&logicalFirst), unsafe.Pointer(&logicalLast), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::sectionsMoved()
func (q *QHeaderView) SectionsMoved() bool {
	var __rv bool
	q.Drv(292000, 292152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::setCascadingSectionResizes(bool)
func (q *QHeaderView) SetCascadingSectionResizes(enable bool) {
	q.Drv(292000, 292153, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setClickable(bool)
func (q *QHeaderView) SetSectionsClickable(clickable bool) {
	q.Drv(292000, 292154, unsafe.Pointer(&clickable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setDefaultAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QHeaderView) SetDefaultAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(292000, 292155, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setDefaultSectionSize(int)
func (q *QHeaderView) SetDefaultSectionSize(size int32) {
	q.Drv(292000, 292156, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setHighlightSections(bool)
func (q *QHeaderView) SetHighlightSections(highlight bool) {
	q.Drv(292000, 292157, unsafe.Pointer(&highlight), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setMinimumSectionSize(int)
func (q *QHeaderView) SetMinimumSectionSize(size int32) {
	q.Drv(292000, 292158, unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setMovable(bool)
func (q *QHeaderView) SetSectionsMovable(movable bool) {
	q.Drv(292000, 292159, unsafe.Pointer(&movable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setOffset(int)
func (q *QHeaderView) SetOffset(offset int32) {
	q.Drv(292000, 292160, unsafe.Pointer(&offset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setOffsetToLastSection()
func (q *QHeaderView) SetOffsetToLastSection() {
	q.Drv(292000, 292161, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setOffsetToSectionPosition(int)
func (q *QHeaderView) SetOffsetToSectionPosition(visualIndex int32) {
	q.Drv(292000, 292162, unsafe.Pointer(&visualIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setResizeMode(QHeaderView::ResizeMode)
func (q *QHeaderView) SetSectionResizeMode(mode QHeaderView_ResizeMode) {
	q.Drv(292000, 292163, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setResizeMode(int,QHeaderView::ResizeMode)
func (q *QHeaderView) SetSectionResizeModeWithLogicalindexMode(logicalIndex int32, mode QHeaderView_ResizeMode) {
	q.Drv(292000, 292164, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setSectionHidden(int,bool)
func (q *QHeaderView) SetSectionHidden(logicalIndex int32, hide bool) {
	q.Drv(292000, 292165, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setSortIndicator(int,Qt::SortOrder)
func (q *QHeaderView) SetSortIndicator(logicalIndex int32, order Qt_SortOrder) {
	q.Drv(292000, 292166, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setSortIndicatorShown(bool)
func (q *QHeaderView) SetSortIndicatorShown(show bool) {
	q.Drv(292000, 292167, unsafe.Pointer(&show), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::setStretchLastSection(bool)
func (q *QHeaderView) SetStretchLastSection(stretch bool) {
	q.Drv(292000, 292168, unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::showSection(int)
func (q *QHeaderView) ShowSection(logicalIndex int32) {
	q.Drv(292000, 292169, unsafe.Pointer(&logicalIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::sortIndicatorOrder()
func (q *QHeaderView) SortIndicatorOrder() Qt_SortOrder {
	var __rv Qt_SortOrder
	q.Drv(292000, 292170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::sortIndicatorSection()
func (q *QHeaderView) SortIndicatorSection() int32 {
	var __rv int32
	q.Drv(292000, 292171, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::stretchLastSection()
func (q *QHeaderView) StretchLastSection() bool {
	var __rv bool
	q.Drv(292000, 292172, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::stretchSectionCount()
func (q *QHeaderView) StretchSectionCount() int32 {
	var __rv int32
	q.Drv(292000, 292173, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::swapSections(int,int)
func (q *QHeaderView) SwapSections(first int32, second int32) {
	q.Drv(292000, 292174, unsafe.Pointer(&first), unsafe.Pointer(&second), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::updateSection(int)
func (q *QHeaderView) UpdateSection(logicalIndex int32) {
	q.Drv(292000, 292175, unsafe.Pointer(&logicalIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHeaderView::visualIndex(int)
func (q *QHeaderView) VisualIndex(logicalIndex int32) int32 {
	var __rv int32
	q.Drv(292000, 292176, unsafe.Pointer(&logicalIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHeaderView::visualIndexAt(int)
func (q *QHeaderView) VisualIndexAt(position int32) int32 {
	var __rv int32
	q.Drv(292000, 292177, unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QHistoryState_HistoryType - QHistoryState::HistoryType
type QHistoryState_HistoryType uint32

const (
	QHistoryState_ShallowHistory QHistoryState_HistoryType = 0
	QHistoryState_DeepHistory    QHistoryState_HistoryType = 1
)

//struct QHistoryState : QHistoryState
type QHistoryState struct {
	QAbstractState
}

// New QHistoryState from driver
func NewHistoryStateFromDriver(drv Driver) *QHistoryState {
	_p := &QHistoryState{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QHistoryState::QHistoryState()
func NewHistoryState() *QHistoryState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 293000, 293102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHistoryState{}
	_p.SetDriver(__rv, 293000, false)
	return _p
}

//QHistoryState::QHistoryState(QState*)
func NewHistoryStateWithParent(parent *QState) *QHistoryState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 293000, 293103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHistoryState{}
	_p.SetDriver(__rv, 293000, false)
	return _p
}

//QHistoryState::QHistoryState(QHistoryState::HistoryType,QState*)
func NewHistoryStateWithTypeParent(_type QHistoryState_HistoryType, parent *QState) *QHistoryState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 293000, 293104, unsafe.Pointer(&_type), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QHistoryState{}
	_p.SetDriver(__rv, 293000, false)
	return _p
}

//QHistoryState::defaultState()
func (q *QHistoryState) DefaultState() *QAbstractState {
	var __rv uintptr
	q.Drv(293000, 293105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractState{}
	_rp.SetDriver(__rv, 205000, false)
	return _rp
}

//QHistoryState::historyType()
func (q *QHistoryState) HistoryType() QHistoryState_HistoryType {
	var __rv QHistoryState_HistoryType
	q.Drv(293000, 293106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QHistoryState::setDefaultState(QAbstractState*)
func (q *QHistoryState) SetDefaultState(state *QAbstractState) {
	q.Drv(293000, 293107, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QHistoryState::setHistoryType(QHistoryState::HistoryType)
func (q *QHistoryState) SetHistoryType(_type QHistoryState_HistoryType) {
	q.Drv(293000, 293108, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QIODevice_OpenModeFlag - QIODevice::OpenModeFlag
type QIODevice_OpenModeFlag uint32

const (
	QIODevice_NotOpen    QIODevice_OpenModeFlag = 0x0000
	QIODevice_ReadOnly   QIODevice_OpenModeFlag = 0x0001
	QIODevice_WriteOnly  QIODevice_OpenModeFlag = 0x0002
	QIODevice_ReadWrite  QIODevice_OpenModeFlag = QIODevice_ReadOnly | QIODevice_WriteOnly
	QIODevice_Append     QIODevice_OpenModeFlag = 0x0004
	QIODevice_Truncate   QIODevice_OpenModeFlag = 0x0008
	QIODevice_Text       QIODevice_OpenModeFlag = 0x0010
	QIODevice_Unbuffered QIODevice_OpenModeFlag = 0x0020
)

//struct QIODevice : QIODevice
type QIODevice struct {
	QObject
}

func (q *QIODevice) OnBytesWritten(fn func(int64)) uintptr {
	var __rv uintptr
	q.Drv(294000, 294102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QIODevice) OnReadyRead(fn func()) uintptr {
	var __rv uintptr
	q.Drv(294000, 294103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QIODevice) OnReadChannelFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(294000, 294104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QIODevice) OnAboutToClose(fn func()) uintptr {
	var __rv uintptr
	q.Drv(294000, 294105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QIODevice::atEnd()
func (q *QIODevice) AtEnd() bool {
	var __rv bool
	q.Drv(294000, 294106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::bytesAvailable()
func (q *QIODevice) BytesAvailable() int64 {
	var __rv int64
	q.Drv(294000, 294107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::bytesToWrite()
func (q *QIODevice) BytesToWrite() int64 {
	var __rv int64
	q.Drv(294000, 294108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::canReadLine()
func (q *QIODevice) CanReadLine() bool {
	var __rv bool
	q.Drv(294000, 294109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::close()
func (q *QIODevice) Close() {
	q.Drv(294000, 294110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIODevice::errorString()
func (q *QIODevice) ErrorString() string {
	var __rv C.string_head
	q.Drv(294000, 294111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QIODevice::getChar(char*)
func (q *QIODevice) GetChar(c *byte) bool {
	var __rv bool
	q.Drv(294000, 294112, unsafe.Pointer(&c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::isOpen()
func (q *QIODevice) IsOpen() bool {
	var __rv bool
	q.Drv(294000, 294113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::isReadable()
func (q *QIODevice) IsReadable() bool {
	var __rv bool
	q.Drv(294000, 294114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::isSequential()
func (q *QIODevice) IsSequential() bool {
	var __rv bool
	q.Drv(294000, 294115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::isTextModeEnabled()
func (q *QIODevice) IsTextModeEnabled() bool {
	var __rv bool
	q.Drv(294000, 294116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::isWritable()
func (q *QIODevice) IsWritable() bool {
	var __rv bool
	q.Drv(294000, 294117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::open(QFlags<QIODevice::OpenModeFlag>)
func (q *QIODevice) Open(mode QIODevice_OpenModeFlag) bool {
	var __rv bool
	q.Drv(294000, 294118, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::openMode()
func (q *QIODevice) OpenMode() QIODevice_OpenModeFlag {
	var __rv QIODevice_OpenModeFlag
	q.Drv(294000, 294119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::peek(qint64)
func (q *QIODevice) Peek(maxlen int64) []byte {
	var __rv []byte
	q.Drv(294000, 294120, unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::peek(char*,qint64)
func (q *QIODevice) PeekWithDataMaxlen(data *byte, maxlen int64) int64 {
	var __rv int64
	q.Drv(294000, 294121, unsafe.Pointer(&data), unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::pos()
func (q *QIODevice) Pos() int64 {
	var __rv int64
	q.Drv(294000, 294122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::putChar(char)
func (q *QIODevice) PutChar(c byte) bool {
	var __rv bool
	q.Drv(294000, 294123, unsafe.Pointer(&c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::read(qint64)
func (q *QIODevice) Read(maxlen int64) []byte {
	var __rv []byte
	q.Drv(294000, 294124, unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::read(char*,qint64)
func (q *QIODevice) ReadWithDataMaxlen(data *byte, maxlen int64) int64 {
	var __rv int64
	q.Drv(294000, 294125, unsafe.Pointer(&data), unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readAll()
func (q *QIODevice) ReadAll() []byte {
	var __rv []byte
	q.Drv(294000, 294126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readData(char*,qint64)
func (q *QIODevice) ReadData(data *byte, maxlen int64) int64 {
	var __rv int64
	q.Drv(294000, 294127, unsafe.Pointer(&data), unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readLine()
func (q *QIODevice) ReadLine() []byte {
	var __rv []byte
	q.Drv(294000, 294128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readLine(qint64)
func (q *QIODevice) ReadLineWithMaxlen(maxlen int64) []byte {
	var __rv []byte
	q.Drv(294000, 294129, unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readLine(char*,qint64)
func (q *QIODevice) ReadLineWithDataMaxlen(data *byte, maxlen int64) int64 {
	var __rv int64
	q.Drv(294000, 294130, unsafe.Pointer(&data), unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::readLineData(char*,qint64)
func (q *QIODevice) ReadLineData(data *byte, maxlen int64) int64 {
	var __rv int64
	q.Drv(294000, 294131, unsafe.Pointer(&data), unsafe.Pointer(&maxlen), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::reset()
func (q *QIODevice) Reset() bool {
	var __rv bool
	q.Drv(294000, 294132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::seek(qint64)
func (q *QIODevice) Seek(pos int64) bool {
	var __rv bool
	q.Drv(294000, 294133, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::setErrorString(QString const&)
func (q *QIODevice) SetErrorString(errorString string) {
	_errorString := NewCStringHead(errorString)
	defer FreeCStringHead(_errorString)
	q.Drv(294000, 294134, unsafe.Pointer(_errorString), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIODevice::setOpenMode(QFlags<QIODevice::OpenModeFlag>)
func (q *QIODevice) SetOpenMode(openMode QIODevice_OpenModeFlag) {
	q.Drv(294000, 294135, unsafe.Pointer(&openMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIODevice::setTextModeEnabled(bool)
func (q *QIODevice) SetTextModeEnabled(enabled bool) {
	q.Drv(294000, 294136, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIODevice::size()
func (q *QIODevice) Size() int64 {
	var __rv int64
	q.Drv(294000, 294137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::ungetChar(char)
func (q *QIODevice) UngetChar(c byte) {
	q.Drv(294000, 294138, unsafe.Pointer(&c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIODevice::waitForBytesWritten(int)
func (q *QIODevice) WaitForBytesWritten(msecs int32) bool {
	var __rv bool
	q.Drv(294000, 294139, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::waitForReadyRead(int)
func (q *QIODevice) WaitForReadyRead(msecs int32) bool {
	var __rv bool
	q.Drv(294000, 294140, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::write(QByteArray const&)
func (q *QIODevice) Write(data []byte) int64 {
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	var __rv int64
	q.Drv(294000, 294141, unsafe.Pointer(_data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::write(char const*,qint64)
func (q *QIODevice) WriteWithDataLen(data *byte, len int64) int64 {
	var __rv int64
	q.Drv(294000, 294142, unsafe.Pointer(&data), unsafe.Pointer(&len), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIODevice::writeData(char const*,qint64)
func (q *QIODevice) WriteData(data *byte, len int64) int64 {
	var __rv int64
	q.Drv(294000, 294143, unsafe.Pointer(&data), unsafe.Pointer(&len), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QInputDialog_InputMode - QInputDialog::InputMode
type QInputDialog_InputMode uint32

const (
	QInputDialog_TextInput   QInputDialog_InputMode = 0
	QInputDialog_IntInput    QInputDialog_InputMode = 1
	QInputDialog_DoubleInput QInputDialog_InputMode = 2
)

//enum QInputDialog_InputDialogOption - QInputDialog::InputDialogOption
type QInputDialog_InputDialogOption uint32

const (
	QInputDialog_NoButtons                   QInputDialog_InputDialogOption = 0x00000001
	QInputDialog_UseListViewForComboBoxItems QInputDialog_InputDialogOption = 0x00000002
)

//struct QInputDialog : QInputDialog
type QInputDialog struct {
	QDialog
}

// New QInputDialog from driver
func NewInputDialogFromDriver(drv Driver) *QInputDialog {
	_p := &QInputDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QInputDialog) OnDoubleValueSelected(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QInputDialog) OnDoubleValueChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QInputDialog) OnTextValueChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QInputDialog) OnIntValueChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QInputDialog) OnIntValueSelected(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QInputDialog) OnTextValueSelected(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(295000, 295107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QInputDialog::QInputDialog()
func NewInputDialog() *QInputDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 295000, 295108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputDialog{}
	_p.SetDriver(__rv, 295000, false)
	return _p
}

//QInputDialog::QInputDialog(QWidget*,QFlags<Qt::WindowType>)
func NewInputDialogWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QInputDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 295000, 295109, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QInputDialog{}
	_p.SetDriver(__rv, 295000, false)
	return _p
}

//QInputDialog::cancelButtonText()
func (q *QInputDialog) CancelButtonText() string {
	var __rv C.string_head
	q.Drv(295000, 295110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::comboBoxItems()
func (q *QInputDialog) ComboBoxItems() []string {
	var __rv []string
	q.Drv(295000, 295111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::doubleDecimals()
func (q *QInputDialog) DoubleDecimals() int32 {
	var __rv int32
	q.Drv(295000, 295112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::doubleMaximum()
func (q *QInputDialog) DoubleMaximum() float64 {
	var __rv float64
	q.Drv(295000, 295113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::doubleMinimum()
func (q *QInputDialog) DoubleMinimum() float64 {
	var __rv float64
	q.Drv(295000, 295114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::doubleValue()
func (q *QInputDialog) DoubleValue() float64 {
	var __rv float64
	q.Drv(295000, 295115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::getDouble(QWidget*,QString const&,QString const&,double,double,double,int,bool*,QFlags<Qt::WindowType>)
func QInputDialogGetDouble(parent QWidgetInterface, title string, label string, value float64, minValue float64, maxValue float64, decimals int32, ok *bool, flags Qt_WindowType) float64 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv float64
	DirectQtDrv(nil, 295000, 295116, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&value), unsafe.Pointer(&minValue), unsafe.Pointer(&maxValue), unsafe.Pointer(&decimals), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil)
	return __rv
}

//QInputDialog::getDouble(QWidget*,QString const&,QString const&,double,double,double,int,bool*,QFlags<Qt::WindowType>)
func (q *QInputDialog) GetDouble(parent QWidgetInterface, title string, label string, value float64, minValue float64, maxValue float64, decimals int32, ok *bool, flags Qt_WindowType) float64 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv float64
	q.Drv(295000, 295116, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&value), unsafe.Pointer(&minValue), unsafe.Pointer(&maxValue), unsafe.Pointer(&decimals), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil)
	return __rv
}

//QInputDialog::getInt(QWidget*,QString const&,QString const&,int,int,int,int,bool*,QFlags<Qt::WindowType>)
func QInputDialogGetInt(parent QWidgetInterface, title string, label string, value int32, minValue int32, maxValue int32, step int32, ok *bool, flags Qt_WindowType) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv int32
	DirectQtDrv(nil, 295000, 295117, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&value), unsafe.Pointer(&minValue), unsafe.Pointer(&maxValue), unsafe.Pointer(&step), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil)
	return __rv
}

//QInputDialog::getInt(QWidget*,QString const&,QString const&,int,int,int,int,bool*,QFlags<Qt::WindowType>)
func (q *QInputDialog) GetInt(parent QWidgetInterface, title string, label string, value int32, minValue int32, maxValue int32, step int32, ok *bool, flags Qt_WindowType) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv int32
	q.Drv(295000, 295117, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&value), unsafe.Pointer(&minValue), unsafe.Pointer(&maxValue), unsafe.Pointer(&step), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil)
	return __rv
}

//QInputDialog::getItem(QWidget*,QString const&,QString const&,QStringList const&,int,bool,bool*,QFlags<Qt::WindowType>)
func QInputDialogGetItem(parent QWidgetInterface, title string, label string, items []string, current int32, editable bool, ok *bool, flags Qt_WindowType) string {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	_items, _items_size := NewCSArray(items)
	defer FreeCSArray(_items, _items_size)
	var __rv C.string_head
	DirectQtDrv(nil, 295000, 295118, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&_items[0]), unsafe.Pointer(&current), unsafe.Pointer(&editable), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::getItem(QWidget*,QString const&,QString const&,QStringList const&,int,bool,bool*,QFlags<Qt::WindowType>)
func (q *QInputDialog) GetItem(parent QWidgetInterface, title string, label string, items []string, current int32, editable bool, ok *bool, flags Qt_WindowType) string {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	_items, _items_size := NewCSArray(items)
	defer FreeCSArray(_items, _items_size)
	var __rv C.string_head
	q.Drv(295000, 295118, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&_items[0]), unsafe.Pointer(&current), unsafe.Pointer(&editable), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::getText(QWidget*,QString const&,QString const&,QLineEdit::EchoMode,QString const&,bool*,QFlags<Qt::WindowType>)
func QInputDialogGetText(parent QWidgetInterface, title string, label string, echo QLineEdit_EchoMode, text string, ok *bool, flags Qt_WindowType) string {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	DirectQtDrv(nil, 295000, 295119, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&echo), unsafe.Pointer(_text), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::getText(QWidget*,QString const&,QString const&,QLineEdit::EchoMode,QString const&,bool*,QFlags<Qt::WindowType>)
func (q *QInputDialog) GetText(parent QWidgetInterface, title string, label string, echo QLineEdit_EchoMode, text string, ok *bool, flags Qt_WindowType) string {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv C.string_head
	q.Drv(295000, 295119, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_label), unsafe.Pointer(&echo), unsafe.Pointer(_text), unsafe.Pointer(&ok), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::inputMode()
func (q *QInputDialog) InputMode() QInputDialog_InputMode {
	var __rv QInputDialog_InputMode
	q.Drv(295000, 295120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::intMaximum()
func (q *QInputDialog) IntMaximum() int32 {
	var __rv int32
	q.Drv(295000, 295121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::intMinimum()
func (q *QInputDialog) IntMinimum() int32 {
	var __rv int32
	q.Drv(295000, 295122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::intStep()
func (q *QInputDialog) IntStep() int32 {
	var __rv int32
	q.Drv(295000, 295123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::intValue()
func (q *QInputDialog) IntValue() int32 {
	var __rv int32
	q.Drv(295000, 295124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::isComboBoxEditable()
func (q *QInputDialog) IsComboBoxEditable() bool {
	var __rv bool
	q.Drv(295000, 295125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::labelText()
func (q *QInputDialog) LabelText() string {
	var __rv C.string_head
	q.Drv(295000, 295126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::okButtonText()
func (q *QInputDialog) OkButtonText() string {
	var __rv C.string_head
	q.Drv(295000, 295127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QInputDialog::open()
func (q *QInputDialog) Open() {
	q.Drv(295000, 295128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::open(QObject*,char const*)
func (q *QInputDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(295000, 295129, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::options()
func (q *QInputDialog) Options() QInputDialog_InputDialogOption {
	var __rv QInputDialog_InputDialogOption
	q.Drv(295000, 295130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::setCancelButtonText(QString const&)
func (q *QInputDialog) SetCancelButtonText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(295000, 295131, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setComboBoxEditable(bool)
func (q *QInputDialog) SetComboBoxEditable(editable bool) {
	q.Drv(295000, 295132, unsafe.Pointer(&editable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setComboBoxItems(QStringList const&)
func (q *QInputDialog) SetComboBoxItems(items []string) {
	_items, _items_size := NewCSArray(items)
	defer FreeCSArray(_items, _items_size)
	q.Drv(295000, 295133, unsafe.Pointer(&_items[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setDoubleDecimals(int)
func (q *QInputDialog) SetDoubleDecimals(decimals int32) {
	q.Drv(295000, 295134, unsafe.Pointer(&decimals), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setDoubleMaximum(double)
func (q *QInputDialog) SetDoubleMaximum(max float64) {
	q.Drv(295000, 295135, unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setDoubleMinimum(double)
func (q *QInputDialog) SetDoubleMinimum(min float64) {
	q.Drv(295000, 295136, unsafe.Pointer(&min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setDoubleRange(double,double)
func (q *QInputDialog) SetDoubleRange(min float64, max float64) {
	q.Drv(295000, 295137, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setDoubleValue(double)
func (q *QInputDialog) SetDoubleValue(value float64) {
	q.Drv(295000, 295138, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setInputMode(QInputDialog::InputMode)
func (q *QInputDialog) SetInputMode(mode QInputDialog_InputMode) {
	q.Drv(295000, 295139, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setIntMaximum(int)
func (q *QInputDialog) SetIntMaximum(max int32) {
	q.Drv(295000, 295140, unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setIntMinimum(int)
func (q *QInputDialog) SetIntMinimum(min int32) {
	q.Drv(295000, 295141, unsafe.Pointer(&min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setIntRange(int,int)
func (q *QInputDialog) SetIntRange(min int32, max int32) {
	q.Drv(295000, 295142, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setIntStep(int)
func (q *QInputDialog) SetIntStep(step int32) {
	q.Drv(295000, 295143, unsafe.Pointer(&step), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setIntValue(int)
func (q *QInputDialog) SetIntValue(value int32) {
	q.Drv(295000, 295144, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setLabelText(QString const&)
func (q *QInputDialog) SetLabelText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(295000, 295145, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setOkButtonText(QString const&)
func (q *QInputDialog) SetOkButtonText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(295000, 295146, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setOption(QInputDialog::InputDialogOption)
func (q *QInputDialog) SetOption(option QInputDialog_InputDialogOption) {
	q.Drv(295000, 295147, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setOption(QInputDialog::InputDialogOption,bool)
func (q *QInputDialog) SetOptionWithOptionOn(option QInputDialog_InputDialogOption, on bool) {
	q.Drv(295000, 295148, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setOptions(QFlags<QInputDialog::InputDialogOption>)
func (q *QInputDialog) SetOptions(options QInputDialog_InputDialogOption) {
	q.Drv(295000, 295149, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setTextEchoMode(QLineEdit::EchoMode)
func (q *QInputDialog) SetTextEchoMode(mode QLineEdit_EchoMode) {
	q.Drv(295000, 295150, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::setTextValue(QString const&)
func (q *QInputDialog) SetTextValue(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(295000, 295151, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QInputDialog::testOption(QInputDialog::InputDialogOption)
func (q *QInputDialog) TestOption(option QInputDialog_InputDialogOption) bool {
	var __rv bool
	q.Drv(295000, 295152, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::textEchoMode()
func (q *QInputDialog) TextEchoMode() QLineEdit_EchoMode {
	var __rv QLineEdit_EchoMode
	q.Drv(295000, 295153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QInputDialog::textValue()
func (q *QInputDialog) TextValue() string {
	var __rv C.string_head
	q.Drv(295000, 295154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QIntValidator : QIntValidator
type QIntValidator struct {
	QValidator
}

// New QIntValidator from driver
func NewIntValidatorFromDriver(drv Driver) *QIntValidator {
	_p := &QIntValidator{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QIntValidator::QIntValidator()
func NewIntValidator() *QIntValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 296000, 296102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIntValidator{}
	_p.SetDriver(__rv, 296000, false)
	return _p
}

//QIntValidator::QIntValidator(QObject*)
func NewIntValidatorWithParent(parent QObjectInterface) *QIntValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 296000, 296103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIntValidator{}
	_p.SetDriver(__rv, 296000, false)
	return _p
}

//QIntValidator::QIntValidator(int,int,QObject*)
func NewIntValidatorWithBottomTopParent(bottom int32, top int32, parent QObjectInterface) *QIntValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 296000, 296104, unsafe.Pointer(&bottom), unsafe.Pointer(&top), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QIntValidator{}
	_p.SetDriver(__rv, 296000, false)
	return _p
}

//QIntValidator::bottom()
func (q *QIntValidator) Bottom() int32 {
	var __rv int32
	q.Drv(296000, 296105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QIntValidator::setBottom(int)
func (q *QIntValidator) SetBottom(value int32) {
	q.Drv(296000, 296106, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIntValidator::setRange(int,int)
func (q *QIntValidator) SetRange(bottom int32, top int32) {
	q.Drv(296000, 296107, unsafe.Pointer(&bottom), unsafe.Pointer(&top), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIntValidator::setTop(int)
func (q *QIntValidator) SetTop(value int32) {
	q.Drv(296000, 296108, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QIntValidator::top()
func (q *QIntValidator) Top() int32 {
	var __rv int32
	q.Drv(296000, 296109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QItemDelegate : QItemDelegate
type QItemDelegate struct {
	QAbstractItemDelegate
}

// New QItemDelegate from driver
func NewItemDelegateFromDriver(drv Driver) *QItemDelegate {
	_p := &QItemDelegate{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QItemDelegate::QItemDelegate()
func NewItemDelegate() *QItemDelegate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 297000, 297102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemDelegate{}
	_p.SetDriver(__rv, 297000, false)
	return _p
}

//QItemDelegate::QItemDelegate(QObject*)
func NewItemDelegateWithParent(parent QObjectInterface) *QItemDelegate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 297000, 297103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemDelegate{}
	_p.SetDriver(__rv, 297000, false)
	return _p
}

//QItemDelegate::hasClipping()
func (q *QItemDelegate) HasClipping() bool {
	var __rv bool
	q.Drv(297000, 297104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemDelegate::itemEditorFactory()
func (q *QItemDelegate) ItemEditorFactory() *QItemEditorFactory {
	var __rv uintptr
	q.Drv(297000, 297105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemEditorFactory{}
	_rp.SetDriver(__rv, 62000, true)
	return _rp
}

//QItemDelegate::selected(QPixmap const&,QPalette const&,bool)
func (q *QItemDelegate) Selected(pixmap *QPixmap, palette *QPalette, enabled bool) *QPixmap {
	var __rv uintptr
	q.Drv(297000, 297106, Native(pixmap), Native(palette), unsafe.Pointer(&enabled), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QItemDelegate::setClipping(bool)
func (q *QItemDelegate) SetClipping(clip bool) {
	q.Drv(297000, 297107, unsafe.Pointer(&clip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemDelegate::setItemEditorFactory(QItemEditorFactory*)
func (q *QItemDelegate) SetItemEditorFactory(factory *QItemEditorFactory) {
	q.Drv(297000, 297108, Native(factory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemDelegate::textRectangle(QPainter*,QRect const&,QFont const&,QString const&)
func (q *QItemDelegate) TextRectangle(painter *QPainter, rect *QRect, font *QFont, text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(297000, 297109, Native(painter), Native(rect), Native(font), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//enum QItemSelectionModel_SelectionFlag - QItemSelectionModel::SelectionFlag
type QItemSelectionModel_SelectionFlag uint32

const (
	QItemSelectionModel_NoUpdate       QItemSelectionModel_SelectionFlag = 0x0000
	QItemSelectionModel_Clear          QItemSelectionModel_SelectionFlag = 0x0001
	QItemSelectionModel_Select         QItemSelectionModel_SelectionFlag = 0x0002
	QItemSelectionModel_Deselect       QItemSelectionModel_SelectionFlag = 0x0004
	QItemSelectionModel_Toggle         QItemSelectionModel_SelectionFlag = 0x0008
	QItemSelectionModel_Current        QItemSelectionModel_SelectionFlag = 0x0010
	QItemSelectionModel_Rows           QItemSelectionModel_SelectionFlag = 0x0020
	QItemSelectionModel_Columns        QItemSelectionModel_SelectionFlag = 0x0040
	QItemSelectionModel_SelectCurrent  QItemSelectionModel_SelectionFlag = QItemSelectionModel_Select | QItemSelectionModel_Current
	QItemSelectionModel_ToggleCurrent  QItemSelectionModel_SelectionFlag = QItemSelectionModel_Toggle | QItemSelectionModel_Current
	QItemSelectionModel_ClearAndSelect QItemSelectionModel_SelectionFlag = QItemSelectionModel_Clear | QItemSelectionModel_Select
)

//struct QItemSelectionModel : QItemSelectionModel
type QItemSelectionModel struct {
	QObject
}

// New QItemSelectionModel from driver
func NewItemSelectionModelFromDriver(drv Driver) *QItemSelectionModel {
	_p := &QItemSelectionModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QItemSelectionModel) OnCurrentRowChanged(fn func(*QModelIndex, *QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(298000, 298102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QItemSelectionModel) OnSelectionChanged(fn func(*QItemSelection, *QItemSelection)) uintptr {
	var __rv uintptr
	q.Drv(298000, 298103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QItemSelectionModel) OnCurrentChanged(fn func(*QModelIndex, *QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(298000, 298104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QItemSelectionModel) OnCurrentColumnChanged(fn func(*QModelIndex, *QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(298000, 298105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QItemSelectionModel::QItemSelectionModel(QAbstractItemModel*)
func NewItemSelectionModel(model QAbstractItemModelInterface) *QItemSelectionModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 298000, 298106, Native(model), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionModel{}
	_p.SetDriver(__rv, 298000, false)
	return _p
}

//QItemSelectionModel::QItemSelectionModel(QAbstractItemModel*,QObject*)
func NewItemSelectionModelWithModelParent(model QAbstractItemModelInterface, parent QObjectInterface) *QItemSelectionModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 298000, 298107, Native(model), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QItemSelectionModel{}
	_p.SetDriver(__rv, 298000, false)
	return _p
}

//QItemSelectionModel::clear()
func (q *QItemSelectionModel) Clear() {
	q.Drv(298000, 298108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::clearSelection()
func (q *QItemSelectionModel) ClearSelection() {
	q.Drv(298000, 298109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::columnIntersectsSelection(int,QModelIndex const&)
func (q *QItemSelectionModel) ColumnIntersectsSelection(column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(298000, 298110, unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::currentIndex()
func (q *QItemSelectionModel) CurrentIndex() *QModelIndex {
	var __rv uintptr
	q.Drv(298000, 298111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QItemSelectionModel::emitSelectionChanged(QItemSelection const&,QItemSelection const&)
func (q *QItemSelectionModel) EmitSelectionChanged(newSelection *QItemSelection, oldSelection *QItemSelection) {
	q.Drv(298000, 298112, Native(newSelection), Native(oldSelection), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::hasSelection()
func (q *QItemSelectionModel) HasSelection() bool {
	var __rv bool
	q.Drv(298000, 298113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::isColumnSelected(int,QModelIndex const&)
func (q *QItemSelectionModel) IsColumnSelected(column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(298000, 298114, unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::isRowSelected(int,QModelIndex const&)
func (q *QItemSelectionModel) IsRowSelected(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(298000, 298115, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::isSelected(QModelIndex const&)
func (q *QItemSelectionModel) IsSelected(index *QModelIndex) bool {
	var __rv bool
	q.Drv(298000, 298116, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::model()
func (q *QItemSelectionModel) Model() *QAbstractItemModel {
	var __rv uintptr
	q.Drv(298000, 298117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractItemModel{}
	_rp.SetDriver(__rv, 197000, false)
	return _rp
}

//QItemSelectionModel::reset()
func (q *QItemSelectionModel) Reset() {
	q.Drv(298000, 298118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::rowIntersectsSelection(int,QModelIndex const&)
func (q *QItemSelectionModel) RowIntersectsSelection(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(298000, 298119, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::select(QItemSelection const&,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QItemSelectionModel) SelectWithSelectionCommand(selection *QItemSelection, command QItemSelectionModel_SelectionFlag) {
	q.Drv(298000, 298120, Native(selection), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::select(QModelIndex const&,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QItemSelectionModel) SelectWithIndexCommand(index *QModelIndex, command QItemSelectionModel_SelectionFlag) {
	q.Drv(298000, 298121, Native(index), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QItemSelectionModel::selectedColumns()
func (q *QItemSelectionModel) SelectedColumns() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(298000, 298122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::selectedColumns(int)
func (q *QItemSelectionModel) SelectedColumnsWithRow(row int32) []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(298000, 298123, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::selectedIndexes()
func (q *QItemSelectionModel) SelectedIndexes() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(298000, 298124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::selectedRows()
func (q *QItemSelectionModel) SelectedRows() []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(298000, 298125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::selectedRows(int)
func (q *QItemSelectionModel) SelectedRowsWithColumn(column int32) []*QModelIndex {
	var __rv []*QModelIndex
	q.Drv(298000, 298126, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QItemSelectionModel::selection()
func (q *QItemSelectionModel) Selection() *QItemSelection {
	var __rv uintptr
	q.Drv(298000, 298127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemSelection{}
	_rp.SetDriver(__rv, 63000, true)
	return _rp
}

//QItemSelectionModel::setCurrentIndex(QModelIndex const&,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QItemSelectionModel) SetCurrentIndex(index *QModelIndex, command QItemSelectionModel_SelectionFlag) {
	q.Drv(298000, 298128, Native(index), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QKeyEventTransition : QKeyEventTransition
type QKeyEventTransition struct {
	QEventTransition
}

// New QKeyEventTransition from driver
func NewKeyEventTransitionFromDriver(drv Driver) *QKeyEventTransition {
	_p := &QKeyEventTransition{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QKeyEventTransition::QKeyEventTransition()
func NewKeyEventTransition() *QKeyEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 299000, 299102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeyEventTransition{}
	_p.SetDriver(__rv, 299000, false)
	return _p
}

//QKeyEventTransition::QKeyEventTransition(QState*)
func NewKeyEventTransitionWithSourcestate(sourceState *QState) *QKeyEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 299000, 299103, Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeyEventTransition{}
	_p.SetDriver(__rv, 299000, false)
	return _p
}

//QKeyEventTransition::QKeyEventTransition(QObject*,QEvent::Type,int,QState*)
func NewKeyEventTransitionWithObjectTypeKeySourcestate(object QObjectInterface, _type QEvent_Type, key int32, sourceState *QState) *QKeyEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 299000, 299104, Native(object), unsafe.Pointer(&_type), unsafe.Pointer(&key), Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QKeyEventTransition{}
	_p.SetDriver(__rv, 299000, false)
	return _p
}

//QKeyEventTransition::key()
func (q *QKeyEventTransition) Key() int32 {
	var __rv int32
	q.Drv(299000, 299105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEventTransition::modifierMask()
func (q *QKeyEventTransition) ModifierMask() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(299000, 299106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QKeyEventTransition::setKey(int)
func (q *QKeyEventTransition) SetKey(key int32) {
	q.Drv(299000, 299107, unsafe.Pointer(&key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QKeyEventTransition::setModifierMask(QFlags<Qt::KeyboardModifier>)
func (q *QKeyEventTransition) SetModifierMask(modifiers Qt_KeyboardModifier) {
	q.Drv(299000, 299108, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QLCDNumber_Mode - QLCDNumber::Mode
type QLCDNumber_Mode uint32

const (
	QLCDNumber_Hex QLCDNumber_Mode = 0
	QLCDNumber_Dec QLCDNumber_Mode = 1
	QLCDNumber_Oct QLCDNumber_Mode = 2
	QLCDNumber_Bin QLCDNumber_Mode = 3
)

//enum QLCDNumber_SegmentStyle - QLCDNumber::SegmentStyle
type QLCDNumber_SegmentStyle uint32

const (
	QLCDNumber_Outline QLCDNumber_SegmentStyle = 0
	QLCDNumber_Filled  QLCDNumber_SegmentStyle = 1
	QLCDNumber_Flat    QLCDNumber_SegmentStyle = 2
)

//struct QLCDNumber : QLCDNumber
type QLCDNumber struct {
	QFrame
}

// New QLCDNumber from driver
func NewLCDNumberFromDriver(drv Driver) *QLCDNumber {
	_p := &QLCDNumber{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QLCDNumber) OnOverflow(fn func()) uintptr {
	var __rv uintptr
	q.Drv(300000, 300102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QLCDNumber::QLCDNumber()
func NewLCDNumber() *QLCDNumber {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 300000, 300103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLCDNumber{}
	_p.SetDriver(__rv, 300000, false)
	return _p
}

//QLCDNumber::QLCDNumber(QWidget*)
func NewLCDNumberWithParent(parent QWidgetInterface) *QLCDNumber {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 300000, 300104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLCDNumber{}
	_p.SetDriver(__rv, 300000, false)
	return _p
}

//QLCDNumber::QLCDNumber(unsigned int,QWidget*)
func NewLCDNumberWithNumdigitsParent(numDigits uint32, parent QWidgetInterface) *QLCDNumber {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 300000, 300105, unsafe.Pointer(&numDigits), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLCDNumber{}
	_p.SetDriver(__rv, 300000, false)
	return _p
}

//QLCDNumber::checkOverflow(double)
func (q *QLCDNumber) CheckOverflow(num float64) bool {
	var __rv bool
	q.Drv(300000, 300106, unsafe.Pointer(&num), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::checkOverflow(int)
func (q *QLCDNumber) CheckOverflowWithNum(num int32) bool {
	var __rv bool
	q.Drv(300000, 300107, unsafe.Pointer(&num), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::digitCount()
func (q *QLCDNumber) DigitCount() int32 {
	var __rv int32
	q.Drv(300000, 300108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::display(QString const&)
func (q *QLCDNumber) Display(str string) {
	_str := NewCStringHead(str)
	defer FreeCStringHead(_str)
	q.Drv(300000, 300109, unsafe.Pointer(_str), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::display(double)
func (q *QLCDNumber) DisplayFWithNum(num float64) {
	q.Drv(300000, 300110, unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::display(int)
func (q *QLCDNumber) DisplayWithNum(num int32) {
	q.Drv(300000, 300111, unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::intValue()
func (q *QLCDNumber) IntValue() int32 {
	var __rv int32
	q.Drv(300000, 300112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::mode()
func (q *QLCDNumber) Mode() QLCDNumber_Mode {
	var __rv QLCDNumber_Mode
	q.Drv(300000, 300113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::segmentStyle()
func (q *QLCDNumber) SegmentStyle() QLCDNumber_SegmentStyle {
	var __rv QLCDNumber_SegmentStyle
	q.Drv(300000, 300114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::setBinMode()
func (q *QLCDNumber) SetBinMode() {
	q.Drv(300000, 300115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setDecMode()
func (q *QLCDNumber) SetDecMode() {
	q.Drv(300000, 300116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setDigitCount(int)
func (q *QLCDNumber) SetDigitCount(nDigits int32) {
	q.Drv(300000, 300117, unsafe.Pointer(&nDigits), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setHexMode()
func (q *QLCDNumber) SetHexMode() {
	q.Drv(300000, 300118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setMode(QLCDNumber::Mode)
func (q *QLCDNumber) SetMode(value QLCDNumber_Mode) {
	q.Drv(300000, 300119, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setOctMode()
func (q *QLCDNumber) SetOctMode() {
	q.Drv(300000, 300120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setSegmentStyle(QLCDNumber::SegmentStyle)
func (q *QLCDNumber) SetSegmentStyle(value QLCDNumber_SegmentStyle) {
	q.Drv(300000, 300121, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::setSmallDecimalPoint(bool)
func (q *QLCDNumber) SetSmallDecimalPoint(value bool) {
	q.Drv(300000, 300122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLCDNumber::smallDecimalPoint()
func (q *QLCDNumber) SmallDecimalPoint() bool {
	var __rv bool
	q.Drv(300000, 300123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLCDNumber::value()
func (q *QLCDNumber) Value() float64 {
	var __rv float64
	q.Drv(300000, 300124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QLabel : QLabel
type QLabel struct {
	QFrame
}

// New QLabel from driver
func NewLabelFromDriver(drv Driver) *QLabel {
	_p := &QLabel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QLabel) OnLinkActivated(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(301000, 301102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLabel) OnLinkHovered(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(301000, 301103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QLabel::QLabel()
func NewLabel() *QLabel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 301000, 301104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLabel{}
	_p.SetDriver(__rv, 301000, false)
	return _p
}

//QLabel::QLabel(QWidget*,QFlags<Qt::WindowType>)
func NewLabelWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QLabel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 301000, 301105, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLabel{}
	_p.SetDriver(__rv, 301000, false)
	return _p
}

//QLabel::QLabel(QString const&,QWidget*,QFlags<Qt::WindowType>)
func NewLabelWithTextParentFlags(text string, parent QWidgetInterface, f Qt_WindowType) *QLabel {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 301000, 301106, unsafe.Pointer(_text), Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLabel{}
	_p.SetDriver(__rv, 301000, false)
	return _p
}

//QLabel::alignment()
func (q *QLabel) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(301000, 301107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::buddy()
func (q *QLabel) Buddy() *QWidget {
	var __rv uintptr
	q.Drv(301000, 301108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QLabel::clear()
func (q *QLabel) Clear() {
	q.Drv(301000, 301109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::hasScaledContents()
func (q *QLabel) HasScaledContents() bool {
	var __rv bool
	q.Drv(301000, 301110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::hasSelectedText()
func (q *QLabel) HasSelectedText() bool {
	var __rv bool
	q.Drv(301000, 301111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::indent()
func (q *QLabel) Indent() int32 {
	var __rv int32
	q.Drv(301000, 301112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::margin()
func (q *QLabel) Margin() int32 {
	var __rv int32
	q.Drv(301000, 301113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::movie()
func (q *QLabel) Movie() *QMovie {
	var __rv uintptr
	q.Drv(301000, 301114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMovie{}
	_rp.SetDriver(__rv, 315000, false)
	return _rp
}

//QLabel::openExternalLinks()
func (q *QLabel) OpenExternalLinks() bool {
	var __rv bool
	q.Drv(301000, 301115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::picture()
func (q *QLabel) Picture() *QPicture {
	var __rv uintptr
	q.Drv(301000, 301116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPicture{}
	_rp.SetDriver(__rv, 95000, true)
	return _rp
}

//QLabel::pixmap()
func (q *QLabel) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(301000, 301117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QLabel::selectedText()
func (q *QLabel) SelectedText() string {
	var __rv C.string_head
	q.Drv(301000, 301118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLabel::selectionStart()
func (q *QLabel) SelectionStart() int32 {
	var __rv int32
	q.Drv(301000, 301119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QLabel) SetAlignment(value Qt_AlignmentFlag) {
	q.Drv(301000, 301120, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setBuddy(QWidget*)
func (q *QLabel) SetBuddy(value QWidgetInterface) {
	q.Drv(301000, 301121, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setIndent(int)
func (q *QLabel) SetIndent(value int32) {
	q.Drv(301000, 301122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setMargin(int)
func (q *QLabel) SetMargin(value int32) {
	q.Drv(301000, 301123, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setMovie(QMovie*)
func (q *QLabel) SetMovie(movie *QMovie) {
	q.Drv(301000, 301124, Native(movie), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setNum(double)
func (q *QLabel) SetNum(value float64) {
	q.Drv(301000, 301125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setNum(int)
func (q *QLabel) SetNumWithInt32(value int32) {
	q.Drv(301000, 301126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setOpenExternalLinks(bool)
func (q *QLabel) SetOpenExternalLinks(open bool) {
	q.Drv(301000, 301127, unsafe.Pointer(&open), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setPicture(QPicture const&)
func (q *QLabel) SetPicture(value *QPicture) {
	q.Drv(301000, 301128, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setPixmap(QPixmap const&)
func (q *QLabel) SetPixmap(value *QPixmap) {
	q.Drv(301000, 301129, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setScaledContents(bool)
func (q *QLabel) SetScaledContents(value bool) {
	q.Drv(301000, 301130, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setSelection(int,int)
func (q *QLabel) SetSelection(value2 int32, value3 int32) {
	q.Drv(301000, 301131, unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setText(QString const&)
func (q *QLabel) SetText(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(301000, 301132, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setTextFormat(Qt::TextFormat)
func (q *QLabel) SetTextFormat(value Qt_TextFormat) {
	q.Drv(301000, 301133, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setTextInteractionFlags(QFlags<Qt::TextInteractionFlag>)
func (q *QLabel) SetTextInteractionFlags(flags Qt_TextInteractionFlag) {
	q.Drv(301000, 301134, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::setWordWrap(bool)
func (q *QLabel) SetWordWrap(on bool) {
	q.Drv(301000, 301135, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLabel::text()
func (q *QLabel) Text() string {
	var __rv C.string_head
	q.Drv(301000, 301136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLabel::textFormat()
func (q *QLabel) TextFormat() Qt_TextFormat {
	var __rv Qt_TextFormat
	q.Drv(301000, 301137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::textInteractionFlags()
func (q *QLabel) TextInteractionFlags() Qt_TextInteractionFlag {
	var __rv Qt_TextInteractionFlag
	q.Drv(301000, 301138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLabel::wordWrap()
func (q *QLabel) WordWrap() bool {
	var __rv bool
	q.Drv(301000, 301139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QLayout_SizeConstraint - QLayout::SizeConstraint
type QLayout_SizeConstraint uint32

const (
	QLayout_SetDefaultConstraint QLayout_SizeConstraint = 0
	QLayout_SetNoConstraint      QLayout_SizeConstraint = 1
	QLayout_SetMinimumSize       QLayout_SizeConstraint = 2
	QLayout_SetFixedSize         QLayout_SizeConstraint = 3
	QLayout_SetMaximumSize       QLayout_SizeConstraint = 4
	QLayout_SetMinAndMaxSize     QLayout_SizeConstraint = 5
)

//struct QLayout : QLayout
type QLayout struct {
	QObject
}

//QLayout::activate()
func (q *QLayout) Activate() bool {
	var __rv bool
	q.Drv(302000, 302102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::addChildLayout(QLayout*)
func (q *QLayout) AddChildLayout(l QLayoutInterface) {
	q.Drv(302000, 302103, Native(l), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::addChildWidget(QWidget*)
func (q *QLayout) AddChildWidget(w QWidgetInterface) {
	q.Drv(302000, 302104, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::addItem(QLayoutItem*)
func (q *QLayout) AddItem(value *QLayoutItem) {
	q.Drv(302000, 302105, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::addWidget(QWidget*)
func (q *QLayout) AddWidget(w QWidgetInterface) {
	q.Drv(302000, 302106, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::alignmentRect(QRect const&)
func (q *QLayout) AlignmentRect(value *QRect) *QRect {
	var __rv uintptr
	q.Drv(302000, 302107, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QLayout::closestAcceptableSize(QWidget const*,QSize const&)
func QLayoutClosestAcceptableSize(w QWidgetInterface, s *QSize) *QSize {
	var __rv uintptr
	DirectQtDrv(nil, 302000, 302108, Native(w), Native(s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayout::closestAcceptableSize(QWidget const*,QSize const&)
func (q *QLayout) ClosestAcceptableSize(w QWidgetInterface, s *QSize) *QSize {
	var __rv uintptr
	q.Drv(302000, 302108, Native(w), Native(s), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayout::contentsMargins()
func (q *QLayout) ContentsMargins() *QMargins {
	var __rv uintptr
	q.Drv(302000, 302109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMargins{}
	_rp.SetDriver(__rv, 74000, true)
	return _rp
}

//QLayout::contentsRect()
func (q *QLayout) ContentsRect() *QRect {
	var __rv uintptr
	q.Drv(302000, 302110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QLayout::count()
func (q *QLayout) Count() int32 {
	var __rv int32
	q.Drv(302000, 302111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::getContentsMargins(int*,int*,int*,int*)
func (q *QLayout) GetContentsMargins(left *int32, top *int32, right *int32, bottom *int32) {
	q.Drv(302000, 302112, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::indexOf(QWidget*)
func (q *QLayout) IndexOf(value QWidgetInterface) int32 {
	var __rv int32
	q.Drv(302000, 302113, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::isEnabled()
func (q *QLayout) IsEnabled() bool {
	var __rv bool
	q.Drv(302000, 302114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::itemAt(int)
func (q *QLayout) ItemAt(index int32) *QLayoutItem {
	var __rv uintptr
	q.Drv(302000, 302115, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayoutItem{}
	_rp.SetDriver(__rv, 67000, true)
	return _rp
}

//QLayout::margin()
func (q *QLayout) Margin() int32 {
	var __rv int32
	q.Drv(302000, 302116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::menuBar()
func (q *QLayout) MenuBar() *QWidget {
	var __rv uintptr
	q.Drv(302000, 302117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QLayout::parentWidget()
func (q *QLayout) ParentWidget() *QWidget {
	var __rv uintptr
	q.Drv(302000, 302118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QLayout::removeItem(QLayoutItem*)
func (q *QLayout) RemoveItem(value *QLayoutItem) {
	q.Drv(302000, 302119, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::removeWidget(QWidget*)
func (q *QLayout) RemoveWidget(w QWidgetInterface) {
	q.Drv(302000, 302120, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QLayout) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(302000, 302121, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setAlignment(QLayout*,QFlags<Qt::AlignmentFlag>)
func (q *QLayout) SetAlignmentWithLayoutAlignment(l QLayoutInterface, alignment Qt_AlignmentFlag) bool {
	var __rv bool
	q.Drv(302000, 302122, Native(l), unsafe.Pointer(&alignment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::setAlignment(QWidget*,QFlags<Qt::AlignmentFlag>)
func (q *QLayout) SetAlignmentWithWidgetAlignment(w QWidgetInterface, alignment Qt_AlignmentFlag) bool {
	var __rv bool
	q.Drv(302000, 302123, Native(w), unsafe.Pointer(&alignment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::setContentsMargins(QMargins const&)
func (q *QLayout) SetContentsMargins(margins *QMargins) {
	q.Drv(302000, 302124, Native(margins), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setContentsMargins(int,int,int,int)
func (q *QLayout) SetContentsMarginsWithLeftTopRightBottom(left int32, top int32, right int32, bottom int32) {
	q.Drv(302000, 302125, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setEnabled(bool)
func (q *QLayout) SetEnabled(value bool) {
	q.Drv(302000, 302126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setMargin(int)
func (q *QLayout) SetMargin(value int32) {
	q.Drv(302000, 302127, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setMenuBar(QWidget*)
func (q *QLayout) SetMenuBar(w QWidgetInterface) {
	q.Drv(302000, 302128, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setSizeConstraint(QLayout::SizeConstraint)
func (q *QLayout) SetSizeConstraint(value QLayout_SizeConstraint) {
	q.Drv(302000, 302129, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::setSpacing(int)
func (q *QLayout) SetSpacing(value int32) {
	q.Drv(302000, 302130, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::sizeConstraint()
func (q *QLayout) SizeConstraint() QLayout_SizeConstraint {
	var __rv QLayout_SizeConstraint
	q.Drv(302000, 302131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::spacing()
func (q *QLayout) Spacing() int32 {
	var __rv int32
	q.Drv(302000, 302132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::takeAt(int)
func (q *QLayout) TakeAt(index int32) *QLayoutItem {
	var __rv uintptr
	q.Drv(302000, 302133, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayoutItem{}
	_rp.SetDriver(__rv, 67000, true)
	return _rp
}

//QLayout::totalHeightForWidth(int)
func (q *QLayout) TotalHeightForWidth(w int32) int32 {
	var __rv int32
	q.Drv(302000, 302134, unsafe.Pointer(&w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLayout::totalMaximumSize()
func (q *QLayout) TotalMaximumSize() *QSize {
	var __rv uintptr
	q.Drv(302000, 302135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayout::totalMinimumSize()
func (q *QLayout) TotalMinimumSize() *QSize {
	var __rv uintptr
	q.Drv(302000, 302136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayout::totalSizeHint()
func (q *QLayout) TotalSizeHint() *QSize {
	var __rv uintptr
	q.Drv(302000, 302137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QLayout::update()
func (q *QLayout) Update() {
	q.Drv(302000, 302138, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLayout::widgetEvent(QEvent*)
func (q *QLayout) WidgetEvent(value *QEvent) {
	q.Drv(302000, 302139, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QLibrary_LoadHint - QLibrary::LoadHint
type QLibrary_LoadHint uint32

const (
	QLibrary_ResolveAllSymbolsHint     QLibrary_LoadHint = 0x01
	QLibrary_ExportExternalSymbolsHint QLibrary_LoadHint = 0x02
	QLibrary_LoadArchiveMemberHint     QLibrary_LoadHint = 0x04
)

//struct QLibrary : QLibrary
type QLibrary struct {
	QObject
}

// New QLibrary from driver
func NewLibraryFromDriver(drv Driver) *QLibrary {
	_p := &QLibrary{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QLibrary::QLibrary()
func NewLibrary() *QLibrary {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 303000, 303102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLibrary{}
	_p.SetDriver(__rv, 303000, false)
	return _p
}

//QLibrary::QLibrary(QObject*)
func NewLibraryWithParent(parent QObjectInterface) *QLibrary {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 303000, 303103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLibrary{}
	_p.SetDriver(__rv, 303000, false)
	return _p
}

//QLibrary::QLibrary(QString const&,QObject*)
func NewLibraryWithFilenameParent(fileName string, parent QObjectInterface) *QLibrary {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 303000, 303104, unsafe.Pointer(_fileName), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLibrary{}
	_p.SetDriver(__rv, 303000, false)
	return _p
}

//QLibrary::QLibrary(QString const&,QString const&,QObject*)
func NewLibraryWithFilenameVersionParent(fileName string, version string, parent QObjectInterface) *QLibrary {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 303000, 303105, unsafe.Pointer(_fileName), unsafe.Pointer(_version), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLibrary{}
	_p.SetDriver(__rv, 303000, false)
	return _p
}

//QLibrary::QLibrary(QString const&,int,QObject*)
func NewLibraryWithFilenameVernumParent(fileName string, verNum int32, parent QObjectInterface) *QLibrary {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 303000, 303106, unsafe.Pointer(_fileName), unsafe.Pointer(&verNum), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLibrary{}
	_p.SetDriver(__rv, 303000, false)
	return _p
}

//QLibrary::errorString()
func (q *QLibrary) ErrorString() string {
	var __rv C.string_head
	q.Drv(303000, 303107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibrary::fileName()
func (q *QLibrary) FileName() string {
	var __rv C.string_head
	q.Drv(303000, 303108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLibrary::isLibrary(QString const&)
func QLibraryIsLibrary(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	DirectQtDrv(nil, 303000, 303109, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::isLibrary(QString const&)
func (q *QLibrary) IsLibrary(fileName string) bool {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv bool
	q.Drv(303000, 303109, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::isLoaded()
func (q *QLibrary) IsLoaded() bool {
	var __rv bool
	q.Drv(303000, 303110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::load()
func (q *QLibrary) Load() bool {
	var __rv bool
	q.Drv(303000, 303111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::loadHints()
func (q *QLibrary) LoadHints() QLibrary_LoadHint {
	var __rv QLibrary_LoadHint
	q.Drv(303000, 303112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(char const*)
func (q *QLibrary) Resolve(symbol string) uintptr {
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	q.Drv(303000, 303113, unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,char const*)
func QLibraryResolveWithFilenameSymbol(fileName string, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	DirectQtDrv(nil, 303000, 303114, unsafe.Pointer(_fileName), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,char const*)
func (q *QLibrary) ResolveWithFilenameSymbol(fileName string, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	q.Drv(303000, 303114, unsafe.Pointer(_fileName), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,QString const&,char const*)
func QLibraryResolveWithFilenameVersionSymbol(fileName string, version string, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	DirectQtDrv(nil, 303000, 303115, unsafe.Pointer(_fileName), unsafe.Pointer(_version), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,QString const&,char const*)
func (q *QLibrary) ResolveWithFilenameVersionSymbol(fileName string, version string, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	q.Drv(303000, 303115, unsafe.Pointer(_fileName), unsafe.Pointer(_version), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,int,char const*)
func QLibraryResolveWithFilenameVernumSymbol(fileName string, verNum int32, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	DirectQtDrv(nil, 303000, 303116, unsafe.Pointer(_fileName), unsafe.Pointer(&verNum), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::resolve(QString const&,int,char const*)
func (q *QLibrary) ResolveWithFilenameVernumSymbol(fileName string, verNum int32, symbol string) uintptr {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_symbol := NewCStringHead(symbol)
	defer FreeCStringHead(_symbol)
	var __rv uintptr
	q.Drv(303000, 303116, unsafe.Pointer(_fileName), unsafe.Pointer(&verNum), unsafe.Pointer(_symbol), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLibrary::setFileName(QString const&)
func (q *QLibrary) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(303000, 303117, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLibrary::setFileNameAndVersion(QString const&,QString const&)
func (q *QLibrary) SetFileNameAndVersionWithFilenameVersion(fileName string, version string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_version := NewCStringHead(version)
	defer FreeCStringHead(_version)
	q.Drv(303000, 303118, unsafe.Pointer(_fileName), unsafe.Pointer(_version), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLibrary::setFileNameAndVersion(QString const&,int)
func (q *QLibrary) SetFileNameAndVersionWithFilenameVernum(fileName string, verNum int32) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(303000, 303119, unsafe.Pointer(_fileName), unsafe.Pointer(&verNum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLibrary::setLoadHints(QFlags<QLibrary::LoadHint>)
func (q *QLibrary) SetLoadHints(hints QLibrary_LoadHint) {
	q.Drv(303000, 303120, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLibrary::unload()
func (q *QLibrary) Unload() bool {
	var __rv bool
	q.Drv(303000, 303121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QLineEdit_EchoMode - QLineEdit::EchoMode
type QLineEdit_EchoMode uint32

const (
	QLineEdit_Normal             QLineEdit_EchoMode = 0
	QLineEdit_NoEcho             QLineEdit_EchoMode = 1
	QLineEdit_Password           QLineEdit_EchoMode = 2
	QLineEdit_PasswordEchoOnEdit QLineEdit_EchoMode = 3
)

//struct QLineEdit : QLineEdit
type QLineEdit struct {
	QWidget
}

// New QLineEdit from driver
func NewLineEditFromDriver(drv Driver) *QLineEdit {
	_p := &QLineEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QLineEdit) OnTextEdited(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(304000, 304102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLineEdit) OnReturnPressed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(304000, 304103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLineEdit) OnCursorPositionChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(304000, 304104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLineEdit) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(304000, 304105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLineEdit) OnTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(304000, 304106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QLineEdit) OnEditingFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(304000, 304107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QLineEdit::QLineEdit()
func NewLineEdit() *QLineEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 304000, 304108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineEdit{}
	_p.SetDriver(__rv, 304000, false)
	return _p
}

//QLineEdit::QLineEdit(QWidget*)
func NewLineEditWithParent(parent QWidgetInterface) *QLineEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 304000, 304109, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineEdit{}
	_p.SetDriver(__rv, 304000, false)
	return _p
}

//QLineEdit::QLineEdit(QString const&,QWidget*)
func NewLineEditWithStringParent(value2 string, parent QWidgetInterface) *QLineEdit {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 304000, 304110, unsafe.Pointer(_value2), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QLineEdit{}
	_p.SetDriver(__rv, 304000, false)
	return _p
}

//QLineEdit::alignment()
func (q *QLineEdit) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(304000, 304111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::backspace()
func (q *QLineEdit) Backspace() {
	q.Drv(304000, 304112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::clear()
func (q *QLineEdit) Clear() {
	q.Drv(304000, 304113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::completer()
func (q *QLineEdit) Completer() *QCompleter {
	var __rv uintptr
	q.Drv(304000, 304114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCompleter{}
	_rp.SetDriver(__rv, 222000, false)
	return _rp
}

//QLineEdit::copy()
func (q *QLineEdit) Copy() {
	q.Drv(304000, 304115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::createStandardContextMenu()
func (q *QLineEdit) CreateStandardContextMenu() *QMenu {
	var __rv uintptr
	q.Drv(304000, 304116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QLineEdit::cursorBackward(bool)
func (q *QLineEdit) CursorBackward(mark bool) {
	q.Drv(304000, 304117, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cursorBackward(bool,int)
func (q *QLineEdit) CursorBackwardWithMarkSteps(mark bool, steps int32) {
	q.Drv(304000, 304118, unsafe.Pointer(&mark), unsafe.Pointer(&steps), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cursorForward(bool)
func (q *QLineEdit) CursorForward(mark bool) {
	q.Drv(304000, 304119, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cursorForward(bool,int)
func (q *QLineEdit) CursorForwardWithMarkSteps(mark bool, steps int32) {
	q.Drv(304000, 304120, unsafe.Pointer(&mark), unsafe.Pointer(&steps), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cursorPosition()
func (q *QLineEdit) CursorPosition() int32 {
	var __rv int32
	q.Drv(304000, 304121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::cursorPositionAt(QPoint const&)
func (q *QLineEdit) CursorPositionAt(pos *QPoint) int32 {
	var __rv int32
	q.Drv(304000, 304122, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::cursorRect()
func (q *QLineEdit) CursorRect() *QRect {
	var __rv uintptr
	q.Drv(304000, 304123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QLineEdit::cursorWordBackward(bool)
func (q *QLineEdit) CursorWordBackward(mark bool) {
	q.Drv(304000, 304124, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cursorWordForward(bool)
func (q *QLineEdit) CursorWordForward(mark bool) {
	q.Drv(304000, 304125, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::cut()
func (q *QLineEdit) Cut() {
	q.Drv(304000, 304126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::del()
func (q *QLineEdit) Del() {
	q.Drv(304000, 304127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::deselect()
func (q *QLineEdit) Deselect() {
	q.Drv(304000, 304128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::displayText()
func (q *QLineEdit) DisplayText() string {
	var __rv C.string_head
	q.Drv(304000, 304129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLineEdit::dragEnabled()
func (q *QLineEdit) DragEnabled() bool {
	var __rv bool
	q.Drv(304000, 304130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::echoMode()
func (q *QLineEdit) EchoMode() QLineEdit_EchoMode {
	var __rv QLineEdit_EchoMode
	q.Drv(304000, 304131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::end(bool)
func (q *QLineEdit) End(mark bool) {
	q.Drv(304000, 304132, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::getTextMargins(int*,int*,int*,int*)
func (q *QLineEdit) GetTextMargins(left *int32, top *int32, right *int32, bottom *int32) {
	q.Drv(304000, 304133, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::hasAcceptableInput()
func (q *QLineEdit) HasAcceptableInput() bool {
	var __rv bool
	q.Drv(304000, 304134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::hasFrame()
func (q *QLineEdit) HasFrame() bool {
	var __rv bool
	q.Drv(304000, 304135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::hasSelectedText()
func (q *QLineEdit) HasSelectedText() bool {
	var __rv bool
	q.Drv(304000, 304136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::home(bool)
func (q *QLineEdit) Home(mark bool) {
	q.Drv(304000, 304137, unsafe.Pointer(&mark), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::inputMask()
func (q *QLineEdit) InputMask() string {
	var __rv C.string_head
	q.Drv(304000, 304138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLineEdit::insert(QString const&)
func (q *QLineEdit) Insert(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(304000, 304139, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::isModified()
func (q *QLineEdit) IsModified() bool {
	var __rv bool
	q.Drv(304000, 304140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::isReadOnly()
func (q *QLineEdit) IsReadOnly() bool {
	var __rv bool
	q.Drv(304000, 304141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::isRedoAvailable()
func (q *QLineEdit) IsRedoAvailable() bool {
	var __rv bool
	q.Drv(304000, 304142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::isUndoAvailable()
func (q *QLineEdit) IsUndoAvailable() bool {
	var __rv bool
	q.Drv(304000, 304143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::maxLength()
func (q *QLineEdit) MaxLength() int32 {
	var __rv int32
	q.Drv(304000, 304144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::paste()
func (q *QLineEdit) Paste() {
	q.Drv(304000, 304145, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::placeholderText()
func (q *QLineEdit) PlaceholderText() string {
	var __rv C.string_head
	q.Drv(304000, 304146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLineEdit::redo()
func (q *QLineEdit) Redo() {
	q.Drv(304000, 304147, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::selectAll()
func (q *QLineEdit) SelectAll() {
	q.Drv(304000, 304148, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::selectedText()
func (q *QLineEdit) SelectedText() string {
	var __rv C.string_head
	q.Drv(304000, 304149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLineEdit::selectionStart()
func (q *QLineEdit) SelectionStart() int32 {
	var __rv int32
	q.Drv(304000, 304150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QLineEdit::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QLineEdit) SetAlignment(flag Qt_AlignmentFlag) {
	q.Drv(304000, 304151, unsafe.Pointer(&flag), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setCompleter(QCompleter*)
func (q *QLineEdit) SetCompleter(completer *QCompleter) {
	q.Drv(304000, 304152, Native(completer), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setCursorPosition(int)
func (q *QLineEdit) SetCursorPosition(value int32) {
	q.Drv(304000, 304153, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setDragEnabled(bool)
func (q *QLineEdit) SetDragEnabled(b bool) {
	q.Drv(304000, 304154, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setEchoMode(QLineEdit::EchoMode)
func (q *QLineEdit) SetEchoMode(value QLineEdit_EchoMode) {
	q.Drv(304000, 304155, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setFrame(bool)
func (q *QLineEdit) SetFrame(value bool) {
	q.Drv(304000, 304156, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setInputMask(QString const&)
func (q *QLineEdit) SetInputMask(inputMask string) {
	_inputMask := NewCStringHead(inputMask)
	defer FreeCStringHead(_inputMask)
	q.Drv(304000, 304157, unsafe.Pointer(_inputMask), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setMaxLength(int)
func (q *QLineEdit) SetMaxLength(value int32) {
	q.Drv(304000, 304158, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setModified(bool)
func (q *QLineEdit) SetModified(value bool) {
	q.Drv(304000, 304159, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setPlaceholderText(QString const&)
func (q *QLineEdit) SetPlaceholderText(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(304000, 304160, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setReadOnly(bool)
func (q *QLineEdit) SetReadOnly(value bool) {
	q.Drv(304000, 304161, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setSelection(int,int)
func (q *QLineEdit) SetSelection(value2 int32, value3 int32) {
	q.Drv(304000, 304162, unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setText(QString const&)
func (q *QLineEdit) SetText(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(304000, 304163, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setTextMargins(QMargins const&)
func (q *QLineEdit) SetTextMargins(margins *QMargins) {
	q.Drv(304000, 304164, Native(margins), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setTextMargins(int,int,int,int)
func (q *QLineEdit) SetTextMarginsWithLeftTopRightBottom(left int32, top int32, right int32, bottom int32) {
	q.Drv(304000, 304165, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::setValidator(QValidator const*)
func (q *QLineEdit) SetValidator(value *QValidator) {
	q.Drv(304000, 304166, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::text()
func (q *QLineEdit) Text() string {
	var __rv C.string_head
	q.Drv(304000, 304167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QLineEdit::textMargins()
func (q *QLineEdit) TextMargins() *QMargins {
	var __rv uintptr
	q.Drv(304000, 304168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMargins{}
	_rp.SetDriver(__rv, 74000, true)
	return _rp
}

//QLineEdit::undo()
func (q *QLineEdit) Undo() {
	q.Drv(304000, 304169, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QLineEdit::validator()
func (q *QLineEdit) Validator() *QValidator {
	var __rv uintptr
	q.Drv(304000, 304170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QValidator{}
	_rp.SetDriver(__rv, 395000, false)
	return _rp
}

//enum QListView_ResizeMode - QListView::ResizeMode
type QListView_ResizeMode uint32

const (
	QListView_Fixed  QListView_ResizeMode = 0
	QListView_Adjust QListView_ResizeMode = 1
)

//enum QListView_LayoutMode - QListView::LayoutMode
type QListView_LayoutMode uint32

const (
	QListView_SinglePass QListView_LayoutMode = 0
	QListView_Batched    QListView_LayoutMode = 1
)

//enum QListView_ViewMode - QListView::ViewMode
type QListView_ViewMode uint32

const (
	QListView_ListMode QListView_ViewMode = 0
	QListView_IconMode QListView_ViewMode = 1
)

//enum QListView_Flow - QListView::Flow
type QListView_Flow uint32

const (
	QListView_LeftToRight QListView_Flow = 0
	QListView_TopToBottom QListView_Flow = 1
)

//enum QListView_Movement - QListView::Movement
type QListView_Movement uint32

const (
	QListView_Static QListView_Movement = 0
	QListView_Free   QListView_Movement = 1
	QListView_Snap   QListView_Movement = 2
)

//struct QListView : QListView
type QListView struct {
	QAbstractItemView
}

// New QListView from driver
func NewListViewFromDriver(drv Driver) *QListView {
	_p := &QListView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QListView) OnIndexesMoved(fn func([]*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(305000, 305102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QListView::QListView()
func NewListView() *QListView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 305000, 305103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListView{}
	_p.SetDriver(__rv, 305000, false)
	return _p
}

//QListView::QListView(QWidget*)
func NewListViewWithParent(parent QWidgetInterface) *QListView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 305000, 305104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListView{}
	_p.SetDriver(__rv, 305000, false)
	return _p
}

//QListView::batchSize()
func (q *QListView) BatchSize() int32 {
	var __rv int32
	q.Drv(305000, 305105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::clearPropertyFlags()
func (q *QListView) ClearPropertyFlags() {
	q.Drv(305000, 305106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::contentsSize()
func (q *QListView) ContentsSize() *QSize {
	var __rv uintptr
	q.Drv(305000, 305107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QListView::flow()
func (q *QListView) Flow() QListView_Flow {
	var __rv QListView_Flow
	q.Drv(305000, 305108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::gridSize()
func (q *QListView) GridSize() *QSize {
	var __rv uintptr
	q.Drv(305000, 305109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QListView::isRowHidden(int)
func (q *QListView) IsRowHidden(row int32) bool {
	var __rv bool
	q.Drv(305000, 305110, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::isSelectionRectVisible()
func (q *QListView) IsSelectionRectVisible() bool {
	var __rv bool
	q.Drv(305000, 305111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::isWrapping()
func (q *QListView) IsWrapping() bool {
	var __rv bool
	q.Drv(305000, 305112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::layoutMode()
func (q *QListView) LayoutMode() QListView_LayoutMode {
	var __rv QListView_LayoutMode
	q.Drv(305000, 305113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::modelColumn()
func (q *QListView) ModelColumn() int32 {
	var __rv int32
	q.Drv(305000, 305114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::movement()
func (q *QListView) Movement() QListView_Movement {
	var __rv QListView_Movement
	q.Drv(305000, 305115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::rectForIndex(QModelIndex const&)
func (q *QListView) RectForIndex(index *QModelIndex) *QRect {
	var __rv uintptr
	q.Drv(305000, 305116, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QListView::resizeContents(int,int)
func (q *QListView) ResizeContents(width int32, height int32) {
	q.Drv(305000, 305117, unsafe.Pointer(&width), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::resizeMode()
func (q *QListView) ResizeMode() QListView_ResizeMode {
	var __rv QListView_ResizeMode
	q.Drv(305000, 305118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::setBatchSize(int)
func (q *QListView) SetBatchSize(batchSize int32) {
	q.Drv(305000, 305119, unsafe.Pointer(&batchSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setFlow(QListView::Flow)
func (q *QListView) SetFlow(flow QListView_Flow) {
	q.Drv(305000, 305120, unsafe.Pointer(&flow), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setGridSize(QSize const&)
func (q *QListView) SetGridSize(size *QSize) {
	q.Drv(305000, 305121, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setLayoutMode(QListView::LayoutMode)
func (q *QListView) SetLayoutMode(mode QListView_LayoutMode) {
	q.Drv(305000, 305122, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setModelColumn(int)
func (q *QListView) SetModelColumn(column int32) {
	q.Drv(305000, 305123, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setMovement(QListView::Movement)
func (q *QListView) SetMovement(movement QListView_Movement) {
	q.Drv(305000, 305124, unsafe.Pointer(&movement), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setPositionForIndex(QPoint const&,QModelIndex const&)
func (q *QListView) SetPositionForIndex(position *QPoint, index *QModelIndex) {
	q.Drv(305000, 305125, Native(position), Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setResizeMode(QListView::ResizeMode)
func (q *QListView) SetResizeMode(mode QListView_ResizeMode) {
	q.Drv(305000, 305126, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setRowHidden(int,bool)
func (q *QListView) SetRowHidden(row int32, hide bool) {
	q.Drv(305000, 305127, unsafe.Pointer(&row), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setSelectionRectVisible(bool)
func (q *QListView) SetSelectionRectVisible(show bool) {
	q.Drv(305000, 305128, unsafe.Pointer(&show), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setSpacing(int)
func (q *QListView) SetSpacing(space int32) {
	q.Drv(305000, 305129, unsafe.Pointer(&space), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setUniformItemSizes(bool)
func (q *QListView) SetUniformItemSizes(enable bool) {
	q.Drv(305000, 305130, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setViewMode(QListView::ViewMode)
func (q *QListView) SetViewMode(mode QListView_ViewMode) {
	q.Drv(305000, 305131, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setWordWrap(bool)
func (q *QListView) SetWordWrap(on bool) {
	q.Drv(305000, 305132, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::setWrapping(bool)
func (q *QListView) SetWrapping(enable bool) {
	q.Drv(305000, 305133, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListView::spacing()
func (q *QListView) Spacing() int32 {
	var __rv int32
	q.Drv(305000, 305134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::uniformItemSizes()
func (q *QListView) UniformItemSizes() bool {
	var __rv bool
	q.Drv(305000, 305135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::viewMode()
func (q *QListView) ViewMode() QListView_ViewMode {
	var __rv QListView_ViewMode
	q.Drv(305000, 305136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListView::wordWrap()
func (q *QListView) WordWrap() bool {
	var __rv bool
	q.Drv(305000, 305137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QListWidget : QListWidget
type QListWidget struct {
	QListView
}

// New QListWidget from driver
func NewListWidgetFromDriver(drv Driver) *QListWidget {
	_p := &QListWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QListWidget) OnItemActivated(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemPressed(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnCurrentRowChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemClicked(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemChanged(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemDoubleClicked(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemEntered(fn func(*QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnItemSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(306000, 306109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnCurrentTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QListWidget) OnCurrentItemChanged(fn func(*QListWidgetItem, *QListWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(306000, 306111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QListWidget::QListWidget()
func NewListWidget() *QListWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 306000, 306112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidget{}
	_p.SetDriver(__rv, 306000, false)
	return _p
}

//QListWidget::QListWidget(QWidget*)
func NewListWidgetWithParent(parent QWidgetInterface) *QListWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 306000, 306113, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QListWidget{}
	_p.SetDriver(__rv, 306000, false)
	return _p
}

//QListWidget::addItem(QListWidgetItem*)
func (q *QListWidget) AddItem(item *QListWidgetItem) {
	q.Drv(306000, 306114, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::addItem(QString const&)
func (q *QListWidget) AddItemWithLabel(label string) {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	q.Drv(306000, 306115, unsafe.Pointer(_label), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::addItems(QStringList const&)
func (q *QListWidget) AddItems(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(306000, 306116, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::clear()
func (q *QListWidget) Clear() {
	q.Drv(306000, 306117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::closePersistentEditor(QListWidgetItem*)
func (q *QListWidget) ClosePersistentEditor(item *QListWidgetItem) {
	q.Drv(306000, 306118, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::count()
func (q *QListWidget) Count() int32 {
	var __rv int32
	q.Drv(306000, 306119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::currentItem()
func (q *QListWidget) CurrentItem() *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::currentRow()
func (q *QListWidget) CurrentRow() int32 {
	var __rv int32
	q.Drv(306000, 306121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::dropMimeData(int,QMimeData const*,Qt::DropAction)
func (q *QListWidget) DropMimeData(index int32, data *QMimeData, action Qt_DropAction) bool {
	var __rv bool
	q.Drv(306000, 306122, unsafe.Pointer(&index), Native(data), unsafe.Pointer(&action), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::editItem(QListWidgetItem*)
func (q *QListWidget) EditItem(item *QListWidgetItem) {
	q.Drv(306000, 306123, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::findItems(QString const&,QFlags<Qt::MatchFlag>)
func (q *QListWidget) FindItems(text string, flags Qt_MatchFlag) []*QListWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv []*QListWidgetItem
	q.Drv(306000, 306124, unsafe.Pointer(_text), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::indexFromItem(QListWidgetItem*)
func (q *QListWidget) IndexFromItem(item *QListWidgetItem) *QModelIndex {
	var __rv uintptr
	q.Drv(306000, 306125, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QListWidget::insertItem(int,QListWidgetItem*)
func (q *QListWidget) InsertItemWithRowItem(row int32, item *QListWidgetItem) {
	q.Drv(306000, 306126, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::insertItem(int,QString const&)
func (q *QListWidget) InsertItemWithRowLabel(row int32, label string) {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	q.Drv(306000, 306127, unsafe.Pointer(&row), unsafe.Pointer(_label), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::insertItems(int,QStringList const&)
func (q *QListWidget) InsertItems(row int32, labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(306000, 306128, unsafe.Pointer(&row), unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::isItemHidden(QListWidgetItem const*)
func (q *QListWidget) IsItemHidden(item *QListWidgetItem) bool {
	var __rv bool
	q.Drv(306000, 306129, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::isItemSelected(QListWidgetItem const*)
func (q *QListWidget) IsItemSelected(item *QListWidgetItem) bool {
	var __rv bool
	q.Drv(306000, 306130, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::isSortingEnabled()
func (q *QListWidget) IsSortingEnabled() bool {
	var __rv bool
	q.Drv(306000, 306131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::item(int)
func (q *QListWidget) Item(row int32) *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306132, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::itemAt(QPoint const&)
func (q *QListWidget) ItemAt(p *QPoint) *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306133, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::itemAt(int,int)
func (q *QListWidget) ItemAtWithXY(x int32, y int32) *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306134, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::itemFromIndex(QModelIndex const&)
func (q *QListWidget) ItemFromIndex(index *QModelIndex) *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306135, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::itemWidget(QListWidgetItem*)
func (q *QListWidget) ItemWidget(item *QListWidgetItem) *QWidget {
	var __rv uintptr
	q.Drv(306000, 306136, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QListWidget::items(QMimeData const*)
func (q *QListWidget) Items(data *QMimeData) []*QListWidgetItem {
	var __rv []*QListWidgetItem
	q.Drv(306000, 306137, Native(data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::mimeData(QList<QListWidgetItem*> const)
func (q *QListWidget) MimeData(items []*QListWidgetItem) *QMimeData {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	var __rv uintptr
	q.Drv(306000, 306138, unsafe.Pointer(_items), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QListWidget::mimeTypes()
func (q *QListWidget) MimeTypes() []string {
	var __rv []string
	q.Drv(306000, 306139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::openPersistentEditor(QListWidgetItem*)
func (q *QListWidget) OpenPersistentEditor(item *QListWidgetItem) {
	q.Drv(306000, 306140, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::removeItemWidget(QListWidgetItem*)
func (q *QListWidget) RemoveItemWidget(item *QListWidgetItem) {
	q.Drv(306000, 306141, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::row(QListWidgetItem const*)
func (q *QListWidget) Row(item *QListWidgetItem) int32 {
	var __rv int32
	q.Drv(306000, 306142, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::scrollToItem(QListWidgetItem const*)
func (q *QListWidget) ScrollToItem(item *QListWidgetItem) {
	q.Drv(306000, 306143, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::scrollToItem(QListWidgetItem const*,QAbstractItemView::ScrollHint)
func (q *QListWidget) ScrollToItemWithItemHint(item *QListWidgetItem, hint QAbstractItemView_ScrollHint) {
	q.Drv(306000, 306144, Native(item), unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::selectedItems()
func (q *QListWidget) SelectedItems() []*QListWidgetItem {
	var __rv []*QListWidgetItem
	q.Drv(306000, 306145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::setCurrentItem(QListWidgetItem*)
func (q *QListWidget) SetCurrentItem(item *QListWidgetItem) {
	q.Drv(306000, 306146, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setCurrentItem(QListWidgetItem*,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QListWidget) SetCurrentItemWithItemCommand(item *QListWidgetItem, command QItemSelectionModel_SelectionFlag) {
	q.Drv(306000, 306147, Native(item), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setCurrentRow(int)
func (q *QListWidget) SetCurrentRow(row int32) {
	q.Drv(306000, 306148, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setCurrentRow(int,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QListWidget) SetCurrentRowWithRowCommand(row int32, command QItemSelectionModel_SelectionFlag) {
	q.Drv(306000, 306149, unsafe.Pointer(&row), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setItemHidden(QListWidgetItem const*,bool)
func (q *QListWidget) SetItemHidden(item *QListWidgetItem, hide bool) {
	q.Drv(306000, 306150, Native(item), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setItemSelected(QListWidgetItem const*,bool)
func (q *QListWidget) SetItemSelected(item *QListWidgetItem, _select bool) {
	q.Drv(306000, 306151, Native(item), unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setItemWidget(QListWidgetItem*,QWidget*)
func (q *QListWidget) SetItemWidget(item *QListWidgetItem, widget QWidgetInterface) {
	q.Drv(306000, 306152, Native(item), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::setSortingEnabled(bool)
func (q *QListWidget) SetSortingEnabled(enable bool) {
	q.Drv(306000, 306153, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::sortItems()
func (q *QListWidget) SortItems() {
	q.Drv(306000, 306154, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::sortItems(Qt::SortOrder)
func (q *QListWidget) SortItemsWithOrder(order Qt_SortOrder) {
	q.Drv(306000, 306155, unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QListWidget::supportedDropActions()
func (q *QListWidget) SupportedDropActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(306000, 306156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QListWidget::takeItem(int)
func (q *QListWidget) TakeItem(row int32) *QListWidgetItem {
	var __rv uintptr
	q.Drv(306000, 306157, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QListWidgetItem{}
	_rp.SetDriver(__rv, 72000, true)
	return _rp
}

//QListWidget::visualItemRect(QListWidgetItem const*)
func (q *QListWidget) VisualItemRect(item *QListWidgetItem) *QRect {
	var __rv uintptr
	q.Drv(306000, 306158, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//enum QMainWindow_DockOption - QMainWindow::DockOption
type QMainWindow_DockOption uint32

const (
	QMainWindow_AnimatedDocks    QMainWindow_DockOption = 0x01
	QMainWindow_AllowNestedDocks QMainWindow_DockOption = 0x02
	QMainWindow_AllowTabbedDocks QMainWindow_DockOption = 0x04
	QMainWindow_ForceTabbedDocks QMainWindow_DockOption = 0x08
	QMainWindow_VerticalTabs     QMainWindow_DockOption = 0x10
)

//struct QMainWindow : QMainWindow
type QMainWindow struct {
	QWidget
}

// New QMainWindow from driver
func NewMainWindowFromDriver(drv Driver) *QMainWindow {
	_p := &QMainWindow{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMainWindow) OnToolButtonStyleChanged(fn func(Qt_ToolButtonStyle)) uintptr {
	var __rv uintptr
	q.Drv(307000, 307102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMainWindow) OnIconSizeChanged(fn func(*QSize)) uintptr {
	var __rv uintptr
	q.Drv(307000, 307103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMainWindow::QMainWindow()
func NewMainWindow() *QMainWindow {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 307000, 307104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMainWindow{}
	_p.SetDriver(__rv, 307000, false)
	return _p
}

//QMainWindow::QMainWindow(QWidget*,QFlags<Qt::WindowType>)
func NewMainWindowWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QMainWindow {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 307000, 307105, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMainWindow{}
	_p.SetDriver(__rv, 307000, false)
	return _p
}

//QMainWindow::addDockWidget(Qt::DockWidgetArea,QDockWidget*)
func (q *QMainWindow) AddDockWidgetWithAreaDockwidget(area Qt_DockWidgetArea, dockwidget *QDockWidget) {
	q.Drv(307000, 307106, unsafe.Pointer(&area), Native(dockwidget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::addDockWidget(Qt::DockWidgetArea,QDockWidget*,Qt::Orientation)
func (q *QMainWindow) AddDockWidgetWithAreaDockwidgetOrientation(area Qt_DockWidgetArea, dockwidget *QDockWidget, orientation Qt_Orientation) {
	q.Drv(307000, 307107, unsafe.Pointer(&area), Native(dockwidget), unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::addToolBar(QString const&)
func (q *QMainWindow) AddToolBar(title string) *QToolBar {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(307000, 307108, unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QToolBar{}
	_rp.SetDriver(__rv, 383000, false)
	return _rp
}

//QMainWindow::addToolBar(QToolBar*)
func (q *QMainWindow) AddToolBarWithToolbar(toolbar *QToolBar) {
	q.Drv(307000, 307109, Native(toolbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::addToolBar(Qt::ToolBarArea,QToolBar*)
func (q *QMainWindow) AddToolBarWithAreaToolbar(area Qt_ToolBarArea, toolbar *QToolBar) {
	q.Drv(307000, 307110, unsafe.Pointer(&area), Native(toolbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::addToolBarBreak()
func (q *QMainWindow) AddToolBarBreak() {
	q.Drv(307000, 307111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::addToolBarBreak(Qt::ToolBarArea)
func (q *QMainWindow) AddToolBarBreakWithArea(area Qt_ToolBarArea) {
	q.Drv(307000, 307112, unsafe.Pointer(&area), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::centralWidget()
func (q *QMainWindow) CentralWidget() *QWidget {
	var __rv uintptr
	q.Drv(307000, 307113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMainWindow::corner(Qt::Corner)
func (q *QMainWindow) Corner(corner Qt_Corner) Qt_DockWidgetArea {
	var __rv Qt_DockWidgetArea
	q.Drv(307000, 307114, unsafe.Pointer(&corner), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::createPopupMenu()
func (q *QMainWindow) CreatePopupMenu() *QMenu {
	var __rv uintptr
	q.Drv(307000, 307115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMainWindow::dockOptions()
func (q *QMainWindow) DockOptions() QMainWindow_DockOption {
	var __rv QMainWindow_DockOption
	q.Drv(307000, 307116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::dockWidgetArea(QDockWidget*)
func (q *QMainWindow) DockWidgetArea(dockwidget *QDockWidget) Qt_DockWidgetArea {
	var __rv Qt_DockWidgetArea
	q.Drv(307000, 307117, Native(dockwidget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::documentMode()
func (q *QMainWindow) DocumentMode() bool {
	var __rv bool
	q.Drv(307000, 307118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::iconSize()
func (q *QMainWindow) IconSize() *QSize {
	var __rv uintptr
	q.Drv(307000, 307119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QMainWindow::insertToolBar(QToolBar*,QToolBar*)
func (q *QMainWindow) InsertToolBar(before *QToolBar, toolbar *QToolBar) {
	q.Drv(307000, 307120, Native(before), Native(toolbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::insertToolBarBreak(QToolBar*)
func (q *QMainWindow) InsertToolBarBreak(before *QToolBar) {
	q.Drv(307000, 307121, Native(before), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::isAnimated()
func (q *QMainWindow) IsAnimated() bool {
	var __rv bool
	q.Drv(307000, 307122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::isDockNestingEnabled()
func (q *QMainWindow) IsDockNestingEnabled() bool {
	var __rv bool
	q.Drv(307000, 307123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::isSeparator(QPoint const&)
func (q *QMainWindow) IsSeparator(pos *QPoint) bool {
	var __rv bool
	q.Drv(307000, 307124, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::menuBar()
func (q *QMainWindow) MenuBar() *QMenuBar {
	var __rv uintptr
	q.Drv(307000, 307125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenuBar{}
	_rp.SetDriver(__rv, 311000, false)
	return _rp
}

//QMainWindow::menuWidget()
func (q *QMainWindow) MenuWidget() *QWidget {
	var __rv uintptr
	q.Drv(307000, 307126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMainWindow::removeDockWidget(QDockWidget*)
func (q *QMainWindow) RemoveDockWidget(dockwidget *QDockWidget) {
	q.Drv(307000, 307127, Native(dockwidget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::removeToolBar(QToolBar*)
func (q *QMainWindow) RemoveToolBar(toolbar *QToolBar) {
	q.Drv(307000, 307128, Native(toolbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::removeToolBarBreak(QToolBar*)
func (q *QMainWindow) RemoveToolBarBreak(before *QToolBar) {
	q.Drv(307000, 307129, Native(before), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::restoreDockWidget(QDockWidget*)
func (q *QMainWindow) RestoreDockWidget(dockwidget *QDockWidget) bool {
	var __rv bool
	q.Drv(307000, 307130, Native(dockwidget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::restoreState(QByteArray const&)
func (q *QMainWindow) RestoreState(state []byte) bool {
	_state := NewCByteArrayHead(state)
	defer FreeCByteArrayHead(_state)
	var __rv bool
	q.Drv(307000, 307131, unsafe.Pointer(_state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::restoreState(QByteArray const&,int)
func (q *QMainWindow) RestoreStateWithStateVersion(state []byte, version int32) bool {
	_state := NewCByteArrayHead(state)
	defer FreeCByteArrayHead(_state)
	var __rv bool
	q.Drv(307000, 307132, unsafe.Pointer(_state), unsafe.Pointer(&version), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::saveState()
func (q *QMainWindow) SaveState() []byte {
	var __rv []byte
	q.Drv(307000, 307133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::saveState(int)
func (q *QMainWindow) SaveStateWithVersion(version int32) []byte {
	var __rv []byte
	q.Drv(307000, 307134, unsafe.Pointer(&version), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::setAnimated(bool)
func (q *QMainWindow) SetAnimated(enabled bool) {
	q.Drv(307000, 307135, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setCentralWidget(QWidget*)
func (q *QMainWindow) SetCentralWidget(widget QWidgetInterface) {
	q.Drv(307000, 307136, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setCorner(Qt::Corner,Qt::DockWidgetArea)
func (q *QMainWindow) SetCorner(corner Qt_Corner, area Qt_DockWidgetArea) {
	q.Drv(307000, 307137, unsafe.Pointer(&corner), unsafe.Pointer(&area), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setDockNestingEnabled(bool)
func (q *QMainWindow) SetDockNestingEnabled(enabled bool) {
	q.Drv(307000, 307138, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setDockOptions(QFlags<QMainWindow::DockOption>)
func (q *QMainWindow) SetDockOptions(options QMainWindow_DockOption) {
	q.Drv(307000, 307139, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setDocumentMode(bool)
func (q *QMainWindow) SetDocumentMode(enabled bool) {
	q.Drv(307000, 307140, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setIconSize(QSize const&)
func (q *QMainWindow) SetIconSize(iconSize *QSize) {
	q.Drv(307000, 307141, Native(iconSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setMenuBar(QMenuBar*)
func (q *QMainWindow) SetMenuBar(menubar *QMenuBar) {
	q.Drv(307000, 307142, Native(menubar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setMenuWidget(QWidget*)
func (q *QMainWindow) SetMenuWidget(menubar QWidgetInterface) {
	q.Drv(307000, 307143, Native(menubar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setStatusBar(QStatusBar*)
func (q *QMainWindow) SetStatusBar(statusbar *QStatusBar) {
	q.Drv(307000, 307144, Native(statusbar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setTabPosition(QFlags<Qt::DockWidgetArea>,QTabWidget::TabPosition)
func (q *QMainWindow) SetTabPosition(areas Qt_DockWidgetArea, tabPosition QTabWidget_TabPosition) {
	q.Drv(307000, 307145, unsafe.Pointer(&areas), unsafe.Pointer(&tabPosition), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setTabShape(QTabWidget::TabShape)
func (q *QMainWindow) SetTabShape(tabShape QTabWidget_TabShape) {
	q.Drv(307000, 307146, unsafe.Pointer(&tabShape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setToolButtonStyle(Qt::ToolButtonStyle)
func (q *QMainWindow) SetToolButtonStyle(toolButtonStyle Qt_ToolButtonStyle) {
	q.Drv(307000, 307147, unsafe.Pointer(&toolButtonStyle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::setUnifiedTitleAndToolBarOnMac(bool)
func (q *QMainWindow) SetUnifiedTitleAndToolBarOnMac(set bool) {
	q.Drv(307000, 307148, unsafe.Pointer(&set), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::splitDockWidget(QDockWidget*,QDockWidget*,Qt::Orientation)
func (q *QMainWindow) SplitDockWidget(after *QDockWidget, dockwidget *QDockWidget, orientation Qt_Orientation) {
	q.Drv(307000, 307149, Native(after), Native(dockwidget), unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::statusBar()
func (q *QMainWindow) StatusBar() *QStatusBar {
	var __rv uintptr
	q.Drv(307000, 307150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStatusBar{}
	_rp.SetDriver(__rv, 357000, false)
	return _rp
}

//QMainWindow::tabPosition(Qt::DockWidgetArea)
func (q *QMainWindow) TabPosition(area Qt_DockWidgetArea) QTabWidget_TabPosition {
	var __rv QTabWidget_TabPosition
	q.Drv(307000, 307151, unsafe.Pointer(&area), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::tabShape()
func (q *QMainWindow) TabShape() QTabWidget_TabShape {
	var __rv QTabWidget_TabShape
	q.Drv(307000, 307152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::tabifiedDockWidgets(QDockWidget*)
func (q *QMainWindow) TabifiedDockWidgets(dockwidget *QDockWidget) []*QDockWidget {
	var __rv []*QDockWidget
	q.Drv(307000, 307153, Native(dockwidget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::tabifyDockWidget(QDockWidget*,QDockWidget*)
func (q *QMainWindow) TabifyDockWidget(first *QDockWidget, second *QDockWidget) {
	q.Drv(307000, 307154, Native(first), Native(second), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMainWindow::toolBarArea(QToolBar*)
func (q *QMainWindow) ToolBarArea(toolbar *QToolBar) Qt_ToolBarArea {
	var __rv Qt_ToolBarArea
	q.Drv(307000, 307155, Native(toolbar), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::toolBarBreak(QToolBar*)
func (q *QMainWindow) ToolBarBreak(toolbar *QToolBar) bool {
	var __rv bool
	q.Drv(307000, 307156, Native(toolbar), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::toolButtonStyle()
func (q *QMainWindow) ToolButtonStyle() Qt_ToolButtonStyle {
	var __rv Qt_ToolButtonStyle
	q.Drv(307000, 307157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMainWindow::unifiedTitleAndToolBarOnMac()
func (q *QMainWindow) UnifiedTitleAndToolBarOnMac() bool {
	var __rv bool
	q.Drv(307000, 307158, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QMdiArea_WindowOrder - QMdiArea::WindowOrder
type QMdiArea_WindowOrder uint32

const (
	QMdiArea_CreationOrder          QMdiArea_WindowOrder = 0
	QMdiArea_StackingOrder          QMdiArea_WindowOrder = 1
	QMdiArea_ActivationHistoryOrder QMdiArea_WindowOrder = 2
)

//enum QMdiArea_ViewMode - QMdiArea::ViewMode
type QMdiArea_ViewMode uint32

const (
	QMdiArea_SubWindowView QMdiArea_ViewMode = 0
	QMdiArea_TabbedView    QMdiArea_ViewMode = 1
)

//enum QMdiArea_AreaOption - QMdiArea::AreaOption
type QMdiArea_AreaOption uint32

const (
	QMdiArea_DontMaximizeSubWindowOnActivation QMdiArea_AreaOption = 0x1
)

//struct QMdiArea : QMdiArea
type QMdiArea struct {
	QAbstractScrollArea
}

// New QMdiArea from driver
func NewMdiAreaFromDriver(drv Driver) *QMdiArea {
	_p := &QMdiArea{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMdiArea) OnSubWindowActivated(fn func(*QMdiSubWindow)) uintptr {
	var __rv uintptr
	q.Drv(308000, 308102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMdiArea::QMdiArea()
func NewMdiArea() *QMdiArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 308000, 308103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMdiArea{}
	_p.SetDriver(__rv, 308000, false)
	return _p
}

//QMdiArea::QMdiArea(QWidget*)
func NewMdiAreaWithParent(parent QWidgetInterface) *QMdiArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 308000, 308104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMdiArea{}
	_p.SetDriver(__rv, 308000, false)
	return _p
}

//QMdiArea::activateNextSubWindow()
func (q *QMdiArea) ActivateNextSubWindow() {
	q.Drv(308000, 308105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::activatePreviousSubWindow()
func (q *QMdiArea) ActivatePreviousSubWindow() {
	q.Drv(308000, 308106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::activationOrder()
func (q *QMdiArea) ActivationOrder() QMdiArea_WindowOrder {
	var __rv QMdiArea_WindowOrder
	q.Drv(308000, 308107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::activeSubWindow()
func (q *QMdiArea) ActiveSubWindow() *QMdiSubWindow {
	var __rv uintptr
	q.Drv(308000, 308108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMdiSubWindow{}
	_rp.SetDriver(__rv, 309000, false)
	return _rp
}

//QMdiArea::addSubWindow(QWidget*)
func (q *QMdiArea) AddSubWindow(widget QWidgetInterface) *QMdiSubWindow {
	var __rv uintptr
	q.Drv(308000, 308109, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMdiSubWindow{}
	_rp.SetDriver(__rv, 309000, false)
	return _rp
}

//QMdiArea::addSubWindow(QWidget*,QFlags<Qt::WindowType>)
func (q *QMdiArea) AddSubWindowWithWidgetFlags(widget QWidgetInterface, flags Qt_WindowType) *QMdiSubWindow {
	var __rv uintptr
	q.Drv(308000, 308110, Native(widget), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMdiSubWindow{}
	_rp.SetDriver(__rv, 309000, false)
	return _rp
}

//QMdiArea::background()
func (q *QMdiArea) Background() *QBrush {
	var __rv uintptr
	q.Drv(308000, 308111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QBrush{}
	_rp.SetDriver(__rv, 9000, true)
	return _rp
}

//QMdiArea::cascadeSubWindows()
func (q *QMdiArea) CascadeSubWindows() {
	q.Drv(308000, 308112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::closeActiveSubWindow()
func (q *QMdiArea) CloseActiveSubWindow() {
	q.Drv(308000, 308113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::closeAllSubWindows()
func (q *QMdiArea) CloseAllSubWindows() {
	q.Drv(308000, 308114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::currentSubWindow()
func (q *QMdiArea) CurrentSubWindow() *QMdiSubWindow {
	var __rv uintptr
	q.Drv(308000, 308115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMdiSubWindow{}
	_rp.SetDriver(__rv, 309000, false)
	return _rp
}

//QMdiArea::documentMode()
func (q *QMdiArea) DocumentMode() bool {
	var __rv bool
	q.Drv(308000, 308116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::removeSubWindow(QWidget*)
func (q *QMdiArea) RemoveSubWindow(widget QWidgetInterface) {
	q.Drv(308000, 308117, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setActivationOrder(QMdiArea::WindowOrder)
func (q *QMdiArea) SetActivationOrder(order QMdiArea_WindowOrder) {
	q.Drv(308000, 308118, unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setActiveSubWindow(QMdiSubWindow*)
func (q *QMdiArea) SetActiveSubWindow(window *QMdiSubWindow) {
	q.Drv(308000, 308119, Native(window), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setBackground(QBrush const&)
func (q *QMdiArea) SetBackground(background *QBrush) {
	q.Drv(308000, 308120, Native(background), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setDocumentMode(bool)
func (q *QMdiArea) SetDocumentMode(enabled bool) {
	q.Drv(308000, 308121, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setOption(QMdiArea::AreaOption)
func (q *QMdiArea) SetOption(option QMdiArea_AreaOption) {
	q.Drv(308000, 308122, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setOption(QMdiArea::AreaOption,bool)
func (q *QMdiArea) SetOptionWithOptionOn(option QMdiArea_AreaOption, on bool) {
	q.Drv(308000, 308123, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setTabPosition(QTabWidget::TabPosition)
func (q *QMdiArea) SetTabPosition(position QTabWidget_TabPosition) {
	q.Drv(308000, 308124, unsafe.Pointer(&position), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setTabShape(QTabWidget::TabShape)
func (q *QMdiArea) SetTabShape(shape QTabWidget_TabShape) {
	q.Drv(308000, 308125, unsafe.Pointer(&shape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setViewMode(QMdiArea::ViewMode)
func (q *QMdiArea) SetViewMode(mode QMdiArea_ViewMode) {
	q.Drv(308000, 308126, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::setupViewport(QWidget*)
func (q *QMdiArea) SetupViewport(viewport QWidgetInterface) {
	q.Drv(308000, 308127, Native(viewport), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::subWindowList()
func (q *QMdiArea) SubWindowList() []*QMdiSubWindow {
	var __rv []*QMdiSubWindow
	q.Drv(308000, 308128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::subWindowList(QMdiArea::WindowOrder)
func (q *QMdiArea) SubWindowListWithOrder(order QMdiArea_WindowOrder) []*QMdiSubWindow {
	var __rv []*QMdiSubWindow
	q.Drv(308000, 308129, unsafe.Pointer(&order), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::tabPosition()
func (q *QMdiArea) TabPosition() QTabWidget_TabPosition {
	var __rv QTabWidget_TabPosition
	q.Drv(308000, 308130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::tabShape()
func (q *QMdiArea) TabShape() QTabWidget_TabShape {
	var __rv QTabWidget_TabShape
	q.Drv(308000, 308131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::testOption(QMdiArea::AreaOption)
func (q *QMdiArea) TestOption(opton QMdiArea_AreaOption) bool {
	var __rv bool
	q.Drv(308000, 308132, unsafe.Pointer(&opton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiArea::tileSubWindows()
func (q *QMdiArea) TileSubWindows() {
	q.Drv(308000, 308133, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiArea::viewMode()
func (q *QMdiArea) ViewMode() QMdiArea_ViewMode {
	var __rv QMdiArea_ViewMode
	q.Drv(308000, 308134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QMdiSubWindow_SubWindowOption - QMdiSubWindow::SubWindowOption
type QMdiSubWindow_SubWindowOption uint32

const (
	QMdiSubWindow_AllowOutsideAreaHorizontally QMdiSubWindow_SubWindowOption = 0x1
	QMdiSubWindow_AllowOutsideAreaVertically   QMdiSubWindow_SubWindowOption = 0x2
	QMdiSubWindow_RubberBandResize             QMdiSubWindow_SubWindowOption = 0x4
	QMdiSubWindow_RubberBandMove               QMdiSubWindow_SubWindowOption = 0x8
)

//struct QMdiSubWindow : QMdiSubWindow
type QMdiSubWindow struct {
	QWidget
}

// New QMdiSubWindow from driver
func NewMdiSubWindowFromDriver(drv Driver) *QMdiSubWindow {
	_p := &QMdiSubWindow{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMdiSubWindow) OnAboutToActivate(fn func()) uintptr {
	var __rv uintptr
	q.Drv(309000, 309102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMdiSubWindow) OnWindowStateChanged(fn func(Qt_WindowState, Qt_WindowState)) uintptr {
	var __rv uintptr
	q.Drv(309000, 309103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMdiSubWindow::QMdiSubWindow()
func NewMdiSubWindow() *QMdiSubWindow {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 309000, 309104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMdiSubWindow{}
	_p.SetDriver(__rv, 309000, false)
	return _p
}

//QMdiSubWindow::QMdiSubWindow(QWidget*,QFlags<Qt::WindowType>)
func NewMdiSubWindowWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QMdiSubWindow {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 309000, 309105, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMdiSubWindow{}
	_p.SetDriver(__rv, 309000, false)
	return _p
}

//QMdiSubWindow::isShaded()
func (q *QMdiSubWindow) IsShaded() bool {
	var __rv bool
	q.Drv(309000, 309106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiSubWindow::keyboardPageStep()
func (q *QMdiSubWindow) KeyboardPageStep() int32 {
	var __rv int32
	q.Drv(309000, 309107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiSubWindow::keyboardSingleStep()
func (q *QMdiSubWindow) KeyboardSingleStep() int32 {
	var __rv int32
	q.Drv(309000, 309108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiSubWindow::maximizedButtonsWidget()
func (q *QMdiSubWindow) MaximizedButtonsWidget() *QWidget {
	var __rv uintptr
	q.Drv(309000, 309109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMdiSubWindow::maximizedSystemMenuIconWidget()
func (q *QMdiSubWindow) MaximizedSystemMenuIconWidget() *QWidget {
	var __rv uintptr
	q.Drv(309000, 309110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMdiSubWindow::mdiArea()
func (q *QMdiSubWindow) MdiArea() *QMdiArea {
	var __rv uintptr
	q.Drv(309000, 309111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMdiArea{}
	_rp.SetDriver(__rv, 308000, false)
	return _rp
}

//QMdiSubWindow::setKeyboardPageStep(int)
func (q *QMdiSubWindow) SetKeyboardPageStep(step int32) {
	q.Drv(309000, 309112, unsafe.Pointer(&step), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::setKeyboardSingleStep(int)
func (q *QMdiSubWindow) SetKeyboardSingleStep(step int32) {
	q.Drv(309000, 309113, unsafe.Pointer(&step), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::setOption(QMdiSubWindow::SubWindowOption)
func (q *QMdiSubWindow) SetOption(option QMdiSubWindow_SubWindowOption) {
	q.Drv(309000, 309114, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::setOption(QMdiSubWindow::SubWindowOption,bool)
func (q *QMdiSubWindow) SetOptionWithOptionOn(option QMdiSubWindow_SubWindowOption, on bool) {
	q.Drv(309000, 309115, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::setSystemMenu(QMenu*)
func (q *QMdiSubWindow) SetSystemMenu(systemMenu *QMenu) {
	q.Drv(309000, 309116, Native(systemMenu), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::setWidget(QWidget*)
func (q *QMdiSubWindow) SetWidget(widget QWidgetInterface) {
	q.Drv(309000, 309117, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::showShaded()
func (q *QMdiSubWindow) ShowShaded() {
	q.Drv(309000, 309118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::showSystemMenu()
func (q *QMdiSubWindow) ShowSystemMenu() {
	q.Drv(309000, 309119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMdiSubWindow::systemMenu()
func (q *QMdiSubWindow) SystemMenu() *QMenu {
	var __rv uintptr
	q.Drv(309000, 309120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMdiSubWindow::testOption(QMdiSubWindow::SubWindowOption)
func (q *QMdiSubWindow) TestOption(value QMdiSubWindow_SubWindowOption) bool {
	var __rv bool
	q.Drv(309000, 309121, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMdiSubWindow::widget()
func (q *QMdiSubWindow) Widget() *QWidget {
	var __rv uintptr
	q.Drv(309000, 309122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QMenu : QMenu
type QMenu struct {
	QWidget
}

// New QMenu from driver
func NewMenuFromDriver(drv Driver) *QMenu {
	_p := &QMenu{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMenu) OnHovered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(310000, 310102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMenu) OnAboutToHide(fn func()) uintptr {
	var __rv uintptr
	q.Drv(310000, 310103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMenu) OnTriggered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(310000, 310104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMenu) OnAboutToShow(fn func()) uintptr {
	var __rv uintptr
	q.Drv(310000, 310105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMenu::QMenu()
func NewMenu() *QMenu {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 310000, 310106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMenu{}
	_p.SetDriver(__rv, 310000, false)
	return _p
}

//QMenu::QMenu(QWidget*)
func NewMenuWithParent(parent QWidgetInterface) *QMenu {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 310000, 310107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMenu{}
	_p.SetDriver(__rv, 310000, false)
	return _p
}

//QMenu::QMenu(QString const&,QWidget*)
func NewMenuWithTitleParent(title string, parent QWidgetInterface) *QMenu {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 310000, 310108, unsafe.Pointer(_title), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMenu{}
	_p.SetDriver(__rv, 310000, false)
	return _p
}

//QMenu::actionAt(QPoint const&)
func (q *QMenu) ActionAt(value *QPoint) *QAction {
	var __rv uintptr
	q.Drv(310000, 310109, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::actionGeometry(QAction*)
func (q *QMenu) ActionGeometry(value *QAction) *QRect {
	var __rv uintptr
	q.Drv(310000, 310110, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QMenu::activeAction()
func (q *QMenu) ActiveAction() *QAction {
	var __rv uintptr
	q.Drv(310000, 310111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addAction(QAction*)
func (q *QMenu) AddAction(action *QAction) {
	q.Drv(310000, 310112, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::addAction(QString const&)
func (q *QMenu) AddActionWithText(text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(310000, 310113, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addAction(QIcon const&,QString const&)
func (q *QMenu) AddActionWithIconText(icon *QIcon, text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(310000, 310114, Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addAction(QString const&,QObject const*,char const*,QKeySequence const&)
func (q *QMenu) AddActionWithTextObjectMemberShortcut(text string, receiver QObjectInterface, member string, shortcut *QKeySequence) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	var __rv uintptr
	q.Drv(310000, 310115, unsafe.Pointer(_text), Native(receiver), unsafe.Pointer(_member), Native(shortcut), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addAction(QIcon const&,QString const&,QObject const*,char const*,QKeySequence const&)
func (q *QMenu) AddActionWithIconTextObjectMemberShortcut(icon *QIcon, text string, receiver QObjectInterface, member string, shortcut *QKeySequence) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	var __rv uintptr
	q.Drv(310000, 310116, Native(icon), unsafe.Pointer(_text), Native(receiver), unsafe.Pointer(_member), Native(shortcut), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addMenu(QMenu*)
func (q *QMenu) AddMenu(menu *QMenu) *QAction {
	var __rv uintptr
	q.Drv(310000, 310117, Native(menu), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::addMenu(QString const&)
func (q *QMenu) AddMenuWithTitle(title string) *QMenu {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(310000, 310118, unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMenu::addMenu(QIcon const&,QString const&)
func (q *QMenu) AddMenuWithIconTitle(icon *QIcon, title string) *QMenu {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(310000, 310119, Native(icon), unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMenu::addSeparator()
func (q *QMenu) AddSeparator() *QAction {
	var __rv uintptr
	q.Drv(310000, 310120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::clear()
func (q *QMenu) Clear() {
	q.Drv(310000, 310121, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::columnCount()
func (q *QMenu) ColumnCount() int32 {
	var __rv int32
	q.Drv(310000, 310122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenu::defaultAction()
func (q *QMenu) DefaultAction() *QAction {
	var __rv uintptr
	q.Drv(310000, 310123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec()
func (q *QMenu) Exec() *QAction {
	var __rv uintptr
	q.Drv(310000, 310124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QPoint const&)
func (q *QMenu) ExecWithPos(pos *QPoint) *QAction {
	var __rv uintptr
	q.Drv(310000, 310125, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QPoint const&,QAction*)
func (q *QMenu) ExecWithPosAt(pos *QPoint, at *QAction) *QAction {
	var __rv uintptr
	q.Drv(310000, 310126, Native(pos), Native(at), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QList<QAction*>,QPoint const&,QAction*)
func QMenuExecWithActionsPosAt(actions []*QAction, pos *QPoint, at *QAction) *QAction {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	var __rv uintptr
	DirectQtDrv(nil, 310000, 310127, unsafe.Pointer(_actions), Native(pos), Native(at), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QList<QAction*>,QPoint const&,QAction*)
func (q *QMenu) ExecWithActionsPosAt(actions []*QAction, pos *QPoint, at *QAction) *QAction {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	var __rv uintptr
	q.Drv(310000, 310127, unsafe.Pointer(_actions), Native(pos), Native(at), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QList<QAction*>,QPoint const&,QAction*,QWidget*)
func QMenuExecWithActionsPosAtParent(actions []*QAction, pos *QPoint, at *QAction, parent QWidgetInterface) *QAction {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	var __rv uintptr
	DirectQtDrv(nil, 310000, 310128, unsafe.Pointer(_actions), Native(pos), Native(at), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::exec(QList<QAction*>,QPoint const&,QAction*,QWidget*)
func (q *QMenu) ExecWithActionsPosAtParent(actions []*QAction, pos *QPoint, at *QAction, parent QWidgetInterface) *QAction {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	var __rv uintptr
	q.Drv(310000, 310128, unsafe.Pointer(_actions), Native(pos), Native(at), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::hideTearOffMenu()
func (q *QMenu) HideTearOffMenu() {
	q.Drv(310000, 310129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::icon()
func (q *QMenu) Icon() *QIcon {
	var __rv uintptr
	q.Drv(310000, 310130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QMenu::insertMenu(QAction*,QMenu*)
func (q *QMenu) InsertMenu(before *QAction, menu *QMenu) *QAction {
	var __rv uintptr
	q.Drv(310000, 310131, Native(before), Native(menu), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::insertSeparator(QAction*)
func (q *QMenu) InsertSeparator(before *QAction) *QAction {
	var __rv uintptr
	q.Drv(310000, 310132, Native(before), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::isEmpty()
func (q *QMenu) IsEmpty() bool {
	var __rv bool
	q.Drv(310000, 310133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenu::isTearOffEnabled()
func (q *QMenu) IsTearOffEnabled() bool {
	var __rv bool
	q.Drv(310000, 310134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenu::isTearOffMenuVisible()
func (q *QMenu) IsTearOffMenuVisible() bool {
	var __rv bool
	q.Drv(310000, 310135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenu::menuAction()
func (q *QMenu) MenuAction() *QAction {
	var __rv uintptr
	q.Drv(310000, 310136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenu::popup(QPoint const&)
func (q *QMenu) Popup(pos *QPoint) {
	q.Drv(310000, 310137, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::popup(QPoint const&,QAction*)
func (q *QMenu) PopupWithPosAt(pos *QPoint, at *QAction) {
	q.Drv(310000, 310138, Native(pos), Native(at), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::separatorsCollapsible()
func (q *QMenu) SeparatorsCollapsible() bool {
	var __rv bool
	q.Drv(310000, 310139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenu::setActiveAction(QAction*)
func (q *QMenu) SetActiveAction(act *QAction) {
	q.Drv(310000, 310140, Native(act), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setDefaultAction(QAction*)
func (q *QMenu) SetDefaultAction(value *QAction) {
	q.Drv(310000, 310141, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setIcon(QIcon const&)
func (q *QMenu) SetIcon(icon *QIcon) {
	q.Drv(310000, 310142, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setNoReplayFor(QWidget*)
func (q *QMenu) SetNoReplayFor(widget QWidgetInterface) {
	q.Drv(310000, 310143, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setSeparatorsCollapsible(bool)
func (q *QMenu) SetSeparatorsCollapsible(collapse bool) {
	q.Drv(310000, 310144, unsafe.Pointer(&collapse), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setTearOffEnabled(bool)
func (q *QMenu) SetTearOffEnabled(value bool) {
	q.Drv(310000, 310145, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::setTitle(QString const&)
func (q *QMenu) SetTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(310000, 310146, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenu::title()
func (q *QMenu) Title() string {
	var __rv C.string_head
	q.Drv(310000, 310147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QMenuBar : QMenuBar
type QMenuBar struct {
	QWidget
}

// New QMenuBar from driver
func NewMenuBarFromDriver(drv Driver) *QMenuBar {
	_p := &QMenuBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMenuBar) OnHovered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(311000, 311102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMenuBar) OnTriggered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(311000, 311103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMenuBar::QMenuBar()
func NewMenuBar() *QMenuBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 311000, 311104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMenuBar{}
	_p.SetDriver(__rv, 311000, false)
	return _p
}

//QMenuBar::QMenuBar(QWidget*)
func NewMenuBarWithParent(parent QWidgetInterface) *QMenuBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 311000, 311105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMenuBar{}
	_p.SetDriver(__rv, 311000, false)
	return _p
}

//QMenuBar::actionAt(QPoint const&)
func (q *QMenuBar) ActionAt(value *QPoint) *QAction {
	var __rv uintptr
	q.Drv(311000, 311106, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::actionGeometry(QAction*)
func (q *QMenuBar) ActionGeometry(value *QAction) *QRect {
	var __rv uintptr
	q.Drv(311000, 311107, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QMenuBar::activeAction()
func (q *QMenuBar) ActiveAction() *QAction {
	var __rv uintptr
	q.Drv(311000, 311108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::addAction(QAction*)
func (q *QMenuBar) AddAction(action *QAction) {
	q.Drv(311000, 311109, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::addAction(QString const&)
func (q *QMenuBar) AddActionWithText(text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(311000, 311110, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::addAction(QString const&,QObject const*,char const*)
func (q *QMenuBar) AddActionWithTextObjectMember(text string, receiver QObjectInterface, member string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	var __rv uintptr
	q.Drv(311000, 311111, unsafe.Pointer(_text), Native(receiver), unsafe.Pointer(_member), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::addMenu(QMenu*)
func (q *QMenuBar) AddMenu(menu *QMenu) *QAction {
	var __rv uintptr
	q.Drv(311000, 311112, Native(menu), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::addMenu(QString const&)
func (q *QMenuBar) AddMenuWithTitle(title string) *QMenu {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(311000, 311113, unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMenuBar::addMenu(QIcon const&,QString const&)
func (q *QMenuBar) AddMenuWithIconTitle(icon *QIcon, title string) *QMenu {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	q.Drv(311000, 311114, Native(icon), unsafe.Pointer(_title), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QMenuBar::addSeparator()
func (q *QMenuBar) AddSeparator() *QAction {
	var __rv uintptr
	q.Drv(311000, 311115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::clear()
func (q *QMenuBar) Clear() {
	q.Drv(311000, 311116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::cornerWidget()
func (q *QMenuBar) CornerWidget() *QWidget {
	var __rv uintptr
	q.Drv(311000, 311117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMenuBar::cornerWidget(Qt::Corner)
func (q *QMenuBar) CornerWidgetWithCorner(corner Qt_Corner) *QWidget {
	var __rv uintptr
	q.Drv(311000, 311118, unsafe.Pointer(&corner), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QMenuBar::insertMenu(QAction*,QMenu*)
func (q *QMenuBar) InsertMenu(before *QAction, menu *QMenu) *QAction {
	var __rv uintptr
	q.Drv(311000, 311119, Native(before), Native(menu), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::insertSeparator(QAction*)
func (q *QMenuBar) InsertSeparator(before *QAction) *QAction {
	var __rv uintptr
	q.Drv(311000, 311120, Native(before), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QMenuBar::isDefaultUp()
func (q *QMenuBar) IsDefaultUp() bool {
	var __rv bool
	q.Drv(311000, 311121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenuBar::isNativeMenuBar()
func (q *QMenuBar) IsNativeMenuBar() bool {
	var __rv bool
	q.Drv(311000, 311122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMenuBar::setActiveAction(QAction*)
func (q *QMenuBar) SetActiveAction(action *QAction) {
	q.Drv(311000, 311123, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::setCornerWidget(QWidget*)
func (q *QMenuBar) SetCornerWidget(w QWidgetInterface) {
	q.Drv(311000, 311124, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::setCornerWidget(QWidget*,Qt::Corner)
func (q *QMenuBar) SetCornerWidgetWithWidgetCorner(w QWidgetInterface, corner Qt_Corner) {
	q.Drv(311000, 311125, Native(w), unsafe.Pointer(&corner), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::setDefaultUp(bool)
func (q *QMenuBar) SetDefaultUp(value bool) {
	q.Drv(311000, 311126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMenuBar::setNativeMenuBar(bool)
func (q *QMenuBar) SetNativeMenuBar(nativeMenuBar bool) {
	q.Drv(311000, 311127, unsafe.Pointer(&nativeMenuBar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QMessageBox_ButtonRole - QMessageBox::ButtonRole
type QMessageBox_ButtonRole int32

const (
	QMessageBox_InvalidRole     QMessageBox_ButtonRole = -1
	QMessageBox_AcceptRole      QMessageBox_ButtonRole = -1 + 1
	QMessageBox_RejectRole      QMessageBox_ButtonRole = -1 + 1 + 1
	QMessageBox_DestructiveRole QMessageBox_ButtonRole = -1 + 1 + 1 + 1
	QMessageBox_ActionRole      QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1
	QMessageBox_HelpRole        QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1
	QMessageBox_YesRole         QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1
	QMessageBox_NoRole          QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QMessageBox_ResetRole       QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QMessageBox_ApplyRole       QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QMessageBox_NRoles          QMessageBox_ButtonRole = -1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
)

//enum QMessageBox_StandardButton - QMessageBox::StandardButton
type QMessageBox_StandardButton uint32

const (
	QMessageBox_NoButton        QMessageBox_StandardButton = 0x00000000
	QMessageBox_Ok              QMessageBox_StandardButton = 0x00000400
	QMessageBox_Save            QMessageBox_StandardButton = 0x00000800
	QMessageBox_SaveAll         QMessageBox_StandardButton = 0x00001000
	QMessageBox_Open            QMessageBox_StandardButton = 0x00002000
	QMessageBox_Yes             QMessageBox_StandardButton = 0x00004000
	QMessageBox_YesToAll        QMessageBox_StandardButton = 0x00008000
	QMessageBox_No              QMessageBox_StandardButton = 0x00010000
	QMessageBox_NoToAll         QMessageBox_StandardButton = 0x00020000
	QMessageBox_Abort           QMessageBox_StandardButton = 0x00040000
	QMessageBox_Retry           QMessageBox_StandardButton = 0x00080000
	QMessageBox_Ignore          QMessageBox_StandardButton = 0x00100000
	QMessageBox_Close           QMessageBox_StandardButton = 0x00200000
	QMessageBox_Cancel          QMessageBox_StandardButton = 0x00400000
	QMessageBox_Discard         QMessageBox_StandardButton = 0x00800000
	QMessageBox_Help            QMessageBox_StandardButton = 0x01000000
	QMessageBox_Apply           QMessageBox_StandardButton = 0x02000000
	QMessageBox_Reset           QMessageBox_StandardButton = 0x04000000
	QMessageBox_RestoreDefaults QMessageBox_StandardButton = 0x08000000
	QMessageBox_FirstButton     QMessageBox_StandardButton = QMessageBox_Ok
	QMessageBox_LastButton      QMessageBox_StandardButton = QMessageBox_RestoreDefaults
	QMessageBox_YesAll          QMessageBox_StandardButton = QMessageBox_YesToAll
	QMessageBox_NoAll           QMessageBox_StandardButton = QMessageBox_NoToAll
	QMessageBox_Default         QMessageBox_StandardButton = 0x00000100
	QMessageBox_Escape          QMessageBox_StandardButton = 0x00000200
	QMessageBox_FlagMask        QMessageBox_StandardButton = 0x00000300
	QMessageBox_ButtonMask      QMessageBox_StandardButton = ^QMessageBox_FlagMask
)

//enum QMessageBox_Icon - QMessageBox::Icon
type QMessageBox_Icon uint32

const (
	QMessageBox_NoIcon      QMessageBox_Icon = 0
	QMessageBox_Information QMessageBox_Icon = 1
	QMessageBox_Warning     QMessageBox_Icon = 2
	QMessageBox_Critical    QMessageBox_Icon = 3
	QMessageBox_Question    QMessageBox_Icon = 4
)

//enum QMessageBox_Button - QMessageBox::Button
type QMessageBox_Button uint32

const (
	QMessageBox_Button_NoButton        QMessageBox_Button = 0x00000000
	QMessageBox_Button_Ok              QMessageBox_Button = 0x00000400
	QMessageBox_Button_Save            QMessageBox_Button = 0x00000800
	QMessageBox_Button_SaveAll         QMessageBox_Button = 0x00001000
	QMessageBox_Button_Open            QMessageBox_Button = 0x00002000
	QMessageBox_Button_Yes             QMessageBox_Button = 0x00004000
	QMessageBox_Button_YesToAll        QMessageBox_Button = 0x00008000
	QMessageBox_Button_No              QMessageBox_Button = 0x00010000
	QMessageBox_Button_NoToAll         QMessageBox_Button = 0x00020000
	QMessageBox_Button_Abort           QMessageBox_Button = 0x00040000
	QMessageBox_Button_Retry           QMessageBox_Button = 0x00080000
	QMessageBox_Button_Ignore          QMessageBox_Button = 0x00100000
	QMessageBox_Button_Close           QMessageBox_Button = 0x00200000
	QMessageBox_Button_Cancel          QMessageBox_Button = 0x00400000
	QMessageBox_Button_Discard         QMessageBox_Button = 0x00800000
	QMessageBox_Button_Help            QMessageBox_Button = 0x01000000
	QMessageBox_Button_Apply           QMessageBox_Button = 0x02000000
	QMessageBox_Button_Reset           QMessageBox_Button = 0x04000000
	QMessageBox_Button_RestoreDefaults QMessageBox_Button = 0x08000000
	QMessageBox_Button_FirstButton     QMessageBox_Button = QMessageBox_Button(QMessageBox_Ok)
	QMessageBox_Button_LastButton      QMessageBox_Button = QMessageBox_Button(QMessageBox_RestoreDefaults)
	QMessageBox_Button_YesAll          QMessageBox_Button = QMessageBox_Button(QMessageBox_YesToAll)
	QMessageBox_Button_NoAll           QMessageBox_Button = QMessageBox_Button(QMessageBox_NoToAll)
	QMessageBox_Button_Default         QMessageBox_Button = 0x00000100
	QMessageBox_Button_Escape          QMessageBox_Button = 0x00000200
	QMessageBox_Button_FlagMask        QMessageBox_Button = 0x00000300
	QMessageBox_Button_ButtonMask      QMessageBox_Button = ^QMessageBox_Button(QMessageBox_FlagMask)
)

//struct QMessageBox : QMessageBox
type QMessageBox struct {
	QDialog
}

// New QMessageBox from driver
func NewMessageBoxFromDriver(drv Driver) *QMessageBox {
	_p := &QMessageBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMessageBox) OnButtonClicked(fn func(*QAbstractButton)) uintptr {
	var __rv uintptr
	q.Drv(312000, 312102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMessageBox::QMessageBox()
func NewMessageBox() *QMessageBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 312000, 312103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMessageBox{}
	_p.SetDriver(__rv, 312000, false)
	return _p
}

//QMessageBox::QMessageBox(QWidget*)
func NewMessageBoxWithParent(parent QWidgetInterface) *QMessageBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 312000, 312104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMessageBox{}
	_p.SetDriver(__rv, 312000, false)
	return _p
}

//QMessageBox::QMessageBox(QMessageBox::Icon,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QWidget*,QFlags<Qt::WindowType>)
func NewMessageBoxWithIconTitleTextButtonsParentFlags(icon QMessageBox_Icon, title string, text string, buttons QMessageBox_StandardButton, parent QWidgetInterface, flags Qt_WindowType) *QMessageBox {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 312000, 312105, unsafe.Pointer(&icon), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMessageBox{}
	_p.SetDriver(__rv, 312000, false)
	return _p
}

//QMessageBox::QMessageBox(QString const&,QString const&,QMessageBox::Icon,int,int,int,QWidget*,QFlags<Qt::WindowType>)
func NewMessageBoxWithTitleTextIconButton0Button1Button2ParentFlags(title string, text string, icon QMessageBox_Icon, button0 int32, button1 int32, button2 int32, parent QWidgetInterface, f Qt_WindowType) *QMessageBox {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 312000, 312106, unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&icon), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMessageBox{}
	_p.SetDriver(__rv, 312000, false)
	return _p
}

//QMessageBox::about(QWidget*,QString const&,QString const&)
func QMessageBoxAbout(parent QWidgetInterface, title string, text string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	DirectQtDrv(nil, 312000, 312107, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::about(QWidget*,QString const&,QString const&)
func (q *QMessageBox) About(parent QWidgetInterface, title string, text string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(312000, 312107, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::aboutQt(QWidget*)
func QMessageBoxAboutQt(parent QWidgetInterface) {
	DirectQtDrv(nil, 312000, 312108, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::aboutQt(QWidget*)
func (q *QMessageBox) AboutQt(parent QWidgetInterface) {
	q.Drv(312000, 312108, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::aboutQt(QWidget*,QString const&)
func QMessageBoxAboutQtWithParentTitle(parent QWidgetInterface, title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	DirectQtDrv(nil, 312000, 312109, Native(parent), unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::aboutQt(QWidget*,QString const&)
func (q *QMessageBox) AboutQtWithParentTitle(parent QWidgetInterface, title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(312000, 312109, Native(parent), unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::addButton(QMessageBox::StandardButton)
func (q *QMessageBox) AddButton(button QMessageBox_StandardButton) *QPushButton {
	var __rv uintptr
	q.Drv(312000, 312110, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QMessageBox::addButton(QAbstractButton*,QMessageBox::ButtonRole)
func (q *QMessageBox) AddButtonWithButtonRole(button *QAbstractButton, role QMessageBox_ButtonRole) {
	q.Drv(312000, 312111, Native(button), unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::addButton(QString const&,QMessageBox::ButtonRole)
func (q *QMessageBox) AddButtonWithTextRole(text string, role QMessageBox_ButtonRole) *QPushButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(312000, 312112, unsafe.Pointer(_text), unsafe.Pointer(&role), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QMessageBox::button(QMessageBox::StandardButton)
func (q *QMessageBox) Button(which QMessageBox_StandardButton) *QAbstractButton {
	var __rv uintptr
	q.Drv(312000, 312113, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QMessageBox::buttonRole(QAbstractButton*)
func (q *QMessageBox) ButtonRole(button *QAbstractButton) QMessageBox_ButtonRole {
	var __rv QMessageBox_ButtonRole
	q.Drv(312000, 312114, Native(button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::buttonText(int)
func (q *QMessageBox) ButtonText(button int32) string {
	var __rv C.string_head
	q.Drv(312000, 312115, unsafe.Pointer(&button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMessageBox::buttons()
func (q *QMessageBox) Buttons() []*QAbstractButton {
	var __rv []*QAbstractButton
	q.Drv(312000, 312116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::clickedButton()
func (q *QMessageBox) ClickedButton() *QAbstractButton {
	var __rv uintptr
	q.Drv(312000, 312117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func QMessageBoxCriticalWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	DirectQtDrv(nil, 312000, 312118, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func (q *QMessageBox) CriticalWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312118, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,int,int,int)
func QMessageBoxCriticalWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312119, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,int,int,int)
func (q *QMessageBox) CriticalWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(312000, 312119, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func QMessageBoxCriticalWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312120, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::critical(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func (q *QMessageBox) CriticalWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	q.Drv(312000, 312120, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::defaultButton()
func (q *QMessageBox) DefaultButton() *QPushButton {
	var __rv uintptr
	q.Drv(312000, 312121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPushButton{}
	_rp.SetDriver(__rv, 333000, false)
	return _rp
}

//QMessageBox::detailedText()
func (q *QMessageBox) DetailedText() string {
	var __rv C.string_head
	q.Drv(312000, 312122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMessageBox::escapeButton()
func (q *QMessageBox) EscapeButton() *QAbstractButton {
	var __rv uintptr
	q.Drv(312000, 312123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QMessageBox::icon()
func (q *QMessageBox) Icon() QMessageBox_Icon {
	var __rv QMessageBox_Icon
	q.Drv(312000, 312124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::iconPixmap()
func (q *QMessageBox) IconPixmap() *QPixmap {
	var __rv uintptr
	q.Drv(312000, 312125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QMessageBox::information(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func QMessageBoxInformationWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	DirectQtDrv(nil, 312000, 312126, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::information(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func (q *QMessageBox) InformationWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312126, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::information(QWidget*,QString const&,QString const&,int,int,int)
func QMessageBoxInformationWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312127, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::information(QWidget*,QString const&,QString const&,int,int,int)
func (q *QMessageBox) InformationWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(312000, 312127, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::information(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func QMessageBoxInformationWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312128, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::information(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func (q *QMessageBox) InformationWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	q.Drv(312000, 312128, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::informativeText()
func (q *QMessageBox) InformativeText() string {
	var __rv C.string_head
	q.Drv(312000, 312129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMessageBox::open()
func (q *QMessageBox) Open() {
	q.Drv(312000, 312130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::open(QObject*,char const*)
func (q *QMessageBox) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(312000, 312131, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::question(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func QMessageBoxQuestionWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	DirectQtDrv(nil, 312000, 312132, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::question(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func (q *QMessageBox) QuestionWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312132, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::question(QWidget*,QString const&,QString const&,int,int,int)
func QMessageBoxQuestionWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312133, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::question(QWidget*,QString const&,QString const&,int,int,int)
func (q *QMessageBox) QuestionWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(312000, 312133, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::question(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func QMessageBoxQuestionWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312134, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::question(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func (q *QMessageBox) QuestionWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	q.Drv(312000, 312134, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::removeButton(QAbstractButton*)
func (q *QMessageBox) RemoveButton(button *QAbstractButton) {
	q.Drv(312000, 312135, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setButtonText(int,QString const&)
func (q *QMessageBox) SetButtonText(button int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(312000, 312136, unsafe.Pointer(&button), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setDefaultButton(QMessageBox::StandardButton)
func (q *QMessageBox) SetDefaultButton(button QMessageBox_StandardButton) {
	q.Drv(312000, 312137, unsafe.Pointer(&button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setDefaultButton(QPushButton*)
func (q *QMessageBox) SetDefaultButtonWithButton(button *QPushButton) {
	q.Drv(312000, 312138, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setDetailedText(QString const&)
func (q *QMessageBox) SetDetailedText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(312000, 312139, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setEscapeButton(QAbstractButton*)
func (q *QMessageBox) SetEscapeButton(button *QAbstractButton) {
	q.Drv(312000, 312140, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setEscapeButton(QMessageBox::StandardButton)
func (q *QMessageBox) SetEscapeButtonWithStandardbutton(button QMessageBox_StandardButton) {
	q.Drv(312000, 312141, unsafe.Pointer(&button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setIcon(QMessageBox::Icon)
func (q *QMessageBox) SetIcon(value QMessageBox_Icon) {
	q.Drv(312000, 312142, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setIconPixmap(QPixmap const&)
func (q *QMessageBox) SetIconPixmap(pixmap *QPixmap) {
	q.Drv(312000, 312143, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setInformativeText(QString const&)
func (q *QMessageBox) SetInformativeText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(312000, 312144, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setStandardButtons(QFlags<QMessageBox::StandardButton>)
func (q *QMessageBox) SetStandardButtons(buttons QMessageBox_StandardButton) {
	q.Drv(312000, 312145, unsafe.Pointer(&buttons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setText(QString const&)
func (q *QMessageBox) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(312000, 312146, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setTextFormat(Qt::TextFormat)
func (q *QMessageBox) SetTextFormat(format Qt_TextFormat) {
	q.Drv(312000, 312147, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setWindowModality(Qt::WindowModality)
func (q *QMessageBox) SetWindowModality(windowModality Qt_WindowModality) {
	q.Drv(312000, 312148, unsafe.Pointer(&windowModality), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::setWindowTitle(QString const&)
func (q *QMessageBox) SetWindowTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(312000, 312149, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMessageBox::standardButton(QAbstractButton*)
func (q *QMessageBox) StandardButton(button *QAbstractButton) QMessageBox_StandardButton {
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312150, Native(button), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::standardButtons()
func (q *QMessageBox) StandardButtons() QMessageBox_StandardButton {
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::standardIcon(QMessageBox::Icon)
func QMessageBoxStandardIcon(icon QMessageBox_Icon) *QPixmap {
	var __rv uintptr
	DirectQtDrv(nil, 312000, 312152, unsafe.Pointer(&icon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QMessageBox::standardIcon(QMessageBox::Icon)
func (q *QMessageBox) StandardIcon(icon QMessageBox_Icon) *QPixmap {
	var __rv uintptr
	q.Drv(312000, 312152, unsafe.Pointer(&icon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QMessageBox::text()
func (q *QMessageBox) Text() string {
	var __rv C.string_head
	q.Drv(312000, 312153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMessageBox::textFormat()
func (q *QMessageBox) TextFormat() Qt_TextFormat {
	var __rv Qt_TextFormat
	q.Drv(312000, 312154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func QMessageBoxWarningWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	DirectQtDrv(nil, 312000, 312155, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,QFlags<QMessageBox::StandardButton>,QMessageBox::StandardButton)
func (q *QMessageBox) WarningWithParentTitleTextButtonsStandardbutton(parent QWidgetInterface, title string, text string, buttons QMessageBox_StandardButton, defaultButton QMessageBox_StandardButton) QMessageBox_StandardButton {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv QMessageBox_StandardButton
	q.Drv(312000, 312155, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&buttons), unsafe.Pointer(&defaultButton), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,int,int,int)
func QMessageBoxWarningWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312156, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,int,int,int)
func (q *QMessageBox) WarningWithParentTitleTextButton0Button1Button2(parent QWidgetInterface, title string, text string, button0 int32, button1 int32, button2 int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(312000, 312156, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(&button0), unsafe.Pointer(&button1), unsafe.Pointer(&button2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func QMessageBoxWarningWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	DirectQtDrv(nil, 312000, 312157, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//QMessageBox::warning(QWidget*,QString const&,QString const&,QString const&,QString const&,QString const&,int,int)
func (q *QMessageBox) WarningWithParentTitleTextButton0textButton1textButton2textDefaultbuttonnumberEscapebuttonnumber(parent QWidgetInterface, title string, text string, button0Text string, button1Text string, button2Text string, defaultButtonNumber int32, escapeButtonNumber int32) int32 {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_button0Text := NewCStringHead(button0Text)
	defer FreeCStringHead(_button0Text)
	_button1Text := NewCStringHead(button1Text)
	defer FreeCStringHead(_button1Text)
	_button2Text := NewCStringHead(button2Text)
	defer FreeCStringHead(_button2Text)
	var __rv int32
	q.Drv(312000, 312157, Native(parent), unsafe.Pointer(_title), unsafe.Pointer(_text), unsafe.Pointer(_button0Text), unsafe.Pointer(_button1Text), unsafe.Pointer(_button2Text), unsafe.Pointer(&defaultButtonNumber), unsafe.Pointer(&escapeButtonNumber), unsafe.Pointer(&__rv), nil, nil, nil)
	return __rv
}

//struct QMimeData : QMimeData
type QMimeData struct {
	QObject
}

// New QMimeData from driver
func NewMimeDataFromDriver(drv Driver) *QMimeData {
	_p := &QMimeData{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QMimeData::QMimeData()
func NewMimeData() *QMimeData {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 313000, 313102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMimeData{}
	_p.SetDriver(__rv, 313000, false)
	return _p
}

//QMimeData::clear()
func (q *QMimeData) Clear() {
	q.Drv(313000, 313103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::colorData()
func (q *QMimeData) ColorData() *QVariant {
	var __rv uintptr
	q.Drv(313000, 313104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QMimeData::data(QString const&)
func (q *QMimeData) Data(mimetype string) []byte {
	_mimetype := NewCStringHead(mimetype)
	defer FreeCStringHead(_mimetype)
	var __rv []byte
	q.Drv(313000, 313105, unsafe.Pointer(_mimetype), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::formats()
func (q *QMimeData) Formats() []string {
	var __rv []string
	q.Drv(313000, 313106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasColor()
func (q *QMimeData) HasColor() bool {
	var __rv bool
	q.Drv(313000, 313107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasFormat(QString const&)
func (q *QMimeData) HasFormat(mimetype string) bool {
	_mimetype := NewCStringHead(mimetype)
	defer FreeCStringHead(_mimetype)
	var __rv bool
	q.Drv(313000, 313108, unsafe.Pointer(_mimetype), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasHtml()
func (q *QMimeData) HasHtml() bool {
	var __rv bool
	q.Drv(313000, 313109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasImage()
func (q *QMimeData) HasImage() bool {
	var __rv bool
	q.Drv(313000, 313110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasText()
func (q *QMimeData) HasText() bool {
	var __rv bool
	q.Drv(313000, 313111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::hasUrls()
func (q *QMimeData) HasUrls() bool {
	var __rv bool
	q.Drv(313000, 313112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMimeData::html()
func (q *QMimeData) Html() string {
	var __rv C.string_head
	q.Drv(313000, 313113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMimeData::imageData()
func (q *QMimeData) ImageData() *QVariant {
	var __rv uintptr
	q.Drv(313000, 313114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QMimeData::removeFormat(QString const&)
func (q *QMimeData) RemoveFormat(mimetype string) {
	_mimetype := NewCStringHead(mimetype)
	defer FreeCStringHead(_mimetype)
	q.Drv(313000, 313115, unsafe.Pointer(_mimetype), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::retrieveData(QString const&,QVariant::Type)
func (q *QMimeData) RetrieveData(mimetype string, preferredType QVariant_Type) *QVariant {
	_mimetype := NewCStringHead(mimetype)
	defer FreeCStringHead(_mimetype)
	var __rv uintptr
	q.Drv(313000, 313116, unsafe.Pointer(_mimetype), unsafe.Pointer(&preferredType), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QMimeData::setColorData(QVariant const&)
func (q *QMimeData) SetColorData(color *QVariant) {
	q.Drv(313000, 313117, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::setData(QString const&,QByteArray const&)
func (q *QMimeData) SetData(mimetype string, data []byte) {
	_mimetype := NewCStringHead(mimetype)
	defer FreeCStringHead(_mimetype)
	_data := NewCByteArrayHead(data)
	defer FreeCByteArrayHead(_data)
	q.Drv(313000, 313118, unsafe.Pointer(_mimetype), unsafe.Pointer(_data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::setHtml(QString const&)
func (q *QMimeData) SetHtml(html string) {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	q.Drv(313000, 313119, unsafe.Pointer(_html), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::setImageData(QVariant const&)
func (q *QMimeData) SetImageData(image *QVariant) {
	q.Drv(313000, 313120, Native(image), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::setText(QString const&)
func (q *QMimeData) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(313000, 313121, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::setUrls(QList<QUrl> const&)
func (q *QMimeData) SetUrls(urls []*QUrl) {
	_urls := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&urls)))
	defer FreeCNoObjectArrayHead(_urls)
	q.Drv(313000, 313122, unsafe.Pointer(_urls), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMimeData::text()
func (q *QMimeData) Text() string {
	var __rv C.string_head
	q.Drv(313000, 313123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMimeData::urls()
func (q *QMimeData) Urls() []*QUrl {
	var __rv []*QUrl
	q.Drv(313000, 313124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QMouseEventTransition : QMouseEventTransition
type QMouseEventTransition struct {
	QEventTransition
}

// New QMouseEventTransition from driver
func NewMouseEventTransitionFromDriver(drv Driver) *QMouseEventTransition {
	_p := &QMouseEventTransition{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QMouseEventTransition::QMouseEventTransition()
func NewMouseEventTransition() *QMouseEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 314000, 314102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMouseEventTransition{}
	_p.SetDriver(__rv, 314000, false)
	return _p
}

//QMouseEventTransition::QMouseEventTransition(QState*)
func NewMouseEventTransitionWithSourcestate(sourceState *QState) *QMouseEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 314000, 314103, Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMouseEventTransition{}
	_p.SetDriver(__rv, 314000, false)
	return _p
}

//QMouseEventTransition::QMouseEventTransition(QObject*,QEvent::Type,Qt::MouseButton,QState*)
func NewMouseEventTransitionWithObjectTypeButtonSourcestate(object QObjectInterface, _type QEvent_Type, button Qt_MouseButton, sourceState *QState) *QMouseEventTransition {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 314000, 314104, Native(object), unsafe.Pointer(&_type), unsafe.Pointer(&button), Native(sourceState), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMouseEventTransition{}
	_p.SetDriver(__rv, 314000, false)
	return _p
}

//QMouseEventTransition::button()
func (q *QMouseEventTransition) Button() Qt_MouseButton {
	var __rv Qt_MouseButton
	q.Drv(314000, 314105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEventTransition::hitTestPath()
func (q *QMouseEventTransition) HitTestPath() *QPainterPath {
	var __rv uintptr
	q.Drv(314000, 314106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPainterPath{}
	_rp.SetDriver(__rv, 89000, true)
	return _rp
}

//QMouseEventTransition::modifierMask()
func (q *QMouseEventTransition) ModifierMask() Qt_KeyboardModifier {
	var __rv Qt_KeyboardModifier
	q.Drv(314000, 314107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMouseEventTransition::setButton(Qt::MouseButton)
func (q *QMouseEventTransition) SetButton(button Qt_MouseButton) {
	q.Drv(314000, 314108, unsafe.Pointer(&button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMouseEventTransition::setHitTestPath(QPainterPath const&)
func (q *QMouseEventTransition) SetHitTestPath(path *QPainterPath) {
	q.Drv(314000, 314109, Native(path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMouseEventTransition::setModifierMask(QFlags<Qt::KeyboardModifier>)
func (q *QMouseEventTransition) SetModifierMask(modifiers Qt_KeyboardModifier) {
	q.Drv(314000, 314110, unsafe.Pointer(&modifiers), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QMovie_CacheMode - QMovie::CacheMode
type QMovie_CacheMode uint32

const (
	QMovie_CacheNone QMovie_CacheMode = 0
	QMovie_CacheAll  QMovie_CacheMode = 1
)

//enum QMovie_MovieState - QMovie::MovieState
type QMovie_MovieState uint32

const (
	QMovie_NotRunning QMovie_MovieState = 0
	QMovie_Paused     QMovie_MovieState = 1
	QMovie_Running    QMovie_MovieState = 2
)

//struct QMovie : QMovie
type QMovie struct {
	QObject
}

// New QMovie from driver
func NewMovieFromDriver(drv Driver) *QMovie {
	_p := &QMovie{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QMovie) OnFrameChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(315000, 315102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnError(fn func(QImageReader_ImageReaderError)) uintptr {
	var __rv uintptr
	q.Drv(315000, 315103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnResized(fn func(*QSize)) uintptr {
	var __rv uintptr
	q.Drv(315000, 315104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnStateChanged(fn func(QMovie_MovieState)) uintptr {
	var __rv uintptr
	q.Drv(315000, 315105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnStarted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(315000, 315106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnUpdated(fn func(*QRect)) uintptr {
	var __rv uintptr
	q.Drv(315000, 315107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QMovie) OnFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(315000, 315108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QMovie::QMovie()
func NewMovie() *QMovie {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 315000, 315109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMovie{}
	_p.SetDriver(__rv, 315000, false)
	return _p
}

//QMovie::QMovie(QObject*)
func NewMovieWithParent(parent QObjectInterface) *QMovie {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 315000, 315110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMovie{}
	_p.SetDriver(__rv, 315000, false)
	return _p
}

//QMovie::QMovie(QIODevice*,QByteArray const&,QObject*)
func NewMovieWithDeviceFormatParent(device QIODeviceInterface, format []byte, parent QObjectInterface) *QMovie {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 315000, 315111, Native(device), unsafe.Pointer(_format), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMovie{}
	_p.SetDriver(__rv, 315000, false)
	return _p
}

//QMovie::QMovie(QString const&,QByteArray const&,QObject*)
func NewMovieWithFilenameFormatParent(fileName string, format []byte, parent QObjectInterface) *QMovie {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 315000, 315112, unsafe.Pointer(_fileName), unsafe.Pointer(_format), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QMovie{}
	_p.SetDriver(__rv, 315000, false)
	return _p
}

//QMovie::backgroundColor()
func (q *QMovie) BackgroundColor() *QColor {
	var __rv uintptr
	q.Drv(315000, 315113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QMovie::cacheMode()
func (q *QMovie) CacheMode() QMovie_CacheMode {
	var __rv QMovie_CacheMode
	q.Drv(315000, 315114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::currentFrameNumber()
func (q *QMovie) CurrentFrameNumber() int32 {
	var __rv int32
	q.Drv(315000, 315115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::currentImage()
func (q *QMovie) CurrentImage() *QImage {
	var __rv uintptr
	q.Drv(315000, 315116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QImage{}
	_rp.SetDriver(__rv, 53000, true)
	return _rp
}

//QMovie::currentPixmap()
func (q *QMovie) CurrentPixmap() *QPixmap {
	var __rv uintptr
	q.Drv(315000, 315117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QMovie::device()
func (q *QMovie) Device() *QIODevice {
	var __rv uintptr
	q.Drv(315000, 315118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIODevice{}
	_rp.SetDriver(__rv, 294000, false)
	return _rp
}

//QMovie::fileName()
func (q *QMovie) FileName() string {
	var __rv C.string_head
	q.Drv(315000, 315119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QMovie::format()
func (q *QMovie) Format() []byte {
	var __rv []byte
	q.Drv(315000, 315120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::frameCount()
func (q *QMovie) FrameCount() int32 {
	var __rv int32
	q.Drv(315000, 315121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::frameRect()
func (q *QMovie) FrameRect() *QRect {
	var __rv uintptr
	q.Drv(315000, 315122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QMovie::isValid()
func (q *QMovie) IsValid() bool {
	var __rv bool
	q.Drv(315000, 315123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::jumpToFrame(int)
func (q *QMovie) JumpToFrame(frameNumber int32) bool {
	var __rv bool
	q.Drv(315000, 315124, unsafe.Pointer(&frameNumber), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::jumpToNextFrame()
func (q *QMovie) JumpToNextFrame() bool {
	var __rv bool
	q.Drv(315000, 315125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::loopCount()
func (q *QMovie) LoopCount() int32 {
	var __rv int32
	q.Drv(315000, 315126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::nextFrameDelay()
func (q *QMovie) NextFrameDelay() int32 {
	var __rv int32
	q.Drv(315000, 315127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::scaledSize()
func (q *QMovie) ScaledSize() *QSize {
	var __rv uintptr
	q.Drv(315000, 315128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QMovie::setBackgroundColor(QColor const&)
func (q *QMovie) SetBackgroundColor(color *QColor) {
	q.Drv(315000, 315129, Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setCacheMode(QMovie::CacheMode)
func (q *QMovie) SetCacheMode(mode QMovie_CacheMode) {
	q.Drv(315000, 315130, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setDevice(QIODevice*)
func (q *QMovie) SetDevice(device QIODeviceInterface) {
	q.Drv(315000, 315131, Native(device), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setFileName(QString const&)
func (q *QMovie) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(315000, 315132, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setFormat(QByteArray const&)
func (q *QMovie) SetFormat(format []byte) {
	_format := NewCByteArrayHead(format)
	defer FreeCByteArrayHead(_format)
	q.Drv(315000, 315133, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setPaused(bool)
func (q *QMovie) SetPaused(paused bool) {
	q.Drv(315000, 315134, unsafe.Pointer(&paused), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setScaledSize(QSize const&)
func (q *QMovie) SetScaledSize(size *QSize) {
	q.Drv(315000, 315135, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::setSpeed(int)
func (q *QMovie) SetSpeed(percentSpeed int32) {
	q.Drv(315000, 315136, unsafe.Pointer(&percentSpeed), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::speed()
func (q *QMovie) Speed() int32 {
	var __rv int32
	q.Drv(315000, 315137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::start()
func (q *QMovie) Start() {
	q.Drv(315000, 315138, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::state()
func (q *QMovie) State() QMovie_MovieState {
	var __rv QMovie_MovieState
	q.Drv(315000, 315139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::stop()
func (q *QMovie) Stop() {
	q.Drv(315000, 315140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QMovie::supportedFormats()
func QMovieSupportedFormats() [][]byte {
	var __rv [][]byte
	DirectQtDrv(nil, 315000, 315141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QMovie::supportedFormats()
func (q *QMovie) SupportedFormats() [][]byte {
	var __rv [][]byte
	q.Drv(315000, 315141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QObject : QObject
type QObject struct {
	BaseDrv
}

// New QObject from driver
func NewObjectFromDriver(drv Driver) *QObject {
	_p := &QObject{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QObject) OnDestroyed(fn func()) uintptr {
	var __rv uintptr
	q.Drv(316000, 316102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QObject) OnDestroyedEx(fn func(*QObject)) uintptr {
	var __rv uintptr
	q.Drv(316000, 316103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QObject::QObject()
func NewObject() *QObject {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 316000, 316104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QObject{}
	_p.SetDriver(__rv, 316000, false)
	return _p
}

//QObject::QObject(QObject*)
func NewObjectWithParent(parent QObjectInterface) *QObject {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 316000, 316105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QObject{}
	_p.SetDriver(__rv, 316000, false)
	return _p
}

//QObject::blockSignals(bool)
func (q *QObject) BlockSignals(b bool) bool {
	var __rv bool
	q.Drv(316000, 316106, unsafe.Pointer(&b), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::childEvent(QChildEvent*)
func (q *QObject) ChildEvent(value *QChildEvent) {
	q.Drv(316000, 316107, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::children()
func (q *QObject) Children() []*QObject {
	var __rv []*QObject
	q.Drv(316000, 316108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::customEvent(QEvent*)
func (q *QObject) CustomEvent(value *QEvent) {
	q.Drv(316000, 316109, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::deleteLater()
func (q *QObject) DeleteLater() {
	q.Drv(316000, 316110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::dynamicPropertyNames()
func (q *QObject) DynamicPropertyNames() [][]byte {
	var __rv [][]byte
	q.Drv(316000, 316111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::event(QEvent*)
func (q *QObject) Event(value *QEvent) bool {
	var __rv bool
	q.Drv(316000, 316112, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::findChild(QString const&)
func (q *QObject) FindChild(name string) *QObject {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(316000, 316113, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QObject::findChildren(QString const&)
func (q *QObject) FindChildren(name string) []*QObject {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv []*QObject
	q.Drv(316000, 316114, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::findChildrenWithRegexp(QRegExp const&)
func (q *QObject) FindChildrenWithRegexp(regexp *QRegExp) []*QObject {
	var __rv []*QObject
	q.Drv(316000, 316115, Native(regexp), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::inherits(char const*)
func (q *QObject) Inherits(classname string) bool {
	_classname := NewCStringHead(classname)
	defer FreeCStringHead(_classname)
	var __rv bool
	q.Drv(316000, 316116, unsafe.Pointer(_classname), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::isWidgetType()
func (q *QObject) IsWidgetType() bool {
	var __rv bool
	q.Drv(316000, 316117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::killTimer(int)
func (q *QObject) KillTimer(id int32) {
	q.Drv(316000, 316118, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::metaObject()
func (q *QObject) MetaObject() *QMetaObject {
	var __rv uintptr
	q.Drv(316000, 316119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMetaObject{}
	_rp.SetDriver(__rv, 78000, true)
	return _rp
}

//QObject::objectName()
func (q *QObject) ObjectName() string {
	var __rv C.string_head
	q.Drv(316000, 316120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QObject::parent()
func (q *QObject) Parent() *QObject {
	var __rv uintptr
	q.Drv(316000, 316121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QObject::property(char const*)
func (q *QObject) Property(name string) *QVariant {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(316000, 316122, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QObject::receivers(char const*)
func (q *QObject) Receivers(signal string) int32 {
	_signal := NewCStringHead(signal)
	defer FreeCStringHead(_signal)
	var __rv int32
	q.Drv(316000, 316123, unsafe.Pointer(_signal), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::registerUserData()
func QObjectRegisterUserData() uint32 {
	var __rv uint32
	DirectQtDrv(nil, 316000, 316124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::registerUserData()
func (q *QObject) RegisterUserData() uint32 {
	var __rv uint32
	q.Drv(316000, 316124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::sender()
func (q *QObject) Sender() *QObject {
	var __rv uintptr
	q.Drv(316000, 316125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QObject::setObjectName(QString const&)
func (q *QObject) SetObjectName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(316000, 316126, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::setParent(QObject*)
func (q *QObject) SetParent(value QObjectInterface) {
	q.Drv(316000, 316127, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::setProperty(char const*,QVariant const&)
func (q *QObject) SetProperty(name string, value *QVariant) bool {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv bool
	q.Drv(316000, 316128, unsafe.Pointer(_name), Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::signalsBlocked()
func (q *QObject) SignalsBlocked() bool {
	var __rv bool
	q.Drv(316000, 316129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::startTimer(int)
func (q *QObject) StartTimer(interval int32) int32 {
	var __rv int32
	q.Drv(316000, 316130, unsafe.Pointer(&interval), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObject::timerEvent(QTimerEvent*)
func (q *QObject) TimerEvent(value *QTimerEvent) {
	q.Drv(316000, 316131, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObject::tr(char const*)
func (q *QObject) Tr(sourceText string) string {
	_sourceText := NewCStringHead(sourceText)
	defer FreeCStringHead(_sourceText)
	var __rv C.string_head
	q.Drv(316000, 316132, unsafe.Pointer(_sourceText), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QObject::tr(char const*,char const*)
func (q *QObject) TrWithSourcetextDisambiguation(sourceText string, disambiguation string) string {
	_sourceText := NewCStringHead(sourceText)
	defer FreeCStringHead(_sourceText)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	q.Drv(316000, 316133, unsafe.Pointer(_sourceText), unsafe.Pointer(_disambiguation), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QObjectCleanupHandler : QObjectCleanupHandler
type QObjectCleanupHandler struct {
	QObject
}

// New QObjectCleanupHandler from driver
func NewObjectCleanupHandlerFromDriver(drv Driver) *QObjectCleanupHandler {
	_p := &QObjectCleanupHandler{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QObjectCleanupHandler::QObjectCleanupHandler()
func NewObjectCleanupHandler() *QObjectCleanupHandler {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 317000, 317102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QObjectCleanupHandler{}
	_p.SetDriver(__rv, 317000, false)
	return _p
}

//QObjectCleanupHandler::add(QObject*)
func (q *QObjectCleanupHandler) Add(object QObjectInterface) *QObject {
	var __rv uintptr
	q.Drv(317000, 317103, Native(object), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QObjectCleanupHandler::clear()
func (q *QObjectCleanupHandler) Clear() {
	q.Drv(317000, 317104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QObjectCleanupHandler::isEmpty()
func (q *QObjectCleanupHandler) IsEmpty() bool {
	var __rv bool
	q.Drv(317000, 317105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QObjectCleanupHandler::remove(QObject*)
func (q *QObjectCleanupHandler) Remove(object QObjectInterface) {
	q.Drv(317000, 317106, Native(object), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QPanGesture : QPanGesture
type QPanGesture struct {
	QGesture
}

// New QPanGesture from driver
func NewPanGestureFromDriver(drv Driver) *QPanGesture {
	_p := &QPanGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPanGesture::QPanGesture()
func NewPanGesture() *QPanGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 318000, 318102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPanGesture{}
	_p.SetDriver(__rv, 318000, false)
	return _p
}

//QPanGesture::QPanGesture(QObject*)
func NewPanGestureWithParent(parent QObjectInterface) *QPanGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 318000, 318103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPanGesture{}
	_p.SetDriver(__rv, 318000, false)
	return _p
}

//QPanGesture::acceleration()
func (q *QPanGesture) Acceleration() float64 {
	var __rv float64
	q.Drv(318000, 318104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPanGesture::delta()
func (q *QPanGesture) Delta() *QPointF {
	var __rv uintptr
	q.Drv(318000, 318105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPanGesture::lastOffset()
func (q *QPanGesture) LastOffset() *QPointF {
	var __rv uintptr
	q.Drv(318000, 318106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPanGesture::offset()
func (q *QPanGesture) Offset() *QPointF {
	var __rv uintptr
	q.Drv(318000, 318107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPanGesture::setAcceleration(double)
func (q *QPanGesture) SetAcceleration(value float64) {
	q.Drv(318000, 318108, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPanGesture::setLastOffset(QPointF const&)
func (q *QPanGesture) SetLastOffset(value *QPointF) {
	q.Drv(318000, 318109, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPanGesture::setOffset(QPointF const&)
func (q *QPanGesture) SetOffset(value *QPointF) {
	q.Drv(318000, 318110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QParallelAnimationGroup : QParallelAnimationGroup
type QParallelAnimationGroup struct {
	QAnimationGroup
}

// New QParallelAnimationGroup from driver
func NewParallelAnimationGroupFromDriver(drv Driver) *QParallelAnimationGroup {
	_p := &QParallelAnimationGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QParallelAnimationGroup::QParallelAnimationGroup()
func NewParallelAnimationGroup() *QParallelAnimationGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 319000, 319102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QParallelAnimationGroup{}
	_p.SetDriver(__rv, 319000, false)
	return _p
}

//QParallelAnimationGroup::QParallelAnimationGroup(QObject*)
func NewParallelAnimationGroupWithParent(parent QObjectInterface) *QParallelAnimationGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 319000, 319103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QParallelAnimationGroup{}
	_p.SetDriver(__rv, 319000, false)
	return _p
}

//struct QPauseAnimation : QPauseAnimation
type QPauseAnimation struct {
	QAbstractAnimation
}

// New QPauseAnimation from driver
func NewPauseAnimationFromDriver(drv Driver) *QPauseAnimation {
	_p := &QPauseAnimation{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPauseAnimation::QPauseAnimation()
func NewPauseAnimation() *QPauseAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 320000, 320102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPauseAnimation{}
	_p.SetDriver(__rv, 320000, false)
	return _p
}

//QPauseAnimation::QPauseAnimation(QObject*)
func NewPauseAnimationWithParent(parent QObjectInterface) *QPauseAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 320000, 320103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPauseAnimation{}
	_p.SetDriver(__rv, 320000, false)
	return _p
}

//QPauseAnimation::QPauseAnimation(int,QObject*)
func NewPauseAnimationWithMsecsParent(msecs int32, parent QObjectInterface) *QPauseAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 320000, 320104, unsafe.Pointer(&msecs), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPauseAnimation{}
	_p.SetDriver(__rv, 320000, false)
	return _p
}

//QPauseAnimation::setDuration(int)
func (q *QPauseAnimation) SetDuration(msecs int32) {
	q.Drv(320000, 320105, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QPinchGesture_ChangeFlag - QPinchGesture::ChangeFlag
type QPinchGesture_ChangeFlag uint32

const (
	QPinchGesture_ScaleFactorChanged   QPinchGesture_ChangeFlag = 0x1
	QPinchGesture_RotationAngleChanged QPinchGesture_ChangeFlag = 0x2
	QPinchGesture_CenterPointChanged   QPinchGesture_ChangeFlag = 0x4
)

//struct QPinchGesture : QPinchGesture
type QPinchGesture struct {
	QGesture
}

// New QPinchGesture from driver
func NewPinchGestureFromDriver(drv Driver) *QPinchGesture {
	_p := &QPinchGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPinchGesture::QPinchGesture()
func NewPinchGesture() *QPinchGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 321000, 321102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPinchGesture{}
	_p.SetDriver(__rv, 321000, false)
	return _p
}

//QPinchGesture::QPinchGesture(QObject*)
func NewPinchGestureWithParent(parent QObjectInterface) *QPinchGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 321000, 321103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPinchGesture{}
	_p.SetDriver(__rv, 321000, false)
	return _p
}

//QPinchGesture::centerPoint()
func (q *QPinchGesture) CenterPoint() *QPointF {
	var __rv uintptr
	q.Drv(321000, 321104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPinchGesture::changeFlags()
func (q *QPinchGesture) ChangeFlags() QPinchGesture_ChangeFlag {
	var __rv QPinchGesture_ChangeFlag
	q.Drv(321000, 321105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::lastCenterPoint()
func (q *QPinchGesture) LastCenterPoint() *QPointF {
	var __rv uintptr
	q.Drv(321000, 321106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPinchGesture::lastRotationAngle()
func (q *QPinchGesture) LastRotationAngle() float64 {
	var __rv float64
	q.Drv(321000, 321107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::lastScaleFactor()
func (q *QPinchGesture) LastScaleFactor() float64 {
	var __rv float64
	q.Drv(321000, 321108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::rotationAngle()
func (q *QPinchGesture) RotationAngle() float64 {
	var __rv float64
	q.Drv(321000, 321109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::scaleFactor()
func (q *QPinchGesture) ScaleFactor() float64 {
	var __rv float64
	q.Drv(321000, 321110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::setCenterPoint(QPointF const&)
func (q *QPinchGesture) SetCenterPoint(value *QPointF) {
	q.Drv(321000, 321111, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setChangeFlags(QFlags<QPinchGesture::ChangeFlag>)
func (q *QPinchGesture) SetChangeFlags(value QPinchGesture_ChangeFlag) {
	q.Drv(321000, 321112, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setLastCenterPoint(QPointF const&)
func (q *QPinchGesture) SetLastCenterPoint(value *QPointF) {
	q.Drv(321000, 321113, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setLastRotationAngle(double)
func (q *QPinchGesture) SetLastRotationAngle(value float64) {
	q.Drv(321000, 321114, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setLastScaleFactor(double)
func (q *QPinchGesture) SetLastScaleFactor(value float64) {
	q.Drv(321000, 321115, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setRotationAngle(double)
func (q *QPinchGesture) SetRotationAngle(value float64) {
	q.Drv(321000, 321116, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setScaleFactor(double)
func (q *QPinchGesture) SetScaleFactor(value float64) {
	q.Drv(321000, 321117, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setStartCenterPoint(QPointF const&)
func (q *QPinchGesture) SetStartCenterPoint(value *QPointF) {
	q.Drv(321000, 321118, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setTotalChangeFlags(QFlags<QPinchGesture::ChangeFlag>)
func (q *QPinchGesture) SetTotalChangeFlags(value QPinchGesture_ChangeFlag) {
	q.Drv(321000, 321119, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setTotalRotationAngle(double)
func (q *QPinchGesture) SetTotalRotationAngle(value float64) {
	q.Drv(321000, 321120, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::setTotalScaleFactor(double)
func (q *QPinchGesture) SetTotalScaleFactor(value float64) {
	q.Drv(321000, 321121, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPinchGesture::startCenterPoint()
func (q *QPinchGesture) StartCenterPoint() *QPointF {
	var __rv uintptr
	q.Drv(321000, 321122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPinchGesture::totalChangeFlags()
func (q *QPinchGesture) TotalChangeFlags() QPinchGesture_ChangeFlag {
	var __rv QPinchGesture_ChangeFlag
	q.Drv(321000, 321123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::totalRotationAngle()
func (q *QPinchGesture) TotalRotationAngle() float64 {
	var __rv float64
	q.Drv(321000, 321124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPinchGesture::totalScaleFactor()
func (q *QPinchGesture) TotalScaleFactor() float64 {
	var __rv float64
	q.Drv(321000, 321125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPlainTextDocumentLayout : QPlainTextDocumentLayout
type QPlainTextDocumentLayout struct {
	QAbstractTextDocumentLayout
}

// New QPlainTextDocumentLayout from driver
func NewPlainTextDocumentLayoutFromDriver(drv Driver) *QPlainTextDocumentLayout {
	_p := &QPlainTextDocumentLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPlainTextDocumentLayout::QPlainTextDocumentLayout(QTextDocument*)
func NewPlainTextDocumentLayout(document *QTextDocument) *QPlainTextDocumentLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 322000, 322102, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPlainTextDocumentLayout{}
	_p.SetDriver(__rv, 322000, false)
	return _p
}

//QPlainTextDocumentLayout::cursorWidth()
func (q *QPlainTextDocumentLayout) CursorWidth() int32 {
	var __rv int32
	q.Drv(322000, 322103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextDocumentLayout::ensureBlockLayout(QTextBlock const&)
func (q *QPlainTextDocumentLayout) EnsureBlockLayout(block *QTextBlock) {
	q.Drv(322000, 322104, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextDocumentLayout::requestUpdate()
func (q *QPlainTextDocumentLayout) RequestUpdate() {
	q.Drv(322000, 322105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextDocumentLayout::setCursorWidth(int)
func (q *QPlainTextDocumentLayout) SetCursorWidth(width int32) {
	q.Drv(322000, 322106, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QPlainTextEdit_LineWrapMode - QPlainTextEdit::LineWrapMode
type QPlainTextEdit_LineWrapMode uint32

const (
	QPlainTextEdit_NoWrap      QPlainTextEdit_LineWrapMode = 0
	QPlainTextEdit_WidgetWidth QPlainTextEdit_LineWrapMode = 1
)

//struct QPlainTextEdit : QPlainTextEdit
type QPlainTextEdit struct {
	QAbstractScrollArea
}

// New QPlainTextEdit from driver
func NewPlainTextEditFromDriver(drv Driver) *QPlainTextEdit {
	_p := &QPlainTextEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QPlainTextEdit) OnCopyAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnUndoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnBlockCountChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnUpdateRequest(fn func(*QRect, int32)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnModificationChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnCursorPositionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(323000, 323107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(323000, 323108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnTextChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(323000, 323109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPlainTextEdit) OnRedoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(323000, 323110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QPlainTextEdit::QPlainTextEdit()
func NewPlainTextEdit() *QPlainTextEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 323000, 323111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPlainTextEdit{}
	_p.SetDriver(__rv, 323000, false)
	return _p
}

//QPlainTextEdit::QPlainTextEdit(QWidget*)
func NewPlainTextEditWithParent(parent QWidgetInterface) *QPlainTextEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 323000, 323112, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPlainTextEdit{}
	_p.SetDriver(__rv, 323000, false)
	return _p
}

//QPlainTextEdit::QPlainTextEdit(QString const&,QWidget*)
func NewPlainTextEditWithTextParent(text string, parent QWidgetInterface) *QPlainTextEdit {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 323000, 323113, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPlainTextEdit{}
	_p.SetDriver(__rv, 323000, false)
	return _p
}

//QPlainTextEdit::anchorAt(QPoint const&)
func (q *QPlainTextEdit) AnchorAt(pos *QPoint) string {
	var __rv C.string_head
	q.Drv(323000, 323114, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPlainTextEdit::appendHtml(QString const&)
func (q *QPlainTextEdit) AppendHtml(html string) {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	q.Drv(323000, 323115, unsafe.Pointer(_html), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::appendPlainText(QString const&)
func (q *QPlainTextEdit) AppendPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(323000, 323116, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::backgroundVisible()
func (q *QPlainTextEdit) BackgroundVisible() bool {
	var __rv bool
	q.Drv(323000, 323117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::blockBoundingGeometry(QTextBlock const&)
func (q *QPlainTextEdit) BlockBoundingGeometry(block *QTextBlock) *QRectF {
	var __rv uintptr
	q.Drv(323000, 323118, Native(block), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPlainTextEdit::blockBoundingRect(QTextBlock const&)
func (q *QPlainTextEdit) BlockBoundingRect(block *QTextBlock) *QRectF {
	var __rv uintptr
	q.Drv(323000, 323119, Native(block), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRectF{}
	_rp.SetDriver(__rv, 112000, true)
	return _rp
}

//QPlainTextEdit::blockCount()
func (q *QPlainTextEdit) BlockCount() int32 {
	var __rv int32
	q.Drv(323000, 323120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::canInsertFromMimeData(QMimeData const*)
func (q *QPlainTextEdit) CanInsertFromMimeData(source *QMimeData) bool {
	var __rv bool
	q.Drv(323000, 323121, Native(source), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::canPaste()
func (q *QPlainTextEdit) CanPaste() bool {
	var __rv bool
	q.Drv(323000, 323122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::centerCursor()
func (q *QPlainTextEdit) CenterCursor() {
	q.Drv(323000, 323123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::centerOnScroll()
func (q *QPlainTextEdit) CenterOnScroll() bool {
	var __rv bool
	q.Drv(323000, 323124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::clear()
func (q *QPlainTextEdit) Clear() {
	q.Drv(323000, 323125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::contentOffset()
func (q *QPlainTextEdit) ContentOffset() *QPointF {
	var __rv uintptr
	q.Drv(323000, 323126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QPlainTextEdit::copy()
func (q *QPlainTextEdit) Copy() {
	q.Drv(323000, 323127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::createMimeDataFromSelection()
func (q *QPlainTextEdit) CreateMimeDataFromSelection() *QMimeData {
	var __rv uintptr
	q.Drv(323000, 323128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QPlainTextEdit::createStandardContextMenu()
func (q *QPlainTextEdit) CreateStandardContextMenu() *QMenu {
	var __rv uintptr
	q.Drv(323000, 323129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QPlainTextEdit::currentCharFormat()
func (q *QPlainTextEdit) CurrentCharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(323000, 323130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QPlainTextEdit::cursorForPosition(QPoint const&)
func (q *QPlainTextEdit) CursorForPosition(pos *QPoint) *QTextCursor {
	var __rv uintptr
	q.Drv(323000, 323131, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QPlainTextEdit::cursorRect()
func (q *QPlainTextEdit) CursorRect() *QRect {
	var __rv uintptr
	q.Drv(323000, 323132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPlainTextEdit::cursorRect(QTextCursor const&)
func (q *QPlainTextEdit) CursorRectWithCursor(cursor *QTextCursor) *QRect {
	var __rv uintptr
	q.Drv(323000, 323133, Native(cursor), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QPlainTextEdit::cursorWidth()
func (q *QPlainTextEdit) CursorWidth() int32 {
	var __rv int32
	q.Drv(323000, 323134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::cut()
func (q *QPlainTextEdit) Cut() {
	q.Drv(323000, 323135, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::document()
func (q *QPlainTextEdit) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(323000, 323136, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QPlainTextEdit::documentTitle()
func (q *QPlainTextEdit) DocumentTitle() string {
	var __rv C.string_head
	q.Drv(323000, 323137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPlainTextEdit::ensureCursorVisible()
func (q *QPlainTextEdit) EnsureCursorVisible() {
	q.Drv(323000, 323138, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::extraSelections()
func (q *QPlainTextEdit) ExtraSelections() []*QTextEditExtraSelection {
	var __rv []*QTextEditExtraSelection
	q.Drv(323000, 323139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::find(QString const&)
func (q *QPlainTextEdit) Find(exp string) bool {
	_exp := NewCStringHead(exp)
	defer FreeCStringHead(_exp)
	var __rv bool
	q.Drv(323000, 323140, unsafe.Pointer(_exp), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::find(QString const&,QFlags<QTextDocument::FindFlag>)
func (q *QPlainTextEdit) FindWithExpOptions(exp string, options QTextDocument_FindFlag) bool {
	_exp := NewCStringHead(exp)
	defer FreeCStringHead(_exp)
	var __rv bool
	q.Drv(323000, 323141, unsafe.Pointer(_exp), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::firstVisibleBlock()
func (q *QPlainTextEdit) FirstVisibleBlock() *QTextBlock {
	var __rv uintptr
	q.Drv(323000, 323142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QPlainTextEdit::getPaintContext()
func (q *QPlainTextEdit) GetPaintContext() *QAbstractTextDocumentLayoutPaintContext {
	var __rv uintptr
	q.Drv(323000, 323143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractTextDocumentLayoutPaintContext{}
	_rp.SetDriver(__rv, 2000, true)
	return _rp
}

//QPlainTextEdit::insertFromMimeData(QMimeData const*)
func (q *QPlainTextEdit) InsertFromMimeData(source *QMimeData) {
	q.Drv(323000, 323144, Native(source), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::insertPlainText(QString const&)
func (q *QPlainTextEdit) InsertPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(323000, 323145, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::isReadOnly()
func (q *QPlainTextEdit) IsReadOnly() bool {
	var __rv bool
	q.Drv(323000, 323146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::isUndoRedoEnabled()
func (q *QPlainTextEdit) IsUndoRedoEnabled() bool {
	var __rv bool
	q.Drv(323000, 323147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::lineWrapMode()
func (q *QPlainTextEdit) LineWrapMode() QPlainTextEdit_LineWrapMode {
	var __rv QPlainTextEdit_LineWrapMode
	q.Drv(323000, 323148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::loadResource(int,QUrl const&)
func (q *QPlainTextEdit) LoadResource(_type int32, name *QUrl) *QVariant {
	var __rv uintptr
	q.Drv(323000, 323149, unsafe.Pointer(&_type), Native(name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QPlainTextEdit::maximumBlockCount()
func (q *QPlainTextEdit) MaximumBlockCount() int32 {
	var __rv int32
	q.Drv(323000, 323150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::mergeCurrentCharFormat(QTextCharFormat const&)
func (q *QPlainTextEdit) MergeCurrentCharFormat(modifier *QTextCharFormat) {
	q.Drv(323000, 323151, Native(modifier), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::moveCursor(QTextCursor::MoveOperation)
func (q *QPlainTextEdit) MoveCursor(operation QTextCursor_MoveOperation) {
	q.Drv(323000, 323152, unsafe.Pointer(&operation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::moveCursor(QTextCursor::MoveOperation,QTextCursor::MoveMode)
func (q *QPlainTextEdit) MoveCursorWithOperationMode(operation QTextCursor_MoveOperation, mode QTextCursor_MoveMode) {
	q.Drv(323000, 323153, unsafe.Pointer(&operation), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::overwriteMode()
func (q *QPlainTextEdit) OverwriteMode() bool {
	var __rv bool
	q.Drv(323000, 323154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::paste()
func (q *QPlainTextEdit) Paste() {
	q.Drv(323000, 323155, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::print(QPrinter*)
func (q *QPlainTextEdit) Print(printer *QPrinter) {
	q.Drv(323000, 323156, Native(printer), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::redo()
func (q *QPlainTextEdit) Redo() {
	q.Drv(323000, 323157, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::selectAll()
func (q *QPlainTextEdit) SelectAll() {
	q.Drv(323000, 323158, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setBackgroundVisible(bool)
func (q *QPlainTextEdit) SetBackgroundVisible(visible bool) {
	q.Drv(323000, 323159, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setCenterOnScroll(bool)
func (q *QPlainTextEdit) SetCenterOnScroll(enabled bool) {
	q.Drv(323000, 323160, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setCurrentCharFormat(QTextCharFormat const&)
func (q *QPlainTextEdit) SetCurrentCharFormat(format *QTextCharFormat) {
	q.Drv(323000, 323161, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setCursorWidth(int)
func (q *QPlainTextEdit) SetCursorWidth(width int32) {
	q.Drv(323000, 323162, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setDocument(QTextDocument*)
func (q *QPlainTextEdit) SetDocument(document *QTextDocument) {
	q.Drv(323000, 323163, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setDocumentTitle(QString const&)
func (q *QPlainTextEdit) SetDocumentTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(323000, 323164, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setExtraSelections(QList<QTextEdit::ExtraSelection> const&)
func (q *QPlainTextEdit) SetExtraSelections(selections []*QTextEditExtraSelection) {
	_selections := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&selections)))
	defer FreeCNoObjectArrayHead(_selections)
	q.Drv(323000, 323165, unsafe.Pointer(_selections), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setLineWrapMode(QPlainTextEdit::LineWrapMode)
func (q *QPlainTextEdit) SetLineWrapMode(mode QPlainTextEdit_LineWrapMode) {
	q.Drv(323000, 323166, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setMaximumBlockCount(int)
func (q *QPlainTextEdit) SetMaximumBlockCount(maximum int32) {
	q.Drv(323000, 323167, unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setOverwriteMode(bool)
func (q *QPlainTextEdit) SetOverwriteMode(overwrite bool) {
	q.Drv(323000, 323168, unsafe.Pointer(&overwrite), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setPlainText(QString const&)
func (q *QPlainTextEdit) SetPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(323000, 323169, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setReadOnly(bool)
func (q *QPlainTextEdit) SetReadOnly(ro bool) {
	q.Drv(323000, 323170, unsafe.Pointer(&ro), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setTabChangesFocus(bool)
func (q *QPlainTextEdit) SetTabChangesFocus(b bool) {
	q.Drv(323000, 323171, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setTabStopWidth(int)
func (q *QPlainTextEdit) SetTabStopWidth(width int32) {
	q.Drv(323000, 323172, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setTextCursor(QTextCursor const&)
func (q *QPlainTextEdit) SetTextCursor(cursor *QTextCursor) {
	q.Drv(323000, 323173, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setTextInteractionFlags(QFlags<Qt::TextInteractionFlag>)
func (q *QPlainTextEdit) SetTextInteractionFlags(flags Qt_TextInteractionFlag) {
	q.Drv(323000, 323174, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setUndoRedoEnabled(bool)
func (q *QPlainTextEdit) SetUndoRedoEnabled(enable bool) {
	q.Drv(323000, 323175, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::setWordWrapMode(QTextOption::WrapMode)
func (q *QPlainTextEdit) SetWordWrapMode(policy QTextOption_WrapMode) {
	q.Drv(323000, 323176, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::tabChangesFocus()
func (q *QPlainTextEdit) TabChangesFocus() bool {
	var __rv bool
	q.Drv(323000, 323177, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::tabStopWidth()
func (q *QPlainTextEdit) TabStopWidth() int32 {
	var __rv int32
	q.Drv(323000, 323178, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::textCursor()
func (q *QPlainTextEdit) TextCursor() *QTextCursor {
	var __rv uintptr
	q.Drv(323000, 323179, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QPlainTextEdit::textInteractionFlags()
func (q *QPlainTextEdit) TextInteractionFlags() Qt_TextInteractionFlag {
	var __rv Qt_TextInteractionFlag
	q.Drv(323000, 323180, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPlainTextEdit::toPlainText()
func (q *QPlainTextEdit) ToPlainText() string {
	var __rv C.string_head
	q.Drv(323000, 323181, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPlainTextEdit::undo()
func (q *QPlainTextEdit) Undo() {
	q.Drv(323000, 323182, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPlainTextEdit::wordWrapMode()
func (q *QPlainTextEdit) WordWrapMode() QTextOption_WrapMode {
	var __rv QTextOption_WrapMode
	q.Drv(323000, 323183, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPluginLoader : QPluginLoader
type QPluginLoader struct {
	QObject
}

// New QPluginLoader from driver
func NewPluginLoaderFromDriver(drv Driver) *QPluginLoader {
	_p := &QPluginLoader{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPluginLoader::QPluginLoader()
func NewPluginLoader() *QPluginLoader {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 324000, 324102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPluginLoader{}
	_p.SetDriver(__rv, 324000, false)
	return _p
}

//QPluginLoader::QPluginLoader(QObject*)
func NewPluginLoaderWithParent(parent QObjectInterface) *QPluginLoader {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 324000, 324103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPluginLoader{}
	_p.SetDriver(__rv, 324000, false)
	return _p
}

//QPluginLoader::QPluginLoader(QString const&,QObject*)
func NewPluginLoaderWithFilenameParent(fileName string, parent QObjectInterface) *QPluginLoader {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 324000, 324104, unsafe.Pointer(_fileName), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPluginLoader{}
	_p.SetDriver(__rv, 324000, false)
	return _p
}

//QPluginLoader::errorString()
func (q *QPluginLoader) ErrorString() string {
	var __rv C.string_head
	q.Drv(324000, 324105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPluginLoader::fileName()
func (q *QPluginLoader) FileName() string {
	var __rv C.string_head
	q.Drv(324000, 324106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QPluginLoader::instance()
func (q *QPluginLoader) Instance() *QObject {
	var __rv uintptr
	q.Drv(324000, 324107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QPluginLoader::isLoaded()
func (q *QPluginLoader) IsLoaded() bool {
	var __rv bool
	q.Drv(324000, 324108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPluginLoader::load()
func (q *QPluginLoader) Load() bool {
	var __rv bool
	q.Drv(324000, 324109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPluginLoader::loadHints()
func (q *QPluginLoader) LoadHints() QLibrary_LoadHint {
	var __rv QLibrary_LoadHint
	q.Drv(324000, 324110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPluginLoader::setFileName(QString const&)
func (q *QPluginLoader) SetFileName(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(324000, 324111, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPluginLoader::setLoadHints(QFlags<QLibrary::LoadHint>)
func (q *QPluginLoader) SetLoadHints(loadHints QLibrary_LoadHint) {
	q.Drv(324000, 324112, unsafe.Pointer(&loadHints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPluginLoader::staticInstances()
func QPluginLoaderStaticInstances() []*QObject {
	var __rv []*QObject
	DirectQtDrv(nil, 324000, 324113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPluginLoader::staticInstances()
func (q *QPluginLoader) StaticInstances() []*QObject {
	var __rv []*QObject
	q.Drv(324000, 324113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPluginLoader::unload()
func (q *QPluginLoader) Unload() bool {
	var __rv bool
	q.Drv(324000, 324114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPrintDialog : QPrintDialog
type QPrintDialog struct {
	QAbstractPrintDialog
}

// New QPrintDialog from driver
func NewPrintDialogFromDriver(drv Driver) *QPrintDialog {
	_p := &QPrintDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QPrintDialog) OnAccepted(fn func(*QPrinter)) uintptr {
	var __rv uintptr
	q.Drv(325000, 325102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QPrintDialog::QPrintDialog()
func NewPrintDialog() *QPrintDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 325000, 325103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintDialog{}
	_p.SetDriver(__rv, 325000, false)
	return _p
}

//QPrintDialog::QPrintDialog(QWidget*)
func NewPrintDialogWithParent(parent QWidgetInterface) *QPrintDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 325000, 325104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintDialog{}
	_p.SetDriver(__rv, 325000, false)
	return _p
}

//QPrintDialog::QPrintDialog(QPrinter*,QWidget*)
func NewPrintDialogWithPrinterParent(printer *QPrinter, parent QWidgetInterface) *QPrintDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 325000, 325105, Native(printer), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintDialog{}
	_p.SetDriver(__rv, 325000, false)
	return _p
}

//QPrintDialog::accepted()
func (q *QPrintDialog) Accepted() {
	q.Drv(325000, 325106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::open()
func (q *QPrintDialog) Open() {
	q.Drv(325000, 325107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::open(QObject*,char const*)
func (q *QPrintDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(325000, 325108, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::options()
func (q *QPrintDialog) Options() QAbstractPrintDialog_PrintDialogOption {
	var __rv QAbstractPrintDialog_PrintDialogOption
	q.Drv(325000, 325109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintDialog::setOption(QAbstractPrintDialog::PrintDialogOption)
func (q *QPrintDialog) SetOption(option QAbstractPrintDialog_PrintDialogOption) {
	q.Drv(325000, 325110, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::setOption(QAbstractPrintDialog::PrintDialogOption,bool)
func (q *QPrintDialog) SetOptionWithOptionOn(option QAbstractPrintDialog_PrintDialogOption, on bool) {
	q.Drv(325000, 325111, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::setOptions(QFlags<QAbstractPrintDialog::PrintDialogOption>)
func (q *QPrintDialog) SetOptions(options QAbstractPrintDialog_PrintDialogOption) {
	q.Drv(325000, 325112, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintDialog::testOption(QAbstractPrintDialog::PrintDialogOption)
func (q *QPrintDialog) TestOption(option QAbstractPrintDialog_PrintDialogOption) bool {
	var __rv bool
	q.Drv(325000, 325113, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPrintPreviewDialog : QPrintPreviewDialog
type QPrintPreviewDialog struct {
	QDialog
}

// New QPrintPreviewDialog from driver
func NewPrintPreviewDialogFromDriver(drv Driver) *QPrintPreviewDialog {
	_p := &QPrintPreviewDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QPrintPreviewDialog) OnPaintRequested(fn func(*QPrinter)) uintptr {
	var __rv uintptr
	q.Drv(326000, 326102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QPrintPreviewDialog::QPrintPreviewDialog()
func NewPrintPreviewDialog() *QPrintPreviewDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 326000, 326103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewDialog{}
	_p.SetDriver(__rv, 326000, false)
	return _p
}

//QPrintPreviewDialog::QPrintPreviewDialog(QWidget*,QFlags<Qt::WindowType>)
func NewPrintPreviewDialogWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QPrintPreviewDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 326000, 326104, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewDialog{}
	_p.SetDriver(__rv, 326000, false)
	return _p
}

//QPrintPreviewDialog::QPrintPreviewDialog(QPrinter*,QWidget*,QFlags<Qt::WindowType>)
func NewPrintPreviewDialogWithPrinterParentFlags(printer *QPrinter, parent QWidgetInterface, flags Qt_WindowType) *QPrintPreviewDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 326000, 326105, Native(printer), Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewDialog{}
	_p.SetDriver(__rv, 326000, false)
	return _p
}

//QPrintPreviewDialog::open()
func (q *QPrintPreviewDialog) Open() {
	q.Drv(326000, 326106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewDialog::open(QObject*,char const*)
func (q *QPrintPreviewDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(326000, 326107, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewDialog::printer()
func (q *QPrintPreviewDialog) Printer() *QPrinter {
	var __rv uintptr
	q.Drv(326000, 326108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPrinter{}
	_rp.SetDriver(__rv, 105000, true)
	return _rp
}

//enum QPrintPreviewWidget_ZoomMode - QPrintPreviewWidget::ZoomMode
type QPrintPreviewWidget_ZoomMode uint32

const (
	QPrintPreviewWidget_CustomZoom QPrintPreviewWidget_ZoomMode = 0
	QPrintPreviewWidget_FitToWidth QPrintPreviewWidget_ZoomMode = 1
	QPrintPreviewWidget_FitInView  QPrintPreviewWidget_ZoomMode = 2
)

//enum QPrintPreviewWidget_ViewMode - QPrintPreviewWidget::ViewMode
type QPrintPreviewWidget_ViewMode uint32

const (
	QPrintPreviewWidget_SinglePageView  QPrintPreviewWidget_ViewMode = 0
	QPrintPreviewWidget_FacingPagesView QPrintPreviewWidget_ViewMode = 1
	QPrintPreviewWidget_AllPagesView    QPrintPreviewWidget_ViewMode = 2
)

//struct QPrintPreviewWidget : QPrintPreviewWidget
type QPrintPreviewWidget struct {
	QWidget
}

// New QPrintPreviewWidget from driver
func NewPrintPreviewWidgetFromDriver(drv Driver) *QPrintPreviewWidget {
	_p := &QPrintPreviewWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QPrintPreviewWidget) OnPreviewChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(327000, 327102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QPrintPreviewWidget) OnPaintRequested(fn func(*QPrinter)) uintptr {
	var __rv uintptr
	q.Drv(327000, 327103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QPrintPreviewWidget::QPrintPreviewWidget()
func NewPrintPreviewWidget() *QPrintPreviewWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 327000, 327104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewWidget{}
	_p.SetDriver(__rv, 327000, false)
	return _p
}

//QPrintPreviewWidget::QPrintPreviewWidget(QWidget*,QFlags<Qt::WindowType>)
func NewPrintPreviewWidgetWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QPrintPreviewWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 327000, 327105, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewWidget{}
	_p.SetDriver(__rv, 327000, false)
	return _p
}

//QPrintPreviewWidget::QPrintPreviewWidget(QPrinter*,QWidget*,QFlags<Qt::WindowType>)
func NewPrintPreviewWidgetWithPrinterParentFlags(printer *QPrinter, parent QWidgetInterface, flags Qt_WindowType) *QPrintPreviewWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 327000, 327106, Native(printer), Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPrintPreviewWidget{}
	_p.SetDriver(__rv, 327000, false)
	return _p
}

//QPrintPreviewWidget::currentPage()
func (q *QPrintPreviewWidget) CurrentPage() int32 {
	var __rv int32
	q.Drv(327000, 327107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::fitInView()
func (q *QPrintPreviewWidget) FitInView() {
	q.Drv(327000, 327108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::fitToWidth()
func (q *QPrintPreviewWidget) FitToWidth() {
	q.Drv(327000, 327109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::orientation()
func (q *QPrintPreviewWidget) Orientation() QPrinter_Orientation {
	var __rv QPrinter_Orientation
	q.Drv(327000, 327110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::pageCount()
func (q *QPrintPreviewWidget) PageCount() int32 {
	var __rv int32
	q.Drv(327000, 327111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::print()
func (q *QPrintPreviewWidget) Print() {
	q.Drv(327000, 327112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setAllPagesViewMode()
func (q *QPrintPreviewWidget) SetAllPagesViewMode() {
	q.Drv(327000, 327113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setCurrentPage(int)
func (q *QPrintPreviewWidget) SetCurrentPage(pageNumber int32) {
	q.Drv(327000, 327114, unsafe.Pointer(&pageNumber), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setFacingPagesViewMode()
func (q *QPrintPreviewWidget) SetFacingPagesViewMode() {
	q.Drv(327000, 327115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setLandscapeOrientation()
func (q *QPrintPreviewWidget) SetLandscapeOrientation() {
	q.Drv(327000, 327116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setOrientation(QPrinter::Orientation)
func (q *QPrintPreviewWidget) SetOrientation(orientation QPrinter_Orientation) {
	q.Drv(327000, 327117, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setPortraitOrientation()
func (q *QPrintPreviewWidget) SetPortraitOrientation() {
	q.Drv(327000, 327118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setSinglePageViewMode()
func (q *QPrintPreviewWidget) SetSinglePageViewMode() {
	q.Drv(327000, 327119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setViewMode(QPrintPreviewWidget::ViewMode)
func (q *QPrintPreviewWidget) SetViewMode(viewMode QPrintPreviewWidget_ViewMode) {
	q.Drv(327000, 327120, unsafe.Pointer(&viewMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setZoomFactor(double)
func (q *QPrintPreviewWidget) SetZoomFactor(zoomFactor float64) {
	q.Drv(327000, 327121, unsafe.Pointer(&zoomFactor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::setZoomMode(QPrintPreviewWidget::ZoomMode)
func (q *QPrintPreviewWidget) SetZoomMode(zoomMode QPrintPreviewWidget_ZoomMode) {
	q.Drv(327000, 327122, unsafe.Pointer(&zoomMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::updatePreview()
func (q *QPrintPreviewWidget) UpdatePreview() {
	q.Drv(327000, 327123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::viewMode()
func (q *QPrintPreviewWidget) ViewMode() QPrintPreviewWidget_ViewMode {
	var __rv QPrintPreviewWidget_ViewMode
	q.Drv(327000, 327124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::zoomFactor()
func (q *QPrintPreviewWidget) ZoomFactor() float64 {
	var __rv float64
	q.Drv(327000, 327125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::zoomIn()
func (q *QPrintPreviewWidget) ZoomIn() {
	q.Drv(327000, 327126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::zoomIn(double)
func (q *QPrintPreviewWidget) ZoomInFWithZoom(zoom float64) {
	q.Drv(327000, 327127, unsafe.Pointer(&zoom), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::zoomMode()
func (q *QPrintPreviewWidget) ZoomMode() QPrintPreviewWidget_ZoomMode {
	var __rv QPrintPreviewWidget_ZoomMode
	q.Drv(327000, 327128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPrintPreviewWidget::zoomOut()
func (q *QPrintPreviewWidget) ZoomOut() {
	q.Drv(327000, 327129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPrintPreviewWidget::zoomOut(double)
func (q *QPrintPreviewWidget) ZoomOutFWithZoom(zoom float64) {
	q.Drv(327000, 327130, unsafe.Pointer(&zoom), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QProcess_ProcessError - QProcess::ProcessError
type QProcess_ProcessError uint32

const (
	QProcess_FailedToStart QProcess_ProcessError = 0
	QProcess_Crashed       QProcess_ProcessError = 1
	QProcess_Timedout      QProcess_ProcessError = 2
	QProcess_ReadError     QProcess_ProcessError = 3
	QProcess_WriteError    QProcess_ProcessError = 4
	QProcess_UnknownError  QProcess_ProcessError = 5
)

//enum QProcess_ProcessChannelMode - QProcess::ProcessChannelMode
type QProcess_ProcessChannelMode uint32

const (
	QProcess_SeparateChannels  QProcess_ProcessChannelMode = 0
	QProcess_MergedChannels    QProcess_ProcessChannelMode = 1
	QProcess_ForwardedChannels QProcess_ProcessChannelMode = 2
)

//enum QProcess_ProcessChannel - QProcess::ProcessChannel
type QProcess_ProcessChannel uint32

const (
	QProcess_StandardOutput QProcess_ProcessChannel = 0
	QProcess_StandardError  QProcess_ProcessChannel = 1
)

//enum QProcess_ProcessState - QProcess::ProcessState
type QProcess_ProcessState uint32

const (
	QProcess_NotRunning QProcess_ProcessState = 0
	QProcess_Starting   QProcess_ProcessState = 1
	QProcess_Running    QProcess_ProcessState = 2
)

//enum QProcess_ExitStatus - QProcess::ExitStatus
type QProcess_ExitStatus uint32

const (
	QProcess_NormalExit QProcess_ExitStatus = 0
	QProcess_CrashExit  QProcess_ExitStatus = 1
)

//struct QProcess : QProcess
type QProcess struct {
	QIODevice
}

// New QProcess from driver
func NewProcessFromDriver(drv Driver) *QProcess {
	_p := &QProcess{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QProcess) OnError(fn func(QProcess_ProcessError)) uintptr {
	var __rv uintptr
	q.Drv(328000, 328102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnReadyReadStandardError(fn func()) uintptr {
	var __rv uintptr
	q.Drv(328000, 328103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnStateChanged(fn func(QProcess_ProcessState)) uintptr {
	var __rv uintptr
	q.Drv(328000, 328104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnStarted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(328000, 328105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnReadyReadStandardOutput(fn func()) uintptr {
	var __rv uintptr
	q.Drv(328000, 328106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnFinished(fn func(int32, QProcess_ExitStatus)) uintptr {
	var __rv uintptr
	q.Drv(328000, 328107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QProcess) OnFinishedWithExitcode(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(328000, 328108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QProcess::QProcess()
func NewProcess() *QProcess {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 328000, 328109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProcess{}
	_p.SetDriver(__rv, 328000, false)
	return _p
}

//QProcess::QProcess(QObject*)
func NewProcessWithParent(parent QObjectInterface) *QProcess {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 328000, 328110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProcess{}
	_p.SetDriver(__rv, 328000, false)
	return _p
}

//QProcess::closeReadChannel(QProcess::ProcessChannel)
func (q *QProcess) CloseReadChannel(channel QProcess_ProcessChannel) {
	q.Drv(328000, 328111, unsafe.Pointer(&channel), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::closeWriteChannel()
func (q *QProcess) CloseWriteChannel() {
	q.Drv(328000, 328112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::environment()
func (q *QProcess) Environment() []string {
	var __rv []string
	q.Drv(328000, 328113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::error()
func (q *QProcess) Error() QProcess_ProcessError {
	var __rv QProcess_ProcessError
	q.Drv(328000, 328114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::execute(QString const&)
func QProcessExecute(program string) int32 {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	var __rv int32
	DirectQtDrv(nil, 328000, 328115, unsafe.Pointer(_program), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::execute(QString const&)
func (q *QProcess) Execute(program string) int32 {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	var __rv int32
	q.Drv(328000, 328115, unsafe.Pointer(_program), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::execute(QString const&,QStringList const&)
func QProcessExecuteWithProgramArguments(program string, arguments []string) int32 {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	var __rv int32
	DirectQtDrv(nil, 328000, 328116, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::execute(QString const&,QStringList const&)
func (q *QProcess) ExecuteWithProgramArguments(program string, arguments []string) int32 {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	var __rv int32
	q.Drv(328000, 328116, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::exitCode()
func (q *QProcess) ExitCode() int32 {
	var __rv int32
	q.Drv(328000, 328117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::exitStatus()
func (q *QProcess) ExitStatus() QProcess_ExitStatus {
	var __rv QProcess_ExitStatus
	q.Drv(328000, 328118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::kill()
func (q *QProcess) Kill() {
	q.Drv(328000, 328119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::processChannelMode()
func (q *QProcess) ProcessChannelMode() QProcess_ProcessChannelMode {
	var __rv QProcess_ProcessChannelMode
	q.Drv(328000, 328120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::processEnvironment()
func (q *QProcess) ProcessEnvironment() *QProcessEnvironment {
	var __rv uintptr
	q.Drv(328000, 328121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QProcessEnvironment{}
	_rp.SetDriver(__rv, 107000, true)
	return _rp
}

//QProcess::readAllStandardError()
func (q *QProcess) ReadAllStandardError() []byte {
	var __rv []byte
	q.Drv(328000, 328122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::readAllStandardOutput()
func (q *QProcess) ReadAllStandardOutput() []byte {
	var __rv []byte
	q.Drv(328000, 328123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::readChannel()
func (q *QProcess) ReadChannel() QProcess_ProcessChannel {
	var __rv QProcess_ProcessChannel
	q.Drv(328000, 328124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::readChannelMode()
func (q *QProcess) ReadChannelMode() QProcess_ProcessChannelMode {
	var __rv QProcess_ProcessChannelMode
	q.Drv(328000, 328125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::setEnvironment(QStringList const&)
func (q *QProcess) SetEnvironment(environment []string) {
	_environment, _environment_size := NewCSArray(environment)
	defer FreeCSArray(_environment, _environment_size)
	q.Drv(328000, 328126, unsafe.Pointer(&_environment[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setProcessChannelMode(QProcess::ProcessChannelMode)
func (q *QProcess) SetProcessChannelMode(mode QProcess_ProcessChannelMode) {
	q.Drv(328000, 328127, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setProcessEnvironment(QProcessEnvironment const&)
func (q *QProcess) SetProcessEnvironment(environment *QProcessEnvironment) {
	q.Drv(328000, 328128, Native(environment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setProcessState(QProcess::ProcessState)
func (q *QProcess) SetProcessState(state QProcess_ProcessState) {
	q.Drv(328000, 328129, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setReadChannel(QProcess::ProcessChannel)
func (q *QProcess) SetReadChannel(channel QProcess_ProcessChannel) {
	q.Drv(328000, 328130, unsafe.Pointer(&channel), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setReadChannelMode(QProcess::ProcessChannelMode)
func (q *QProcess) SetReadChannelMode(mode QProcess_ProcessChannelMode) {
	q.Drv(328000, 328131, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardErrorFile(QString const&)
func (q *QProcess) SetStandardErrorFile(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(328000, 328132, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardErrorFile(QString const&,QFlags<QIODevice::OpenModeFlag>)
func (q *QProcess) SetStandardErrorFileWithFilenameMode(fileName string, mode QIODevice_OpenModeFlag) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(328000, 328133, unsafe.Pointer(_fileName), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardInputFile(QString const&)
func (q *QProcess) SetStandardInputFile(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(328000, 328134, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardOutputFile(QString const&)
func (q *QProcess) SetStandardOutputFile(fileName string) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(328000, 328135, unsafe.Pointer(_fileName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardOutputFile(QString const&,QFlags<QIODevice::OpenModeFlag>)
func (q *QProcess) SetStandardOutputFileWithFilenameMode(fileName string, mode QIODevice_OpenModeFlag) {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	q.Drv(328000, 328136, unsafe.Pointer(_fileName), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setStandardOutputProcess(QProcess*)
func (q *QProcess) SetStandardOutputProcess(destination *QProcess) {
	q.Drv(328000, 328137, Native(destination), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setWorkingDirectory(QString const&)
func (q *QProcess) SetWorkingDirectory(dir string) {
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	q.Drv(328000, 328138, unsafe.Pointer(_dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::setupChildProcess()
func (q *QProcess) SetupChildProcess() {
	q.Drv(328000, 328139, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::start(QString const&)
func (q *QProcess) Start(program string) {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	q.Drv(328000, 328140, unsafe.Pointer(_program), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::start(QString const&,QFlags<QIODevice::OpenModeFlag>)
func (q *QProcess) StartWithProgramMode(program string, mode QIODevice_OpenModeFlag) {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	q.Drv(328000, 328141, unsafe.Pointer(_program), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::start(QString const&,QStringList const&,QFlags<QIODevice::OpenModeFlag>)
func (q *QProcess) StartWithProgramArgumentsMode(program string, arguments []string, mode QIODevice_OpenModeFlag) {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	q.Drv(328000, 328142, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::startDetached(QString const&)
func QProcessStartDetached(program string) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	var __rv bool
	DirectQtDrv(nil, 328000, 328143, unsafe.Pointer(_program), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::startDetached(QString const&)
func (q *QProcess) StartDetached(program string) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	var __rv bool
	q.Drv(328000, 328143, unsafe.Pointer(_program), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::startDetached(QString const&,QStringList const&)
func QProcessStartDetachedWithProgramArguments(program string, arguments []string) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	var __rv bool
	DirectQtDrv(nil, 328000, 328144, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::startDetached(QString const&,QStringList const&)
func (q *QProcess) StartDetachedWithProgramArguments(program string, arguments []string) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	var __rv bool
	q.Drv(328000, 328144, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::startDetached(QString const&,QStringList const&,QString const&,qint64*)
func QProcessStartDetachedWithProgramArgumentsWorkingdirectoryPid(program string, arguments []string, workingDirectory string, pid *int64) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	_workingDirectory := NewCStringHead(workingDirectory)
	defer FreeCStringHead(_workingDirectory)
	var __rv bool
	DirectQtDrv(nil, 328000, 328145, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(_workingDirectory), unsafe.Pointer(&pid), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::startDetached(QString const&,QStringList const&,QString const&,qint64*)
func (q *QProcess) StartDetachedWithProgramArgumentsWorkingdirectoryPid(program string, arguments []string, workingDirectory string, pid *int64) bool {
	_program := NewCStringHead(program)
	defer FreeCStringHead(_program)
	_arguments, _arguments_size := NewCSArray(arguments)
	defer FreeCSArray(_arguments, _arguments_size)
	_workingDirectory := NewCStringHead(workingDirectory)
	defer FreeCStringHead(_workingDirectory)
	var __rv bool
	q.Drv(328000, 328145, unsafe.Pointer(_program), unsafe.Pointer(&_arguments[0]), unsafe.Pointer(_workingDirectory), unsafe.Pointer(&pid), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::state()
func (q *QProcess) State() QProcess_ProcessState {
	var __rv QProcess_ProcessState
	q.Drv(328000, 328146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::systemEnvironment()
func QProcessSystemEnvironment() []string {
	var __rv []string
	DirectQtDrv(nil, 328000, 328147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::systemEnvironment()
func (q *QProcess) SystemEnvironment() []string {
	var __rv []string
	q.Drv(328000, 328147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::terminate()
func (q *QProcess) Terminate() {
	q.Drv(328000, 328148, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProcess::waitForBytesWritten()
func (q *QProcess) WaitForBytesWritten() bool {
	var __rv bool
	q.Drv(328000, 328149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::waitForFinished()
func (q *QProcess) WaitForFinished() bool {
	var __rv bool
	q.Drv(328000, 328150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::waitForFinished(int)
func (q *QProcess) WaitForFinishedWithMsecs(msecs int32) bool {
	var __rv bool
	q.Drv(328000, 328151, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::waitForReadyRead()
func (q *QProcess) WaitForReadyRead() bool {
	var __rv bool
	q.Drv(328000, 328152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::waitForStarted()
func (q *QProcess) WaitForStarted() bool {
	var __rv bool
	q.Drv(328000, 328153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::waitForStarted(int)
func (q *QProcess) WaitForStartedWithMsecs(msecs int32) bool {
	var __rv bool
	q.Drv(328000, 328154, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProcess::workingDirectory()
func (q *QProcess) WorkingDirectory() string {
	var __rv C.string_head
	q.Drv(328000, 328155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QProgressBar_Direction - QProgressBar::Direction
type QProgressBar_Direction uint32

const (
	QProgressBar_TopToBottom QProgressBar_Direction = 0
	QProgressBar_BottomToTop QProgressBar_Direction = 1
)

//struct QProgressBar : QProgressBar
type QProgressBar struct {
	QWidget
}

// New QProgressBar from driver
func NewProgressBarFromDriver(drv Driver) *QProgressBar {
	_p := &QProgressBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QProgressBar) OnValueChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(329000, 329102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QProgressBar::QProgressBar()
func NewProgressBar() *QProgressBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 329000, 329103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProgressBar{}
	_p.SetDriver(__rv, 329000, false)
	return _p
}

//QProgressBar::QProgressBar(QWidget*)
func NewProgressBarWithParent(parent QWidgetInterface) *QProgressBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 329000, 329104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProgressBar{}
	_p.SetDriver(__rv, 329000, false)
	return _p
}

//QProgressBar::alignment()
func (q *QProgressBar) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(329000, 329105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::format()
func (q *QProgressBar) Format() string {
	var __rv C.string_head
	q.Drv(329000, 329106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QProgressBar::invertedAppearance()
func (q *QProgressBar) InvertedAppearance() bool {
	var __rv bool
	q.Drv(329000, 329107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::isTextVisible()
func (q *QProgressBar) IsTextVisible() bool {
	var __rv bool
	q.Drv(329000, 329108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::maximum()
func (q *QProgressBar) Maximum() int32 {
	var __rv int32
	q.Drv(329000, 329109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::minimum()
func (q *QProgressBar) Minimum() int32 {
	var __rv int32
	q.Drv(329000, 329110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::orientation()
func (q *QProgressBar) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(329000, 329111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::reset()
func (q *QProgressBar) Reset() {
	q.Drv(329000, 329112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QProgressBar) SetAlignment(alignment Qt_AlignmentFlag) {
	q.Drv(329000, 329113, unsafe.Pointer(&alignment), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setFormat(QString const&)
func (q *QProgressBar) SetFormat(format string) {
	_format := NewCStringHead(format)
	defer FreeCStringHead(_format)
	q.Drv(329000, 329114, unsafe.Pointer(_format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setInvertedAppearance(bool)
func (q *QProgressBar) SetInvertedAppearance(invert bool) {
	q.Drv(329000, 329115, unsafe.Pointer(&invert), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setMaximum(int)
func (q *QProgressBar) SetMaximum(maximum int32) {
	q.Drv(329000, 329116, unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setMinimum(int)
func (q *QProgressBar) SetMinimum(minimum int32) {
	q.Drv(329000, 329117, unsafe.Pointer(&minimum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setOrientation(Qt::Orientation)
func (q *QProgressBar) SetOrientation(value Qt_Orientation) {
	q.Drv(329000, 329118, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setRange(int,int)
func (q *QProgressBar) SetRange(minimum int32, maximum int32) {
	q.Drv(329000, 329119, unsafe.Pointer(&minimum), unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setTextDirection(QProgressBar::Direction)
func (q *QProgressBar) SetTextDirection(textDirection QProgressBar_Direction) {
	q.Drv(329000, 329120, unsafe.Pointer(&textDirection), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setTextVisible(bool)
func (q *QProgressBar) SetTextVisible(visible bool) {
	q.Drv(329000, 329121, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::setValue(int)
func (q *QProgressBar) SetValue(value int32) {
	q.Drv(329000, 329122, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressBar::text()
func (q *QProgressBar) Text() string {
	var __rv C.string_head
	q.Drv(329000, 329123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QProgressBar::textDirection()
func (q *QProgressBar) TextDirection() QProgressBar_Direction {
	var __rv QProgressBar_Direction
	q.Drv(329000, 329124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressBar::value()
func (q *QProgressBar) Value() int32 {
	var __rv int32
	q.Drv(329000, 329125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QProgressDialog : QProgressDialog
type QProgressDialog struct {
	QDialog
}

// New QProgressDialog from driver
func NewProgressDialogFromDriver(drv Driver) *QProgressDialog {
	_p := &QProgressDialog{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QProgressDialog) OnCanceled(fn func()) uintptr {
	var __rv uintptr
	q.Drv(330000, 330102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QProgressDialog::QProgressDialog()
func NewProgressDialog() *QProgressDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 330000, 330103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProgressDialog{}
	_p.SetDriver(__rv, 330000, false)
	return _p
}

//QProgressDialog::QProgressDialog(QWidget*,QFlags<Qt::WindowType>)
func NewProgressDialogWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QProgressDialog {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 330000, 330104, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProgressDialog{}
	_p.SetDriver(__rv, 330000, false)
	return _p
}

//QProgressDialog::QProgressDialog(QString const&,QString const&,int,int,QWidget*,QFlags<Qt::WindowType>)
func NewProgressDialogWithLabeltextCancelbuttontextMinimumMaximumParentFlags(labelText string, cancelButtonText string, minimum int32, maximum int32, parent QWidgetInterface, flags Qt_WindowType) *QProgressDialog {
	_labelText := NewCStringHead(labelText)
	defer FreeCStringHead(_labelText)
	_cancelButtonText := NewCStringHead(cancelButtonText)
	defer FreeCStringHead(_cancelButtonText)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 330000, 330105, unsafe.Pointer(_labelText), unsafe.Pointer(_cancelButtonText), unsafe.Pointer(&minimum), unsafe.Pointer(&maximum), Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProgressDialog{}
	_p.SetDriver(__rv, 330000, false)
	return _p
}

//QProgressDialog::autoClose()
func (q *QProgressDialog) AutoClose() bool {
	var __rv bool
	q.Drv(330000, 330106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::autoReset()
func (q *QProgressDialog) AutoReset() bool {
	var __rv bool
	q.Drv(330000, 330107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::cancel()
func (q *QProgressDialog) Cancel() {
	q.Drv(330000, 330108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::forceShow()
func (q *QProgressDialog) ForceShow() {
	q.Drv(330000, 330109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::labelText()
func (q *QProgressDialog) LabelText() string {
	var __rv C.string_head
	q.Drv(330000, 330110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QProgressDialog::maximum()
func (q *QProgressDialog) Maximum() int32 {
	var __rv int32
	q.Drv(330000, 330111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::minimum()
func (q *QProgressDialog) Minimum() int32 {
	var __rv int32
	q.Drv(330000, 330112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::minimumDuration()
func (q *QProgressDialog) MinimumDuration() int32 {
	var __rv int32
	q.Drv(330000, 330113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::open()
func (q *QProgressDialog) Open() {
	q.Drv(330000, 330114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::open(QObject*,char const*)
func (q *QProgressDialog) OpenWithObjectMember(receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(330000, 330115, Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::reset()
func (q *QProgressDialog) Reset() {
	q.Drv(330000, 330116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setAutoClose(bool)
func (q *QProgressDialog) SetAutoClose(close bool) {
	q.Drv(330000, 330117, unsafe.Pointer(&close), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setAutoReset(bool)
func (q *QProgressDialog) SetAutoReset(reset bool) {
	q.Drv(330000, 330118, unsafe.Pointer(&reset), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setBar(QProgressBar*)
func (q *QProgressDialog) SetBar(bar *QProgressBar) {
	q.Drv(330000, 330119, Native(bar), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setCancelButton(QPushButton*)
func (q *QProgressDialog) SetCancelButton(button *QPushButton) {
	q.Drv(330000, 330120, Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setCancelButtonText(QString const&)
func (q *QProgressDialog) SetCancelButtonText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(330000, 330121, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setLabel(QLabel*)
func (q *QProgressDialog) SetLabel(label *QLabel) {
	q.Drv(330000, 330122, Native(label), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setLabelText(QString const&)
func (q *QProgressDialog) SetLabelText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(330000, 330123, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setMaximum(int)
func (q *QProgressDialog) SetMaximum(maximum int32) {
	q.Drv(330000, 330124, unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setMinimum(int)
func (q *QProgressDialog) SetMinimum(minimum int32) {
	q.Drv(330000, 330125, unsafe.Pointer(&minimum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setMinimumDuration(int)
func (q *QProgressDialog) SetMinimumDuration(ms int32) {
	q.Drv(330000, 330126, unsafe.Pointer(&ms), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setRange(int,int)
func (q *QProgressDialog) SetRange(minimum int32, maximum int32) {
	q.Drv(330000, 330127, unsafe.Pointer(&minimum), unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::setValue(int)
func (q *QProgressDialog) SetValue(progress int32) {
	q.Drv(330000, 330128, unsafe.Pointer(&progress), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QProgressDialog::value()
func (q *QProgressDialog) Value() int32 {
	var __rv int32
	q.Drv(330000, 330129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QProgressDialog::wasCanceled()
func (q *QProgressDialog) WasCanceled() bool {
	var __rv bool
	q.Drv(330000, 330130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QPropertyAnimation : QPropertyAnimation
type QPropertyAnimation struct {
	QVariantAnimation
}

// New QPropertyAnimation from driver
func NewPropertyAnimationFromDriver(drv Driver) *QPropertyAnimation {
	_p := &QPropertyAnimation{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPropertyAnimation::QPropertyAnimation()
func NewPropertyAnimation() *QPropertyAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 331000, 331102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPropertyAnimation{}
	_p.SetDriver(__rv, 331000, false)
	return _p
}

//QPropertyAnimation::QPropertyAnimation(QObject*)
func NewPropertyAnimationWithParent(parent QObjectInterface) *QPropertyAnimation {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 331000, 331103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPropertyAnimation{}
	_p.SetDriver(__rv, 331000, false)
	return _p
}

//QPropertyAnimation::QPropertyAnimation(QObject*,QByteArray const&,QObject*)
func NewPropertyAnimationWithObjectPropertynameParent(target QObjectInterface, propertyName []byte, parent QObjectInterface) *QPropertyAnimation {
	_propertyName := NewCByteArrayHead(propertyName)
	defer FreeCByteArrayHead(_propertyName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 331000, 331104, Native(target), unsafe.Pointer(_propertyName), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPropertyAnimation{}
	_p.SetDriver(__rv, 331000, false)
	return _p
}

//QPropertyAnimation::propertyName()
func (q *QPropertyAnimation) PropertyName() []byte {
	var __rv []byte
	q.Drv(331000, 331105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPropertyAnimation::setPropertyName(QByteArray const&)
func (q *QPropertyAnimation) SetPropertyName(propertyName []byte) {
	_propertyName := NewCByteArrayHead(propertyName)
	defer FreeCByteArrayHead(_propertyName)
	q.Drv(331000, 331106, unsafe.Pointer(_propertyName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPropertyAnimation::setTargetObject(QObject*)
func (q *QPropertyAnimation) SetTargetObject(target QObjectInterface) {
	q.Drv(331000, 331107, Native(target), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPropertyAnimation::targetObject()
func (q *QPropertyAnimation) TargetObject() *QObject {
	var __rv uintptr
	q.Drv(331000, 331108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//struct QProxyStyle : QProxyStyle
type QProxyStyle struct {
	QCommonStyle
}

// New QProxyStyle from driver
func NewProxyStyleFromDriver(drv Driver) *QProxyStyle {
	_p := &QProxyStyle{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QProxyStyle::QProxyStyle()
func NewProxyStyle() *QProxyStyle {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 332000, 332102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProxyStyle{}
	_p.SetDriver(__rv, 332000, false)
	return _p
}

//QProxyStyle::QProxyStyle(QStyle*)
func NewProxyStyleWithBasestyle(baseStyle *QStyle) *QProxyStyle {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 332000, 332103, Native(baseStyle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QProxyStyle{}
	_p.SetDriver(__rv, 332000, false)
	return _p
}

//QProxyStyle::baseStyle()
func (q *QProxyStyle) BaseStyle() *QStyle {
	var __rv uintptr
	q.Drv(332000, 332104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QProxyStyle::setBaseStyle(QStyle*)
func (q *QProxyStyle) SetBaseStyle(style *QStyle) {
	q.Drv(332000, 332105, Native(style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QPushButton : QPushButton
type QPushButton struct {
	QAbstractButton
}

// New QPushButton from driver
func NewPushButtonFromDriver(drv Driver) *QPushButton {
	_p := &QPushButton{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QPushButton::QPushButton()
func NewPushButton() *QPushButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 333000, 333102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPushButton{}
	_p.SetDriver(__rv, 333000, false)
	return _p
}

//QPushButton::QPushButton(QWidget*)
func NewPushButtonWithParent(parent QWidgetInterface) *QPushButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 333000, 333103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPushButton{}
	_p.SetDriver(__rv, 333000, false)
	return _p
}

//QPushButton::QPushButton(QString const&,QWidget*)
func NewPushButtonWithTextParent(text string, parent QWidgetInterface) *QPushButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 333000, 333104, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPushButton{}
	_p.SetDriver(__rv, 333000, false)
	return _p
}

//QPushButton::QPushButton(QIcon const&,QString const&,QWidget*)
func NewPushButtonWithIconTextParent(icon *QIcon, text string, parent QWidgetInterface) *QPushButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 333000, 333105, Native(icon), unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QPushButton{}
	_p.SetDriver(__rv, 333000, false)
	return _p
}

//QPushButton::autoDefault()
func (q *QPushButton) AutoDefault() bool {
	var __rv bool
	q.Drv(333000, 333106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPushButton::isDefault()
func (q *QPushButton) IsDefault() bool {
	var __rv bool
	q.Drv(333000, 333107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPushButton::isFlat()
func (q *QPushButton) IsFlat() bool {
	var __rv bool
	q.Drv(333000, 333108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPushButton::menu()
func (q *QPushButton) Menu() *QMenu {
	var __rv uintptr
	q.Drv(333000, 333109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QPushButton::setAutoDefault(bool)
func (q *QPushButton) SetAutoDefault(value bool) {
	q.Drv(333000, 333110, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPushButton::setDefault(bool)
func (q *QPushButton) SetDefault(value bool) {
	q.Drv(333000, 333111, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPushButton::setFlat(bool)
func (q *QPushButton) SetFlat(value bool) {
	q.Drv(333000, 333112, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPushButton::setMenu(QMenu*)
func (q *QPushButton) SetMenu(menu *QMenu) {
	q.Drv(333000, 333113, Native(menu), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPushButton::showMenu()
func (q *QPushButton) ShowMenu() {
	q.Drv(333000, 333114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QRadioButton : QRadioButton
type QRadioButton struct {
	QAbstractButton
}

// New QRadioButton from driver
func NewRadioButtonFromDriver(drv Driver) *QRadioButton {
	_p := &QRadioButton{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QRadioButton::QRadioButton()
func NewRadioButton() *QRadioButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 334000, 334102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadioButton{}
	_p.SetDriver(__rv, 334000, false)
	return _p
}

//QRadioButton::QRadioButton(QWidget*)
func NewRadioButtonWithParent(parent QWidgetInterface) *QRadioButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 334000, 334103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadioButton{}
	_p.SetDriver(__rv, 334000, false)
	return _p
}

//QRadioButton::QRadioButton(QString const&,QWidget*)
func NewRadioButtonWithTextParent(text string, parent QWidgetInterface) *QRadioButton {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 334000, 334104, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRadioButton{}
	_p.SetDriver(__rv, 334000, false)
	return _p
}

//struct QRegExpValidator : QRegExpValidator
type QRegExpValidator struct {
	QValidator
}

// New QRegExpValidator from driver
func NewRegExpValidatorFromDriver(drv Driver) *QRegExpValidator {
	_p := &QRegExpValidator{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QRegExpValidator::QRegExpValidator()
func NewRegExpValidator() *QRegExpValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 335000, 335102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExpValidator{}
	_p.SetDriver(__rv, 335000, false)
	return _p
}

//QRegExpValidator::QRegExpValidator(QObject*)
func NewRegExpValidatorWithParent(parent QObjectInterface) *QRegExpValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 335000, 335103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExpValidator{}
	_p.SetDriver(__rv, 335000, false)
	return _p
}

//QRegExpValidator::QRegExpValidator(QRegExp const&,QObject*)
func NewRegExpValidatorWithRxParent(rx *QRegExp, parent QObjectInterface) *QRegExpValidator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 335000, 335104, Native(rx), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRegExpValidator{}
	_p.SetDriver(__rv, 335000, false)
	return _p
}

//QRegExpValidator::regExp()
func (q *QRegExpValidator) RegExp() *QRegExp {
	var __rv uintptr
	q.Drv(335000, 335105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegExp{}
	_rp.SetDriver(__rv, 113000, true)
	return _rp
}

//QRegExpValidator::setRegExp(QRegExp const&)
func (q *QRegExpValidator) SetRegExp(rx *QRegExp) {
	q.Drv(335000, 335106, Native(rx), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QRubberBand_Shape - QRubberBand::Shape
type QRubberBand_Shape uint32

const (
	QRubberBand_Line      QRubberBand_Shape = 0
	QRubberBand_Rectangle QRubberBand_Shape = 1
)

//struct QRubberBand : QRubberBand
type QRubberBand struct {
	QWidget
}

// New QRubberBand from driver
func NewRubberBandFromDriver(drv Driver) *QRubberBand {
	_p := &QRubberBand{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QRubberBand::QRubberBand(QRubberBand::Shape,QWidget*)
func NewRubberBand(value2 QRubberBand_Shape, value3 QWidgetInterface) *QRubberBand {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 336000, 336102, unsafe.Pointer(&value2), Native(value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QRubberBand{}
	_p.SetDriver(__rv, 336000, false)
	return _p
}

//QRubberBand::move(QPoint const&)
func (q *QRubberBand) Move(p *QPoint) {
	q.Drv(336000, 336103, Native(p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::move(int,int)
func (q *QRubberBand) MoveWithXY(x int32, y int32) {
	q.Drv(336000, 336104, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::resize(QSize const&)
func (q *QRubberBand) Resize(s *QSize) {
	q.Drv(336000, 336105, Native(s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::resize(int,int)
func (q *QRubberBand) ResizeWithWidthHeight(w int32, h int32) {
	q.Drv(336000, 336106, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::setGeometry(QRect const&)
func (q *QRubberBand) SetGeometry(r *QRect) {
	q.Drv(336000, 336107, Native(r), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::setGeometry(int,int,int,int)
func (q *QRubberBand) SetGeometryWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(336000, 336108, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QRubberBand::shape()
func (q *QRubberBand) Shape() QRubberBand_Shape {
	var __rv QRubberBand_Shape
	q.Drv(336000, 336109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QScrollArea : QScrollArea
type QScrollArea struct {
	QAbstractScrollArea
}

// New QScrollArea from driver
func NewScrollAreaFromDriver(drv Driver) *QScrollArea {
	_p := &QScrollArea{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QScrollArea::QScrollArea()
func NewScrollArea() *QScrollArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 337000, 337102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QScrollArea{}
	_p.SetDriver(__rv, 337000, false)
	return _p
}

//QScrollArea::QScrollArea(QWidget*)
func NewScrollAreaWithParent(parent QWidgetInterface) *QScrollArea {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 337000, 337103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QScrollArea{}
	_p.SetDriver(__rv, 337000, false)
	return _p
}

//QScrollArea::alignment()
func (q *QScrollArea) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(337000, 337104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QScrollArea::ensureVisible(int,int,int,int)
func (q *QScrollArea) EnsureVisible(x int32, y int32, xmargin int32, ymargin int32) {
	q.Drv(337000, 337105, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::ensureWidgetVisible(QWidget*)
func (q *QScrollArea) EnsureWidgetVisible(childWidget QWidgetInterface) {
	q.Drv(337000, 337106, Native(childWidget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::ensureWidgetVisible(QWidget*,int,int)
func (q *QScrollArea) EnsureWidgetVisibleWithWidgetXmarginYmargin(childWidget QWidgetInterface, xmargin int32, ymargin int32) {
	q.Drv(337000, 337107, Native(childWidget), unsafe.Pointer(&xmargin), unsafe.Pointer(&ymargin), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QScrollArea) SetAlignment(value Qt_AlignmentFlag) {
	q.Drv(337000, 337108, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::setWidget(QWidget*)
func (q *QScrollArea) SetWidget(widget QWidgetInterface) {
	q.Drv(337000, 337109, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::setWidgetResizable(bool)
func (q *QScrollArea) SetWidgetResizable(resizable bool) {
	q.Drv(337000, 337110, unsafe.Pointer(&resizable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QScrollArea::takeWidget()
func (q *QScrollArea) TakeWidget() *QWidget {
	var __rv uintptr
	q.Drv(337000, 337111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QScrollArea::widget()
func (q *QScrollArea) Widget() *QWidget {
	var __rv uintptr
	q.Drv(337000, 337112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QScrollArea::widgetResizable()
func (q *QScrollArea) WidgetResizable() bool {
	var __rv bool
	q.Drv(337000, 337113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QScrollBar : QScrollBar
type QScrollBar struct {
	QAbstractSlider
}

// New QScrollBar from driver
func NewScrollBarFromDriver(drv Driver) *QScrollBar {
	_p := &QScrollBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QScrollBar::QScrollBar()
func NewScrollBar() *QScrollBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 338000, 338102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QScrollBar{}
	_p.SetDriver(__rv, 338000, false)
	return _p
}

//QScrollBar::QScrollBar(QWidget*)
func NewScrollBarWithParent(parent QWidgetInterface) *QScrollBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 338000, 338103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QScrollBar{}
	_p.SetDriver(__rv, 338000, false)
	return _p
}

//QScrollBar::QScrollBar(Qt::Orientation,QWidget*)
func NewScrollBarWithOrientationParent(value2 Qt_Orientation, parent QWidgetInterface) *QScrollBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 338000, 338104, unsafe.Pointer(&value2), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QScrollBar{}
	_p.SetDriver(__rv, 338000, false)
	return _p
}

//struct QSequentialAnimationGroup : QSequentialAnimationGroup
type QSequentialAnimationGroup struct {
	QAnimationGroup
}

// New QSequentialAnimationGroup from driver
func NewSequentialAnimationGroupFromDriver(drv Driver) *QSequentialAnimationGroup {
	_p := &QSequentialAnimationGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSequentialAnimationGroup) OnCurrentAnimationChanged(fn func(*QAbstractAnimation)) uintptr {
	var __rv uintptr
	q.Drv(339000, 339102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSequentialAnimationGroup::QSequentialAnimationGroup()
func NewSequentialAnimationGroup() *QSequentialAnimationGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 339000, 339103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSequentialAnimationGroup{}
	_p.SetDriver(__rv, 339000, false)
	return _p
}

//QSequentialAnimationGroup::QSequentialAnimationGroup(QObject*)
func NewSequentialAnimationGroupWithParent(parent QObjectInterface) *QSequentialAnimationGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 339000, 339104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSequentialAnimationGroup{}
	_p.SetDriver(__rv, 339000, false)
	return _p
}

//QSequentialAnimationGroup::addPause(int)
func (q *QSequentialAnimationGroup) AddPause(msecs int32) *QPauseAnimation {
	var __rv uintptr
	q.Drv(339000, 339105, unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPauseAnimation{}
	_rp.SetDriver(__rv, 320000, false)
	return _rp
}

//QSequentialAnimationGroup::currentAnimation()
func (q *QSequentialAnimationGroup) CurrentAnimation() *QAbstractAnimation {
	var __rv uintptr
	q.Drv(339000, 339106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractAnimation{}
	_rp.SetDriver(__rv, 194000, false)
	return _rp
}

//QSequentialAnimationGroup::insertPause(int,int)
func (q *QSequentialAnimationGroup) InsertPause(index int32, msecs int32) *QPauseAnimation {
	var __rv uintptr
	q.Drv(339000, 339107, unsafe.Pointer(&index), unsafe.Pointer(&msecs), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPauseAnimation{}
	_rp.SetDriver(__rv, 320000, false)
	return _rp
}

//enum QSessionManager_RestartHint - QSessionManager::RestartHint
type QSessionManager_RestartHint uint32

const (
	QSessionManager_RestartIfRunning   QSessionManager_RestartHint = 0
	QSessionManager_RestartAnyway      QSessionManager_RestartHint = 1
	QSessionManager_RestartImmediately QSessionManager_RestartHint = 2
	QSessionManager_RestartNever       QSessionManager_RestartHint = 3
)

//struct QSessionManager : QSessionManager
type QSessionManager struct {
	QObject
}

// New QSessionManager from driver
func NewSessionManagerFromDriver(drv Driver) *QSessionManager {
	_p := &QSessionManager{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSessionManager::allowsErrorInteraction()
func (q *QSessionManager) AllowsErrorInteraction() bool {
	var __rv bool
	q.Drv(340000, 340102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::allowsInteraction()
func (q *QSessionManager) AllowsInteraction() bool {
	var __rv bool
	q.Drv(340000, 340103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::cancel()
func (q *QSessionManager) Cancel() {
	q.Drv(340000, 340104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::discardCommand()
func (q *QSessionManager) DiscardCommand() []string {
	var __rv []string
	q.Drv(340000, 340105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::isPhase2()
func (q *QSessionManager) IsPhase2() bool {
	var __rv bool
	q.Drv(340000, 340106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::release()
func (q *QSessionManager) Release() {
	q.Drv(340000, 340107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::requestPhase2()
func (q *QSessionManager) RequestPhase2() {
	q.Drv(340000, 340108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::restartCommand()
func (q *QSessionManager) RestartCommand() []string {
	var __rv []string
	q.Drv(340000, 340109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::restartHint()
func (q *QSessionManager) RestartHint() QSessionManager_RestartHint {
	var __rv QSessionManager_RestartHint
	q.Drv(340000, 340110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSessionManager::sessionId()
func (q *QSessionManager) SessionId() string {
	var __rv C.string_head
	q.Drv(340000, 340111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSessionManager::sessionKey()
func (q *QSessionManager) SessionKey() string {
	var __rv C.string_head
	q.Drv(340000, 340112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSessionManager::setDiscardCommand(QStringList const&)
func (q *QSessionManager) SetDiscardCommand(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	q.Drv(340000, 340113, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::setManagerProperty(QString const&,QString const&)
func (q *QSessionManager) SetManagerPropertyWithNameValue(name string, value string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(340000, 340114, unsafe.Pointer(_name), unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::setManagerProperty(QString const&,QStringList const&)
func (q *QSessionManager) SetManagerPropertyWithNameValues(name string, value []string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	q.Drv(340000, 340115, unsafe.Pointer(_name), unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::setRestartCommand(QStringList const&)
func (q *QSessionManager) SetRestartCommand(value []string) {
	_value, _value_size := NewCSArray(value)
	defer FreeCSArray(_value, _value_size)
	q.Drv(340000, 340116, unsafe.Pointer(&_value[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSessionManager::setRestartHint(QSessionManager::RestartHint)
func (q *QSessionManager) SetRestartHint(value QSessionManager_RestartHint) {
	q.Drv(340000, 340117, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QSettings_Format - QSettings::Format
type QSettings_Format uint32

const (
	QSettings_NativeFormat   QSettings_Format = 0
	QSettings_IniFormat      QSettings_Format = 1
	QSettings_InvalidFormat  QSettings_Format = 16
	QSettings_CustomFormat1  QSettings_Format = 16 + 1
	QSettings_CustomFormat2  QSettings_Format = 16 + 1 + 1
	QSettings_CustomFormat3  QSettings_Format = 16 + 1 + 1 + 1
	QSettings_CustomFormat4  QSettings_Format = 16 + 1 + 1 + 1 + 1
	QSettings_CustomFormat5  QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat6  QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat7  QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat8  QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat9  QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat10 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat11 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat12 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat13 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat14 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat15 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QSettings_CustomFormat16 QSettings_Format = 16 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
)

//enum QSettings_Status - QSettings::Status
type QSettings_Status uint32

const (
	QSettings_NoError     QSettings_Status = 0
	QSettings_AccessError QSettings_Status = 0
	QSettings_FormatError QSettings_Status = 1
)

//enum QSettings_Scope - QSettings::Scope
type QSettings_Scope uint32

const (
	QSettings_UserScope   QSettings_Scope = 0
	QSettings_SystemScope QSettings_Scope = 1
)

//struct QSettings : QSettings
type QSettings struct {
	QObject
}

// New QSettings from driver
func NewSettingsFromDriver(drv Driver) *QSettings {
	_p := &QSettings{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSettings::QSettings()
func NewSettings() *QSettings {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::QSettings(QObject*)
func NewSettingsWithParent(parent QObjectInterface) *QSettings {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::QSettings(QString const&,QSettings::Format,QObject*)
func NewSettingsWithFilenameFormatParent(fileName string, format QSettings_Format, parent QObjectInterface) *QSettings {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341104, unsafe.Pointer(_fileName), unsafe.Pointer(&format), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::QSettings(QString const&,QString const&,QObject*)
func NewSettingsWithOrganizationApplicationParent(organization string, application string, parent QObjectInterface) *QSettings {
	_organization := NewCStringHead(organization)
	defer FreeCStringHead(_organization)
	_application := NewCStringHead(application)
	defer FreeCStringHead(_application)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341105, unsafe.Pointer(_organization), unsafe.Pointer(_application), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::QSettings(QSettings::Scope,QString const&,QString const&,QObject*)
func NewSettingsWithScopeOrganizationApplicationParent(scope QSettings_Scope, organization string, application string, parent QObjectInterface) *QSettings {
	_organization := NewCStringHead(organization)
	defer FreeCStringHead(_organization)
	_application := NewCStringHead(application)
	defer FreeCStringHead(_application)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341106, unsafe.Pointer(&scope), unsafe.Pointer(_organization), unsafe.Pointer(_application), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::QSettings(QSettings::Format,QSettings::Scope,QString const&,QString const&,QObject*)
func NewSettingsWithFormatScopeOrganizationApplicationParent(format QSettings_Format, scope QSettings_Scope, organization string, application string, parent QObjectInterface) *QSettings {
	_organization := NewCStringHead(organization)
	defer FreeCStringHead(_organization)
	_application := NewCStringHead(application)
	defer FreeCStringHead(_application)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 341000, 341107, unsafe.Pointer(&format), unsafe.Pointer(&scope), unsafe.Pointer(_organization), unsafe.Pointer(_application), Native(parent), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSettings{}
	_p.SetDriver(__rv, 341000, false)
	return _p
}

//QSettings::allKeys()
func (q *QSettings) AllKeys() []string {
	var __rv []string
	q.Drv(341000, 341108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::applicationName()
func (q *QSettings) ApplicationName() string {
	var __rv C.string_head
	q.Drv(341000, 341109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSettings::beginGroup(QString const&)
func (q *QSettings) BeginGroup(prefix string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(341000, 341110, unsafe.Pointer(_prefix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::beginReadArray(QString const&)
func (q *QSettings) BeginReadArray(prefix string) int32 {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv int32
	q.Drv(341000, 341111, unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::beginWriteArray(QString const&)
func (q *QSettings) BeginWriteArray(prefix string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(341000, 341112, unsafe.Pointer(_prefix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::beginWriteArray(QString const&,int)
func (q *QSettings) BeginWriteArrayWithPrefixSize(prefix string, size int32) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(341000, 341113, unsafe.Pointer(_prefix), unsafe.Pointer(&size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::childGroups()
func (q *QSettings) ChildGroups() []string {
	var __rv []string
	q.Drv(341000, 341114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::childKeys()
func (q *QSettings) ChildKeys() []string {
	var __rv []string
	q.Drv(341000, 341115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::clear()
func (q *QSettings) Clear() {
	q.Drv(341000, 341116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::contains(QString const&)
func (q *QSettings) Contains(key string) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	q.Drv(341000, 341117, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::defaultFormat()
func QSettingsDefaultFormat() QSettings_Format {
	var __rv QSettings_Format
	DirectQtDrv(nil, 341000, 341118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::defaultFormat()
func (q *QSettings) DefaultFormat() QSettings_Format {
	var __rv QSettings_Format
	q.Drv(341000, 341118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::endArray()
func (q *QSettings) EndArray() {
	q.Drv(341000, 341119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::endGroup()
func (q *QSettings) EndGroup() {
	q.Drv(341000, 341120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::fallbacksEnabled()
func (q *QSettings) FallbacksEnabled() bool {
	var __rv bool
	q.Drv(341000, 341121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::fileName()
func (q *QSettings) FileName() string {
	var __rv C.string_head
	q.Drv(341000, 341122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSettings::format()
func (q *QSettings) Format() QSettings_Format {
	var __rv QSettings_Format
	q.Drv(341000, 341123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::group()
func (q *QSettings) Group() string {
	var __rv C.string_head
	q.Drv(341000, 341124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSettings::iniCodec()
func (q *QSettings) IniCodec() *QTextCodec {
	var __rv uintptr
	q.Drv(341000, 341125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCodec{}
	_rp.SetDriver(__rv, 145000, true)
	return _rp
}

//QSettings::isWritable()
func (q *QSettings) IsWritable() bool {
	var __rv bool
	q.Drv(341000, 341126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::organizationName()
func (q *QSettings) OrganizationName() string {
	var __rv C.string_head
	q.Drv(341000, 341127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSettings::remove(QString const&)
func (q *QSettings) Remove(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(341000, 341128, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::scope()
func (q *QSettings) Scope() QSettings_Scope {
	var __rv QSettings_Scope
	q.Drv(341000, 341129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::setArrayIndex(int)
func (q *QSettings) SetArrayIndex(i int32) {
	q.Drv(341000, 341130, unsafe.Pointer(&i), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setDefaultFormat(QSettings::Format)
func QSettingsSetDefaultFormat(format QSettings_Format) {
	DirectQtDrv(nil, 341000, 341131, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setDefaultFormat(QSettings::Format)
func (q *QSettings) SetDefaultFormat(format QSettings_Format) {
	q.Drv(341000, 341131, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setFallbacksEnabled(bool)
func (q *QSettings) SetFallbacksEnabled(b bool) {
	q.Drv(341000, 341132, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setIniCodec(QTextCodec*)
func (q *QSettings) SetIniCodec(codec *QTextCodec) {
	q.Drv(341000, 341133, Native(codec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setIniCodec(char const*)
func (q *QSettings) SetIniCodecWithCodecname(codecName string) {
	_codecName := NewCStringHead(codecName)
	defer FreeCStringHead(_codecName)
	q.Drv(341000, 341134, unsafe.Pointer(_codecName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setPath(QSettings::Format,QSettings::Scope,QString const&)
func QSettingsSetPath(format QSettings_Format, scope QSettings_Scope, path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	DirectQtDrv(nil, 341000, 341135, unsafe.Pointer(&format), unsafe.Pointer(&scope), unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setPath(QSettings::Format,QSettings::Scope,QString const&)
func (q *QSettings) SetPath(format QSettings_Format, scope QSettings_Scope, path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(341000, 341135, unsafe.Pointer(&format), unsafe.Pointer(&scope), unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setSystemIniPath(QString const&)
func QSettingsSetSystemIniPath(dir string) {
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	DirectQtDrv(nil, 341000, 341136, unsafe.Pointer(_dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setSystemIniPath(QString const&)
func (q *QSettings) SetSystemIniPath(dir string) {
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	q.Drv(341000, 341136, unsafe.Pointer(_dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setUserIniPath(QString const&)
func QSettingsSetUserIniPath(dir string) {
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	DirectQtDrv(nil, 341000, 341137, unsafe.Pointer(_dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setUserIniPath(QString const&)
func (q *QSettings) SetUserIniPath(dir string) {
	_dir := NewCStringHead(dir)
	defer FreeCStringHead(_dir)
	q.Drv(341000, 341137, unsafe.Pointer(_dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::setValue(QString const&,QVariant const&)
func (q *QSettings) SetValue(key string, value *QVariant) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(341000, 341138, unsafe.Pointer(_key), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::status()
func (q *QSettings) Status() QSettings_Status {
	var __rv QSettings_Status
	q.Drv(341000, 341139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSettings::sync()
func (q *QSettings) Sync() {
	q.Drv(341000, 341140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSettings::value(QString const&)
func (q *QSettings) Value(key string) *QVariant {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	q.Drv(341000, 341141, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QSettings::value(QString const&,QVariant const&)
func (q *QSettings) ValueWithKeyDefaultvalue(key string, defaultValue *QVariant) *QVariant {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	q.Drv(341000, 341142, unsafe.Pointer(_key), Native(defaultValue), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//enum QSharedMemory_SharedMemoryError - QSharedMemory::SharedMemoryError
type QSharedMemory_SharedMemoryError uint32

const (
	QSharedMemory_NoError          QSharedMemory_SharedMemoryError = 0
	QSharedMemory_PermissionDenied QSharedMemory_SharedMemoryError = 1
	QSharedMemory_InvalidSize      QSharedMemory_SharedMemoryError = 2
	QSharedMemory_KeyError         QSharedMemory_SharedMemoryError = 3
	QSharedMemory_AlreadyExists    QSharedMemory_SharedMemoryError = 4
	QSharedMemory_NotFound         QSharedMemory_SharedMemoryError = 5
	QSharedMemory_LockError        QSharedMemory_SharedMemoryError = 6
	QSharedMemory_OutOfResources   QSharedMemory_SharedMemoryError = 7
	QSharedMemory_UnknownError     QSharedMemory_SharedMemoryError = 8
)

//enum QSharedMemory_AccessMode - QSharedMemory::AccessMode
type QSharedMemory_AccessMode uint32

const (
	QSharedMemory_ReadOnly  QSharedMemory_AccessMode = 0
	QSharedMemory_ReadWrite QSharedMemory_AccessMode = 1
)

//struct QSharedMemory : QSharedMemory
type QSharedMemory struct {
	QObject
}

// New QSharedMemory from driver
func NewSharedMemoryFromDriver(drv Driver) *QSharedMemory {
	_p := &QSharedMemory{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSharedMemory::QSharedMemory()
func NewSharedMemory() *QSharedMemory {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 342000, 342102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSharedMemory{}
	_p.SetDriver(__rv, 342000, false)
	return _p
}

//QSharedMemory::QSharedMemory(QObject*)
func NewSharedMemoryWithParent(parent QObjectInterface) *QSharedMemory {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 342000, 342103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSharedMemory{}
	_p.SetDriver(__rv, 342000, false)
	return _p
}

//QSharedMemory::QSharedMemory(QString const&,QObject*)
func NewSharedMemoryWithKeyParent(key string, parent QObjectInterface) *QSharedMemory {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 342000, 342104, unsafe.Pointer(_key), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSharedMemory{}
	_p.SetDriver(__rv, 342000, false)
	return _p
}

//QSharedMemory::attach()
func (q *QSharedMemory) Attach() bool {
	var __rv bool
	q.Drv(342000, 342105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::attach(QSharedMemory::AccessMode)
func (q *QSharedMemory) AttachWithMode(mode QSharedMemory_AccessMode) bool {
	var __rv bool
	q.Drv(342000, 342106, unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::constData()
func (q *QSharedMemory) ConstData() uintptr {
	var __rv uintptr
	q.Drv(342000, 342107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::create(int)
func (q *QSharedMemory) Create(size int32) bool {
	var __rv bool
	q.Drv(342000, 342108, unsafe.Pointer(&size), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::create(int,QSharedMemory::AccessMode)
func (q *QSharedMemory) CreateWithSizeMode(size int32, mode QSharedMemory_AccessMode) bool {
	var __rv bool
	q.Drv(342000, 342109, unsafe.Pointer(&size), unsafe.Pointer(&mode), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::data()
func (q *QSharedMemory) Data() uintptr {
	var __rv uintptr
	q.Drv(342000, 342110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::detach()
func (q *QSharedMemory) Detach() bool {
	var __rv bool
	q.Drv(342000, 342111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::error()
func (q *QSharedMemory) Error() QSharedMemory_SharedMemoryError {
	var __rv QSharedMemory_SharedMemoryError
	q.Drv(342000, 342112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::errorString()
func (q *QSharedMemory) ErrorString() string {
	var __rv C.string_head
	q.Drv(342000, 342113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSharedMemory::isAttached()
func (q *QSharedMemory) IsAttached() bool {
	var __rv bool
	q.Drv(342000, 342114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::key()
func (q *QSharedMemory) Key() string {
	var __rv C.string_head
	q.Drv(342000, 342115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSharedMemory::lock()
func (q *QSharedMemory) Lock() bool {
	var __rv bool
	q.Drv(342000, 342116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::setKey(QString const&)
func (q *QSharedMemory) SetKey(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(342000, 342117, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSharedMemory::size()
func (q *QSharedMemory) Size() int32 {
	var __rv int32
	q.Drv(342000, 342118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSharedMemory::unlock()
func (q *QSharedMemory) Unlock() bool {
	var __rv bool
	q.Drv(342000, 342119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QShortcut : QShortcut
type QShortcut struct {
	QObject
}

// New QShortcut from driver
func NewShortcutFromDriver(drv Driver) *QShortcut {
	_p := &QShortcut{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QShortcut) OnActivatedAmbiguously(fn func()) uintptr {
	var __rv uintptr
	q.Drv(343000, 343102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QShortcut) OnActivated(fn func()) uintptr {
	var __rv uintptr
	q.Drv(343000, 343103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QShortcut::QShortcut(QWidget*)
func NewShortcut(parent QWidgetInterface) *QShortcut {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 343000, 343104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QShortcut{}
	_p.SetDriver(__rv, 343000, false)
	return _p
}

//QShortcut::QShortcut(QKeySequence const&,QWidget*,char const*,char const*,Qt::ShortcutContext)
func NewShortcutWithKeyParentMemberAmbiguousmemberContext(key *QKeySequence, parent QWidgetInterface, member string, ambiguousMember string, context Qt_ShortcutContext) *QShortcut {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	_ambiguousMember := NewCStringHead(ambiguousMember)
	defer FreeCStringHead(_ambiguousMember)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 343000, 343105, Native(key), Native(parent), unsafe.Pointer(_member), unsafe.Pointer(_ambiguousMember), unsafe.Pointer(&context), nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QShortcut{}
	_p.SetDriver(__rv, 343000, false)
	return _p
}

//QShortcut::autoRepeat()
func (q *QShortcut) AutoRepeat() bool {
	var __rv bool
	q.Drv(343000, 343106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QShortcut::context()
func (q *QShortcut) Context() Qt_ShortcutContext {
	var __rv Qt_ShortcutContext
	q.Drv(343000, 343107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QShortcut::id()
func (q *QShortcut) Id() int32 {
	var __rv int32
	q.Drv(343000, 343108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QShortcut::isEnabled()
func (q *QShortcut) IsEnabled() bool {
	var __rv bool
	q.Drv(343000, 343109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QShortcut::key()
func (q *QShortcut) Key() *QKeySequence {
	var __rv uintptr
	q.Drv(343000, 343110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QKeySequence{}
	_rp.SetDriver(__rv, 66000, true)
	return _rp
}

//QShortcut::parentWidget()
func (q *QShortcut) ParentWidget() *QWidget {
	var __rv uintptr
	q.Drv(343000, 343111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QShortcut::setAutoRepeat(bool)
func (q *QShortcut) SetAutoRepeat(on bool) {
	q.Drv(343000, 343112, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QShortcut::setContext(Qt::ShortcutContext)
func (q *QShortcut) SetContext(context Qt_ShortcutContext) {
	q.Drv(343000, 343113, unsafe.Pointer(&context), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QShortcut::setEnabled(bool)
func (q *QShortcut) SetEnabled(enable bool) {
	q.Drv(343000, 343114, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QShortcut::setKey(QKeySequence const&)
func (q *QShortcut) SetKey(key *QKeySequence) {
	q.Drv(343000, 343115, Native(key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QShortcut::setWhatsThis(QString const&)
func (q *QShortcut) SetWhatsThis(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(343000, 343116, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QShortcut::whatsThis()
func (q *QShortcut) WhatsThis() string {
	var __rv C.string_head
	q.Drv(343000, 343117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QSignalMapper : QSignalMapper
type QSignalMapper struct {
	QObject
}

// New QSignalMapper from driver
func NewSignalMapperFromDriver(drv Driver) *QSignalMapper {
	_p := &QSignalMapper{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSignalMapper) OnMapped(fn func(*QObject)) uintptr {
	var __rv uintptr
	q.Drv(344000, 344102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QSignalMapper) OnMappedWithWidget(fn func(*QWidget)) uintptr {
	var __rv uintptr
	q.Drv(344000, 344103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QSignalMapper) OnMappedWithString(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(344000, 344104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QSignalMapper) OnMappedWithInt32(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(344000, 344105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSignalMapper::QSignalMapper()
func NewSignalMapper() *QSignalMapper {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 344000, 344106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSignalMapper{}
	_p.SetDriver(__rv, 344000, false)
	return _p
}

//QSignalMapper::QSignalMapper(QObject*)
func NewSignalMapperWithParent(parent QObjectInterface) *QSignalMapper {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 344000, 344107, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSignalMapper{}
	_p.SetDriver(__rv, 344000, false)
	return _p
}

//QSignalMapper::map()
func (q *QSignalMapper) Map() {
	q.Drv(344000, 344108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::map(QObject*)
func (q *QSignalMapper) MapWithObject(sender QObjectInterface) {
	q.Drv(344000, 344109, Native(sender), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::mapping(QObject*)
func (q *QSignalMapper) Mapping(object QObjectInterface) *QObject {
	var __rv uintptr
	q.Drv(344000, 344110, Native(object), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QSignalMapper::mapping(QString const&)
func (q *QSignalMapper) MappingWithText(text string) *QObject {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(344000, 344111, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QSignalMapper::mapping(QWidget*)
func (q *QSignalMapper) MappingWithWidget(widget QWidgetInterface) *QObject {
	var __rv uintptr
	q.Drv(344000, 344112, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QSignalMapper::mapping(int)
func (q *QSignalMapper) MappingWithId(id int32) *QObject {
	var __rv uintptr
	q.Drv(344000, 344113, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QSignalMapper::removeMappings(QObject*)
func (q *QSignalMapper) RemoveMappings(sender QObjectInterface) {
	q.Drv(344000, 344114, Native(sender), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::setMapping(QObject*,QObject*)
func (q *QSignalMapper) SetMappingWithObjectObject(sender QObjectInterface, object QObjectInterface) {
	q.Drv(344000, 344115, Native(sender), Native(object), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::setMapping(QObject*,QString const&)
func (q *QSignalMapper) SetMappingWithObjectText(sender QObjectInterface, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(344000, 344116, Native(sender), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::setMapping(QObject*,QWidget*)
func (q *QSignalMapper) SetMappingWithObjectWidget(sender QObjectInterface, widget QWidgetInterface) {
	q.Drv(344000, 344117, Native(sender), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSignalMapper::setMapping(QObject*,int)
func (q *QSignalMapper) SetMappingWithObjectId(sender QObjectInterface, id int32) {
	q.Drv(344000, 344118, Native(sender), unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QSizeGrip : QSizeGrip
type QSizeGrip struct {
	QWidget
}

// New QSizeGrip from driver
func NewSizeGripFromDriver(drv Driver) *QSizeGrip {
	_p := &QSizeGrip{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSizeGrip::QSizeGrip(QWidget*)
func NewSizeGrip(parent QWidgetInterface) *QSizeGrip {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 345000, 345102, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSizeGrip{}
	_p.SetDriver(__rv, 345000, false)
	return _p
}

//enum QSlider_TickPosition - QSlider::TickPosition
type QSlider_TickPosition uint32

const (
	QSlider_NoTicks        QSlider_TickPosition = 0
	QSlider_TicksAbove     QSlider_TickPosition = 1
	QSlider_TicksLeft      QSlider_TickPosition = QSlider_TicksAbove
	QSlider_TicksBelow     QSlider_TickPosition = 2
	QSlider_TicksRight     QSlider_TickPosition = QSlider_TicksBelow
	QSlider_TicksBothSides QSlider_TickPosition = 3
)

//struct QSlider : QSlider
type QSlider struct {
	QAbstractSlider
}

// New QSlider from driver
func NewSliderFromDriver(drv Driver) *QSlider {
	_p := &QSlider{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSlider::QSlider()
func NewSlider() *QSlider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 346000, 346102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSlider{}
	_p.SetDriver(__rv, 346000, false)
	return _p
}

//QSlider::QSlider(QWidget*)
func NewSliderWithParent(parent QWidgetInterface) *QSlider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 346000, 346103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSlider{}
	_p.SetDriver(__rv, 346000, false)
	return _p
}

//QSlider::QSlider(Qt::Orientation,QWidget*)
func NewSliderWithOrientationParent(orientation Qt_Orientation, parent QWidgetInterface) *QSlider {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 346000, 346104, unsafe.Pointer(&orientation), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSlider{}
	_p.SetDriver(__rv, 346000, false)
	return _p
}

//QSlider::setTickInterval(int)
func (q *QSlider) SetTickInterval(ti int32) {
	q.Drv(346000, 346105, unsafe.Pointer(&ti), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSlider::setTickPosition(QSlider::TickPosition)
func (q *QSlider) SetTickPosition(position QSlider_TickPosition) {
	q.Drv(346000, 346106, unsafe.Pointer(&position), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSlider::tickInterval()
func (q *QSlider) TickInterval() int32 {
	var __rv int32
	q.Drv(346000, 346107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSlider::tickPosition()
func (q *QSlider) TickPosition() QSlider_TickPosition {
	var __rv QSlider_TickPosition
	q.Drv(346000, 346108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSortFilterProxyModel : QSortFilterProxyModel
type QSortFilterProxyModel struct {
	QAbstractProxyModel
}

// New QSortFilterProxyModel from driver
func NewSortFilterProxyModelFromDriver(drv Driver) *QSortFilterProxyModel {
	_p := &QSortFilterProxyModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSortFilterProxyModel::QSortFilterProxyModel()
func NewSortFilterProxyModel() *QSortFilterProxyModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 347000, 347102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSortFilterProxyModel{}
	_p.SetDriver(__rv, 347000, false)
	return _p
}

//QSortFilterProxyModel::QSortFilterProxyModel(QObject*)
func NewSortFilterProxyModelWithParent(parent QObjectInterface) *QSortFilterProxyModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 347000, 347103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSortFilterProxyModel{}
	_p.SetDriver(__rv, 347000, false)
	return _p
}

//QSortFilterProxyModel::clear()
func (q *QSortFilterProxyModel) Clear() {
	q.Drv(347000, 347104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::dynamicSortFilter()
func (q *QSortFilterProxyModel) DynamicSortFilter() bool {
	var __rv bool
	q.Drv(347000, 347105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::filterAcceptsColumn(int,QModelIndex const&)
func (q *QSortFilterProxyModel) FilterAcceptsColumn(source_column int32, source_parent *QModelIndex) bool {
	var __rv bool
	q.Drv(347000, 347106, unsafe.Pointer(&source_column), Native(source_parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::filterAcceptsRow(int,QModelIndex const&)
func (q *QSortFilterProxyModel) FilterAcceptsRow(source_row int32, source_parent *QModelIndex) bool {
	var __rv bool
	q.Drv(347000, 347107, unsafe.Pointer(&source_row), Native(source_parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::filterCaseSensitivity()
func (q *QSortFilterProxyModel) FilterCaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(347000, 347108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::filterChanged()
func (q *QSortFilterProxyModel) FilterChanged() {
	q.Drv(347000, 347109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::filterKeyColumn()
func (q *QSortFilterProxyModel) FilterKeyColumn() int32 {
	var __rv int32
	q.Drv(347000, 347110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::filterRegExp()
func (q *QSortFilterProxyModel) FilterRegExp() *QRegExp {
	var __rv uintptr
	q.Drv(347000, 347111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegExp{}
	_rp.SetDriver(__rv, 113000, true)
	return _rp
}

//QSortFilterProxyModel::filterRole()
func (q *QSortFilterProxyModel) FilterRole() int32 {
	var __rv int32
	q.Drv(347000, 347112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::invalidate()
func (q *QSortFilterProxyModel) Invalidate() {
	q.Drv(347000, 347113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::invalidateFilter()
func (q *QSortFilterProxyModel) InvalidateFilter() {
	q.Drv(347000, 347114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::isSortLocaleAware()
func (q *QSortFilterProxyModel) IsSortLocaleAware() bool {
	var __rv bool
	q.Drv(347000, 347115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::lessThan(QModelIndex const&,QModelIndex const&)
func (q *QSortFilterProxyModel) LessThan(left *QModelIndex, right *QModelIndex) bool {
	var __rv bool
	q.Drv(347000, 347116, Native(left), Native(right), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::parent()
func (q *QSortFilterProxyModel) Parent() *QObject {
	var __rv uintptr
	q.Drv(347000, 347117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QSortFilterProxyModel::setDynamicSortFilter(bool)
func (q *QSortFilterProxyModel) SetDynamicSortFilter(enable bool) {
	q.Drv(347000, 347118, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterCaseSensitivity(Qt::CaseSensitivity)
func (q *QSortFilterProxyModel) SetFilterCaseSensitivity(cs Qt_CaseSensitivity) {
	q.Drv(347000, 347119, unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterFixedString(QString const&)
func (q *QSortFilterProxyModel) SetFilterFixedString(pattern string) {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	q.Drv(347000, 347120, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterKeyColumn(int)
func (q *QSortFilterProxyModel) SetFilterKeyColumn(column int32) {
	q.Drv(347000, 347121, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterRegExp(QRegExp const&)
func (q *QSortFilterProxyModel) SetFilterRegExp(regExp *QRegExp) {
	q.Drv(347000, 347122, Native(regExp), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterRegExp(QString const&)
func (q *QSortFilterProxyModel) SetFilterRegExpWithPattern(pattern string) {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	q.Drv(347000, 347123, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterRole(int)
func (q *QSortFilterProxyModel) SetFilterRole(role int32) {
	q.Drv(347000, 347124, unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setFilterWildcard(QString const&)
func (q *QSortFilterProxyModel) SetFilterWildcard(pattern string) {
	_pattern := NewCStringHead(pattern)
	defer FreeCStringHead(_pattern)
	q.Drv(347000, 347125, unsafe.Pointer(_pattern), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setSortCaseSensitivity(Qt::CaseSensitivity)
func (q *QSortFilterProxyModel) SetSortCaseSensitivity(cs Qt_CaseSensitivity) {
	q.Drv(347000, 347126, unsafe.Pointer(&cs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setSortLocaleAware(bool)
func (q *QSortFilterProxyModel) SetSortLocaleAware(on bool) {
	q.Drv(347000, 347127, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::setSortRole(int)
func (q *QSortFilterProxyModel) SetSortRole(role int32) {
	q.Drv(347000, 347128, unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSortFilterProxyModel::sortCaseSensitivity()
func (q *QSortFilterProxyModel) SortCaseSensitivity() Qt_CaseSensitivity {
	var __rv Qt_CaseSensitivity
	q.Drv(347000, 347129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::sortColumn()
func (q *QSortFilterProxyModel) SortColumn() int32 {
	var __rv int32
	q.Drv(347000, 347130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::sortOrder()
func (q *QSortFilterProxyModel) SortOrder() Qt_SortOrder {
	var __rv Qt_SortOrder
	q.Drv(347000, 347131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSortFilterProxyModel::sortRole()
func (q *QSortFilterProxyModel) SortRole() int32 {
	var __rv int32
	q.Drv(347000, 347132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSpinBox : QSpinBox
type QSpinBox struct {
	QAbstractSpinBox
}

// New QSpinBox from driver
func NewSpinBoxFromDriver(drv Driver) *QSpinBox {
	_p := &QSpinBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSpinBox) OnValueChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(348000, 348102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QSpinBox) OnValueChangedWithInt32(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(348000, 348103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSpinBox::QSpinBox()
func NewSpinBox() *QSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 348000, 348104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSpinBox{}
	_p.SetDriver(__rv, 348000, false)
	return _p
}

//QSpinBox::QSpinBox(QWidget*)
func NewSpinBoxWithParent(parent QWidgetInterface) *QSpinBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 348000, 348105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSpinBox{}
	_p.SetDriver(__rv, 348000, false)
	return _p
}

//QSpinBox::cleanText()
func (q *QSpinBox) CleanText() string {
	var __rv C.string_head
	q.Drv(348000, 348106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSpinBox::maximum()
func (q *QSpinBox) Maximum() int32 {
	var __rv int32
	q.Drv(348000, 348107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSpinBox::minimum()
func (q *QSpinBox) Minimum() int32 {
	var __rv int32
	q.Drv(348000, 348108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSpinBox::prefix()
func (q *QSpinBox) Prefix() string {
	var __rv C.string_head
	q.Drv(348000, 348109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSpinBox::setMaximum(int)
func (q *QSpinBox) SetMaximum(max int32) {
	q.Drv(348000, 348110, unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setMinimum(int)
func (q *QSpinBox) SetMinimum(min int32) {
	q.Drv(348000, 348111, unsafe.Pointer(&min), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setPrefix(QString const&)
func (q *QSpinBox) SetPrefix(prefix string) {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	q.Drv(348000, 348112, unsafe.Pointer(_prefix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setRange(int,int)
func (q *QSpinBox) SetRange(min int32, max int32) {
	q.Drv(348000, 348113, unsafe.Pointer(&min), unsafe.Pointer(&max), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setSingleStep(int)
func (q *QSpinBox) SetSingleStep(val int32) {
	q.Drv(348000, 348114, unsafe.Pointer(&val), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setSuffix(QString const&)
func (q *QSpinBox) SetSuffix(suffix string) {
	_suffix := NewCStringHead(suffix)
	defer FreeCStringHead(_suffix)
	q.Drv(348000, 348115, unsafe.Pointer(_suffix), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::setValue(int)
func (q *QSpinBox) SetValue(val int32) {
	q.Drv(348000, 348116, unsafe.Pointer(&val), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSpinBox::singleStep()
func (q *QSpinBox) SingleStep() int32 {
	var __rv int32
	q.Drv(348000, 348117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSpinBox::suffix()
func (q *QSpinBox) Suffix() string {
	var __rv C.string_head
	q.Drv(348000, 348118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSpinBox::textFromValue(int)
func (q *QSpinBox) TextFromValue(val int32) string {
	var __rv C.string_head
	q.Drv(348000, 348119, unsafe.Pointer(&val), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QSpinBox::value()
func (q *QSpinBox) Value() int32 {
	var __rv int32
	q.Drv(348000, 348120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSpinBox::valueFromText(QString const&)
func (q *QSpinBox) ValueFromText(text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(348000, 348121, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSplashScreen : QSplashScreen
type QSplashScreen struct {
	QWidget
}

// New QSplashScreen from driver
func NewSplashScreenFromDriver(drv Driver) *QSplashScreen {
	_p := &QSplashScreen{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSplashScreen) OnMessageChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(349000, 349102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSplashScreen::QSplashScreen()
func NewSplashScreen() *QSplashScreen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 349000, 349103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplashScreen{}
	_p.SetDriver(__rv, 349000, false)
	return _p
}

//QSplashScreen::QSplashScreen(QPixmap const&,QFlags<Qt::WindowType>)
func NewSplashScreenWithPixmapFlags(pixmap *QPixmap, f Qt_WindowType) *QSplashScreen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 349000, 349104, Native(pixmap), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplashScreen{}
	_p.SetDriver(__rv, 349000, false)
	return _p
}

//QSplashScreen::QSplashScreen(QWidget*,QPixmap const&,QFlags<Qt::WindowType>)
func NewSplashScreenWithParentPixmapFlags(parent QWidgetInterface, pixmap *QPixmap, f Qt_WindowType) *QSplashScreen {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 349000, 349105, Native(parent), Native(pixmap), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplashScreen{}
	_p.SetDriver(__rv, 349000, false)
	return _p
}

//QSplashScreen::clearMessage()
func (q *QSplashScreen) ClearMessage() {
	q.Drv(349000, 349106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::drawContents(QPainter*)
func (q *QSplashScreen) DrawContents(painter *QPainter) {
	q.Drv(349000, 349107, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::finish(QWidget*)
func (q *QSplashScreen) Finish(w QWidgetInterface) {
	q.Drv(349000, 349108, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::pixmap()
func (q *QSplashScreen) Pixmap() *QPixmap {
	var __rv uintptr
	q.Drv(349000, 349109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QSplashScreen::repaint()
func (q *QSplashScreen) Repaint() {
	q.Drv(349000, 349110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::setPixmap(QPixmap const&)
func (q *QSplashScreen) SetPixmap(pixmap *QPixmap) {
	q.Drv(349000, 349111, Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::showMessage(QString const&)
func (q *QSplashScreen) ShowMessage(message string) {
	_message := NewCStringHead(message)
	defer FreeCStringHead(_message)
	q.Drv(349000, 349112, unsafe.Pointer(_message), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplashScreen::showMessage(QString const&,int,QColor const&)
func (q *QSplashScreen) ShowMessageWithMessageAlignmentColor(message string, alignment int32, color *QColor) {
	_message := NewCStringHead(message)
	defer FreeCStringHead(_message)
	q.Drv(349000, 349113, unsafe.Pointer(_message), unsafe.Pointer(&alignment), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QSplitter : QSplitter
type QSplitter struct {
	QFrame
}

// New QSplitter from driver
func NewSplitterFromDriver(drv Driver) *QSplitter {
	_p := &QSplitter{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSplitter) OnSplitterMoved(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(350000, 350102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSplitter::QSplitter()
func NewSplitter() *QSplitter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 350000, 350103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplitter{}
	_p.SetDriver(__rv, 350000, false)
	return _p
}

//QSplitter::QSplitter(QWidget*)
func NewSplitterWithParent(parent QWidgetInterface) *QSplitter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 350000, 350104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplitter{}
	_p.SetDriver(__rv, 350000, false)
	return _p
}

//QSplitter::QSplitter(Qt::Orientation,QWidget*)
func NewSplitterWithOrientationParent(value2 Qt_Orientation, parent QWidgetInterface) *QSplitter {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 350000, 350105, unsafe.Pointer(&value2), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplitter{}
	_p.SetDriver(__rv, 350000, false)
	return _p
}

//QSplitter::addWidget(QWidget*)
func (q *QSplitter) AddWidget(widget QWidgetInterface) {
	q.Drv(350000, 350106, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::childrenCollapsible()
func (q *QSplitter) ChildrenCollapsible() bool {
	var __rv bool
	q.Drv(350000, 350107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::closestLegalPosition(int,int)
func (q *QSplitter) ClosestLegalPosition(value2 int32, value3 int32) int32 {
	var __rv int32
	q.Drv(350000, 350108, unsafe.Pointer(&value2), unsafe.Pointer(&value3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::count()
func (q *QSplitter) Count() int32 {
	var __rv int32
	q.Drv(350000, 350109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::createHandle()
func (q *QSplitter) CreateHandle() *QSplitterHandle {
	var __rv uintptr
	q.Drv(350000, 350110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSplitterHandle{}
	_rp.SetDriver(__rv, 351000, false)
	return _rp
}

//QSplitter::getRange(int,int*,int*)
func (q *QSplitter) GetRange(index int32, value2 *int32, value3 *int32) {
	q.Drv(350000, 350111, unsafe.Pointer(&index), unsafe.Pointer(&value2), unsafe.Pointer(&value3), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::handle(int)
func (q *QSplitter) Handle(index int32) *QSplitterHandle {
	var __rv uintptr
	q.Drv(350000, 350112, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSplitterHandle{}
	_rp.SetDriver(__rv, 351000, false)
	return _rp
}

//QSplitter::handleWidth()
func (q *QSplitter) HandleWidth() int32 {
	var __rv int32
	q.Drv(350000, 350113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::indexOf(QWidget*)
func (q *QSplitter) IndexOf(w QWidgetInterface) int32 {
	var __rv int32
	q.Drv(350000, 350114, Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::insertWidget(int,QWidget*)
func (q *QSplitter) InsertWidget(index int32, widget QWidgetInterface) {
	q.Drv(350000, 350115, unsafe.Pointer(&index), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::isCollapsible(int)
func (q *QSplitter) IsCollapsible(index int32) bool {
	var __rv bool
	q.Drv(350000, 350116, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::moveSplitter(int,int)
func (q *QSplitter) MoveSplitter(pos int32, index int32) {
	q.Drv(350000, 350117, unsafe.Pointer(&pos), unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::opaqueResize()
func (q *QSplitter) OpaqueResize() bool {
	var __rv bool
	q.Drv(350000, 350118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::orientation()
func (q *QSplitter) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(350000, 350119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::refresh()
func (q *QSplitter) Refresh() {
	q.Drv(350000, 350120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::restoreState(QByteArray const&)
func (q *QSplitter) RestoreState(state []byte) bool {
	_state := NewCByteArrayHead(state)
	defer FreeCByteArrayHead(_state)
	var __rv bool
	q.Drv(350000, 350121, unsafe.Pointer(_state), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::saveState()
func (q *QSplitter) SaveState() []byte {
	var __rv []byte
	q.Drv(350000, 350122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::setChildrenCollapsible(bool)
func (q *QSplitter) SetChildrenCollapsible(value bool) {
	q.Drv(350000, 350123, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setCollapsible(int,bool)
func (q *QSplitter) SetCollapsible(index int32, value2 bool) {
	q.Drv(350000, 350124, unsafe.Pointer(&index), unsafe.Pointer(&value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setHandleWidth(int)
func (q *QSplitter) SetHandleWidth(value int32) {
	q.Drv(350000, 350125, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setOpaqueResize(bool)
func (q *QSplitter) SetOpaqueResize(opaque bool) {
	q.Drv(350000, 350126, unsafe.Pointer(&opaque), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setOrientation(Qt::Orientation)
func (q *QSplitter) SetOrientation(value Qt_Orientation) {
	q.Drv(350000, 350127, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setRubberBand(int)
func (q *QSplitter) SetRubberBand(position int32) {
	q.Drv(350000, 350128, unsafe.Pointer(&position), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setSizes(QList<int> const&)
func (q *QSplitter) SetSizes(list []int32) {
	_list := NewCIntArrayHead(list)
	defer FreeCIntArrayHead(_list)
	q.Drv(350000, 350129, unsafe.Pointer(_list), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::setStretchFactor(int,int)
func (q *QSplitter) SetStretchFactor(index int32, stretch int32) {
	q.Drv(350000, 350130, unsafe.Pointer(&index), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitter::sizes()
func (q *QSplitter) Sizes() []int32 {
	var __rv []int32
	q.Drv(350000, 350131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitter::widget(int)
func (q *QSplitter) Widget(index int32) *QWidget {
	var __rv uintptr
	q.Drv(350000, 350132, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QSplitterHandle : QSplitterHandle
type QSplitterHandle struct {
	QWidget
}

// New QSplitterHandle from driver
func NewSplitterHandleFromDriver(drv Driver) *QSplitterHandle {
	_p := &QSplitterHandle{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSplitterHandle::QSplitterHandle(Qt::Orientation,QSplitter*)
func NewSplitterHandle(o Qt_Orientation, parent *QSplitter) *QSplitterHandle {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 351000, 351102, unsafe.Pointer(&o), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSplitterHandle{}
	_p.SetDriver(__rv, 351000, false)
	return _p
}

//QSplitterHandle::closestLegalPosition(int)
func (q *QSplitterHandle) ClosestLegalPosition(p int32) int32 {
	var __rv int32
	q.Drv(351000, 351103, unsafe.Pointer(&p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitterHandle::moveSplitter(int)
func (q *QSplitterHandle) MoveSplitter(p int32) {
	q.Drv(351000, 351104, unsafe.Pointer(&p), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitterHandle::opaqueResize()
func (q *QSplitterHandle) OpaqueResize() bool {
	var __rv bool
	q.Drv(351000, 351105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitterHandle::orientation()
func (q *QSplitterHandle) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(351000, 351106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSplitterHandle::setOrientation(Qt::Orientation)
func (q *QSplitterHandle) SetOrientation(o Qt_Orientation) {
	q.Drv(351000, 351107, unsafe.Pointer(&o), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSplitterHandle::splitter()
func (q *QSplitterHandle) Splitter() *QSplitter {
	var __rv uintptr
	q.Drv(351000, 351108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSplitter{}
	_rp.SetDriver(__rv, 350000, false)
	return _rp
}

//enum QStackedLayout_StackingMode - QStackedLayout::StackingMode
type QStackedLayout_StackingMode uint32

const (
	QStackedLayout_StackOne QStackedLayout_StackingMode = 0
	QStackedLayout_StackAll QStackedLayout_StackingMode = 1
)

//struct QStackedLayout : QStackedLayout
type QStackedLayout struct {
	QLayout
}

// New QStackedLayout from driver
func NewStackedLayoutFromDriver(drv Driver) *QStackedLayout {
	_p := &QStackedLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QStackedLayout) OnWidgetRemoved(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(352000, 352102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QStackedLayout) OnCurrentChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(352000, 352103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QStackedLayout::QStackedLayout()
func NewStackedLayout() *QStackedLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 352000, 352104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStackedLayout{}
	_p.SetDriver(__rv, 352000, false)
	return _p
}

//QStackedLayout::QStackedLayout(QLayout*)
func NewStackedLayoutWithLayout(parentLayout QLayoutInterface) *QStackedLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 352000, 352105, Native(parentLayout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStackedLayout{}
	_p.SetDriver(__rv, 352000, false)
	return _p
}

//QStackedLayout::QStackedLayout(QWidget*)
func NewStackedLayoutWithParent(parent QWidgetInterface) *QStackedLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 352000, 352106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStackedLayout{}
	_p.SetDriver(__rv, 352000, false)
	return _p
}

//QStackedLayout::addWidget(QWidget*)
func (q *QStackedLayout) AddWidget(w QWidgetInterface) int32 {
	var __rv int32
	q.Drv(352000, 352107, Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedLayout::currentIndex()
func (q *QStackedLayout) CurrentIndex() int32 {
	var __rv int32
	q.Drv(352000, 352108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedLayout::currentWidget()
func (q *QStackedLayout) CurrentWidget() *QWidget {
	var __rv uintptr
	q.Drv(352000, 352109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QStackedLayout::insertWidget(int,QWidget*)
func (q *QStackedLayout) InsertWidget(index int32, w QWidgetInterface) int32 {
	var __rv int32
	q.Drv(352000, 352110, unsafe.Pointer(&index), Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedLayout::setCurrentIndex(int)
func (q *QStackedLayout) SetCurrentIndex(index int32) {
	q.Drv(352000, 352111, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedLayout::setCurrentWidget(QWidget*)
func (q *QStackedLayout) SetCurrentWidget(w QWidgetInterface) {
	q.Drv(352000, 352112, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedLayout::setStackingMode(QStackedLayout::StackingMode)
func (q *QStackedLayout) SetStackingMode(stackingMode QStackedLayout_StackingMode) {
	q.Drv(352000, 352113, unsafe.Pointer(&stackingMode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedLayout::stackingMode()
func (q *QStackedLayout) StackingMode() QStackedLayout_StackingMode {
	var __rv QStackedLayout_StackingMode
	q.Drv(352000, 352114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedLayout::widget(int)
func (q *QStackedLayout) Widget(value int32) *QWidget {
	var __rv uintptr
	q.Drv(352000, 352115, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QStackedWidget : QStackedWidget
type QStackedWidget struct {
	QFrame
}

// New QStackedWidget from driver
func NewStackedWidgetFromDriver(drv Driver) *QStackedWidget {
	_p := &QStackedWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QStackedWidget) OnWidgetRemoved(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(353000, 353102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QStackedWidget) OnCurrentChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(353000, 353103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QStackedWidget::QStackedWidget()
func NewStackedWidget() *QStackedWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 353000, 353104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStackedWidget{}
	_p.SetDriver(__rv, 353000, false)
	return _p
}

//QStackedWidget::QStackedWidget(QWidget*)
func NewStackedWidgetWithParent(parent QWidgetInterface) *QStackedWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 353000, 353105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStackedWidget{}
	_p.SetDriver(__rv, 353000, false)
	return _p
}

//QStackedWidget::addWidget(QWidget*)
func (q *QStackedWidget) AddWidget(w QWidgetInterface) int32 {
	var __rv int32
	q.Drv(353000, 353106, Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedWidget::count()
func (q *QStackedWidget) Count() int32 {
	var __rv int32
	q.Drv(353000, 353107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedWidget::currentIndex()
func (q *QStackedWidget) CurrentIndex() int32 {
	var __rv int32
	q.Drv(353000, 353108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedWidget::currentWidget()
func (q *QStackedWidget) CurrentWidget() *QWidget {
	var __rv uintptr
	q.Drv(353000, 353109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QStackedWidget::indexOf(QWidget*)
func (q *QStackedWidget) IndexOf(value QWidgetInterface) int32 {
	var __rv int32
	q.Drv(353000, 353110, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedWidget::insertWidget(int,QWidget*)
func (q *QStackedWidget) InsertWidget(index int32, w QWidgetInterface) int32 {
	var __rv int32
	q.Drv(353000, 353111, unsafe.Pointer(&index), Native(w), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStackedWidget::removeWidget(QWidget*)
func (q *QStackedWidget) RemoveWidget(w QWidgetInterface) {
	q.Drv(353000, 353112, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedWidget::setCurrentIndex(int)
func (q *QStackedWidget) SetCurrentIndex(index int32) {
	q.Drv(353000, 353113, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedWidget::setCurrentWidget(QWidget*)
func (q *QStackedWidget) SetCurrentWidget(w QWidgetInterface) {
	q.Drv(353000, 353114, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStackedWidget::widget(int)
func (q *QStackedWidget) Widget(value int32) *QWidget {
	var __rv uintptr
	q.Drv(353000, 353115, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QStandardItemModel : QStandardItemModel
type QStandardItemModel struct {
	QAbstractItemModel
}

// New QStandardItemModel from driver
func NewStandardItemModelFromDriver(drv Driver) *QStandardItemModel {
	_p := &QStandardItemModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QStandardItemModel) OnItemChanged(fn func(*QStandardItem)) uintptr {
	var __rv uintptr
	q.Drv(354000, 354102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QStandardItemModel::QStandardItemModel()
func NewStandardItemModel() *QStandardItemModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 354000, 354103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItemModel{}
	_p.SetDriver(__rv, 354000, false)
	return _p
}

//QStandardItemModel::QStandardItemModel(QObject*)
func NewStandardItemModelWithParent(parent QObjectInterface) *QStandardItemModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 354000, 354104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItemModel{}
	_p.SetDriver(__rv, 354000, false)
	return _p
}

//QStandardItemModel::QStandardItemModel(int,int,QObject*)
func NewStandardItemModelWithRowsColumnsParent(rows int32, columns int32, parent QObjectInterface) *QStandardItemModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 354000, 354105, unsafe.Pointer(&rows), unsafe.Pointer(&columns), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStandardItemModel{}
	_p.SetDriver(__rv, 354000, false)
	return _p
}

//QStandardItemModel::appendColumn(QList<QStandardItem*> const&)
func (q *QStandardItemModel) AppendColumn(items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(354000, 354106, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::appendRow(QList<QStandardItem*> const&)
func (q *QStandardItemModel) AppendRow(items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(354000, 354107, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::appendRow(QStandardItem*)
func (q *QStandardItemModel) AppendRowWithItem(item *QStandardItem) {
	q.Drv(354000, 354108, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::clear()
func (q *QStandardItemModel) Clear() {
	q.Drv(354000, 354109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::findItems(QString const&)
func (q *QStandardItemModel) FindItems(text string) []*QStandardItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv []*QStandardItem
	q.Drv(354000, 354110, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::findItems(QString const&,QFlags<Qt::MatchFlag>,int)
func (q *QStandardItemModel) FindItemsWithTextFlagsColumn(text string, flags Qt_MatchFlag, column int32) []*QStandardItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv []*QStandardItem
	q.Drv(354000, 354111, unsafe.Pointer(_text), unsafe.Pointer(&flags), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::horizontalHeaderItem(int)
func (q *QStandardItemModel) HorizontalHeaderItem(column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354112, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::indexFromItem(QStandardItem const*)
func (q *QStandardItemModel) IndexFromItem(item *QStandardItem) *QModelIndex {
	var __rv uintptr
	q.Drv(354000, 354113, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QStandardItemModel::insertColumn(int)
func (q *QStandardItemModel) InsertColumn(column int32) bool {
	var __rv bool
	q.Drv(354000, 354114, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::insertColumn(int,QList<QStandardItem*> const&)
func (q *QStandardItemModel) InsertColumnWithColumnItems(column int32, items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(354000, 354115, unsafe.Pointer(&column), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::insertColumn(int,QModelIndex const&)
func (q *QStandardItemModel) InsertColumnWithColumnParent(column int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(354000, 354116, unsafe.Pointer(&column), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::insertRow(int)
func (q *QStandardItemModel) InsertRow(row int32) bool {
	var __rv bool
	q.Drv(354000, 354117, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::insertRow(int,QList<QStandardItem*> const&)
func (q *QStandardItemModel) InsertRowWithRowItems(row int32, items []*QStandardItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(354000, 354118, unsafe.Pointer(&row), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::insertRow(int,QModelIndex const&)
func (q *QStandardItemModel) InsertRowWithRowParent(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(354000, 354119, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::insertRow(int,QStandardItem*)
func (q *QStandardItemModel) InsertRowWithRowItem(row int32, item *QStandardItem) {
	q.Drv(354000, 354120, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::invisibleRootItem()
func (q *QStandardItemModel) InvisibleRootItem() *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::item(int)
func (q *QStandardItemModel) Item(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354122, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::item(int,int)
func (q *QStandardItemModel) ItemWithRowColumn(row int32, column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354123, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::itemFromIndex(QModelIndex const&)
func (q *QStandardItemModel) ItemFromIndex(index *QModelIndex) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354124, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::itemPrototype()
func (q *QStandardItemModel) ItemPrototype() *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::parent()
func (q *QStandardItemModel) Parent() *QObject {
	var __rv uintptr
	q.Drv(354000, 354126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QObject{}
	_rp.SetDriver(__rv, 316000, false)
	return _rp
}

//QStandardItemModel::setColumnCount(int)
func (q *QStandardItemModel) SetColumnCount(columns int32) {
	q.Drv(354000, 354127, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setHorizontalHeaderItem(int,QStandardItem*)
func (q *QStandardItemModel) SetHorizontalHeaderItem(column int32, item *QStandardItem) {
	q.Drv(354000, 354128, unsafe.Pointer(&column), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setHorizontalHeaderLabels(QStringList const&)
func (q *QStandardItemModel) SetHorizontalHeaderLabels(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(354000, 354129, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setItem(int,QStandardItem*)
func (q *QStandardItemModel) SetItemWithRowItem(row int32, item *QStandardItem) {
	q.Drv(354000, 354130, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setItem(int,int,QStandardItem*)
func (q *QStandardItemModel) SetItemWithRowColumnItem(row int32, column int32, item *QStandardItem) {
	q.Drv(354000, 354131, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setItemPrototype(QStandardItem const*)
func (q *QStandardItemModel) SetItemPrototype(item *QStandardItem) {
	q.Drv(354000, 354132, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setRowCount(int)
func (q *QStandardItemModel) SetRowCount(rows int32) {
	q.Drv(354000, 354133, unsafe.Pointer(&rows), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setSortRole(int)
func (q *QStandardItemModel) SetSortRole(role int32) {
	q.Drv(354000, 354134, unsafe.Pointer(&role), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setVerticalHeaderItem(int,QStandardItem*)
func (q *QStandardItemModel) SetVerticalHeaderItem(row int32, item *QStandardItem) {
	q.Drv(354000, 354135, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::setVerticalHeaderLabels(QStringList const&)
func (q *QStandardItemModel) SetVerticalHeaderLabels(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(354000, 354136, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStandardItemModel::sortRole()
func (q *QStandardItemModel) SortRole() int32 {
	var __rv int32
	q.Drv(354000, 354137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::takeColumn(int)
func (q *QStandardItemModel) TakeColumn(column int32) []*QStandardItem {
	var __rv []*QStandardItem
	q.Drv(354000, 354138, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::takeHorizontalHeaderItem(int)
func (q *QStandardItemModel) TakeHorizontalHeaderItem(column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354139, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::takeItem(int)
func (q *QStandardItemModel) TakeItem(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354140, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::takeItem(int,int)
func (q *QStandardItemModel) TakeItemWithRowColumn(row int32, column int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354141, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::takeRow(int)
func (q *QStandardItemModel) TakeRow(row int32) []*QStandardItem {
	var __rv []*QStandardItem
	q.Drv(354000, 354142, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStandardItemModel::takeVerticalHeaderItem(int)
func (q *QStandardItemModel) TakeVerticalHeaderItem(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354143, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//QStandardItemModel::verticalHeaderItem(int)
func (q *QStandardItemModel) VerticalHeaderItem(row int32) *QStandardItem {
	var __rv uintptr
	q.Drv(354000, 354144, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStandardItem{}
	_rp.SetDriver(__rv, 124000, true)
	return _rp
}

//enum QState_ChildMode - QState::ChildMode
type QState_ChildMode uint32

const (
	QState_ExclusiveStates QState_ChildMode = 0
	QState_ParallelStates  QState_ChildMode = 1
)

//struct QState : QState
type QState struct {
	QAbstractState
}

// New QState from driver
func NewStateFromDriver(drv Driver) *QState {
	_p := &QState{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QState) OnFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(355000, 355102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QState) OnPropertiesAssigned(fn func()) uintptr {
	var __rv uintptr
	q.Drv(355000, 355103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QState::QState()
func NewState() *QState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 355000, 355104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QState{}
	_p.SetDriver(__rv, 355000, false)
	return _p
}

//QState::QState(QState*)
func NewStateWithParent(parent *QState) *QState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 355000, 355105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QState{}
	_p.SetDriver(__rv, 355000, false)
	return _p
}

//QState::QState(QState::ChildMode,QState*)
func NewStateWithChildmodeParent(childMode QState_ChildMode, parent *QState) *QState {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 355000, 355106, unsafe.Pointer(&childMode), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QState{}
	_p.SetDriver(__rv, 355000, false)
	return _p
}

//QState::addTransition(QAbstractState*)
func (q *QState) AddTransition(target *QAbstractState) *QAbstractTransition {
	var __rv uintptr
	q.Drv(355000, 355107, Native(target), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractTransition{}
	_rp.SetDriver(__rv, 208000, false)
	return _rp
}

//QState::addTransition(QAbstractTransition*)
func (q *QState) AddTransitionWithTransition(transition *QAbstractTransition) {
	q.Drv(355000, 355108, Native(transition), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::assignProperty(QObject*,char const*,QVariant const&)
func (q *QState) AssignProperty(object QObjectInterface, name string, value *QVariant) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(355000, 355109, Native(object), unsafe.Pointer(_name), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::childMode()
func (q *QState) ChildMode() QState_ChildMode {
	var __rv QState_ChildMode
	q.Drv(355000, 355110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QState::errorState()
func (q *QState) ErrorState() *QAbstractState {
	var __rv uintptr
	q.Drv(355000, 355111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractState{}
	_rp.SetDriver(__rv, 205000, false)
	return _rp
}

//QState::initialState()
func (q *QState) InitialState() *QAbstractState {
	var __rv uintptr
	q.Drv(355000, 355112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractState{}
	_rp.SetDriver(__rv, 205000, false)
	return _rp
}

//QState::removeTransition(QAbstractTransition*)
func (q *QState) RemoveTransition(transition *QAbstractTransition) {
	q.Drv(355000, 355113, Native(transition), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::setChildMode(QState::ChildMode)
func (q *QState) SetChildMode(mode QState_ChildMode) {
	q.Drv(355000, 355114, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::setErrorState(QAbstractState*)
func (q *QState) SetErrorState(state *QAbstractState) {
	q.Drv(355000, 355115, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::setInitialState(QAbstractState*)
func (q *QState) SetInitialState(state *QAbstractState) {
	q.Drv(355000, 355116, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QState::transitions()
func (q *QState) Transitions() []*QAbstractTransition {
	var __rv []*QAbstractTransition
	q.Drv(355000, 355117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QStateMachine_Error - QStateMachine::Error
type QStateMachine_Error uint32

const (
	QStateMachine_NoError                            QStateMachine_Error = 0
	QStateMachine_NoInitialStateError                QStateMachine_Error = 1
	QStateMachine_NoDefaultStateInHistoryStateError  QStateMachine_Error = 2
	QStateMachine_NoCommonAncestorForTransitionError QStateMachine_Error = 3
)

//enum QStateMachine_EventPriority - QStateMachine::EventPriority
type QStateMachine_EventPriority uint32

const (
	QStateMachine_NormalPriority QStateMachine_EventPriority = 0
	QStateMachine_HighPriority   QStateMachine_EventPriority = 1
)

//enum QStateMachine_RestorePolicy - QStateMachine::RestorePolicy
type QStateMachine_RestorePolicy uint32

const (
	QStateMachine_DontRestoreProperties QStateMachine_RestorePolicy = 0
	QStateMachine_RestoreProperties     QStateMachine_RestorePolicy = 1
)

//struct QStateMachine : QStateMachine
type QStateMachine struct {
	QState
}

// New QStateMachine from driver
func NewStateMachineFromDriver(drv Driver) *QStateMachine {
	_p := &QStateMachine{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QStateMachine) OnStarted(fn func()) uintptr {
	var __rv uintptr
	q.Drv(356000, 356102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QStateMachine) OnStopped(fn func()) uintptr {
	var __rv uintptr
	q.Drv(356000, 356103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QStateMachine::QStateMachine()
func NewStateMachine() *QStateMachine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 356000, 356104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStateMachine{}
	_p.SetDriver(__rv, 356000, false)
	return _p
}

//QStateMachine::QStateMachine(QObject*)
func NewStateMachineWithParent(parent QObjectInterface) *QStateMachine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 356000, 356105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStateMachine{}
	_p.SetDriver(__rv, 356000, false)
	return _p
}

//QStateMachine::addDefaultAnimation(QAbstractAnimation*)
func (q *QStateMachine) AddDefaultAnimation(animation *QAbstractAnimation) {
	q.Drv(356000, 356106, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::addState(QAbstractState*)
func (q *QStateMachine) AddState(state *QAbstractState) {
	q.Drv(356000, 356107, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::beginMicrostep(QEvent*)
func (q *QStateMachine) BeginMicrostep(event *QEvent) {
	q.Drv(356000, 356108, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::beginSelectTransitions(QEvent*)
func (q *QStateMachine) BeginSelectTransitions(event *QEvent) {
	q.Drv(356000, 356109, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::cancelDelayedEvent(int)
func (q *QStateMachine) CancelDelayedEvent(id int32) bool {
	var __rv bool
	q.Drv(356000, 356110, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::clearError()
func (q *QStateMachine) ClearError() {
	q.Drv(356000, 356111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::defaultAnimations()
func (q *QStateMachine) DefaultAnimations() []*QAbstractAnimation {
	var __rv []*QAbstractAnimation
	q.Drv(356000, 356112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::endMicrostep(QEvent*)
func (q *QStateMachine) EndMicrostep(event *QEvent) {
	q.Drv(356000, 356113, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::endSelectTransitions(QEvent*)
func (q *QStateMachine) EndSelectTransitions(event *QEvent) {
	q.Drv(356000, 356114, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::error()
func (q *QStateMachine) Error() QStateMachine_Error {
	var __rv QStateMachine_Error
	q.Drv(356000, 356115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::errorString()
func (q *QStateMachine) ErrorString() string {
	var __rv C.string_head
	q.Drv(356000, 356116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStateMachine::globalRestorePolicy()
func (q *QStateMachine) GlobalRestorePolicy() QStateMachine_RestorePolicy {
	var __rv QStateMachine_RestorePolicy
	q.Drv(356000, 356117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::isAnimated()
func (q *QStateMachine) IsAnimated() bool {
	var __rv bool
	q.Drv(356000, 356118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::isRunning()
func (q *QStateMachine) IsRunning() bool {
	var __rv bool
	q.Drv(356000, 356119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::postDelayedEvent(QEvent*,int)
func (q *QStateMachine) PostDelayedEvent(event *QEvent, delay int32) int32 {
	var __rv int32
	q.Drv(356000, 356120, Native(event), unsafe.Pointer(&delay), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStateMachine::postEvent(QEvent*)
func (q *QStateMachine) PostEvent(event *QEvent) {
	q.Drv(356000, 356121, Native(event), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::postEvent(QEvent*,QStateMachine::EventPriority)
func (q *QStateMachine) PostEventWithEventPriority(event *QEvent, priority QStateMachine_EventPriority) {
	q.Drv(356000, 356122, Native(event), unsafe.Pointer(&priority), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::removeDefaultAnimation(QAbstractAnimation*)
func (q *QStateMachine) RemoveDefaultAnimation(animation *QAbstractAnimation) {
	q.Drv(356000, 356123, Native(animation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::removeState(QAbstractState*)
func (q *QStateMachine) RemoveState(state *QAbstractState) {
	q.Drv(356000, 356124, Native(state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::setAnimated(bool)
func (q *QStateMachine) SetAnimated(enabled bool) {
	q.Drv(356000, 356125, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::setGlobalRestorePolicy(QStateMachine::RestorePolicy)
func (q *QStateMachine) SetGlobalRestorePolicy(restorePolicy QStateMachine_RestorePolicy) {
	q.Drv(356000, 356126, unsafe.Pointer(&restorePolicy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::start()
func (q *QStateMachine) Start() {
	q.Drv(356000, 356127, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStateMachine::stop()
func (q *QStateMachine) Stop() {
	q.Drv(356000, 356128, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QStatusBar : QStatusBar
type QStatusBar struct {
	QWidget
}

// New QStatusBar from driver
func NewStatusBarFromDriver(drv Driver) *QStatusBar {
	_p := &QStatusBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QStatusBar) OnMessageChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(357000, 357102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QStatusBar::QStatusBar()
func NewStatusBar() *QStatusBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 357000, 357103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStatusBar{}
	_p.SetDriver(__rv, 357000, false)
	return _p
}

//QStatusBar::QStatusBar(QWidget*)
func NewStatusBarWithParent(parent QWidgetInterface) *QStatusBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 357000, 357104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStatusBar{}
	_p.SetDriver(__rv, 357000, false)
	return _p
}

//QStatusBar::addPermanentWidget(QWidget*)
func (q *QStatusBar) AddPermanentWidget(widget QWidgetInterface) {
	q.Drv(357000, 357105, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::addPermanentWidget(QWidget*,int)
func (q *QStatusBar) AddPermanentWidgetWithWidgetStretch(widget QWidgetInterface, stretch int32) {
	q.Drv(357000, 357106, Native(widget), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::addWidget(QWidget*)
func (q *QStatusBar) AddWidget(widget QWidgetInterface) {
	q.Drv(357000, 357107, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::addWidget(QWidget*,int)
func (q *QStatusBar) AddWidgetWithWidgetStretch(widget QWidgetInterface, stretch int32) {
	q.Drv(357000, 357108, Native(widget), unsafe.Pointer(&stretch), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::clearMessage()
func (q *QStatusBar) ClearMessage() {
	q.Drv(357000, 357109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::currentMessage()
func (q *QStatusBar) CurrentMessage() string {
	var __rv C.string_head
	q.Drv(357000, 357110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStatusBar::hideOrShow()
func (q *QStatusBar) HideOrShow() {
	q.Drv(357000, 357111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::insertPermanentWidget(int,QWidget*,int)
func (q *QStatusBar) InsertPermanentWidget(index int32, widget QWidgetInterface, stretch int32) int32 {
	var __rv int32
	q.Drv(357000, 357112, unsafe.Pointer(&index), Native(widget), unsafe.Pointer(&stretch), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStatusBar::insertWidget(int,QWidget*,int)
func (q *QStatusBar) InsertWidget(index int32, widget QWidgetInterface, stretch int32) int32 {
	var __rv int32
	q.Drv(357000, 357113, unsafe.Pointer(&index), Native(widget), unsafe.Pointer(&stretch), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStatusBar::isSizeGripEnabled()
func (q *QStatusBar) IsSizeGripEnabled() bool {
	var __rv bool
	q.Drv(357000, 357114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStatusBar::reformat()
func (q *QStatusBar) Reformat() {
	q.Drv(357000, 357115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::removeWidget(QWidget*)
func (q *QStatusBar) RemoveWidget(widget QWidgetInterface) {
	q.Drv(357000, 357116, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::setSizeGripEnabled(bool)
func (q *QStatusBar) SetSizeGripEnabled(value bool) {
	q.Drv(357000, 357117, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::showMessage(QString const&)
func (q *QStatusBar) ShowMessage(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(357000, 357118, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStatusBar::showMessage(QString const&,int)
func (q *QStatusBar) ShowMessageWithTextTimeout(text string, timeout int32) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(357000, 357119, unsafe.Pointer(_text), unsafe.Pointer(&timeout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QStringListModel : QStringListModel
type QStringListModel struct {
	QAbstractListModel
}

// New QStringListModel from driver
func NewStringListModelFromDriver(drv Driver) *QStringListModel {
	_p := &QStringListModel{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QStringListModel
func NewStringListModelWithParent(parent QObjectInterface) *QStringListModel {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 358000, 358104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStringListModel{}
	_p.SetDriver(__rv, 358000, false)
	return _p
}

//QStringListModel::setStringList(QStringList const&)
func (q *QStringListModel) SetStringList(strings []string) {
	_strings, _strings_size := NewCSArray(strings)
	defer FreeCSArray(_strings, _strings_size)
	q.Drv(358000, 358102, unsafe.Pointer(&_strings[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStringListModel::stringList()
func (q *QStringListModel) StringList() []string {
	var __rv []string
	q.Drv(358000, 358103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QStyle_PixelMetric - QStyle::PixelMetric
type QStyle_PixelMetric uint32

const (
	QStyle_PM_ButtonMargin                   QStyle_PixelMetric = 0
	QStyle_PM_ButtonDefaultIndicator         QStyle_PixelMetric = 1
	QStyle_PM_MenuButtonIndicator            QStyle_PixelMetric = 2
	QStyle_PM_ButtonShiftHorizontal          QStyle_PixelMetric = 3
	QStyle_PM_ButtonShiftVertical            QStyle_PixelMetric = 4
	QStyle_PM_DefaultFrameWidth              QStyle_PixelMetric = 5
	QStyle_PM_SpinBoxFrameWidth              QStyle_PixelMetric = 6
	QStyle_PM_ComboBoxFrameWidth             QStyle_PixelMetric = 7
	QStyle_PM_MaximumDragDistance            QStyle_PixelMetric = 8
	QStyle_PM_ScrollBarExtent                QStyle_PixelMetric = 9
	QStyle_PM_ScrollBarSliderMin             QStyle_PixelMetric = 10
	QStyle_PM_SliderThickness                QStyle_PixelMetric = 11
	QStyle_PM_SliderControlThickness         QStyle_PixelMetric = 12
	QStyle_PM_SliderLength                   QStyle_PixelMetric = 13
	QStyle_PM_SliderTickmarkOffset           QStyle_PixelMetric = 14
	QStyle_PM_SliderSpaceAvailable           QStyle_PixelMetric = 15
	QStyle_PM_DockWidgetSeparatorExtent      QStyle_PixelMetric = 16
	QStyle_PM_DockWidgetHandleExtent         QStyle_PixelMetric = 17
	QStyle_PM_DockWidgetFrameWidth           QStyle_PixelMetric = 18
	QStyle_PM_TabBarTabOverlap               QStyle_PixelMetric = 19
	QStyle_PM_TabBarTabHSpace                QStyle_PixelMetric = 20
	QStyle_PM_TabBarTabVSpace                QStyle_PixelMetric = 21
	QStyle_PM_TabBarBaseHeight               QStyle_PixelMetric = 22
	QStyle_PM_TabBarBaseOverlap              QStyle_PixelMetric = 23
	QStyle_PM_ProgressBarChunkWidth          QStyle_PixelMetric = 24
	QStyle_PM_SplitterWidth                  QStyle_PixelMetric = 25
	QStyle_PM_TitleBarHeight                 QStyle_PixelMetric = 26
	QStyle_PM_MenuScrollerHeight             QStyle_PixelMetric = 27
	QStyle_PM_MenuHMargin                    QStyle_PixelMetric = 28
	QStyle_PM_MenuVMargin                    QStyle_PixelMetric = 29
	QStyle_PM_MenuPanelWidth                 QStyle_PixelMetric = 30
	QStyle_PM_MenuTearoffHeight              QStyle_PixelMetric = 31
	QStyle_PM_MenuDesktopFrameWidth          QStyle_PixelMetric = 32
	QStyle_PM_MenuBarPanelWidth              QStyle_PixelMetric = 33
	QStyle_PM_MenuBarItemSpacing             QStyle_PixelMetric = 34
	QStyle_PM_MenuBarVMargin                 QStyle_PixelMetric = 35
	QStyle_PM_MenuBarHMargin                 QStyle_PixelMetric = 36
	QStyle_PM_IndicatorWidth                 QStyle_PixelMetric = 37
	QStyle_PM_IndicatorHeight                QStyle_PixelMetric = 38
	QStyle_PM_ExclusiveIndicatorWidth        QStyle_PixelMetric = 39
	QStyle_PM_ExclusiveIndicatorHeight       QStyle_PixelMetric = 40
	QStyle_PM_CheckListButtonSize            QStyle_PixelMetric = 41
	QStyle_PM_CheckListControllerSize        QStyle_PixelMetric = 42
	QStyle_PM_DialogButtonsSeparator         QStyle_PixelMetric = 43
	QStyle_PM_DialogButtonsButtonWidth       QStyle_PixelMetric = 44
	QStyle_PM_DialogButtonsButtonHeight      QStyle_PixelMetric = 45
	QStyle_PM_MdiSubWindowFrameWidth         QStyle_PixelMetric = 46
	QStyle_PM_MDIFrameWidth                  QStyle_PixelMetric = QStyle_PM_MdiSubWindowFrameWidth
	QStyle_PM_MdiSubWindowMinimizedWidth     QStyle_PixelMetric = QStyle_PM_MdiSubWindowFrameWidth + 1
	QStyle_PM_MDIMinimizedWidth              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth
	QStyle_PM_HeaderMargin                   QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1
	QStyle_PM_HeaderMarkSize                 QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1
	QStyle_PM_HeaderGripMargin               QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1
	QStyle_PM_TabBarTabShiftHorizontal       QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1
	QStyle_PM_TabBarTabShiftVertical         QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TabBarScrollButtonWidth        QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarFrameWidth              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarHandleExtent            QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarItemSpacing             QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarItemMargin              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarSeparatorExtent         QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarExtensionExtent         QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_SpinBoxSliderHeight            QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_DefaultTopLevelMargin          QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_DefaultChildMargin             QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_DefaultLayoutSpacing           QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolBarIconSize                QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ListViewIconSize               QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_IconViewIconSize               QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_SmallIconSize                  QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LargeIconSize                  QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_FocusFrameVMargin              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_FocusFrameHMargin              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ToolTipLabelFrameWidth         QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_CheckBoxLabelSpacing           QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TabBarIconSize                 QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_SizeGripSize                   QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_DockWidgetTitleMargin          QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_MessageBoxIconSize             QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ButtonIconSize                 QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_DockWidgetTitleBarButtonMargin QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_RadioButtonLabelSpacing        QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutLeftMargin               QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutTopMargin                QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutRightMargin              QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutBottomMargin             QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutHorizontalSpacing        QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_LayoutVerticalSpacing          QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TabBar_ScrollButtonOverlap     QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TextCursorWidth                QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TabCloseIndicatorWidth         QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_TabCloseIndicatorHeight        QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_ScrollView_ScrollBarSpacing    QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_SubMenuOverlap                 QStyle_PixelMetric = QStyle_PM_MdiSubWindowMinimizedWidth + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PM_CustomBase                     QStyle_PixelMetric = 0xf0000000
)

//enum QStyle_SubControl - QStyle::SubControl
type QStyle_SubControl uint32

const (
	QStyle_SC_None                      QStyle_SubControl = 0x00000000
	QStyle_SC_ScrollBarAddLine          QStyle_SubControl = 0x00000001
	QStyle_SC_ScrollBarSubLine          QStyle_SubControl = 0x00000002
	QStyle_SC_ScrollBarAddPage          QStyle_SubControl = 0x00000004
	QStyle_SC_ScrollBarSubPage          QStyle_SubControl = 0x00000008
	QStyle_SC_ScrollBarFirst            QStyle_SubControl = 0x00000010
	QStyle_SC_ScrollBarLast             QStyle_SubControl = 0x00000020
	QStyle_SC_ScrollBarSlider           QStyle_SubControl = 0x00000040
	QStyle_SC_ScrollBarGroove           QStyle_SubControl = 0x00000080
	QStyle_SC_SpinBoxUp                 QStyle_SubControl = 0x00000001
	QStyle_SC_SpinBoxDown               QStyle_SubControl = 0x00000002
	QStyle_SC_SpinBoxFrame              QStyle_SubControl = 0x00000004
	QStyle_SC_SpinBoxEditField          QStyle_SubControl = 0x00000008
	QStyle_SC_ComboBoxFrame             QStyle_SubControl = 0x00000001
	QStyle_SC_ComboBoxEditField         QStyle_SubControl = 0x00000002
	QStyle_SC_ComboBoxArrow             QStyle_SubControl = 0x00000004
	QStyle_SC_ComboBoxListBoxPopup      QStyle_SubControl = 0x00000008
	QStyle_SC_SliderGroove              QStyle_SubControl = 0x00000001
	QStyle_SC_SliderHandle              QStyle_SubControl = 0x00000002
	QStyle_SC_SliderTickmarks           QStyle_SubControl = 0x00000004
	QStyle_SC_ToolButton                QStyle_SubControl = 0x00000001
	QStyle_SC_ToolButtonMenu            QStyle_SubControl = 0x00000002
	QStyle_SC_TitleBarSysMenu           QStyle_SubControl = 0x00000001
	QStyle_SC_TitleBarMinButton         QStyle_SubControl = 0x00000002
	QStyle_SC_TitleBarMaxButton         QStyle_SubControl = 0x00000004
	QStyle_SC_TitleBarCloseButton       QStyle_SubControl = 0x00000008
	QStyle_SC_TitleBarNormalButton      QStyle_SubControl = 0x00000010
	QStyle_SC_TitleBarShadeButton       QStyle_SubControl = 0x00000020
	QStyle_SC_TitleBarUnshadeButton     QStyle_SubControl = 0x00000040
	QStyle_SC_TitleBarContextHelpButton QStyle_SubControl = 0x00000080
	QStyle_SC_TitleBarLabel             QStyle_SubControl = 0x00000100
	QStyle_SC_Q3ListView                QStyle_SubControl = 0x00000001
	QStyle_SC_Q3ListViewBranch          QStyle_SubControl = 0x00000002
	QStyle_SC_Q3ListViewExpand          QStyle_SubControl = 0x00000004
	QStyle_SC_DialGroove                QStyle_SubControl = 0x00000001
	QStyle_SC_DialHandle                QStyle_SubControl = 0x00000002
	QStyle_SC_DialTickmarks             QStyle_SubControl = 0x00000004
	QStyle_SC_GroupBoxCheckBox          QStyle_SubControl = 0x00000001
	QStyle_SC_GroupBoxLabel             QStyle_SubControl = 0x00000002
	QStyle_SC_GroupBoxContents          QStyle_SubControl = 0x00000004
	QStyle_SC_GroupBoxFrame             QStyle_SubControl = 0x00000008
	QStyle_SC_MdiMinButton              QStyle_SubControl = 0x00000001
	QStyle_SC_MdiNormalButton           QStyle_SubControl = 0x00000002
	QStyle_SC_MdiCloseButton            QStyle_SubControl = 0x00000004
	QStyle_SC_CustomBase                QStyle_SubControl = 0xf0000000
	QStyle_SC_All                       QStyle_SubControl = 0xffffffff
)

//enum QStyle_StandardPixmap - QStyle::StandardPixmap
type QStyle_StandardPixmap uint32

const (
	QStyle_SP_TitleBarMenuButton               QStyle_StandardPixmap = 0
	QStyle_SP_TitleBarMinButton                QStyle_StandardPixmap = 1
	QStyle_SP_TitleBarMaxButton                QStyle_StandardPixmap = 2
	QStyle_SP_TitleBarCloseButton              QStyle_StandardPixmap = 3
	QStyle_SP_TitleBarNormalButton             QStyle_StandardPixmap = 4
	QStyle_SP_TitleBarShadeButton              QStyle_StandardPixmap = 5
	QStyle_SP_TitleBarUnshadeButton            QStyle_StandardPixmap = 6
	QStyle_SP_TitleBarContextHelpButton        QStyle_StandardPixmap = 7
	QStyle_SP_DockWidgetCloseButton            QStyle_StandardPixmap = 8
	QStyle_SP_MessageBoxInformation            QStyle_StandardPixmap = 9
	QStyle_SP_MessageBoxWarning                QStyle_StandardPixmap = 10
	QStyle_SP_MessageBoxCritical               QStyle_StandardPixmap = 11
	QStyle_SP_MessageBoxQuestion               QStyle_StandardPixmap = 12
	QStyle_SP_DesktopIcon                      QStyle_StandardPixmap = 13
	QStyle_SP_TrashIcon                        QStyle_StandardPixmap = 14
	QStyle_SP_ComputerIcon                     QStyle_StandardPixmap = 15
	QStyle_SP_DriveFDIcon                      QStyle_StandardPixmap = 16
	QStyle_SP_DriveHDIcon                      QStyle_StandardPixmap = 17
	QStyle_SP_DriveCDIcon                      QStyle_StandardPixmap = 18
	QStyle_SP_DriveDVDIcon                     QStyle_StandardPixmap = 19
	QStyle_SP_DriveNetIcon                     QStyle_StandardPixmap = 20
	QStyle_SP_DirOpenIcon                      QStyle_StandardPixmap = 21
	QStyle_SP_DirClosedIcon                    QStyle_StandardPixmap = 22
	QStyle_SP_DirLinkIcon                      QStyle_StandardPixmap = 23
	QStyle_SP_FileIcon                         QStyle_StandardPixmap = 24
	QStyle_SP_FileLinkIcon                     QStyle_StandardPixmap = 25
	QStyle_SP_ToolBarHorizontalExtensionButton QStyle_StandardPixmap = 26
	QStyle_SP_ToolBarVerticalExtensionButton   QStyle_StandardPixmap = 27
	QStyle_SP_FileDialogStart                  QStyle_StandardPixmap = 28
	QStyle_SP_FileDialogEnd                    QStyle_StandardPixmap = 29
	QStyle_SP_FileDialogToParent               QStyle_StandardPixmap = 30
	QStyle_SP_FileDialogNewFolder              QStyle_StandardPixmap = 31
	QStyle_SP_FileDialogDetailedView           QStyle_StandardPixmap = 32
	QStyle_SP_FileDialogInfoView               QStyle_StandardPixmap = 33
	QStyle_SP_FileDialogContentsView           QStyle_StandardPixmap = 34
	QStyle_SP_FileDialogListView               QStyle_StandardPixmap = 35
	QStyle_SP_FileDialogBack                   QStyle_StandardPixmap = 36
	QStyle_SP_DirIcon                          QStyle_StandardPixmap = 37
	QStyle_SP_DialogOkButton                   QStyle_StandardPixmap = 38
	QStyle_SP_DialogCancelButton               QStyle_StandardPixmap = 39
	QStyle_SP_DialogHelpButton                 QStyle_StandardPixmap = 40
	QStyle_SP_DialogOpenButton                 QStyle_StandardPixmap = 41
	QStyle_SP_DialogSaveButton                 QStyle_StandardPixmap = 42
	QStyle_SP_DialogCloseButton                QStyle_StandardPixmap = 43
	QStyle_SP_DialogApplyButton                QStyle_StandardPixmap = 44
	QStyle_SP_DialogResetButton                QStyle_StandardPixmap = 45
	QStyle_SP_DialogDiscardButton              QStyle_StandardPixmap = 46
	QStyle_SP_DialogYesButton                  QStyle_StandardPixmap = 47
	QStyle_SP_DialogNoButton                   QStyle_StandardPixmap = 48
	QStyle_SP_ArrowUp                          QStyle_StandardPixmap = 49
	QStyle_SP_ArrowDown                        QStyle_StandardPixmap = 50
	QStyle_SP_ArrowLeft                        QStyle_StandardPixmap = 51
	QStyle_SP_ArrowRight                       QStyle_StandardPixmap = 52
	QStyle_SP_ArrowBack                        QStyle_StandardPixmap = 53
	QStyle_SP_ArrowForward                     QStyle_StandardPixmap = 54
	QStyle_SP_DirHomeIcon                      QStyle_StandardPixmap = 55
	QStyle_SP_CommandLink                      QStyle_StandardPixmap = 56
	QStyle_SP_VistaShield                      QStyle_StandardPixmap = 57
	QStyle_SP_BrowserReload                    QStyle_StandardPixmap = 58
	QStyle_SP_BrowserStop                      QStyle_StandardPixmap = 59
	QStyle_SP_MediaPlay                        QStyle_StandardPixmap = 60
	QStyle_SP_MediaStop                        QStyle_StandardPixmap = 61
	QStyle_SP_MediaPause                       QStyle_StandardPixmap = 62
	QStyle_SP_MediaSkipForward                 QStyle_StandardPixmap = 63
	QStyle_SP_MediaSkipBackward                QStyle_StandardPixmap = 64
	QStyle_SP_MediaSeekForward                 QStyle_StandardPixmap = 65
	QStyle_SP_MediaSeekBackward                QStyle_StandardPixmap = 66
	QStyle_SP_MediaVolume                      QStyle_StandardPixmap = 67
	QStyle_SP_MediaVolumeMuted                 QStyle_StandardPixmap = 68
	QStyle_SP_CustomBase                       QStyle_StandardPixmap = 0xf0000000
)

//enum QStyle_StyleHint - QStyle::StyleHint
type QStyle_StyleHint uint32

const (
	QStyle_SH_EtchDisabledText                               QStyle_StyleHint = 0
	QStyle_SH_DitherDisabledText                             QStyle_StyleHint = 1
	QStyle_SH_ScrollBar_MiddleClickAbsolutePosition          QStyle_StyleHint = 2
	QStyle_SH_ScrollBar_ScrollWhenPointerLeavesControl       QStyle_StyleHint = 3
	QStyle_SH_TabBar_SelectMouseType                         QStyle_StyleHint = 4
	QStyle_SH_TabBar_Alignment                               QStyle_StyleHint = 5
	QStyle_SH_Header_ArrowAlignment                          QStyle_StyleHint = 6
	QStyle_SH_Slider_SnapToValue                             QStyle_StyleHint = 7
	QStyle_SH_Slider_SloppyKeyEvents                         QStyle_StyleHint = 8
	QStyle_SH_ProgressDialog_CenterCancelButton              QStyle_StyleHint = 9
	QStyle_SH_ProgressDialog_TextLabelAlignment              QStyle_StyleHint = 10
	QStyle_SH_PrintDialog_RightAlignButtons                  QStyle_StyleHint = 11
	QStyle_SH_MainWindow_SpaceBelowMenuBar                   QStyle_StyleHint = 12
	QStyle_SH_FontDialog_SelectAssociatedText                QStyle_StyleHint = 13
	QStyle_SH_Menu_AllowActiveAndDisabled                    QStyle_StyleHint = 14
	QStyle_SH_Menu_SpaceActivatesItem                        QStyle_StyleHint = 15
	QStyle_SH_Menu_SubMenuPopupDelay                         QStyle_StyleHint = 16
	QStyle_SH_ScrollView_FrameOnlyAroundContents             QStyle_StyleHint = 17
	QStyle_SH_MenuBar_AltKeyNavigation                       QStyle_StyleHint = 18
	QStyle_SH_ComboBox_ListMouseTracking                     QStyle_StyleHint = 19
	QStyle_SH_Menu_MouseTracking                             QStyle_StyleHint = 20
	QStyle_SH_MenuBar_MouseTracking                          QStyle_StyleHint = 21
	QStyle_SH_ItemView_ChangeHighlightOnFocus                QStyle_StyleHint = 22
	QStyle_SH_Widget_ShareActivation                         QStyle_StyleHint = 23
	QStyle_SH_Workspace_FillSpaceOnMaximize                  QStyle_StyleHint = 24
	QStyle_SH_ComboBox_Popup                                 QStyle_StyleHint = 25
	QStyle_SH_TitleBar_NoBorder                              QStyle_StyleHint = 26
	QStyle_SH_Slider_StopMouseOverSlider                     QStyle_StyleHint = 27
	QStyle_SH_ScrollBar_StopMouseOverSlider                  QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider
	QStyle_SH_BlinkCursorWhenTextSelected                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1
	QStyle_SH_RichText_FullWidthSelection                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1
	QStyle_SH_Menu_Scrollable                                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1
	QStyle_SH_GroupBox_TextLabelVerticalAlignment            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1
	QStyle_SH_GroupBox_TextLabelColor                        QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_SloppySubMenus                            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Table_GridLineColor                            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_LineEdit_PasswordCharacter                     QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_DialogButtons_DefaultButton                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolBox_SelectedPageTitleBold                  QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TabBar_PreferNoArrows                          QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ScrollBar_LeftClickAbsolutePosition            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Q3ListViewExpand_SelectMouseType               QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_UnderlineShortcut                              QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpinBox_AnimateButton                          QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpinBox_KeyPressAutoRepeatRate                 QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpinBox_ClickAutoRepeatRate                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_FillScreenWithScroll                      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolTipLabel_Opacity                           QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_DrawMenuBarSeparator                           QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TitleBar_ModifyNotification                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Button_FocusPolicy                             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_MenuBar_DismissOnSecondClick                   QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_MessageBox_UseBorderForButtonSpacing           QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TitleBar_AutoRaise                             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolButton_PopupDelay                          QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FocusFrame_Mask                                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_RubberBand_Mask                                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_WindowFrame_Mask                               QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpinControls_DisableOnBounds                   QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Dial_BackgroundRole                            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ComboBox_LayoutDirection                       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_EllipsisLocation                      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_ShowDecorationSelected                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_ActivateItemOnSingleClick             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ScrollBar_ContextMenu                          QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ScrollBar_RollBetweenButtons                   QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Slider_AbsoluteSetButtons                      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Slider_PageSetButtons                          QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_KeyboardSearch                            QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TabBar_ElideMode                               QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_DialogButtonLayout                             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ComboBox_PopupFrameStyle                       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_MessageBox_TextInteractionFlags                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_DialogButtonBox_ButtonsHaveIcons               QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpellCheckUnderlineStyle                       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_MessageBox_CenterButtons                       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_SelectionWrap                             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_MovementWithoutUpdatingSelection      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolTip_Mask                                   QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FocusFrame_AboveWidget                         QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TextControl_FocusIndicatorTextCharFormat       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_WizardStyle                                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_ArrowKeysNavigateIntoChildren         QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_Mask                                      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_FlashTriggeredItem                        QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_Menu_FadeOutOnHide                             QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_SpinBox_ClickAutoRepeatThreshold               QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_PaintAlternatingRowColorsForEmptyArea QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FormLayoutWrapPolicy                           QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TabWidget_DefaultTabPosition                   QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolBar_Movable                                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FormLayoutFieldGrowthPolicy                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FormLayoutFormAlignment                        QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_FormLayoutLabelAlignment                       QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ItemView_DrawDelegateFrame                     QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_TabBar_CloseButtonPosition                     QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_DockWidget_ButtonsHaveFrame                    QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_ToolButtonStyle                                QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_RequestSoftwareInputPanel                      QStyle_StyleHint = QStyle_SH_Slider_StopMouseOverSlider + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SH_CustomBase                                     QStyle_StyleHint = 0xf0000000
)

//enum QStyle_PrimitiveElement - QStyle::PrimitiveElement
type QStyle_PrimitiveElement uint32

const (
	QStyle_PE_Q3CheckListController           QStyle_PrimitiveElement = 0
	QStyle_PE_Q3CheckListExclusiveIndicator   QStyle_PrimitiveElement = 1
	QStyle_PE_Q3CheckListIndicator            QStyle_PrimitiveElement = 2
	QStyle_PE_Q3DockWindowSeparator           QStyle_PrimitiveElement = 3
	QStyle_PE_Q3Separator                     QStyle_PrimitiveElement = 4
	QStyle_PE_Frame                           QStyle_PrimitiveElement = 5
	QStyle_PE_FrameDefaultButton              QStyle_PrimitiveElement = 6
	QStyle_PE_FrameDockWidget                 QStyle_PrimitiveElement = 7
	QStyle_PE_FrameFocusRect                  QStyle_PrimitiveElement = 8
	QStyle_PE_FrameGroupBox                   QStyle_PrimitiveElement = 9
	QStyle_PE_FrameLineEdit                   QStyle_PrimitiveElement = 10
	QStyle_PE_FrameMenu                       QStyle_PrimitiveElement = 11
	QStyle_PE_FrameStatusBar                  QStyle_PrimitiveElement = 12
	QStyle_PE_FrameStatusBarItem              QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar
	QStyle_PE_FrameTabWidget                  QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1
	QStyle_PE_FrameWindow                     QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1
	QStyle_PE_FrameButtonBevel                QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1
	QStyle_PE_FrameButtonTool                 QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1
	QStyle_PE_FrameTabBarBase                 QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelButtonCommand              QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelButtonBevel                QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelButtonTool                 QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelMenuBar                    QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelToolBar                    QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelLineEdit                   QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorArrowDown              QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorArrowLeft              QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorArrowRight             QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorArrowUp                QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorBranch                 QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorButtonDropDown         QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorViewItemCheck          QStyle_PrimitiveElement = QStyle_PE_FrameStatusBar + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorItemViewItemCheck      QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck
	QStyle_PE_IndicatorCheckBox               QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1
	QStyle_PE_IndicatorDockWidgetResizeHandle QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1
	QStyle_PE_IndicatorHeaderArrow            QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1
	QStyle_PE_IndicatorMenuCheckMark          QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorProgressChunk          QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorRadioButton            QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorSpinDown               QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorSpinMinus              QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorSpinPlus               QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorSpinUp                 QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorToolBarHandle          QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorToolBarSeparator       QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelTipLabel                   QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorTabTear                QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelScrollAreaCorner           QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_Widget                          QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorColumnViewArrow        QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorItemViewItemDrop       QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelItemViewItem               QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelItemViewRow                QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelStatusBar                  QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_IndicatorTabClose               QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_PanelMenu                       QStyle_PrimitiveElement = QStyle_PE_IndicatorViewItemCheck + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_PE_CustomBase                      QStyle_PrimitiveElement = 0xf000000
)

//enum QStyle_ControlElement - QStyle::ControlElement
type QStyle_ControlElement uint32

const (
	QStyle_CE_PushButton            QStyle_ControlElement = 0
	QStyle_CE_PushButtonBevel       QStyle_ControlElement = 1
	QStyle_CE_PushButtonLabel       QStyle_ControlElement = 2
	QStyle_CE_CheckBox              QStyle_ControlElement = 3
	QStyle_CE_CheckBoxLabel         QStyle_ControlElement = 4
	QStyle_CE_RadioButton           QStyle_ControlElement = 5
	QStyle_CE_RadioButtonLabel      QStyle_ControlElement = 6
	QStyle_CE_TabBarTab             QStyle_ControlElement = 7
	QStyle_CE_TabBarTabShape        QStyle_ControlElement = 8
	QStyle_CE_TabBarTabLabel        QStyle_ControlElement = 9
	QStyle_CE_ProgressBar           QStyle_ControlElement = 10
	QStyle_CE_ProgressBarGroove     QStyle_ControlElement = 11
	QStyle_CE_ProgressBarContents   QStyle_ControlElement = 12
	QStyle_CE_ProgressBarLabel      QStyle_ControlElement = 13
	QStyle_CE_MenuItem              QStyle_ControlElement = 14
	QStyle_CE_MenuScroller          QStyle_ControlElement = 15
	QStyle_CE_MenuVMargin           QStyle_ControlElement = 16
	QStyle_CE_MenuHMargin           QStyle_ControlElement = 17
	QStyle_CE_MenuTearoff           QStyle_ControlElement = 18
	QStyle_CE_MenuEmptyArea         QStyle_ControlElement = 19
	QStyle_CE_MenuBarItem           QStyle_ControlElement = 20
	QStyle_CE_MenuBarEmptyArea      QStyle_ControlElement = 21
	QStyle_CE_ToolButtonLabel       QStyle_ControlElement = 22
	QStyle_CE_Header                QStyle_ControlElement = 23
	QStyle_CE_HeaderSection         QStyle_ControlElement = 24
	QStyle_CE_HeaderLabel           QStyle_ControlElement = 25
	QStyle_CE_Q3DockWindowEmptyArea QStyle_ControlElement = 26
	QStyle_CE_ToolBoxTab            QStyle_ControlElement = 27
	QStyle_CE_SizeGrip              QStyle_ControlElement = 28
	QStyle_CE_Splitter              QStyle_ControlElement = 29
	QStyle_CE_RubberBand            QStyle_ControlElement = 30
	QStyle_CE_DockWidgetTitle       QStyle_ControlElement = 31
	QStyle_CE_ScrollBarAddLine      QStyle_ControlElement = 32
	QStyle_CE_ScrollBarSubLine      QStyle_ControlElement = 33
	QStyle_CE_ScrollBarAddPage      QStyle_ControlElement = 34
	QStyle_CE_ScrollBarSubPage      QStyle_ControlElement = 35
	QStyle_CE_ScrollBarSlider       QStyle_ControlElement = 36
	QStyle_CE_ScrollBarFirst        QStyle_ControlElement = 37
	QStyle_CE_ScrollBarLast         QStyle_ControlElement = 38
	QStyle_CE_FocusFrame            QStyle_ControlElement = 39
	QStyle_CE_ComboBoxLabel         QStyle_ControlElement = 40
	QStyle_CE_ToolBar               QStyle_ControlElement = 41
	QStyle_CE_ToolBoxTabShape       QStyle_ControlElement = 42
	QStyle_CE_ToolBoxTabLabel       QStyle_ControlElement = 43
	QStyle_CE_HeaderEmptyArea       QStyle_ControlElement = 44
	QStyle_CE_ColumnViewGrip        QStyle_ControlElement = 45
	QStyle_CE_ItemViewItem          QStyle_ControlElement = 46
	QStyle_CE_ShapedFrame           QStyle_ControlElement = 47
	QStyle_CE_CustomBase            QStyle_ControlElement = 0xf0000000
)

//enum QStyle_ContentsType - QStyle::ContentsType
type QStyle_ContentsType uint32

const (
	QStyle_CT_PushButton    QStyle_ContentsType = 0
	QStyle_CT_CheckBox      QStyle_ContentsType = 1
	QStyle_CT_RadioButton   QStyle_ContentsType = 2
	QStyle_CT_ToolButton    QStyle_ContentsType = 3
	QStyle_CT_ComboBox      QStyle_ContentsType = 4
	QStyle_CT_Splitter      QStyle_ContentsType = 5
	QStyle_CT_Q3DockWindow  QStyle_ContentsType = 6
	QStyle_CT_ProgressBar   QStyle_ContentsType = 7
	QStyle_CT_MenuItem      QStyle_ContentsType = 8
	QStyle_CT_MenuBarItem   QStyle_ContentsType = 9
	QStyle_CT_MenuBar       QStyle_ContentsType = 10
	QStyle_CT_Menu          QStyle_ContentsType = 11
	QStyle_CT_TabBarTab     QStyle_ContentsType = 12
	QStyle_CT_Slider        QStyle_ContentsType = 13
	QStyle_CT_ScrollBar     QStyle_ContentsType = 14
	QStyle_CT_Q3Header      QStyle_ContentsType = 15
	QStyle_CT_LineEdit      QStyle_ContentsType = 16
	QStyle_CT_SpinBox       QStyle_ContentsType = 17
	QStyle_CT_SizeGrip      QStyle_ContentsType = 18
	QStyle_CT_TabWidget     QStyle_ContentsType = 19
	QStyle_CT_DialogButtons QStyle_ContentsType = 20
	QStyle_CT_HeaderSection QStyle_ContentsType = 21
	QStyle_CT_GroupBox      QStyle_ContentsType = 22
	QStyle_CT_MdiControls   QStyle_ContentsType = 23
	QStyle_CT_ItemViewItem  QStyle_ContentsType = 24
	QStyle_CT_CustomBase    QStyle_ContentsType = 0xf0000000
)

//enum QStyle_StateFlag - QStyle::StateFlag
type QStyle_StateFlag uint32

const (
	QStyle_State_None                QStyle_StateFlag = 0x00000000
	QStyle_State_Enabled             QStyle_StateFlag = 0x00000001
	QStyle_State_Raised              QStyle_StateFlag = 0x00000002
	QStyle_State_Sunken              QStyle_StateFlag = 0x00000004
	QStyle_State_Off                 QStyle_StateFlag = 0x00000008
	QStyle_State_NoChange            QStyle_StateFlag = 0x00000010
	QStyle_State_On                  QStyle_StateFlag = 0x00000020
	QStyle_State_DownArrow           QStyle_StateFlag = 0x00000040
	QStyle_State_Horizontal          QStyle_StateFlag = 0x00000080
	QStyle_State_HasFocus            QStyle_StateFlag = 0x00000100
	QStyle_State_Top                 QStyle_StateFlag = 0x00000200
	QStyle_State_Bottom              QStyle_StateFlag = 0x00000400
	QStyle_State_FocusAtBorder       QStyle_StateFlag = 0x00000800
	QStyle_State_AutoRaise           QStyle_StateFlag = 0x00001000
	QStyle_State_MouseOver           QStyle_StateFlag = 0x00002000
	QStyle_State_UpArrow             QStyle_StateFlag = 0x00004000
	QStyle_State_Selected            QStyle_StateFlag = 0x00008000
	QStyle_State_Active              QStyle_StateFlag = 0x00010000
	QStyle_State_Window              QStyle_StateFlag = 0x00020000
	QStyle_State_Open                QStyle_StateFlag = 0x00040000
	QStyle_State_Children            QStyle_StateFlag = 0x00080000
	QStyle_State_Item                QStyle_StateFlag = 0x00100000
	QStyle_State_Sibling             QStyle_StateFlag = 0x00200000
	QStyle_State_Editing             QStyle_StateFlag = 0x00400000
	QStyle_State_KeyboardFocusChange QStyle_StateFlag = 0x00800000
	QStyle_State_ReadOnly            QStyle_StateFlag = 0x02000000
	QStyle_State_Small               QStyle_StateFlag = 0x04000000
	QStyle_State_Mini                QStyle_StateFlag = 0x08000000
)

//enum QStyle_ComplexControl - QStyle::ComplexControl
type QStyle_ComplexControl uint32

const (
	QStyle_CC_SpinBox     QStyle_ComplexControl = 0
	QStyle_CC_ComboBox    QStyle_ComplexControl = 1
	QStyle_CC_ScrollBar   QStyle_ComplexControl = 2
	QStyle_CC_Slider      QStyle_ComplexControl = 3
	QStyle_CC_ToolButton  QStyle_ComplexControl = 4
	QStyle_CC_TitleBar    QStyle_ComplexControl = 5
	QStyle_CC_Q3ListView  QStyle_ComplexControl = 6
	QStyle_CC_Dial        QStyle_ComplexControl = 7
	QStyle_CC_GroupBox    QStyle_ComplexControl = 8
	QStyle_CC_MdiControls QStyle_ComplexControl = 9
	QStyle_CC_CustomBase  QStyle_ComplexControl = 0xf0000000
)

//enum QStyle_RequestSoftwareInputPanel - QStyle::RequestSoftwareInputPanel
type QStyle_RequestSoftwareInputPanel uint32

const (
	QStyle_RSIP_OnMouseClickAndAlreadyFocused QStyle_RequestSoftwareInputPanel = 0
	QStyle_RSIP_OnMouseClick                  QStyle_RequestSoftwareInputPanel = 1
)

//enum QStyle_SubElement - QStyle::SubElement
type QStyle_SubElement uint32

const (
	QStyle_SE_PushButtonContents         QStyle_SubElement = 0
	QStyle_SE_PushButtonFocusRect        QStyle_SubElement = 1
	QStyle_SE_CheckBoxIndicator          QStyle_SubElement = 2
	QStyle_SE_CheckBoxContents           QStyle_SubElement = 3
	QStyle_SE_CheckBoxFocusRect          QStyle_SubElement = 4
	QStyle_SE_CheckBoxClickRect          QStyle_SubElement = 5
	QStyle_SE_RadioButtonIndicator       QStyle_SubElement = 6
	QStyle_SE_RadioButtonContents        QStyle_SubElement = 7
	QStyle_SE_RadioButtonFocusRect       QStyle_SubElement = 8
	QStyle_SE_RadioButtonClickRect       QStyle_SubElement = 9
	QStyle_SE_ComboBoxFocusRect          QStyle_SubElement = 10
	QStyle_SE_SliderFocusRect            QStyle_SubElement = 11
	QStyle_SE_Q3DockWindowHandleRect     QStyle_SubElement = 12
	QStyle_SE_ProgressBarGroove          QStyle_SubElement = 13
	QStyle_SE_ProgressBarContents        QStyle_SubElement = 14
	QStyle_SE_ProgressBarLabel           QStyle_SubElement = 15
	QStyle_SE_DialogButtonAccept         QStyle_SubElement = 16
	QStyle_SE_DialogButtonReject         QStyle_SubElement = 17
	QStyle_SE_DialogButtonApply          QStyle_SubElement = 18
	QStyle_SE_DialogButtonHelp           QStyle_SubElement = 19
	QStyle_SE_DialogButtonAll            QStyle_SubElement = 20
	QStyle_SE_DialogButtonAbort          QStyle_SubElement = 21
	QStyle_SE_DialogButtonIgnore         QStyle_SubElement = 22
	QStyle_SE_DialogButtonRetry          QStyle_SubElement = 23
	QStyle_SE_DialogButtonCustom         QStyle_SubElement = 24
	QStyle_SE_ToolBoxTabContents         QStyle_SubElement = 25
	QStyle_SE_HeaderLabel                QStyle_SubElement = 26
	QStyle_SE_HeaderArrow                QStyle_SubElement = 27
	QStyle_SE_TabWidgetTabBar            QStyle_SubElement = 28
	QStyle_SE_TabWidgetTabPane           QStyle_SubElement = 29
	QStyle_SE_TabWidgetTabContents       QStyle_SubElement = 30
	QStyle_SE_TabWidgetLeftCorner        QStyle_SubElement = 31
	QStyle_SE_TabWidgetRightCorner       QStyle_SubElement = 32
	QStyle_SE_ViewItemCheckIndicator     QStyle_SubElement = 33
	QStyle_SE_ItemViewItemCheckIndicator QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator
	QStyle_SE_TabBarTearIndicator        QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1
	QStyle_SE_TreeViewDisclosureItem     QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1
	QStyle_SE_LineEditContents           QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1
	QStyle_SE_FrameContents              QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1
	QStyle_SE_DockWidgetCloseButton      QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1
	QStyle_SE_DockWidgetFloatButton      QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_DockWidgetTitleBarText     QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_DockWidgetIcon             QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_CheckBoxLayoutItem         QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ComboBoxLayoutItem         QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_DateTimeEditLayoutItem     QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_DialogButtonBoxLayoutItem  QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_LabelLayoutItem            QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ProgressBarLayoutItem      QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_PushButtonLayoutItem       QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_RadioButtonLayoutItem      QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_SliderLayoutItem           QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_SpinBoxLayoutItem          QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ToolButtonLayoutItem       QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_FrameLayoutItem            QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_GroupBoxLayoutItem         QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_TabWidgetLayoutItem        QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ItemViewItemDecoration     QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ItemViewItemText           QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ItemViewItemFocusRect      QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_TabBarTabLeftButton        QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_TabBarTabRightButton       QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_TabBarTabText              QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ShapedFrameContents        QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_ToolBarHandle              QStyle_SubElement = QStyle_SE_ViewItemCheckIndicator + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	QStyle_SE_CustomBase                 QStyle_SubElement = 0xf0000000
)

//struct QStyle : QStyle
type QStyle struct {
	QObject
}

//QStyle::alignedRect(Qt::LayoutDirection,QFlags<Qt::AlignmentFlag>,QSize const&,QRect const&)
func QStyleAlignedRect(direction Qt_LayoutDirection, alignment Qt_AlignmentFlag, size *QSize, rectangle *QRect) *QRect {
	var __rv uintptr
	DirectQtDrv(nil, 359000, 359102, unsafe.Pointer(&direction), unsafe.Pointer(&alignment), Native(size), Native(rectangle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QStyle::alignedRect(Qt::LayoutDirection,QFlags<Qt::AlignmentFlag>,QSize const&,QRect const&)
func (q *QStyle) AlignedRect(direction Qt_LayoutDirection, alignment Qt_AlignmentFlag, size *QSize, rectangle *QRect) *QRect {
	var __rv uintptr
	q.Drv(359000, 359102, unsafe.Pointer(&direction), unsafe.Pointer(&alignment), Native(size), Native(rectangle), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QStyle::drawItemPixmap(QPainter*,QRect const&,int,QPixmap const&)
func (q *QStyle) DrawItemPixmap(painter *QPainter, rect *QRect, alignment int32, pixmap *QPixmap) {
	q.Drv(359000, 359103, Native(painter), Native(rect), unsafe.Pointer(&alignment), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::drawItemText(QPainter*,QRect const&,int,QPalette const&,bool,QString const&,QPalette::ColorRole)
func (q *QStyle) DrawItemText(painter *QPainter, rect *QRect, flags int32, pal *QPalette, enabled bool, text string, textRole QPalette_ColorRole) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(359000, 359104, Native(painter), Native(rect), unsafe.Pointer(&flags), Native(pal), unsafe.Pointer(&enabled), unsafe.Pointer(_text), unsafe.Pointer(&textRole), nil, nil, nil, nil, nil)
}

//QStyle::itemPixmapRect(QRect const&,int,QPixmap const&)
func (q *QStyle) ItemPixmapRect(r *QRect, flags int32, pixmap *QPixmap) *QRect {
	var __rv uintptr
	q.Drv(359000, 359105, Native(r), unsafe.Pointer(&flags), Native(pixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QStyle::itemTextRect(QFontMetrics const&,QRect const&,int,bool,QString const&)
func (q *QStyle) ItemTextRect(fm *QFontMetrics, r *QRect, flags int32, enabled bool, text string) *QRect {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(359000, 359106, Native(fm), Native(r), unsafe.Pointer(&flags), unsafe.Pointer(&enabled), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QStyle::pixelMetric(QStyle::PixelMetric)
func (q *QStyle) PixelMetric(metric QStyle_PixelMetric) int32 {
	var __rv int32
	q.Drv(359000, 359107, unsafe.Pointer(&metric), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::polish(QApplication*)
func (q *QStyle) Polish(value *QApplication) {
	q.Drv(359000, 359108, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::polish(QPalette&)
func (q *QStyle) PolishWithPalette(value *QPalette) {
	q.Drv(359000, 359109, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::polish(QWidget*)
func (q *QStyle) PolishWithWidget(value QWidgetInterface) {
	q.Drv(359000, 359110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::proxy()
func (q *QStyle) Proxy() *QStyle {
	var __rv uintptr
	q.Drv(359000, 359111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QStyle::sliderPositionFromValue(int,int,int,int,bool)
func QStyleSliderPositionFromValue(min int32, max int32, val int32, space int32, upsideDown bool) int32 {
	var __rv int32
	DirectQtDrv(nil, 359000, 359112, unsafe.Pointer(&min), unsafe.Pointer(&max), unsafe.Pointer(&val), unsafe.Pointer(&space), unsafe.Pointer(&upsideDown), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::sliderPositionFromValue(int,int,int,int,bool)
func (q *QStyle) SliderPositionFromValue(min int32, max int32, val int32, space int32, upsideDown bool) int32 {
	var __rv int32
	q.Drv(359000, 359112, unsafe.Pointer(&min), unsafe.Pointer(&max), unsafe.Pointer(&val), unsafe.Pointer(&space), unsafe.Pointer(&upsideDown), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::sliderValueFromPosition(int,int,int,int,bool)
func QStyleSliderValueFromPosition(min int32, max int32, pos int32, space int32, upsideDown bool) int32 {
	var __rv int32
	DirectQtDrv(nil, 359000, 359113, unsafe.Pointer(&min), unsafe.Pointer(&max), unsafe.Pointer(&pos), unsafe.Pointer(&space), unsafe.Pointer(&upsideDown), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::sliderValueFromPosition(int,int,int,int,bool)
func (q *QStyle) SliderValueFromPosition(min int32, max int32, pos int32, space int32, upsideDown bool) int32 {
	var __rv int32
	q.Drv(359000, 359113, unsafe.Pointer(&min), unsafe.Pointer(&max), unsafe.Pointer(&pos), unsafe.Pointer(&space), unsafe.Pointer(&upsideDown), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::standardIcon(QStyle::StandardPixmap)
func (q *QStyle) StandardIcon(standardIcon QStyle_StandardPixmap) *QIcon {
	var __rv uintptr
	q.Drv(359000, 359114, unsafe.Pointer(&standardIcon), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QStyle::standardPalette()
func (q *QStyle) StandardPalette() *QPalette {
	var __rv uintptr
	q.Drv(359000, 359115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QStyle::standardPixmap(QStyle::StandardPixmap)
func (q *QStyle) StandardPixmap(standardPixmap QStyle_StandardPixmap) *QPixmap {
	var __rv uintptr
	q.Drv(359000, 359116, unsafe.Pointer(&standardPixmap), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QStyle::styleHint(QStyle::StyleHint)
func (q *QStyle) StyleHint(stylehint QStyle_StyleHint) int32 {
	var __rv int32
	q.Drv(359000, 359117, unsafe.Pointer(&stylehint), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::unpolish(QApplication*)
func (q *QStyle) Unpolish(value *QApplication) {
	q.Drv(359000, 359118, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::unpolish(QWidget*)
func (q *QStyle) UnpolishWithWidget(value QWidgetInterface) {
	q.Drv(359000, 359119, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QStyle::visualAlignment(Qt::LayoutDirection,QFlags<Qt::AlignmentFlag>)
func QStyleVisualAlignment(direction Qt_LayoutDirection, alignment Qt_AlignmentFlag) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	DirectQtDrv(nil, 359000, 359120, unsafe.Pointer(&direction), unsafe.Pointer(&alignment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::visualAlignment(Qt::LayoutDirection,QFlags<Qt::AlignmentFlag>)
func (q *QStyle) VisualAlignment(direction Qt_LayoutDirection, alignment Qt_AlignmentFlag) Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(359000, 359120, unsafe.Pointer(&direction), unsafe.Pointer(&alignment), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QStyle::visualPos(Qt::LayoutDirection,QRect const&,QPoint const&)
func QStyleVisualPos(direction Qt_LayoutDirection, boundingRect *QRect, logicalPos *QPoint) *QPoint {
	var __rv uintptr
	DirectQtDrv(nil, 359000, 359121, unsafe.Pointer(&direction), Native(boundingRect), Native(logicalPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QStyle::visualPos(Qt::LayoutDirection,QRect const&,QPoint const&)
func (q *QStyle) VisualPos(direction Qt_LayoutDirection, boundingRect *QRect, logicalPos *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(359000, 359121, unsafe.Pointer(&direction), Native(boundingRect), Native(logicalPos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QStyle::visualRect(Qt::LayoutDirection,QRect const&,QRect const&)
func QStyleVisualRect(direction Qt_LayoutDirection, boundingRect *QRect, logicalRect *QRect) *QRect {
	var __rv uintptr
	DirectQtDrv(nil, 359000, 359122, unsafe.Pointer(&direction), Native(boundingRect), Native(logicalRect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QStyle::visualRect(Qt::LayoutDirection,QRect const&,QRect const&)
func (q *QStyle) VisualRect(direction Qt_LayoutDirection, boundingRect *QRect, logicalRect *QRect) *QRect {
	var __rv uintptr
	q.Drv(359000, 359122, unsafe.Pointer(&direction), Native(boundingRect), Native(logicalRect), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//struct QStyledItemDelegate : QStyledItemDelegate
type QStyledItemDelegate struct {
	QAbstractItemDelegate
}

// New QStyledItemDelegate from driver
func NewStyledItemDelegateFromDriver(drv Driver) *QStyledItemDelegate {
	_p := &QStyledItemDelegate{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QStyledItemDelegate::QStyledItemDelegate()
func NewStyledItemDelegate() *QStyledItemDelegate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 360000, 360102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyledItemDelegate{}
	_p.SetDriver(__rv, 360000, false)
	return _p
}

//QStyledItemDelegate::QStyledItemDelegate(QObject*)
func NewStyledItemDelegateWithParent(parent QObjectInterface) *QStyledItemDelegate {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 360000, 360103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QStyledItemDelegate{}
	_p.SetDriver(__rv, 360000, false)
	return _p
}

//QStyledItemDelegate::displayText(QVariant const&,QLocale const&)
func (q *QStyledItemDelegate) DisplayText(value *QVariant, locale *QLocale) string {
	var __rv C.string_head
	q.Drv(360000, 360104, Native(value), Native(locale), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QStyledItemDelegate::itemEditorFactory()
func (q *QStyledItemDelegate) ItemEditorFactory() *QItemEditorFactory {
	var __rv uintptr
	q.Drv(360000, 360105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QItemEditorFactory{}
	_rp.SetDriver(__rv, 62000, true)
	return _rp
}

//QStyledItemDelegate::setItemEditorFactory(QItemEditorFactory*)
func (q *QStyledItemDelegate) SetItemEditorFactory(factory *QItemEditorFactory) {
	q.Drv(360000, 360106, Native(factory), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QSwipeGesture_SwipeDirection - QSwipeGesture::SwipeDirection
type QSwipeGesture_SwipeDirection uint32

const (
	QSwipeGesture_NoDirection QSwipeGesture_SwipeDirection = 0
	QSwipeGesture_Left        QSwipeGesture_SwipeDirection = 1
	QSwipeGesture_Right       QSwipeGesture_SwipeDirection = 2
	QSwipeGesture_Up          QSwipeGesture_SwipeDirection = 3
	QSwipeGesture_Down        QSwipeGesture_SwipeDirection = 4
)

//struct QSwipeGesture : QSwipeGesture
type QSwipeGesture struct {
	QGesture
}

// New QSwipeGesture from driver
func NewSwipeGestureFromDriver(drv Driver) *QSwipeGesture {
	_p := &QSwipeGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QSwipeGesture::QSwipeGesture()
func NewSwipeGesture() *QSwipeGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 361000, 361102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSwipeGesture{}
	_p.SetDriver(__rv, 361000, false)
	return _p
}

//QSwipeGesture::QSwipeGesture(QObject*)
func NewSwipeGestureWithParent(parent QObjectInterface) *QSwipeGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 361000, 361103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSwipeGesture{}
	_p.SetDriver(__rv, 361000, false)
	return _p
}

//QSwipeGesture::horizontalDirection()
func (q *QSwipeGesture) HorizontalDirection() QSwipeGesture_SwipeDirection {
	var __rv QSwipeGesture_SwipeDirection
	q.Drv(361000, 361104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSwipeGesture::setSwipeAngle(double)
func (q *QSwipeGesture) SetSwipeAngle(value float64) {
	q.Drv(361000, 361105, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSwipeGesture::swipeAngle()
func (q *QSwipeGesture) SwipeAngle() float64 {
	var __rv float64
	q.Drv(361000, 361106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSwipeGesture::verticalDirection()
func (q *QSwipeGesture) VerticalDirection() QSwipeGesture_SwipeDirection {
	var __rv QSwipeGesture_SwipeDirection
	q.Drv(361000, 361107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QSyntaxHighlighter : QSyntaxHighlighter
type QSyntaxHighlighter struct {
	QObject
}

//QSyntaxHighlighter::currentBlock()
func (q *QSyntaxHighlighter) CurrentBlock() *QTextBlock {
	var __rv uintptr
	q.Drv(362000, 362102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QSyntaxHighlighter::currentBlockState()
func (q *QSyntaxHighlighter) CurrentBlockState() int32 {
	var __rv int32
	q.Drv(362000, 362103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSyntaxHighlighter::currentBlockUserData()
func (q *QSyntaxHighlighter) CurrentBlockUserData() *QTextBlockUserData {
	var __rv uintptr
	q.Drv(362000, 362104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlockUserData{}
	_rp.SetDriver(__rv, 142000, true)
	return _rp
}

//QSyntaxHighlighter::document()
func (q *QSyntaxHighlighter) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(362000, 362105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QSyntaxHighlighter::format(int)
func (q *QSyntaxHighlighter) Format(pos int32) *QTextCharFormat {
	var __rv uintptr
	q.Drv(362000, 362106, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QSyntaxHighlighter::highlightBlock(QString const&)
func (q *QSyntaxHighlighter) HighlightBlock(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(362000, 362107, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::previousBlockState()
func (q *QSyntaxHighlighter) PreviousBlockState() int32 {
	var __rv int32
	q.Drv(362000, 362108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSyntaxHighlighter::rehighlight()
func (q *QSyntaxHighlighter) Rehighlight() {
	q.Drv(362000, 362109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::rehighlightBlock(QTextBlock const&)
func (q *QSyntaxHighlighter) RehighlightBlock(block *QTextBlock) {
	q.Drv(362000, 362110, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setCurrentBlockState(int)
func (q *QSyntaxHighlighter) SetCurrentBlockState(newState int32) {
	q.Drv(362000, 362111, unsafe.Pointer(&newState), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setCurrentBlockUserData(QTextBlockUserData*)
func (q *QSyntaxHighlighter) SetCurrentBlockUserData(data *QTextBlockUserData) {
	q.Drv(362000, 362112, Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setDocument(QTextDocument*)
func (q *QSyntaxHighlighter) SetDocument(doc *QTextDocument) {
	q.Drv(362000, 362113, Native(doc), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setFormat(int,int,QColor const&)
func (q *QSyntaxHighlighter) SetFormat(start int32, count int32, color *QColor) {
	q.Drv(362000, 362114, unsafe.Pointer(&start), unsafe.Pointer(&count), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setFormat(int,int,QFont const&)
func (q *QSyntaxHighlighter) SetFormatWithStartCountFont(start int32, count int32, font *QFont) {
	q.Drv(362000, 362115, unsafe.Pointer(&start), unsafe.Pointer(&count), Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSyntaxHighlighter::setFormat(int,int,QTextCharFormat const&)
func (q *QSyntaxHighlighter) SetFormatWithStartCountFormat(start int32, count int32, format *QTextCharFormat) {
	q.Drv(362000, 362116, unsafe.Pointer(&start), unsafe.Pointer(&count), Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QSyntaxHighlighterHook : QSyntaxHighlighterHook
type QSyntaxHighlighterHook struct {
	QSyntaxHighlighter
}

// New QSyntaxHighlighterHook from driver
func NewSyntaxHighlighterHookFromDriver(drv Driver) *QSyntaxHighlighterHook {
	_p := &QSyntaxHighlighterHook{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSyntaxHighlighterHook) OnHighlightBlock(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(363000, 363102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSyntaxHighlighterHook::QSyntaxHighlighterHook(QObject*)
func NewSyntaxHighlighterHook(parent QObjectInterface) *QSyntaxHighlighterHook {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 363000, 363103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSyntaxHighlighterHook{}
	_p.SetDriver(__rv, 363000, false)
	return _p
}

//QSyntaxHighlighterHook::QSyntaxHighlighterHook(QTextDocument*)
func NewSyntaxHighlighterHookWithDoc(doc *QTextDocument) *QSyntaxHighlighterHook {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 363000, 363104, Native(doc), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSyntaxHighlighterHook{}
	_p.SetDriver(__rv, 363000, false)
	return _p
}

//QSyntaxHighlighterHook::QSyntaxHighlighterHook(QTextEdit*)
func NewSyntaxHighlighterHookWithEdit(edit *QTextEdit) *QSyntaxHighlighterHook {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 363000, 363105, Native(edit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSyntaxHighlighterHook{}
	_p.SetDriver(__rv, 363000, false)
	return _p
}

//enum QSystemTrayIcon_MessageIcon - QSystemTrayIcon::MessageIcon
type QSystemTrayIcon_MessageIcon uint32

const (
	QSystemTrayIcon_NoIcon      QSystemTrayIcon_MessageIcon = 0
	QSystemTrayIcon_Information QSystemTrayIcon_MessageIcon = 1
	QSystemTrayIcon_Warning     QSystemTrayIcon_MessageIcon = 2
	QSystemTrayIcon_Critical    QSystemTrayIcon_MessageIcon = 3
)

//enum QSystemTrayIcon_ActivationReason - QSystemTrayIcon::ActivationReason
type QSystemTrayIcon_ActivationReason uint32

const (
	QSystemTrayIcon_Unknown     QSystemTrayIcon_ActivationReason = 0
	QSystemTrayIcon_Context     QSystemTrayIcon_ActivationReason = 1
	QSystemTrayIcon_DoubleClick QSystemTrayIcon_ActivationReason = 2
	QSystemTrayIcon_Trigger     QSystemTrayIcon_ActivationReason = 3
	QSystemTrayIcon_MiddleClick QSystemTrayIcon_ActivationReason = 4
)

//struct QSystemTrayIcon : QSystemTrayIcon
type QSystemTrayIcon struct {
	QObject
}

// New QSystemTrayIcon from driver
func NewSystemTrayIconFromDriver(drv Driver) *QSystemTrayIcon {
	_p := &QSystemTrayIcon{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QSystemTrayIcon) OnMessageClicked(fn func()) uintptr {
	var __rv uintptr
	q.Drv(364000, 364102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QSystemTrayIcon) OnActivated(fn func(QSystemTrayIcon_ActivationReason)) uintptr {
	var __rv uintptr
	q.Drv(364000, 364103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QSystemTrayIcon::QSystemTrayIcon()
func NewSystemTrayIcon() *QSystemTrayIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 364000, 364104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSystemTrayIcon{}
	_p.SetDriver(__rv, 364000, false)
	return _p
}

//QSystemTrayIcon::QSystemTrayIcon(QObject*)
func NewSystemTrayIconWithParent(parent QObjectInterface) *QSystemTrayIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 364000, 364105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSystemTrayIcon{}
	_p.SetDriver(__rv, 364000, false)
	return _p
}

//QSystemTrayIcon::QSystemTrayIcon(QIcon const&,QObject*)
func NewSystemTrayIconWithIconParent(icon *QIcon, parent QObjectInterface) *QSystemTrayIcon {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 364000, 364106, Native(icon), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QSystemTrayIcon{}
	_p.SetDriver(__rv, 364000, false)
	return _p
}

//QSystemTrayIcon::contextMenu()
func (q *QSystemTrayIcon) ContextMenu() *QMenu {
	var __rv uintptr
	q.Drv(364000, 364107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QSystemTrayIcon::geometry()
func (q *QSystemTrayIcon) Geometry() *QRect {
	var __rv uintptr
	q.Drv(364000, 364108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QSystemTrayIcon::hide()
func (q *QSystemTrayIcon) Hide() {
	q.Drv(364000, 364109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::icon()
func (q *QSystemTrayIcon) Icon() *QIcon {
	var __rv uintptr
	q.Drv(364000, 364110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QSystemTrayIcon::isSystemTrayAvailable()
func QSystemTrayIconIsSystemTrayAvailable() bool {
	var __rv bool
	DirectQtDrv(nil, 364000, 364111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSystemTrayIcon::isSystemTrayAvailable()
func (q *QSystemTrayIcon) IsSystemTrayAvailable() bool {
	var __rv bool
	q.Drv(364000, 364111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSystemTrayIcon::isVisible()
func (q *QSystemTrayIcon) IsVisible() bool {
	var __rv bool
	q.Drv(364000, 364112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSystemTrayIcon::setContextMenu(QMenu*)
func (q *QSystemTrayIcon) SetContextMenu(menu *QMenu) {
	q.Drv(364000, 364113, Native(menu), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::setIcon(QIcon const&)
func (q *QSystemTrayIcon) SetIcon(icon *QIcon) {
	q.Drv(364000, 364114, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::setToolTip(QString const&)
func (q *QSystemTrayIcon) SetToolTip(tip string) {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	q.Drv(364000, 364115, unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::setVisible(bool)
func (q *QSystemTrayIcon) SetVisible(visible bool) {
	q.Drv(364000, 364116, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::show()
func (q *QSystemTrayIcon) Show() {
	q.Drv(364000, 364117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::showMessage(QString const&,QString const&,QSystemTrayIcon::MessageIcon,int)
func (q *QSystemTrayIcon) ShowMessage(title string, msg string, icon QSystemTrayIcon_MessageIcon, msecs int32) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	_msg := NewCStringHead(msg)
	defer FreeCStringHead(_msg)
	q.Drv(364000, 364118, unsafe.Pointer(_title), unsafe.Pointer(_msg), unsafe.Pointer(&icon), unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QSystemTrayIcon::supportsMessages()
func QSystemTrayIconSupportsMessages() bool {
	var __rv bool
	DirectQtDrv(nil, 364000, 364119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSystemTrayIcon::supportsMessages()
func (q *QSystemTrayIcon) SupportsMessages() bool {
	var __rv bool
	q.Drv(364000, 364119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QSystemTrayIcon::toolTip()
func (q *QSystemTrayIcon) ToolTip() string {
	var __rv C.string_head
	q.Drv(364000, 364120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//enum QTabBar_SelectionBehavior - QTabBar::SelectionBehavior
type QTabBar_SelectionBehavior uint32

const (
	QTabBar_SelectLeftTab     QTabBar_SelectionBehavior = 0
	QTabBar_SelectRightTab    QTabBar_SelectionBehavior = 1
	QTabBar_SelectPreviousTab QTabBar_SelectionBehavior = 2
)

//enum QTabBar_ButtonPosition - QTabBar::ButtonPosition
type QTabBar_ButtonPosition uint32

const (
	QTabBar_LeftSide  QTabBar_ButtonPosition = 0
	QTabBar_RightSide QTabBar_ButtonPosition = 1
)

//enum QTabBar_Shape - QTabBar::Shape
type QTabBar_Shape uint32

const (
	QTabBar_RoundedNorth    QTabBar_Shape = 0
	QTabBar_RoundedSouth    QTabBar_Shape = 1
	QTabBar_RoundedWest     QTabBar_Shape = 2
	QTabBar_RoundedEast     QTabBar_Shape = 3
	QTabBar_TriangularNorth QTabBar_Shape = 4
	QTabBar_TriangularSouth QTabBar_Shape = 5
	QTabBar_TriangularWest  QTabBar_Shape = 6
	QTabBar_TriangularEast  QTabBar_Shape = 7
)

//struct QTabBar : QTabBar
type QTabBar struct {
	QWidget
}

// New QTabBar from driver
func NewTabBarFromDriver(drv Driver) *QTabBar {
	_p := &QTabBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTabBar) OnTabMoved(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(365000, 365102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTabBar) OnCurrentChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(365000, 365103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTabBar) OnTabCloseRequested(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(365000, 365104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTabBar::QTabBar()
func NewTabBar() *QTabBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 365000, 365105, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTabBar{}
	_p.SetDriver(__rv, 365000, false)
	return _p
}

//QTabBar::QTabBar(QWidget*)
func NewTabBarWithParent(parent QWidgetInterface) *QTabBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 365000, 365106, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTabBar{}
	_p.SetDriver(__rv, 365000, false)
	return _p
}

//QTabBar::addTab(QString const&)
func (q *QTabBar) AddTab(text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(365000, 365107, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::addTab(QIcon const&,QString const&)
func (q *QTabBar) AddTabWithIconText(icon *QIcon, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(365000, 365108, Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::count()
func (q *QTabBar) Count() int32 {
	var __rv int32
	q.Drv(365000, 365109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::currentIndex()
func (q *QTabBar) CurrentIndex() int32 {
	var __rv int32
	q.Drv(365000, 365110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::documentMode()
func (q *QTabBar) DocumentMode() bool {
	var __rv bool
	q.Drv(365000, 365111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::drawBase()
func (q *QTabBar) DrawBase() bool {
	var __rv bool
	q.Drv(365000, 365112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::elideMode()
func (q *QTabBar) ElideMode() Qt_TextElideMode {
	var __rv Qt_TextElideMode
	q.Drv(365000, 365113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::expanding()
func (q *QTabBar) Expanding() bool {
	var __rv bool
	q.Drv(365000, 365114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::iconSize()
func (q *QTabBar) IconSize() *QSize {
	var __rv uintptr
	q.Drv(365000, 365115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QTabBar::insertTab(int,QString const&)
func (q *QTabBar) InsertTabWithIndexText(index int32, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(365000, 365116, unsafe.Pointer(&index), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::insertTab(int,QIcon const&,QString const&)
func (q *QTabBar) InsertTabWithIndexIconText(index int32, icon *QIcon, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(365000, 365117, unsafe.Pointer(&index), Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::isMovable()
func (q *QTabBar) IsMovable() bool {
	var __rv bool
	q.Drv(365000, 365118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::isTabEnabled(int)
func (q *QTabBar) IsTabEnabled(index int32) bool {
	var __rv bool
	q.Drv(365000, 365119, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::moveTab(int,int)
func (q *QTabBar) MoveTab(from int32, to int32) {
	q.Drv(365000, 365120, unsafe.Pointer(&from), unsafe.Pointer(&to), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::removeTab(int)
func (q *QTabBar) RemoveTab(index int32) {
	q.Drv(365000, 365121, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::selectionBehaviorOnRemove()
func (q *QTabBar) SelectionBehaviorOnRemove() QTabBar_SelectionBehavior {
	var __rv QTabBar_SelectionBehavior
	q.Drv(365000, 365122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::setCurrentIndex(int)
func (q *QTabBar) SetCurrentIndex(index int32) {
	q.Drv(365000, 365123, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setDocumentMode(bool)
func (q *QTabBar) SetDocumentMode(set bool) {
	q.Drv(365000, 365124, unsafe.Pointer(&set), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setDrawBase(bool)
func (q *QTabBar) SetDrawBase(drawTheBase bool) {
	q.Drv(365000, 365125, unsafe.Pointer(&drawTheBase), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setElideMode(Qt::TextElideMode)
func (q *QTabBar) SetElideMode(value Qt_TextElideMode) {
	q.Drv(365000, 365126, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setExpanding(bool)
func (q *QTabBar) SetExpanding(enabled bool) {
	q.Drv(365000, 365127, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setIconSize(QSize const&)
func (q *QTabBar) SetIconSize(size *QSize) {
	q.Drv(365000, 365128, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setMovable(bool)
func (q *QTabBar) SetMovable(movable bool) {
	q.Drv(365000, 365129, unsafe.Pointer(&movable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setSelectionBehaviorOnRemove(QTabBar::SelectionBehavior)
func (q *QTabBar) SetSelectionBehaviorOnRemove(behavior QTabBar_SelectionBehavior) {
	q.Drv(365000, 365130, unsafe.Pointer(&behavior), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setShape(QTabBar::Shape)
func (q *QTabBar) SetShape(shape QTabBar_Shape) {
	q.Drv(365000, 365131, unsafe.Pointer(&shape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabButton(int,QTabBar::ButtonPosition,QWidget*)
func (q *QTabBar) SetTabButton(index int32, position QTabBar_ButtonPosition, widget QWidgetInterface) {
	q.Drv(365000, 365132, unsafe.Pointer(&index), unsafe.Pointer(&position), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabData(int,QVariant const&)
func (q *QTabBar) SetTabData(index int32, data *QVariant) {
	q.Drv(365000, 365133, unsafe.Pointer(&index), Native(data), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabEnabled(int,bool)
func (q *QTabBar) SetTabEnabled(index int32, value2 bool) {
	q.Drv(365000, 365134, unsafe.Pointer(&index), unsafe.Pointer(&value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabIcon(int,QIcon const&)
func (q *QTabBar) SetTabIcon(index int32, icon *QIcon) {
	q.Drv(365000, 365135, unsafe.Pointer(&index), Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabText(int,QString const&)
func (q *QTabBar) SetTabText(index int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(365000, 365136, unsafe.Pointer(&index), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabTextColor(int,QColor const&)
func (q *QTabBar) SetTabTextColor(index int32, color *QColor) {
	q.Drv(365000, 365137, unsafe.Pointer(&index), Native(color), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabToolTip(int,QString const&)
func (q *QTabBar) SetTabToolTip(index int32, tip string) {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	q.Drv(365000, 365138, unsafe.Pointer(&index), unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabWhatsThis(int,QString const&)
func (q *QTabBar) SetTabWhatsThis(index int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(365000, 365139, unsafe.Pointer(&index), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setTabsClosable(bool)
func (q *QTabBar) SetTabsClosable(closable bool) {
	q.Drv(365000, 365140, unsafe.Pointer(&closable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::setUsesScrollButtons(bool)
func (q *QTabBar) SetUsesScrollButtons(useButtons bool) {
	q.Drv(365000, 365141, unsafe.Pointer(&useButtons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::shape()
func (q *QTabBar) Shape() QTabBar_Shape {
	var __rv QTabBar_Shape
	q.Drv(365000, 365142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::tabAt(QPoint const&)
func (q *QTabBar) TabAt(pos *QPoint) int32 {
	var __rv int32
	q.Drv(365000, 365143, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::tabButton(int,QTabBar::ButtonPosition)
func (q *QTabBar) TabButton(index int32, position QTabBar_ButtonPosition) *QWidget {
	var __rv uintptr
	q.Drv(365000, 365144, unsafe.Pointer(&index), unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTabBar::tabData(int)
func (q *QTabBar) TabData(index int32) *QVariant {
	var __rv uintptr
	q.Drv(365000, 365145, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTabBar::tabIcon(int)
func (q *QTabBar) TabIcon(index int32) *QIcon {
	var __rv uintptr
	q.Drv(365000, 365146, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QTabBar::tabInserted(int)
func (q *QTabBar) TabInserted(index int32) {
	q.Drv(365000, 365147, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::tabLayoutChange()
func (q *QTabBar) TabLayoutChange() {
	q.Drv(365000, 365148, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::tabRect(int)
func (q *QTabBar) TabRect(index int32) *QRect {
	var __rv uintptr
	q.Drv(365000, 365149, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QTabBar::tabRemoved(int)
func (q *QTabBar) TabRemoved(index int32) {
	q.Drv(365000, 365150, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabBar::tabSizeHint(int)
func (q *QTabBar) TabSizeHint(index int32) *QSize {
	var __rv uintptr
	q.Drv(365000, 365151, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QTabBar::tabText(int)
func (q *QTabBar) TabText(index int32) string {
	var __rv C.string_head
	q.Drv(365000, 365152, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabBar::tabTextColor(int)
func (q *QTabBar) TabTextColor(index int32) *QColor {
	var __rv uintptr
	q.Drv(365000, 365153, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTabBar::tabToolTip(int)
func (q *QTabBar) TabToolTip(index int32) string {
	var __rv C.string_head
	q.Drv(365000, 365154, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabBar::tabWhatsThis(int)
func (q *QTabBar) TabWhatsThis(index int32) string {
	var __rv C.string_head
	q.Drv(365000, 365155, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabBar::tabsClosable()
func (q *QTabBar) TabsClosable() bool {
	var __rv bool
	q.Drv(365000, 365156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabBar::usesScrollButtons()
func (q *QTabBar) UsesScrollButtons() bool {
	var __rv bool
	q.Drv(365000, 365157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTabWidget_TabShape - QTabWidget::TabShape
type QTabWidget_TabShape uint32

const (
	QTabWidget_Rounded    QTabWidget_TabShape = 0
	QTabWidget_Triangular QTabWidget_TabShape = 1
)

//enum QTabWidget_TabPosition - QTabWidget::TabPosition
type QTabWidget_TabPosition uint32

const (
	QTabWidget_North QTabWidget_TabPosition = 0
	QTabWidget_South QTabWidget_TabPosition = 1
	QTabWidget_West  QTabWidget_TabPosition = 2
	QTabWidget_East  QTabWidget_TabPosition = 3
)

//struct QTabWidget : QTabWidget
type QTabWidget struct {
	QWidget
}

// New QTabWidget from driver
func NewTabWidgetFromDriver(drv Driver) *QTabWidget {
	_p := &QTabWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTabWidget) OnCurrentChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(366000, 366102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTabWidget) OnTabCloseRequested(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(366000, 366103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTabWidget::QTabWidget()
func NewTabWidget() *QTabWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 366000, 366104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTabWidget{}
	_p.SetDriver(__rv, 366000, false)
	return _p
}

//QTabWidget::QTabWidget(QWidget*)
func NewTabWidgetWithParent(parent QWidgetInterface) *QTabWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 366000, 366105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTabWidget{}
	_p.SetDriver(__rv, 366000, false)
	return _p
}

//QTabWidget::addTab(QWidget*,QString const&)
func (q *QTabWidget) AddTabWithWidgetString(widget QWidgetInterface, value2 string) int32 {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	var __rv int32
	q.Drv(366000, 366106, Native(widget), unsafe.Pointer(_value2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::addTab(QWidget*,QIcon const&,QString const&)
func (q *QTabWidget) AddTabWithWidgetIconLabel(widget QWidgetInterface, icon *QIcon, label string) int32 {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv int32
	q.Drv(366000, 366107, Native(widget), Native(icon), unsafe.Pointer(_label), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::clear()
func (q *QTabWidget) Clear() {
	q.Drv(366000, 366108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::cornerWidget()
func (q *QTabWidget) CornerWidget() *QWidget {
	var __rv uintptr
	q.Drv(366000, 366109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTabWidget::cornerWidget(Qt::Corner)
func (q *QTabWidget) CornerWidgetWithCorner(corner Qt_Corner) *QWidget {
	var __rv uintptr
	q.Drv(366000, 366110, unsafe.Pointer(&corner), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTabWidget::count()
func (q *QTabWidget) Count() int32 {
	var __rv int32
	q.Drv(366000, 366111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::currentIndex()
func (q *QTabWidget) CurrentIndex() int32 {
	var __rv int32
	q.Drv(366000, 366112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::currentWidget()
func (q *QTabWidget) CurrentWidget() *QWidget {
	var __rv uintptr
	q.Drv(366000, 366113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTabWidget::documentMode()
func (q *QTabWidget) DocumentMode() bool {
	var __rv bool
	q.Drv(366000, 366114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::elideMode()
func (q *QTabWidget) ElideMode() Qt_TextElideMode {
	var __rv Qt_TextElideMode
	q.Drv(366000, 366115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::iconSize()
func (q *QTabWidget) IconSize() *QSize {
	var __rv uintptr
	q.Drv(366000, 366116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QTabWidget::indexOf(QWidget*)
func (q *QTabWidget) IndexOf(widget QWidgetInterface) int32 {
	var __rv int32
	q.Drv(366000, 366117, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::insertTab(int,QWidget*,QString const&)
func (q *QTabWidget) InsertTabWithIndexWidgetString(index int32, widget QWidgetInterface, value2 string) int32 {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	var __rv int32
	q.Drv(366000, 366118, unsafe.Pointer(&index), Native(widget), unsafe.Pointer(_value2), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::insertTab(int,QWidget*,QIcon const&,QString const&)
func (q *QTabWidget) InsertTabWithIndexWidgetIconLabel(index int32, widget QWidgetInterface, icon *QIcon, label string) int32 {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	var __rv int32
	q.Drv(366000, 366119, unsafe.Pointer(&index), Native(widget), Native(icon), unsafe.Pointer(_label), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::isMovable()
func (q *QTabWidget) IsMovable() bool {
	var __rv bool
	q.Drv(366000, 366120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::isTabEnabled(int)
func (q *QTabWidget) IsTabEnabled(index int32) bool {
	var __rv bool
	q.Drv(366000, 366121, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::removeTab(int)
func (q *QTabWidget) RemoveTab(index int32) {
	q.Drv(366000, 366122, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setCornerWidget(QWidget*)
func (q *QTabWidget) SetCornerWidget(w QWidgetInterface) {
	q.Drv(366000, 366123, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setCornerWidget(QWidget*,Qt::Corner)
func (q *QTabWidget) SetCornerWidgetWithWidgetCorner(w QWidgetInterface, corner Qt_Corner) {
	q.Drv(366000, 366124, Native(w), unsafe.Pointer(&corner), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setCurrentIndex(int)
func (q *QTabWidget) SetCurrentIndex(index int32) {
	q.Drv(366000, 366125, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setCurrentWidget(QWidget*)
func (q *QTabWidget) SetCurrentWidget(widget QWidgetInterface) {
	q.Drv(366000, 366126, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setDocumentMode(bool)
func (q *QTabWidget) SetDocumentMode(set bool) {
	q.Drv(366000, 366127, unsafe.Pointer(&set), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setElideMode(Qt::TextElideMode)
func (q *QTabWidget) SetElideMode(value Qt_TextElideMode) {
	q.Drv(366000, 366128, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setIconSize(QSize const&)
func (q *QTabWidget) SetIconSize(size *QSize) {
	q.Drv(366000, 366129, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setMovable(bool)
func (q *QTabWidget) SetMovable(movable bool) {
	q.Drv(366000, 366130, unsafe.Pointer(&movable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabBar(QTabBar*)
func (q *QTabWidget) SetTabBar(value *QTabBar) {
	q.Drv(366000, 366131, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabEnabled(int,bool)
func (q *QTabWidget) SetTabEnabled(index int32, value2 bool) {
	q.Drv(366000, 366132, unsafe.Pointer(&index), unsafe.Pointer(&value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabIcon(int,QIcon const&)
func (q *QTabWidget) SetTabIcon(index int32, icon *QIcon) {
	q.Drv(366000, 366133, unsafe.Pointer(&index), Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabPosition(QTabWidget::TabPosition)
func (q *QTabWidget) SetTabPosition(value QTabWidget_TabPosition) {
	q.Drv(366000, 366134, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabShape(QTabWidget::TabShape)
func (q *QTabWidget) SetTabShape(s QTabWidget_TabShape) {
	q.Drv(366000, 366135, unsafe.Pointer(&s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabText(int,QString const&)
func (q *QTabWidget) SetTabText(index int32, value2 string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	q.Drv(366000, 366136, unsafe.Pointer(&index), unsafe.Pointer(_value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabToolTip(int,QString const&)
func (q *QTabWidget) SetTabToolTip(index int32, tip string) {
	_tip := NewCStringHead(tip)
	defer FreeCStringHead(_tip)
	q.Drv(366000, 366137, unsafe.Pointer(&index), unsafe.Pointer(_tip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabWhatsThis(int,QString const&)
func (q *QTabWidget) SetTabWhatsThis(index int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(366000, 366138, unsafe.Pointer(&index), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setTabsClosable(bool)
func (q *QTabWidget) SetTabsClosable(closeable bool) {
	q.Drv(366000, 366139, unsafe.Pointer(&closeable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::setUsesScrollButtons(bool)
func (q *QTabWidget) SetUsesScrollButtons(useButtons bool) {
	q.Drv(366000, 366140, unsafe.Pointer(&useButtons), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::tabBar()
func (q *QTabWidget) TabBar() *QTabBar {
	var __rv uintptr
	q.Drv(366000, 366141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTabBar{}
	_rp.SetDriver(__rv, 365000, false)
	return _rp
}

//QTabWidget::tabIcon(int)
func (q *QTabWidget) TabIcon(index int32) *QIcon {
	var __rv uintptr
	q.Drv(366000, 366142, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QTabWidget::tabInserted(int)
func (q *QTabWidget) TabInserted(index int32) {
	q.Drv(366000, 366143, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::tabPosition()
func (q *QTabWidget) TabPosition() QTabWidget_TabPosition {
	var __rv QTabWidget_TabPosition
	q.Drv(366000, 366144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::tabRemoved(int)
func (q *QTabWidget) TabRemoved(index int32) {
	q.Drv(366000, 366145, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTabWidget::tabShape()
func (q *QTabWidget) TabShape() QTabWidget_TabShape {
	var __rv QTabWidget_TabShape
	q.Drv(366000, 366146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::tabText(int)
func (q *QTabWidget) TabText(index int32) string {
	var __rv C.string_head
	q.Drv(366000, 366147, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabWidget::tabToolTip(int)
func (q *QTabWidget) TabToolTip(index int32) string {
	var __rv C.string_head
	q.Drv(366000, 366148, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabWidget::tabWhatsThis(int)
func (q *QTabWidget) TabWhatsThis(index int32) string {
	var __rv C.string_head
	q.Drv(366000, 366149, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTabWidget::tabsClosable()
func (q *QTabWidget) TabsClosable() bool {
	var __rv bool
	q.Drv(366000, 366150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::usesScrollButtons()
func (q *QTabWidget) UsesScrollButtons() bool {
	var __rv bool
	q.Drv(366000, 366151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTabWidget::widget(int)
func (q *QTabWidget) Widget(index int32) *QWidget {
	var __rv uintptr
	q.Drv(366000, 366152, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QTableView : QTableView
type QTableView struct {
	QAbstractItemView
}

// New QTableView from driver
func NewTableViewFromDriver(drv Driver) *QTableView {
	_p := &QTableView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTableView::QTableView()
func NewTableView() *QTableView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 367000, 367102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableView{}
	_p.SetDriver(__rv, 367000, false)
	return _p
}

//QTableView::QTableView(QWidget*)
func NewTableViewWithParent(parent QWidgetInterface) *QTableView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 367000, 367103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableView{}
	_p.SetDriver(__rv, 367000, false)
	return _p
}

//QTableView::clearSpans()
func (q *QTableView) ClearSpans() {
	q.Drv(367000, 367104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::columnAt(int)
func (q *QTableView) ColumnAt(x int32) int32 {
	var __rv int32
	q.Drv(367000, 367105, unsafe.Pointer(&x), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::columnCountChanged(int,int)
func (q *QTableView) ColumnCountChanged(oldCount int32, newCount int32) {
	q.Drv(367000, 367106, unsafe.Pointer(&oldCount), unsafe.Pointer(&newCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::columnMoved(int,int,int)
func (q *QTableView) ColumnMoved(column int32, oldIndex int32, newIndex int32) {
	q.Drv(367000, 367107, unsafe.Pointer(&column), unsafe.Pointer(&oldIndex), unsafe.Pointer(&newIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::columnResized(int,int,int)
func (q *QTableView) ColumnResized(column int32, oldWidth int32, newWidth int32) {
	q.Drv(367000, 367108, unsafe.Pointer(&column), unsafe.Pointer(&oldWidth), unsafe.Pointer(&newWidth), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::columnSpan(int,int)
func (q *QTableView) ColumnSpan(row int32, column int32) int32 {
	var __rv int32
	q.Drv(367000, 367109, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::columnViewportPosition(int)
func (q *QTableView) ColumnViewportPosition(column int32) int32 {
	var __rv int32
	q.Drv(367000, 367110, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::columnWidth(int)
func (q *QTableView) ColumnWidth(column int32) int32 {
	var __rv int32
	q.Drv(367000, 367111, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::gridStyle()
func (q *QTableView) GridStyle() Qt_PenStyle {
	var __rv Qt_PenStyle
	q.Drv(367000, 367112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::hideColumn(int)
func (q *QTableView) HideColumn(column int32) {
	q.Drv(367000, 367113, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::hideRow(int)
func (q *QTableView) HideRow(row int32) {
	q.Drv(367000, 367114, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::horizontalHeader()
func (q *QTableView) HorizontalHeader() *QHeaderView {
	var __rv uintptr
	q.Drv(367000, 367115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QHeaderView{}
	_rp.SetDriver(__rv, 292000, false)
	return _rp
}

//QTableView::isColumnHidden(int)
func (q *QTableView) IsColumnHidden(column int32) bool {
	var __rv bool
	q.Drv(367000, 367116, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::isCornerButtonEnabled()
func (q *QTableView) IsCornerButtonEnabled() bool {
	var __rv bool
	q.Drv(367000, 367117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::isRowHidden(int)
func (q *QTableView) IsRowHidden(row int32) bool {
	var __rv bool
	q.Drv(367000, 367118, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::isSortingEnabled()
func (q *QTableView) IsSortingEnabled() bool {
	var __rv bool
	q.Drv(367000, 367119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::resizeColumnToContents(int)
func (q *QTableView) ResizeColumnToContents(column int32) {
	q.Drv(367000, 367120, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::resizeColumnsToContents()
func (q *QTableView) ResizeColumnsToContents() {
	q.Drv(367000, 367121, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::resizeRowToContents(int)
func (q *QTableView) ResizeRowToContents(row int32) {
	q.Drv(367000, 367122, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::resizeRowsToContents()
func (q *QTableView) ResizeRowsToContents() {
	q.Drv(367000, 367123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::rowAt(int)
func (q *QTableView) RowAt(y int32) int32 {
	var __rv int32
	q.Drv(367000, 367124, unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::rowCountChanged(int,int)
func (q *QTableView) RowCountChanged(oldCount int32, newCount int32) {
	q.Drv(367000, 367125, unsafe.Pointer(&oldCount), unsafe.Pointer(&newCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::rowHeight(int)
func (q *QTableView) RowHeight(row int32) int32 {
	var __rv int32
	q.Drv(367000, 367126, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::rowMoved(int,int,int)
func (q *QTableView) RowMoved(row int32, oldIndex int32, newIndex int32) {
	q.Drv(367000, 367127, unsafe.Pointer(&row), unsafe.Pointer(&oldIndex), unsafe.Pointer(&newIndex), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::rowResized(int,int,int)
func (q *QTableView) RowResized(row int32, oldHeight int32, newHeight int32) {
	q.Drv(367000, 367128, unsafe.Pointer(&row), unsafe.Pointer(&oldHeight), unsafe.Pointer(&newHeight), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::rowSpan(int,int)
func (q *QTableView) RowSpan(row int32, column int32) int32 {
	var __rv int32
	q.Drv(367000, 367129, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::rowViewportPosition(int)
func (q *QTableView) RowViewportPosition(row int32) int32 {
	var __rv int32
	q.Drv(367000, 367130, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::selectColumn(int)
func (q *QTableView) SelectColumn(column int32) {
	q.Drv(367000, 367131, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::selectRow(int)
func (q *QTableView) SelectRow(row int32) {
	q.Drv(367000, 367132, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setColumnHidden(int,bool)
func (q *QTableView) SetColumnHidden(column int32, hide bool) {
	q.Drv(367000, 367133, unsafe.Pointer(&column), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setColumnWidth(int,int)
func (q *QTableView) SetColumnWidth(column int32, width int32) {
	q.Drv(367000, 367134, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setCornerButtonEnabled(bool)
func (q *QTableView) SetCornerButtonEnabled(enable bool) {
	q.Drv(367000, 367135, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setGridStyle(Qt::PenStyle)
func (q *QTableView) SetGridStyle(style Qt_PenStyle) {
	q.Drv(367000, 367136, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setHorizontalHeader(QHeaderView*)
func (q *QTableView) SetHorizontalHeader(header *QHeaderView) {
	q.Drv(367000, 367137, Native(header), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setRowHeight(int,int)
func (q *QTableView) SetRowHeight(row int32, height int32) {
	q.Drv(367000, 367138, unsafe.Pointer(&row), unsafe.Pointer(&height), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setRowHidden(int,bool)
func (q *QTableView) SetRowHidden(row int32, hide bool) {
	q.Drv(367000, 367139, unsafe.Pointer(&row), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setShowGrid(bool)
func (q *QTableView) SetShowGrid(show bool) {
	q.Drv(367000, 367140, unsafe.Pointer(&show), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setSortingEnabled(bool)
func (q *QTableView) SetSortingEnabled(enable bool) {
	q.Drv(367000, 367141, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setSpan(int,int,int,int)
func (q *QTableView) SetSpan(row int32, column int32, rowSpan int32, columnSpan int32) {
	q.Drv(367000, 367142, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&rowSpan), unsafe.Pointer(&columnSpan), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setVerticalHeader(QHeaderView*)
func (q *QTableView) SetVerticalHeader(header *QHeaderView) {
	q.Drv(367000, 367143, Native(header), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::setWordWrap(bool)
func (q *QTableView) SetWordWrap(on bool) {
	q.Drv(367000, 367144, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::showColumn(int)
func (q *QTableView) ShowColumn(column int32) {
	q.Drv(367000, 367145, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::showGrid()
func (q *QTableView) ShowGrid() bool {
	var __rv bool
	q.Drv(367000, 367146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableView::showRow(int)
func (q *QTableView) ShowRow(row int32) {
	q.Drv(367000, 367147, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::sortByColumn(int)
func (q *QTableView) SortByColumn(column int32) {
	q.Drv(367000, 367148, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::sortByColumn(int,Qt::SortOrder)
func (q *QTableView) SortByColumnWithColumnOrder(column int32, order Qt_SortOrder) {
	q.Drv(367000, 367149, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableView::verticalHeader()
func (q *QTableView) VerticalHeader() *QHeaderView {
	var __rv uintptr
	q.Drv(367000, 367150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QHeaderView{}
	_rp.SetDriver(__rv, 292000, false)
	return _rp
}

//QTableView::wordWrap()
func (q *QTableView) WordWrap() bool {
	var __rv bool
	q.Drv(367000, 367151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTableWidget : QTableWidget
type QTableWidget struct {
	QTableView
}

// New QTableWidget from driver
func NewTableWidgetFromDriver(drv Driver) *QTableWidget {
	_p := &QTableWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTableWidget) OnItemEntered(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCurrentCellChanged(fn func(int32, int32, int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemPressed(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(368000, 368105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellActivated(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellClicked(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellChanged(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellDoubleClicked(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemActivated(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCurrentItemChanged(fn func(*QTableWidgetItem, *QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemDoubleClicked(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368112, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellPressed(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368113, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnCellEntered(fn func(int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368114, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemChanged(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368115, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTableWidget) OnItemClicked(fn func(*QTableWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(368000, 368116, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTableWidget::QTableWidget()
func NewTableWidget() *QTableWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 368000, 368117, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidget{}
	_p.SetDriver(__rv, 368000, false)
	return _p
}

//QTableWidget::QTableWidget(QWidget*)
func NewTableWidgetWithParent(parent QWidgetInterface) *QTableWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 368000, 368118, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidget{}
	_p.SetDriver(__rv, 368000, false)
	return _p
}

//QTableWidget::QTableWidget(int,int,QWidget*)
func NewTableWidgetWithRowsColumnsParent(rows int32, columns int32, parent QWidgetInterface) *QTableWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 368000, 368119, unsafe.Pointer(&rows), unsafe.Pointer(&columns), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTableWidget{}
	_p.SetDriver(__rv, 368000, false)
	return _p
}

//QTableWidget::cellWidget(int,int)
func (q *QTableWidget) CellWidget(row int32, column int32) *QWidget {
	var __rv uintptr
	q.Drv(368000, 368120, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTableWidget::clear()
func (q *QTableWidget) Clear() {
	q.Drv(368000, 368121, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::clearContents()
func (q *QTableWidget) ClearContents() {
	q.Drv(368000, 368122, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::closePersistentEditor(QTableWidgetItem*)
func (q *QTableWidget) ClosePersistentEditor(item *QTableWidgetItem) {
	q.Drv(368000, 368123, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::column(QTableWidgetItem const*)
func (q *QTableWidget) Column(item *QTableWidgetItem) int32 {
	var __rv int32
	q.Drv(368000, 368124, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::columnCount()
func (q *QTableWidget) ColumnCount() int32 {
	var __rv int32
	q.Drv(368000, 368125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::currentColumn()
func (q *QTableWidget) CurrentColumn() int32 {
	var __rv int32
	q.Drv(368000, 368126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::currentItem()
func (q *QTableWidget) CurrentItem() *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::currentRow()
func (q *QTableWidget) CurrentRow() int32 {
	var __rv int32
	q.Drv(368000, 368128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::dropMimeData(int,int,QMimeData const*,Qt::DropAction)
func (q *QTableWidget) DropMimeData(row int32, column int32, data *QMimeData, action Qt_DropAction) bool {
	var __rv bool
	q.Drv(368000, 368129, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(data), unsafe.Pointer(&action), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::editItem(QTableWidgetItem*)
func (q *QTableWidget) EditItem(item *QTableWidgetItem) {
	q.Drv(368000, 368130, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::findItems(QString const&,QFlags<Qt::MatchFlag>)
func (q *QTableWidget) FindItems(text string, flags Qt_MatchFlag) []*QTableWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv []*QTableWidgetItem
	q.Drv(368000, 368131, unsafe.Pointer(_text), unsafe.Pointer(&flags), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::horizontalHeaderItem(int)
func (q *QTableWidget) HorizontalHeaderItem(column int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368132, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::indexFromItem(QTableWidgetItem*)
func (q *QTableWidget) IndexFromItem(item *QTableWidgetItem) *QModelIndex {
	var __rv uintptr
	q.Drv(368000, 368133, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QTableWidget::insertColumn(int)
func (q *QTableWidget) InsertColumn(column int32) {
	q.Drv(368000, 368134, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::insertRow(int)
func (q *QTableWidget) InsertRow(row int32) {
	q.Drv(368000, 368135, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::isItemSelected(QTableWidgetItem const*)
func (q *QTableWidget) IsItemSelected(item *QTableWidgetItem) bool {
	var __rv bool
	q.Drv(368000, 368136, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::isSortingEnabled()
func (q *QTableWidget) IsSortingEnabled() bool {
	var __rv bool
	q.Drv(368000, 368137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::item(int,int)
func (q *QTableWidget) Item(row int32, column int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368138, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::itemAt(QPoint const&)
func (q *QTableWidget) ItemAt(p *QPoint) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368139, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::itemAt(int,int)
func (q *QTableWidget) ItemAtWithXY(x int32, y int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368140, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::itemFromIndex(QModelIndex const&)
func (q *QTableWidget) ItemFromIndex(index *QModelIndex) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368141, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::itemPrototype()
func (q *QTableWidget) ItemPrototype() *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::items(QMimeData const*)
func (q *QTableWidget) Items(data *QMimeData) []*QTableWidgetItem {
	var __rv []*QTableWidgetItem
	q.Drv(368000, 368143, Native(data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::mimeData(QList<QTableWidgetItem*> const)
func (q *QTableWidget) MimeData(items []*QTableWidgetItem) *QMimeData {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	var __rv uintptr
	q.Drv(368000, 368144, unsafe.Pointer(_items), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QTableWidget::mimeTypes()
func (q *QTableWidget) MimeTypes() []string {
	var __rv []string
	q.Drv(368000, 368145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::openPersistentEditor(QTableWidgetItem*)
func (q *QTableWidget) OpenPersistentEditor(item *QTableWidgetItem) {
	q.Drv(368000, 368146, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::removeCellWidget(int,int)
func (q *QTableWidget) RemoveCellWidget(row int32, column int32) {
	q.Drv(368000, 368147, unsafe.Pointer(&row), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::removeColumn(int)
func (q *QTableWidget) RemoveColumn(column int32) {
	q.Drv(368000, 368148, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::removeRow(int)
func (q *QTableWidget) RemoveRow(row int32) {
	q.Drv(368000, 368149, unsafe.Pointer(&row), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::row(QTableWidgetItem const*)
func (q *QTableWidget) Row(item *QTableWidgetItem) int32 {
	var __rv int32
	q.Drv(368000, 368150, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::rowCount()
func (q *QTableWidget) RowCount() int32 {
	var __rv int32
	q.Drv(368000, 368151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::scrollToItem(QTableWidgetItem const*)
func (q *QTableWidget) ScrollToItem(item *QTableWidgetItem) {
	q.Drv(368000, 368152, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::scrollToItem(QTableWidgetItem const*,QAbstractItemView::ScrollHint)
func (q *QTableWidget) ScrollToItemWithItemHint(item *QTableWidgetItem, hint QAbstractItemView_ScrollHint) {
	q.Drv(368000, 368153, Native(item), unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::selectedItems()
func (q *QTableWidget) SelectedItems() []*QTableWidgetItem {
	var __rv []*QTableWidgetItem
	q.Drv(368000, 368154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::selectedRanges()
func (q *QTableWidget) SelectedRanges() []*QTableWidgetSelectionRange {
	var __rv []*QTableWidgetSelectionRange
	q.Drv(368000, 368155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::setCellWidget(int,int,QWidget*)
func (q *QTableWidget) SetCellWidget(row int32, column int32, widget QWidgetInterface) {
	q.Drv(368000, 368156, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setColumnCount(int)
func (q *QTableWidget) SetColumnCount(columns int32) {
	q.Drv(368000, 368157, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setCurrentCell(int,int)
func (q *QTableWidget) SetCurrentCellWithRowColumn(row int32, column int32) {
	q.Drv(368000, 368158, unsafe.Pointer(&row), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setCurrentCell(int,int,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QTableWidget) SetCurrentCellWithRowColumnCommand(row int32, column int32, command QItemSelectionModel_SelectionFlag) {
	q.Drv(368000, 368159, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setCurrentItem(QTableWidgetItem*)
func (q *QTableWidget) SetCurrentItem(item *QTableWidgetItem) {
	q.Drv(368000, 368160, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setCurrentItem(QTableWidgetItem*,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QTableWidget) SetCurrentItemWithItemCommand(item *QTableWidgetItem, command QItemSelectionModel_SelectionFlag) {
	q.Drv(368000, 368161, Native(item), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setHorizontalHeaderItem(int,QTableWidgetItem*)
func (q *QTableWidget) SetHorizontalHeaderItem(column int32, item *QTableWidgetItem) {
	q.Drv(368000, 368162, unsafe.Pointer(&column), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setHorizontalHeaderLabels(QStringList const&)
func (q *QTableWidget) SetHorizontalHeaderLabels(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(368000, 368163, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setItem(int,int,QTableWidgetItem*)
func (q *QTableWidget) SetItem(row int32, column int32, item *QTableWidgetItem) {
	q.Drv(368000, 368164, unsafe.Pointer(&row), unsafe.Pointer(&column), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setItemPrototype(QTableWidgetItem const*)
func (q *QTableWidget) SetItemPrototype(item *QTableWidgetItem) {
	q.Drv(368000, 368165, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setItemSelected(QTableWidgetItem const*,bool)
func (q *QTableWidget) SetItemSelected(item *QTableWidgetItem, _select bool) {
	q.Drv(368000, 368166, Native(item), unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setRangeSelected(QTableWidgetSelectionRange const&,bool)
func (q *QTableWidget) SetRangeSelected(_range *QTableWidgetSelectionRange, _select bool) {
	q.Drv(368000, 368167, Native(_range), unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setRowCount(int)
func (q *QTableWidget) SetRowCount(rows int32) {
	q.Drv(368000, 368168, unsafe.Pointer(&rows), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setSortingEnabled(bool)
func (q *QTableWidget) SetSortingEnabled(enable bool) {
	q.Drv(368000, 368169, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setVerticalHeaderItem(int,QTableWidgetItem*)
func (q *QTableWidget) SetVerticalHeaderItem(row int32, item *QTableWidgetItem) {
	q.Drv(368000, 368170, unsafe.Pointer(&row), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::setVerticalHeaderLabels(QStringList const&)
func (q *QTableWidget) SetVerticalHeaderLabels(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(368000, 368171, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::sortItems(int)
func (q *QTableWidget) SortItems(column int32) {
	q.Drv(368000, 368172, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::sortItems(int,Qt::SortOrder)
func (q *QTableWidget) SortItemsWithColumnOrder(column int32, order Qt_SortOrder) {
	q.Drv(368000, 368173, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTableWidget::supportedDropActions()
func (q *QTableWidget) SupportedDropActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(368000, 368174, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::takeHorizontalHeaderItem(int)
func (q *QTableWidget) TakeHorizontalHeaderItem(column int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368175, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::takeItem(int,int)
func (q *QTableWidget) TakeItem(row int32, column int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368176, unsafe.Pointer(&row), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::takeVerticalHeaderItem(int)
func (q *QTableWidget) TakeVerticalHeaderItem(row int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368177, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::verticalHeaderItem(int)
func (q *QTableWidget) VerticalHeaderItem(row int32) *QTableWidgetItem {
	var __rv uintptr
	q.Drv(368000, 368178, unsafe.Pointer(&row), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTableWidgetItem{}
	_rp.SetDriver(__rv, 136000, true)
	return _rp
}

//QTableWidget::visualColumn(int)
func (q *QTableWidget) VisualColumn(logicalColumn int32) int32 {
	var __rv int32
	q.Drv(368000, 368179, unsafe.Pointer(&logicalColumn), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTableWidget::visualItemRect(QTableWidgetItem const*)
func (q *QTableWidget) VisualItemRect(item *QTableWidgetItem) *QRect {
	var __rv uintptr
	q.Drv(368000, 368180, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QTableWidget::visualRow(int)
func (q *QTableWidget) VisualRow(logicalRow int32) int32 {
	var __rv int32
	q.Drv(368000, 368181, unsafe.Pointer(&logicalRow), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTapAndHoldGesture : QTapAndHoldGesture
type QTapAndHoldGesture struct {
	QGesture
}

// New QTapAndHoldGesture from driver
func NewTapAndHoldGestureFromDriver(drv Driver) *QTapAndHoldGesture {
	_p := &QTapAndHoldGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTapAndHoldGesture::QTapAndHoldGesture()
func NewTapAndHoldGesture() *QTapAndHoldGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 369000, 369102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTapAndHoldGesture{}
	_p.SetDriver(__rv, 369000, false)
	return _p
}

//QTapAndHoldGesture::QTapAndHoldGesture(QObject*)
func NewTapAndHoldGestureWithParent(parent QObjectInterface) *QTapAndHoldGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 369000, 369103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTapAndHoldGesture{}
	_p.SetDriver(__rv, 369000, false)
	return _p
}

//QTapAndHoldGesture::position()
func (q *QTapAndHoldGesture) Position() *QPointF {
	var __rv uintptr
	q.Drv(369000, 369104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTapAndHoldGesture::setPosition(QPointF const&)
func (q *QTapAndHoldGesture) SetPosition(pos *QPointF) {
	q.Drv(369000, 369105, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTapAndHoldGesture::setTimeout(int)
func QTapAndHoldGestureSetTimeout(msecs int32) {
	DirectQtDrv(nil, 369000, 369106, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTapAndHoldGesture::setTimeout(int)
func (q *QTapAndHoldGesture) SetTimeout(msecs int32) {
	q.Drv(369000, 369106, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTapAndHoldGesture::timeout()
func QTapAndHoldGestureTimeout() int32 {
	var __rv int32
	DirectQtDrv(nil, 369000, 369107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTapAndHoldGesture::timeout()
func (q *QTapAndHoldGesture) Timeout() int32 {
	var __rv int32
	q.Drv(369000, 369107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTapGesture : QTapGesture
type QTapGesture struct {
	QGesture
}

// New QTapGesture from driver
func NewTapGestureFromDriver(drv Driver) *QTapGesture {
	_p := &QTapGesture{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTapGesture::QTapGesture()
func NewTapGesture() *QTapGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 370000, 370102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTapGesture{}
	_p.SetDriver(__rv, 370000, false)
	return _p
}

//QTapGesture::QTapGesture(QObject*)
func NewTapGestureWithParent(parent QObjectInterface) *QTapGesture {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 370000, 370103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTapGesture{}
	_p.SetDriver(__rv, 370000, false)
	return _p
}

//QTapGesture::position()
func (q *QTapGesture) Position() *QPointF {
	var __rv uintptr
	q.Drv(370000, 370104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPointF{}
	_rp.SetDriver(__rv, 101000, true)
	return _rp
}

//QTapGesture::setPosition(QPointF const&)
func (q *QTapGesture) SetPosition(pos *QPointF) {
	q.Drv(370000, 370105, Native(pos), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTemporaryFile : QTemporaryFile
type QTemporaryFile struct {
	QFile
}

// New QTemporaryFile from driver
func NewTemporaryFileFromDriver(drv Driver) *QTemporaryFile {
	_p := &QTemporaryFile{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTemporaryFile::QTemporaryFile()
func NewTemporaryFile() *QTemporaryFile {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 371000, 371102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTemporaryFile{}
	_p.SetDriver(__rv, 371000, false)
	return _p
}

//QTemporaryFile::QTemporaryFile(QObject*)
func NewTemporaryFileWithParent(parent QObjectInterface) *QTemporaryFile {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 371000, 371103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTemporaryFile{}
	_p.SetDriver(__rv, 371000, false)
	return _p
}

//QTemporaryFile::QTemporaryFile(QString const&)
func NewTemporaryFileWithTemplatename(templateName string) *QTemporaryFile {
	_templateName := NewCStringHead(templateName)
	defer FreeCStringHead(_templateName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 371000, 371104, unsafe.Pointer(_templateName), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTemporaryFile{}
	_p.SetDriver(__rv, 371000, false)
	return _p
}

//QTemporaryFile::QTemporaryFile(QString const&,QObject*)
func NewTemporaryFileWithTemplatenameParent(templateName string, parent QObjectInterface) *QTemporaryFile {
	_templateName := NewCStringHead(templateName)
	defer FreeCStringHead(_templateName)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 371000, 371105, unsafe.Pointer(_templateName), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTemporaryFile{}
	_p.SetDriver(__rv, 371000, false)
	return _p
}

//QTemporaryFile::autoRemove()
func (q *QTemporaryFile) AutoRemove() bool {
	var __rv bool
	q.Drv(371000, 371106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTemporaryFile::createLocalFile(QFile&)
func QTemporaryFileCreateLocalFile(file *QFile) *QTemporaryFile {
	var __rv uintptr
	DirectQtDrv(nil, 371000, 371107, Native(file), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTemporaryFile{}
	_rp.SetDriver(__rv, 371000, false)
	return _rp
}

//QTemporaryFile::createLocalFile(QFile&)
func (q *QTemporaryFile) CreateLocalFile(file *QFile) *QTemporaryFile {
	var __rv uintptr
	q.Drv(371000, 371107, Native(file), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTemporaryFile{}
	_rp.SetDriver(__rv, 371000, false)
	return _rp
}

//QTemporaryFile::createLocalFile(QString const&)
func QTemporaryFileCreateLocalFileWithFilename(fileName string) *QTemporaryFile {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	DirectQtDrv(nil, 371000, 371108, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTemporaryFile{}
	_rp.SetDriver(__rv, 371000, false)
	return _rp
}

//QTemporaryFile::createLocalFile(QString const&)
func (q *QTemporaryFile) CreateLocalFileWithFilename(fileName string) *QTemporaryFile {
	_fileName := NewCStringHead(fileName)
	defer FreeCStringHead(_fileName)
	var __rv uintptr
	q.Drv(371000, 371108, unsafe.Pointer(_fileName), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTemporaryFile{}
	_rp.SetDriver(__rv, 371000, false)
	return _rp
}

//QTemporaryFile::fileName()
func (q *QTemporaryFile) FileName() string {
	var __rv C.string_head
	q.Drv(371000, 371109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTemporaryFile::fileTemplate()
func (q *QTemporaryFile) FileTemplate() string {
	var __rv C.string_head
	q.Drv(371000, 371110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTemporaryFile::open()
func (q *QTemporaryFile) Open() bool {
	var __rv bool
	q.Drv(371000, 371111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTemporaryFile::setAutoRemove(bool)
func (q *QTemporaryFile) SetAutoRemove(b bool) {
	q.Drv(371000, 371112, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTemporaryFile::setFileTemplate(QString const&)
func (q *QTemporaryFile) SetFileTemplate(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(371000, 371113, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextBlockGroup : QTextBlockGroup
type QTextBlockGroup struct {
	QTextObject
}

// New QTextBlockGroup from driver
func NewTextBlockGroupFromDriver(drv Driver) *QTextBlockGroup {
	_p := &QTextBlockGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTextBlockGroup::blockFormatChanged(QTextBlock const&)
func (q *QTextBlockGroup) BlockFormatChanged(block *QTextBlock) {
	q.Drv(372000, 372102, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockGroup::blockInserted(QTextBlock const&)
func (q *QTextBlockGroup) BlockInserted(block *QTextBlock) {
	q.Drv(372000, 372103, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBlockGroup::blockList()
func (q *QTextBlockGroup) BlockList() []*QTextBlock {
	var __rv []*QTextBlock
	q.Drv(372000, 372104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBlockGroup::blockRemoved(QTextBlock const&)
func (q *QTextBlockGroup) BlockRemoved(block *QTextBlock) {
	q.Drv(372000, 372105, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextBrowser : QTextBrowser
type QTextBrowser struct {
	QTextEdit
}

// New QTextBrowser from driver
func NewTextBrowserFromDriver(drv Driver) *QTextBrowser {
	_p := &QTextBrowser{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTextBrowser) OnSourceChanged(fn func(*QUrl)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnAnchorClicked(fn func(*QUrl)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnHighlighted(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnHighlightedWithUrl(fn func(*QUrl)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnHistoryChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(373000, 373106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnBackwardAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextBrowser) OnForwardAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(373000, 373108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTextBrowser::QTextBrowser()
func NewTextBrowser() *QTextBrowser {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 373000, 373109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBrowser{}
	_p.SetDriver(__rv, 373000, false)
	return _p
}

//QTextBrowser::QTextBrowser(QWidget*)
func NewTextBrowserWithParent(parent QWidgetInterface) *QTextBrowser {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 373000, 373110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextBrowser{}
	_p.SetDriver(__rv, 373000, false)
	return _p
}

//QTextBrowser::backward()
func (q *QTextBrowser) Backward() {
	q.Drv(373000, 373111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::backwardHistoryCount()
func (q *QTextBrowser) BackwardHistoryCount() int32 {
	var __rv int32
	q.Drv(373000, 373112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::clearHistory()
func (q *QTextBrowser) ClearHistory() {
	q.Drv(373000, 373113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::forward()
func (q *QTextBrowser) Forward() {
	q.Drv(373000, 373114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::forwardHistoryCount()
func (q *QTextBrowser) ForwardHistoryCount() int32 {
	var __rv int32
	q.Drv(373000, 373115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::historyTitle(int)
func (q *QTextBrowser) HistoryTitle(value int32) string {
	var __rv C.string_head
	q.Drv(373000, 373116, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextBrowser::historyUrl(int)
func (q *QTextBrowser) HistoryUrl(value int32) *QUrl {
	var __rv uintptr
	q.Drv(373000, 373117, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//QTextBrowser::home()
func (q *QTextBrowser) Home() {
	q.Drv(373000, 373118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::isBackwardAvailable()
func (q *QTextBrowser) IsBackwardAvailable() bool {
	var __rv bool
	q.Drv(373000, 373119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::isForwardAvailable()
func (q *QTextBrowser) IsForwardAvailable() bool {
	var __rv bool
	q.Drv(373000, 373120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::openExternalLinks()
func (q *QTextBrowser) OpenExternalLinks() bool {
	var __rv bool
	q.Drv(373000, 373121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::openLinks()
func (q *QTextBrowser) OpenLinks() bool {
	var __rv bool
	q.Drv(373000, 373122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::reload()
func (q *QTextBrowser) Reload() {
	q.Drv(373000, 373123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::searchPaths()
func (q *QTextBrowser) SearchPaths() []string {
	var __rv []string
	q.Drv(373000, 373124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextBrowser::setOpenExternalLinks(bool)
func (q *QTextBrowser) SetOpenExternalLinks(open bool) {
	q.Drv(373000, 373125, unsafe.Pointer(&open), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::setOpenLinks(bool)
func (q *QTextBrowser) SetOpenLinks(open bool) {
	q.Drv(373000, 373126, unsafe.Pointer(&open), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::setSearchPaths(QStringList const&)
func (q *QTextBrowser) SetSearchPaths(paths []string) {
	_paths, _paths_size := NewCSArray(paths)
	defer FreeCSArray(_paths, _paths_size)
	q.Drv(373000, 373127, unsafe.Pointer(&_paths[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::setSource(QUrl const&)
func (q *QTextBrowser) SetSource(name *QUrl) {
	q.Drv(373000, 373128, Native(name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextBrowser::source()
func (q *QTextBrowser) Source() *QUrl {
	var __rv uintptr
	q.Drv(373000, 373129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUrl{}
	_rp.SetDriver(__rv, 182000, true)
	return _rp
}

//enum QTextDocument_ResourceType - QTextDocument::ResourceType
type QTextDocument_ResourceType uint32

const (
	QTextDocument_HtmlResource       QTextDocument_ResourceType = 1
	QTextDocument_ImageResource      QTextDocument_ResourceType = 2
	QTextDocument_StyleSheetResource QTextDocument_ResourceType = 3
	QTextDocument_UserResource       QTextDocument_ResourceType = 100
)

//enum QTextDocument_Stacks - QTextDocument::Stacks
type QTextDocument_Stacks uint32

const (
	QTextDocument_UndoStack         QTextDocument_Stacks = 0x01
	QTextDocument_RedoStack         QTextDocument_Stacks = 0x02
	QTextDocument_UndoAndRedoStacks QTextDocument_Stacks = QTextDocument_UndoStack | QTextDocument_RedoStack
)

//enum QTextDocument_FindFlag - QTextDocument::FindFlag
type QTextDocument_FindFlag uint32

const (
	QTextDocument_FindBackward        QTextDocument_FindFlag = 0x00001
	QTextDocument_FindCaseSensitively QTextDocument_FindFlag = 0x00002
	QTextDocument_FindWholeWords      QTextDocument_FindFlag = 0x00004
)

//enum QTextDocument_MetaInformation - QTextDocument::MetaInformation
type QTextDocument_MetaInformation uint32

const (
	QTextDocument_DocumentTitle QTextDocument_MetaInformation = 0
	QTextDocument_DocumentUrl   QTextDocument_MetaInformation = 1
)

//struct QTextDocument : QTextDocument
type QTextDocument struct {
	QObject
}

// New QTextDocument from driver
func NewTextDocumentFromDriver(drv Driver) *QTextDocument {
	_p := &QTextDocument{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTextDocument) OnUndoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnBlockCountChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnModificationChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnCursorPositionChanged(fn func(*QTextCursor)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnContentsChange(fn func(int32, int32, int32)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnDocumentLayoutChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(374000, 374107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnUndoCommandAdded(fn func()) uintptr {
	var __rv uintptr
	q.Drv(374000, 374108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnContentsChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(374000, 374109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextDocument) OnRedoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(374000, 374110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTextDocument::QTextDocument()
func NewTextDocument() *QTextDocument {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 374000, 374111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocument{}
	_p.SetDriver(__rv, 374000, false)
	return _p
}

//QTextDocument::QTextDocument(QObject*)
func NewTextDocumentWithParent(parent QObjectInterface) *QTextDocument {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 374000, 374112, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocument{}
	_p.SetDriver(__rv, 374000, false)
	return _p
}

//QTextDocument::QTextDocument(QString const&,QObject*)
func NewTextDocumentWithTextParent(text string, parent QObjectInterface) *QTextDocument {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 374000, 374113, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextDocument{}
	_p.SetDriver(__rv, 374000, false)
	return _p
}

//QTextDocument::addResource(int,QUrl const&,QVariant const&)
func (q *QTextDocument) AddResource(_type int32, name *QUrl, resource *QVariant) {
	q.Drv(374000, 374114, unsafe.Pointer(&_type), Native(name), Native(resource), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::adjustSize()
func (q *QTextDocument) AdjustSize() {
	q.Drv(374000, 374115, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::allFormats()
func (q *QTextDocument) AllFormats() []*QTextFormat {
	var __rv []*QTextFormat
	q.Drv(374000, 374116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::appendUndoItem(QAbstractUndoItem*)
func (q *QTextDocument) AppendUndoItem(value *QAbstractUndoItem) {
	q.Drv(374000, 374117, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::availableRedoSteps()
func (q *QTextDocument) AvailableRedoSteps() int32 {
	var __rv int32
	q.Drv(374000, 374118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::availableUndoSteps()
func (q *QTextDocument) AvailableUndoSteps() int32 {
	var __rv int32
	q.Drv(374000, 374119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::begin()
func (q *QTextDocument) Begin() *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::blockCount()
func (q *QTextDocument) BlockCount() int32 {
	var __rv int32
	q.Drv(374000, 374121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::characterAt(int)
func (q *QTextDocument) CharacterAt(pos int32) rune {
	var __rv rune
	q.Drv(374000, 374122, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::characterCount()
func (q *QTextDocument) CharacterCount() int32 {
	var __rv int32
	q.Drv(374000, 374123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::clear()
func (q *QTextDocument) Clear() {
	q.Drv(374000, 374124, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::clearUndoRedoStacks()
func (q *QTextDocument) ClearUndoRedoStacks() {
	q.Drv(374000, 374125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::clearUndoRedoStacks(QTextDocument::Stacks)
func (q *QTextDocument) ClearUndoRedoStacksWithHistorytoclear(historyToClear QTextDocument_Stacks) {
	q.Drv(374000, 374126, unsafe.Pointer(&historyToClear), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::clone()
func (q *QTextDocument) Clone() *QTextDocument {
	var __rv uintptr
	q.Drv(374000, 374127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextDocument::clone(QObject*)
func (q *QTextDocument) CloneWithParent(parent QObjectInterface) *QTextDocument {
	var __rv uintptr
	q.Drv(374000, 374128, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextDocument::createObject(QTextFormat const&)
func (q *QTextDocument) CreateObject(f *QTextFormat) *QTextObject {
	var __rv uintptr
	q.Drv(374000, 374129, Native(f), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextObject{}
	_rp.SetDriver(__rv, 378000, false)
	return _rp
}

//QTextDocument::defaultFont()
func (q *QTextDocument) DefaultFont() *QFont {
	var __rv uintptr
	q.Drv(374000, 374130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTextDocument::defaultStyleSheet()
func (q *QTextDocument) DefaultStyleSheet() string {
	var __rv C.string_head
	q.Drv(374000, 374131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocument::defaultTextOption()
func (q *QTextDocument) DefaultTextOption() *QTextOption {
	var __rv uintptr
	q.Drv(374000, 374132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextOption{}
	_rp.SetDriver(__rv, 166000, true)
	return _rp
}

//QTextDocument::documentLayout()
func (q *QTextDocument) DocumentLayout() *QAbstractTextDocumentLayout {
	var __rv uintptr
	q.Drv(374000, 374133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractTextDocumentLayout{}
	_rp.SetDriver(__rv, 207000, false)
	return _rp
}

//QTextDocument::documentMargin()
func (q *QTextDocument) DocumentMargin() float64 {
	var __rv float64
	q.Drv(374000, 374134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::drawContents(QPainter*)
func (q *QTextDocument) DrawContents(painter *QPainter) {
	q.Drv(374000, 374135, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::drawContents(QPainter*,QRectF const&)
func (q *QTextDocument) DrawContentsFWithPainterRect(painter *QPainter, rect *QRectF) {
	q.Drv(374000, 374136, Native(painter), Native(rect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::end()
func (q *QTextDocument) End() *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::find(QRegExp const&)
func (q *QTextDocument) Find(expr *QRegExp) *QTextCursor {
	var __rv uintptr
	q.Drv(374000, 374138, Native(expr), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::find(QString const&)
func (q *QTextDocument) FindWithSubstring(subString string) *QTextCursor {
	_subString := NewCStringHead(subString)
	defer FreeCStringHead(_subString)
	var __rv uintptr
	q.Drv(374000, 374139, unsafe.Pointer(_subString), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::find(QRegExp const&,QTextCursor const&,QFlags<QTextDocument::FindFlag>)
func (q *QTextDocument) FindWithExprFromOptions(expr *QRegExp, from *QTextCursor, options QTextDocument_FindFlag) *QTextCursor {
	var __rv uintptr
	q.Drv(374000, 374140, Native(expr), Native(from), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::find(QRegExp const&,int,QFlags<QTextDocument::FindFlag>)
func (q *QTextDocument) FindWithExprIfromOptions(expr *QRegExp, from int32, options QTextDocument_FindFlag) *QTextCursor {
	var __rv uintptr
	q.Drv(374000, 374141, Native(expr), unsafe.Pointer(&from), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::find(QString const&,QTextCursor const&,QFlags<QTextDocument::FindFlag>)
func (q *QTextDocument) FindWithSubstringFromOptions(subString string, from *QTextCursor, options QTextDocument_FindFlag) *QTextCursor {
	_subString := NewCStringHead(subString)
	defer FreeCStringHead(_subString)
	var __rv uintptr
	q.Drv(374000, 374142, unsafe.Pointer(_subString), Native(from), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::find(QString const&,int,QFlags<QTextDocument::FindFlag>)
func (q *QTextDocument) FindWithSubstringIfromOptions(subString string, from int32, options QTextDocument_FindFlag) *QTextCursor {
	_subString := NewCStringHead(subString)
	defer FreeCStringHead(_subString)
	var __rv uintptr
	q.Drv(374000, 374143, unsafe.Pointer(_subString), unsafe.Pointer(&from), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextDocument::findBlock(int)
func (q *QTextDocument) FindBlock(pos int32) *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374144, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::findBlockByLineNumber(int)
func (q *QTextDocument) FindBlockByLineNumber(blockNumber int32) *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374145, unsafe.Pointer(&blockNumber), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::findBlockByNumber(int)
func (q *QTextDocument) FindBlockByNumber(blockNumber int32) *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374146, unsafe.Pointer(&blockNumber), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::firstBlock()
func (q *QTextDocument) FirstBlock() *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::frameAt(int)
func (q *QTextDocument) FrameAt(pos int32) *QTextFrame {
	var __rv uintptr
	q.Drv(374000, 374148, unsafe.Pointer(&pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextDocument::idealWidth()
func (q *QTextDocument) IdealWidth() float64 {
	var __rv float64
	q.Drv(374000, 374149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::indentWidth()
func (q *QTextDocument) IndentWidth() float64 {
	var __rv float64
	q.Drv(374000, 374150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::isEmpty()
func (q *QTextDocument) IsEmpty() bool {
	var __rv bool
	q.Drv(374000, 374151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::isModified()
func (q *QTextDocument) IsModified() bool {
	var __rv bool
	q.Drv(374000, 374152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::isRedoAvailable()
func (q *QTextDocument) IsRedoAvailable() bool {
	var __rv bool
	q.Drv(374000, 374153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::isUndoAvailable()
func (q *QTextDocument) IsUndoAvailable() bool {
	var __rv bool
	q.Drv(374000, 374154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::isUndoRedoEnabled()
func (q *QTextDocument) IsUndoRedoEnabled() bool {
	var __rv bool
	q.Drv(374000, 374155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::lastBlock()
func (q *QTextDocument) LastBlock() *QTextBlock {
	var __rv uintptr
	q.Drv(374000, 374156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextDocument::lineCount()
func (q *QTextDocument) LineCount() int32 {
	var __rv int32
	q.Drv(374000, 374157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::loadResource(int,QUrl const&)
func (q *QTextDocument) LoadResource(_type int32, name *QUrl) *QVariant {
	var __rv uintptr
	q.Drv(374000, 374158, unsafe.Pointer(&_type), Native(name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTextDocument::markContentsDirty(int,int)
func (q *QTextDocument) MarkContentsDirty(from int32, length int32) {
	q.Drv(374000, 374159, unsafe.Pointer(&from), unsafe.Pointer(&length), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::maximumBlockCount()
func (q *QTextDocument) MaximumBlockCount() int32 {
	var __rv int32
	q.Drv(374000, 374160, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::metaInformation(QTextDocument::MetaInformation)
func (q *QTextDocument) MetaInformation(info QTextDocument_MetaInformation) string {
	var __rv C.string_head
	q.Drv(374000, 374161, unsafe.Pointer(&info), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocument::object(int)
func (q *QTextDocument) Object(objectIndex int32) *QTextObject {
	var __rv uintptr
	q.Drv(374000, 374162, unsafe.Pointer(&objectIndex), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextObject{}
	_rp.SetDriver(__rv, 378000, false)
	return _rp
}

//QTextDocument::objectForFormat(QTextFormat const&)
func (q *QTextDocument) ObjectForFormat(value *QTextFormat) *QTextObject {
	var __rv uintptr
	q.Drv(374000, 374163, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextObject{}
	_rp.SetDriver(__rv, 378000, false)
	return _rp
}

//QTextDocument::pageCount()
func (q *QTextDocument) PageCount() int32 {
	var __rv int32
	q.Drv(374000, 374164, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::pageSize()
func (q *QTextDocument) PageSize() *QSizeF {
	var __rv uintptr
	q.Drv(374000, 374165, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QTextDocument::print(QPrinter*)
func (q *QTextDocument) Print(printer *QPrinter) {
	q.Drv(374000, 374166, Native(printer), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::redo()
func (q *QTextDocument) Redo() {
	q.Drv(374000, 374167, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::redo(QTextCursor*)
func (q *QTextDocument) RedoWithCursor(cursor *QTextCursor) {
	q.Drv(374000, 374168, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::resource(int,QUrl const&)
func (q *QTextDocument) Resource(_type int32, name *QUrl) *QVariant {
	var __rv uintptr
	q.Drv(374000, 374169, unsafe.Pointer(&_type), Native(name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTextDocument::revision()
func (q *QTextDocument) Revision() int32 {
	var __rv int32
	q.Drv(374000, 374170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::rootFrame()
func (q *QTextDocument) RootFrame() *QTextFrame {
	var __rv uintptr
	q.Drv(374000, 374171, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextDocument::setDefaultFont(QFont const&)
func (q *QTextDocument) SetDefaultFont(font *QFont) {
	q.Drv(374000, 374172, Native(font), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setDefaultStyleSheet(QString const&)
func (q *QTextDocument) SetDefaultStyleSheet(sheet string) {
	_sheet := NewCStringHead(sheet)
	defer FreeCStringHead(_sheet)
	q.Drv(374000, 374173, unsafe.Pointer(_sheet), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setDefaultTextOption(QTextOption const&)
func (q *QTextDocument) SetDefaultTextOption(option *QTextOption) {
	q.Drv(374000, 374174, Native(option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setDocumentLayout(QAbstractTextDocumentLayout*)
func (q *QTextDocument) SetDocumentLayout(layout *QAbstractTextDocumentLayout) {
	q.Drv(374000, 374175, Native(layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setDocumentMargin(double)
func (q *QTextDocument) SetDocumentMargin(margin float64) {
	q.Drv(374000, 374176, unsafe.Pointer(&margin), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setHtml(QString const&)
func (q *QTextDocument) SetHtml(html string) {
	_html := NewCStringHead(html)
	defer FreeCStringHead(_html)
	q.Drv(374000, 374177, unsafe.Pointer(_html), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setIndentWidth(double)
func (q *QTextDocument) SetIndentWidth(width float64) {
	q.Drv(374000, 374178, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setMaximumBlockCount(int)
func (q *QTextDocument) SetMaximumBlockCount(maximum int32) {
	q.Drv(374000, 374179, unsafe.Pointer(&maximum), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setMetaInformation(QTextDocument::MetaInformation,QString const&)
func (q *QTextDocument) SetMetaInformation(info QTextDocument_MetaInformation, value2 string) {
	_value2 := NewCStringHead(value2)
	defer FreeCStringHead(_value2)
	q.Drv(374000, 374180, unsafe.Pointer(&info), unsafe.Pointer(_value2), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setModified(bool)
func (q *QTextDocument) SetModified(m bool) {
	q.Drv(374000, 374181, unsafe.Pointer(&m), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setPageSize(QSizeF const&)
func (q *QTextDocument) SetPageSize(size *QSizeF) {
	q.Drv(374000, 374182, Native(size), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setPlainText(QString const&)
func (q *QTextDocument) SetPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(374000, 374183, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setTextWidth(double)
func (q *QTextDocument) SetTextWidth(width float64) {
	q.Drv(374000, 374184, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setUndoRedoEnabled(bool)
func (q *QTextDocument) SetUndoRedoEnabled(enable bool) {
	q.Drv(374000, 374185, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::setUseDesignMetrics(bool)
func (q *QTextDocument) SetUseDesignMetrics(b bool) {
	q.Drv(374000, 374186, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::size()
func (q *QTextDocument) Size() *QSizeF {
	var __rv uintptr
	q.Drv(374000, 374187, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizeF{}
	_rp.SetDriver(__rv, 121000, true)
	return _rp
}

//QTextDocument::textWidth()
func (q *QTextDocument) TextWidth() float64 {
	var __rv float64
	q.Drv(374000, 374188, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextDocument::toHtml()
func (q *QTextDocument) ToHtml() string {
	var __rv C.string_head
	q.Drv(374000, 374189, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocument::toHtml(QByteArray const&)
func (q *QTextDocument) ToHtmlWithEncoding(encoding []byte) string {
	_encoding := NewCByteArrayHead(encoding)
	defer FreeCByteArrayHead(_encoding)
	var __rv C.string_head
	q.Drv(374000, 374190, unsafe.Pointer(_encoding), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocument::toPlainText()
func (q *QTextDocument) ToPlainText() string {
	var __rv C.string_head
	q.Drv(374000, 374191, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextDocument::undo()
func (q *QTextDocument) Undo() {
	q.Drv(374000, 374192, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::undo(QTextCursor*)
func (q *QTextDocument) UndoWithCursor(cursor *QTextCursor) {
	q.Drv(374000, 374193, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextDocument::useDesignMetrics()
func (q *QTextDocument) UseDesignMetrics() bool {
	var __rv bool
	q.Drv(374000, 374194, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//enum QTextEdit_AutoFormattingFlag - QTextEdit::AutoFormattingFlag
type QTextEdit_AutoFormattingFlag uint32

const (
	QTextEdit_AutoNone       QTextEdit_AutoFormattingFlag = 0
	QTextEdit_AutoBulletList QTextEdit_AutoFormattingFlag = 0x00000001
	QTextEdit_AutoAll        QTextEdit_AutoFormattingFlag = 0xffffffff
)

//enum QTextEdit_LineWrapMode - QTextEdit::LineWrapMode
type QTextEdit_LineWrapMode uint32

const (
	QTextEdit_NoWrap           QTextEdit_LineWrapMode = 0
	QTextEdit_WidgetWidth      QTextEdit_LineWrapMode = 1
	QTextEdit_FixedPixelWidth  QTextEdit_LineWrapMode = 2
	QTextEdit_FixedColumnWidth QTextEdit_LineWrapMode = 3
)

//struct QTextEdit : QTextEdit
type QTextEdit struct {
	QAbstractScrollArea
}

// New QTextEdit from driver
func NewTextEditFromDriver(drv Driver) *QTextEdit {
	_p := &QTextEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTextEdit) OnCopyAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(375000, 375102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnUndoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(375000, 375103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnCursorPositionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(375000, 375104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(375000, 375105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnTextChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(375000, 375106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnRedoAvailable(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(375000, 375107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTextEdit) OnCurrentCharFormatChanged(fn func(*QTextCharFormat)) uintptr {
	var __rv uintptr
	q.Drv(375000, 375108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTextEdit::QTextEdit()
func NewTextEdit() *QTextEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 375000, 375109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextEdit{}
	_p.SetDriver(__rv, 375000, false)
	return _p
}

//QTextEdit::QTextEdit(QWidget*)
func NewTextEditWithParent(parent QWidgetInterface) *QTextEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 375000, 375110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextEdit{}
	_p.SetDriver(__rv, 375000, false)
	return _p
}

//QTextEdit::QTextEdit(QString const&,QWidget*)
func NewTextEditWithTextParent(text string, parent QWidgetInterface) *QTextEdit {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 375000, 375111, unsafe.Pointer(_text), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextEdit{}
	_p.SetDriver(__rv, 375000, false)
	return _p
}

//QTextEdit::acceptRichText()
func (q *QTextEdit) AcceptRichText() bool {
	var __rv bool
	q.Drv(375000, 375112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::alignment()
func (q *QTextEdit) Alignment() Qt_AlignmentFlag {
	var __rv Qt_AlignmentFlag
	q.Drv(375000, 375113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::anchorAt(QPoint const&)
func (q *QTextEdit) AnchorAt(pos *QPoint) string {
	var __rv C.string_head
	q.Drv(375000, 375114, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextEdit::append(QString const&)
func (q *QTextEdit) Append(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375115, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::autoFormatting()
func (q *QTextEdit) AutoFormatting() QTextEdit_AutoFormattingFlag {
	var __rv QTextEdit_AutoFormattingFlag
	q.Drv(375000, 375116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::canInsertFromMimeData(QMimeData const*)
func (q *QTextEdit) CanInsertFromMimeData(source *QMimeData) bool {
	var __rv bool
	q.Drv(375000, 375117, Native(source), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::canPaste()
func (q *QTextEdit) CanPaste() bool {
	var __rv bool
	q.Drv(375000, 375118, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::clear()
func (q *QTextEdit) Clear() {
	q.Drv(375000, 375119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::copy()
func (q *QTextEdit) Copy() {
	q.Drv(375000, 375120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::createMimeDataFromSelection()
func (q *QTextEdit) CreateMimeDataFromSelection() *QMimeData {
	var __rv uintptr
	q.Drv(375000, 375121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QTextEdit::createStandardContextMenu()
func (q *QTextEdit) CreateStandardContextMenu() *QMenu {
	var __rv uintptr
	q.Drv(375000, 375122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QTextEdit::createStandardContextMenu(QPoint const&)
func (q *QTextEdit) CreateStandardContextMenuWithPosition(position *QPoint) *QMenu {
	var __rv uintptr
	q.Drv(375000, 375123, Native(position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QTextEdit::currentCharFormat()
func (q *QTextEdit) CurrentCharFormat() *QTextCharFormat {
	var __rv uintptr
	q.Drv(375000, 375124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCharFormat{}
	_rp.SetDriver(__rv, 144000, true)
	return _rp
}

//QTextEdit::currentFont()
func (q *QTextEdit) CurrentFont() *QFont {
	var __rv uintptr
	q.Drv(375000, 375125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QTextEdit::cursorForPosition(QPoint const&)
func (q *QTextEdit) CursorForPosition(pos *QPoint) *QTextCursor {
	var __rv uintptr
	q.Drv(375000, 375126, Native(pos), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextEdit::cursorRect()
func (q *QTextEdit) CursorRect() *QRect {
	var __rv uintptr
	q.Drv(375000, 375127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QTextEdit::cursorRect(QTextCursor const&)
func (q *QTextEdit) CursorRectWithCursor(cursor *QTextCursor) *QRect {
	var __rv uintptr
	q.Drv(375000, 375128, Native(cursor), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QTextEdit::cursorWidth()
func (q *QTextEdit) CursorWidth() int32 {
	var __rv int32
	q.Drv(375000, 375129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::cut()
func (q *QTextEdit) Cut() {
	q.Drv(375000, 375130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::document()
func (q *QTextEdit) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(375000, 375131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextEdit::documentTitle()
func (q *QTextEdit) DocumentTitle() string {
	var __rv C.string_head
	q.Drv(375000, 375132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextEdit::ensureCursorVisible()
func (q *QTextEdit) EnsureCursorVisible() {
	q.Drv(375000, 375133, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::extraSelections()
func (q *QTextEdit) ExtraSelections() []*QTextEditExtraSelection {
	var __rv []*QTextEditExtraSelection
	q.Drv(375000, 375134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::find(QString const&)
func (q *QTextEdit) Find(exp string) bool {
	_exp := NewCStringHead(exp)
	defer FreeCStringHead(_exp)
	var __rv bool
	q.Drv(375000, 375135, unsafe.Pointer(_exp), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::find(QString const&,QFlags<QTextDocument::FindFlag>)
func (q *QTextEdit) FindWithExpOptions(exp string, options QTextDocument_FindFlag) bool {
	_exp := NewCStringHead(exp)
	defer FreeCStringHead(_exp)
	var __rv bool
	q.Drv(375000, 375136, unsafe.Pointer(_exp), unsafe.Pointer(&options), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::fontFamily()
func (q *QTextEdit) FontFamily() string {
	var __rv C.string_head
	q.Drv(375000, 375137, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextEdit::fontItalic()
func (q *QTextEdit) FontItalic() bool {
	var __rv bool
	q.Drv(375000, 375138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::fontPointSize()
func (q *QTextEdit) FontPointSize() float64 {
	var __rv float64
	q.Drv(375000, 375139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::fontUnderline()
func (q *QTextEdit) FontUnderline() bool {
	var __rv bool
	q.Drv(375000, 375140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::fontWeight()
func (q *QTextEdit) FontWeight() int32 {
	var __rv int32
	q.Drv(375000, 375141, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::insertFromMimeData(QMimeData const*)
func (q *QTextEdit) InsertFromMimeData(source *QMimeData) {
	q.Drv(375000, 375142, Native(source), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::insertHtml(QString const&)
func (q *QTextEdit) InsertHtml(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375143, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::insertPlainText(QString const&)
func (q *QTextEdit) InsertPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375144, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::isReadOnly()
func (q *QTextEdit) IsReadOnly() bool {
	var __rv bool
	q.Drv(375000, 375145, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::isUndoRedoEnabled()
func (q *QTextEdit) IsUndoRedoEnabled() bool {
	var __rv bool
	q.Drv(375000, 375146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::lineWrapColumnOrWidth()
func (q *QTextEdit) LineWrapColumnOrWidth() int32 {
	var __rv int32
	q.Drv(375000, 375147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::lineWrapMode()
func (q *QTextEdit) LineWrapMode() QTextEdit_LineWrapMode {
	var __rv QTextEdit_LineWrapMode
	q.Drv(375000, 375148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::loadResource(int,QUrl const&)
func (q *QTextEdit) LoadResource(_type int32, name *QUrl) *QVariant {
	var __rv uintptr
	q.Drv(375000, 375149, unsafe.Pointer(&_type), Native(name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QTextEdit::mergeCurrentCharFormat(QTextCharFormat const&)
func (q *QTextEdit) MergeCurrentCharFormat(modifier *QTextCharFormat) {
	q.Drv(375000, 375150, Native(modifier), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::moveCursor(QTextCursor::MoveOperation)
func (q *QTextEdit) MoveCursor(operation QTextCursor_MoveOperation) {
	q.Drv(375000, 375151, unsafe.Pointer(&operation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::moveCursor(QTextCursor::MoveOperation,QTextCursor::MoveMode)
func (q *QTextEdit) MoveCursorWithOperationMode(operation QTextCursor_MoveOperation, mode QTextCursor_MoveMode) {
	q.Drv(375000, 375152, unsafe.Pointer(&operation), unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::overwriteMode()
func (q *QTextEdit) OverwriteMode() bool {
	var __rv bool
	q.Drv(375000, 375153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::paste()
func (q *QTextEdit) Paste() {
	q.Drv(375000, 375154, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::print(QPrinter*)
func (q *QTextEdit) Print(printer *QPrinter) {
	q.Drv(375000, 375155, Native(printer), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::redo()
func (q *QTextEdit) Redo() {
	q.Drv(375000, 375156, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::scrollToAnchor(QString const&)
func (q *QTextEdit) ScrollToAnchor(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(375000, 375157, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::selectAll()
func (q *QTextEdit) SelectAll() {
	q.Drv(375000, 375158, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setAcceptRichText(bool)
func (q *QTextEdit) SetAcceptRichText(accept bool) {
	q.Drv(375000, 375159, unsafe.Pointer(&accept), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setAlignment(QFlags<Qt::AlignmentFlag>)
func (q *QTextEdit) SetAlignment(a Qt_AlignmentFlag) {
	q.Drv(375000, 375160, unsafe.Pointer(&a), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setAutoFormatting(QFlags<QTextEdit::AutoFormattingFlag>)
func (q *QTextEdit) SetAutoFormatting(features QTextEdit_AutoFormattingFlag) {
	q.Drv(375000, 375161, unsafe.Pointer(&features), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setCurrentCharFormat(QTextCharFormat const&)
func (q *QTextEdit) SetCurrentCharFormat(format *QTextCharFormat) {
	q.Drv(375000, 375162, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setCurrentFont(QFont const&)
func (q *QTextEdit) SetCurrentFont(f *QFont) {
	q.Drv(375000, 375163, Native(f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setCursorWidth(int)
func (q *QTextEdit) SetCursorWidth(width int32) {
	q.Drv(375000, 375164, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setDocument(QTextDocument*)
func (q *QTextEdit) SetDocument(document *QTextDocument) {
	q.Drv(375000, 375165, Native(document), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setDocumentTitle(QString const&)
func (q *QTextEdit) SetDocumentTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(375000, 375166, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setExtraSelections(QList<QTextEdit::ExtraSelection> const&)
func (q *QTextEdit) SetExtraSelections(selections []*QTextEditExtraSelection) {
	_selections := NewCNoObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&selections)))
	defer FreeCNoObjectArrayHead(_selections)
	q.Drv(375000, 375167, unsafe.Pointer(_selections), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setFontFamily(QString const&)
func (q *QTextEdit) SetFontFamily(fontFamily string) {
	_fontFamily := NewCStringHead(fontFamily)
	defer FreeCStringHead(_fontFamily)
	q.Drv(375000, 375168, unsafe.Pointer(_fontFamily), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setFontItalic(bool)
func (q *QTextEdit) SetFontItalic(b bool) {
	q.Drv(375000, 375169, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setFontPointSize(double)
func (q *QTextEdit) SetFontPointSize(s float64) {
	q.Drv(375000, 375170, unsafe.Pointer(&s), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setFontUnderline(bool)
func (q *QTextEdit) SetFontUnderline(b bool) {
	q.Drv(375000, 375171, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setFontWeight(int)
func (q *QTextEdit) SetFontWeight(w int32) {
	q.Drv(375000, 375172, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setHtml(QString const&)
func (q *QTextEdit) SetHtml(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375173, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setLineWrapColumnOrWidth(int)
func (q *QTextEdit) SetLineWrapColumnOrWidth(w int32) {
	q.Drv(375000, 375174, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setLineWrapMode(QTextEdit::LineWrapMode)
func (q *QTextEdit) SetLineWrapMode(mode QTextEdit_LineWrapMode) {
	q.Drv(375000, 375175, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setOverwriteMode(bool)
func (q *QTextEdit) SetOverwriteMode(overwrite bool) {
	q.Drv(375000, 375176, unsafe.Pointer(&overwrite), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setPlainText(QString const&)
func (q *QTextEdit) SetPlainText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375177, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setReadOnly(bool)
func (q *QTextEdit) SetReadOnly(ro bool) {
	q.Drv(375000, 375178, unsafe.Pointer(&ro), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTabChangesFocus(bool)
func (q *QTextEdit) SetTabChangesFocus(b bool) {
	q.Drv(375000, 375179, unsafe.Pointer(&b), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTabStopWidth(int)
func (q *QTextEdit) SetTabStopWidth(width int32) {
	q.Drv(375000, 375180, unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setText(QString const&)
func (q *QTextEdit) SetText(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(375000, 375181, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTextBackgroundColor(QColor const&)
func (q *QTextEdit) SetTextBackgroundColor(c *QColor) {
	q.Drv(375000, 375182, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTextColor(QColor const&)
func (q *QTextEdit) SetTextColor(c *QColor) {
	q.Drv(375000, 375183, Native(c), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTextCursor(QTextCursor const&)
func (q *QTextEdit) SetTextCursor(cursor *QTextCursor) {
	q.Drv(375000, 375184, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setTextInteractionFlags(QFlags<Qt::TextInteractionFlag>)
func (q *QTextEdit) SetTextInteractionFlags(flags Qt_TextInteractionFlag) {
	q.Drv(375000, 375185, unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setUndoRedoEnabled(bool)
func (q *QTextEdit) SetUndoRedoEnabled(enable bool) {
	q.Drv(375000, 375186, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::setWordWrapMode(QTextOption::WrapMode)
func (q *QTextEdit) SetWordWrapMode(policy QTextOption_WrapMode) {
	q.Drv(375000, 375187, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::tabChangesFocus()
func (q *QTextEdit) TabChangesFocus() bool {
	var __rv bool
	q.Drv(375000, 375188, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::tabStopWidth()
func (q *QTextEdit) TabStopWidth() int32 {
	var __rv int32
	q.Drv(375000, 375189, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::textBackgroundColor()
func (q *QTextEdit) TextBackgroundColor() *QColor {
	var __rv uintptr
	q.Drv(375000, 375190, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTextEdit::textColor()
func (q *QTextEdit) TextColor() *QColor {
	var __rv uintptr
	q.Drv(375000, 375191, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QColor{}
	_rp.SetDriver(__rv, 13000, true)
	return _rp
}

//QTextEdit::textCursor()
func (q *QTextEdit) TextCursor() *QTextCursor {
	var __rv uintptr
	q.Drv(375000, 375192, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextEdit::textInteractionFlags()
func (q *QTextEdit) TextInteractionFlags() Qt_TextInteractionFlag {
	var __rv Qt_TextInteractionFlag
	q.Drv(375000, 375193, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::toHtml()
func (q *QTextEdit) ToHtml() string {
	var __rv C.string_head
	q.Drv(375000, 375194, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextEdit::toPlainText()
func (q *QTextEdit) ToPlainText() string {
	var __rv C.string_head
	q.Drv(375000, 375195, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextEdit::undo()
func (q *QTextEdit) Undo() {
	q.Drv(375000, 375196, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::wordWrapMode()
func (q *QTextEdit) WordWrapMode() QTextOption_WrapMode {
	var __rv QTextOption_WrapMode
	q.Drv(375000, 375197, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextEdit::zoomIn()
func (q *QTextEdit) ZoomIn() {
	q.Drv(375000, 375198, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::zoomIn(int)
func (q *QTextEdit) ZoomInWithRange(_range int32) {
	q.Drv(375000, 375199, unsafe.Pointer(&_range), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::zoomOut()
func (q *QTextEdit) ZoomOut() {
	q.Drv(375000, 375200, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextEdit::zoomOut(int)
func (q *QTextEdit) ZoomOutWithRange(_range int32) {
	q.Drv(375000, 375201, unsafe.Pointer(&_range), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextFrame : QTextFrame
type QTextFrame struct {
	QTextObject
}

// New QTextFrame from driver
func NewTextFrameFromDriver(drv Driver) *QTextFrame {
	_p := &QTextFrame{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTextFrame::QTextFrame(QTextDocument*)
func NewTextFrame(doc *QTextDocument) *QTextFrame {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 376000, 376102, Native(doc), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextFrame{}
	_p.SetDriver(__rv, 376000, false)
	return _p
}

//QTextFrame::begin()
func (q *QTextFrame) Begin() *QTextFrameiterator {
	var __rv uintptr
	q.Drv(376000, 376103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameiterator{}
	_rp.SetDriver(__rv, 155000, true)
	return _rp
}

//QTextFrame::childFrames()
func (q *QTextFrame) ChildFrames() []*QTextFrame {
	var __rv []*QTextFrame
	q.Drv(376000, 376104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrame::end()
func (q *QTextFrame) End() *QTextFrameiterator {
	var __rv uintptr
	q.Drv(376000, 376105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameiterator{}
	_rp.SetDriver(__rv, 155000, true)
	return _rp
}

//QTextFrame::firstCursorPosition()
func (q *QTextFrame) FirstCursorPosition() *QTextCursor {
	var __rv uintptr
	q.Drv(376000, 376106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextFrame::firstPosition()
func (q *QTextFrame) FirstPosition() int32 {
	var __rv int32
	q.Drv(376000, 376107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrame::frameFormat()
func (q *QTextFrame) FrameFormat() *QTextFrameFormat {
	var __rv uintptr
	q.Drv(376000, 376108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrameFormat{}
	_rp.SetDriver(__rv, 156000, true)
	return _rp
}

//QTextFrame::lastCursorPosition()
func (q *QTextFrame) LastCursorPosition() *QTextCursor {
	var __rv uintptr
	q.Drv(376000, 376109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextFrame::lastPosition()
func (q *QTextFrame) LastPosition() int32 {
	var __rv int32
	q.Drv(376000, 376110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextFrame::parentFrame()
func (q *QTextFrame) ParentFrame() *QTextFrame {
	var __rv uintptr
	q.Drv(376000, 376111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFrame{}
	_rp.SetDriver(__rv, 376000, false)
	return _rp
}

//QTextFrame::setFrameFormat(QTextFrameFormat const&)
func (q *QTextFrame) SetFrameFormat(format *QTextFrameFormat) {
	q.Drv(376000, 376112, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextList : QTextList
type QTextList struct {
	QTextBlockGroup
}

// New QTextList from driver
func NewTextListFromDriver(drv Driver) *QTextList {
	_p := &QTextList{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTextList::QTextList(QTextDocument*)
func NewTextList(doc *QTextDocument) *QTextList {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 377000, 377102, Native(doc), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextList{}
	_p.SetDriver(__rv, 377000, false)
	return _p
}

//QTextList::add(QTextBlock const&)
func (q *QTextList) Add(block *QTextBlock) {
	q.Drv(377000, 377103, Native(block), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextList::count()
func (q *QTextList) Count() int32 {
	var __rv int32
	q.Drv(377000, 377104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextList::format()
func (q *QTextList) Format() *QTextListFormat {
	var __rv uintptr
	q.Drv(377000, 377105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextListFormat{}
	_rp.SetDriver(__rv, 164000, true)
	return _rp
}

//QTextList::isEmpty()
func (q *QTextList) IsEmpty() bool {
	var __rv bool
	q.Drv(377000, 377106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextList::item(int)
func (q *QTextList) Item(i int32) *QTextBlock {
	var __rv uintptr
	q.Drv(377000, 377107, unsafe.Pointer(&i), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextBlock{}
	_rp.SetDriver(__rv, 139000, true)
	return _rp
}

//QTextList::itemNumber(QTextBlock const&)
func (q *QTextList) ItemNumber(value *QTextBlock) int32 {
	var __rv int32
	q.Drv(377000, 377108, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextList::itemText(QTextBlock const&)
func (q *QTextList) ItemText(value *QTextBlock) string {
	var __rv C.string_head
	q.Drv(377000, 377109, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTextList::remove(QTextBlock const&)
func (q *QTextList) Remove(value *QTextBlock) {
	q.Drv(377000, 377110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextList::removeItem(int)
func (q *QTextList) RemoveItem(i int32) {
	q.Drv(377000, 377111, unsafe.Pointer(&i), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextList::setFormat(QTextListFormat const&)
func (q *QTextList) SetFormat(format *QTextListFormat) {
	q.Drv(377000, 377112, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextObject : QTextObject
type QTextObject struct {
	QObject
}

// New QTextObject from driver
func NewTextObjectFromDriver(drv Driver) *QTextObject {
	_p := &QTextObject{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTextObject::document()
func (q *QTextObject) Document() *QTextDocument {
	var __rv uintptr
	q.Drv(378000, 378102, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextDocument{}
	_rp.SetDriver(__rv, 374000, false)
	return _rp
}

//QTextObject::format()
func (q *QTextObject) Format() *QTextFormat {
	var __rv uintptr
	q.Drv(378000, 378103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextFormat{}
	_rp.SetDriver(__rv, 153000, true)
	return _rp
}

//QTextObject::formatIndex()
func (q *QTextObject) FormatIndex() int32 {
	var __rv int32
	q.Drv(378000, 378104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextObject::objectIndex()
func (q *QTextObject) ObjectIndex() int32 {
	var __rv int32
	q.Drv(378000, 378105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextObject::setFormat(QTextFormat const&)
func (q *QTextObject) SetFormat(format *QTextFormat) {
	q.Drv(378000, 378106, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTextTable : QTextTable
type QTextTable struct {
	QTextFrame
}

// New QTextTable from driver
func NewTextTableFromDriver(drv Driver) *QTextTable {
	_p := &QTextTable{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTextTable::QTextTable(QTextDocument*)
func NewTextTable(doc *QTextDocument) *QTextTable {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 379000, 379102, Native(doc), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTextTable{}
	_p.SetDriver(__rv, 379000, false)
	return _p
}

//QTextTable::appendColumns(int)
func (q *QTextTable) AppendColumns(count int32) {
	q.Drv(379000, 379103, unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::appendRows(int)
func (q *QTextTable) AppendRows(count int32) {
	q.Drv(379000, 379104, unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::cellAt(QTextCursor const&)
func (q *QTextTable) CellAt(c *QTextCursor) *QTextTableCell {
	var __rv uintptr
	q.Drv(379000, 379105, Native(c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableCell{}
	_rp.SetDriver(__rv, 168000, true)
	return _rp
}

//QTextTable::cellAt(int)
func (q *QTextTable) CellAtWithPosition(position int32) *QTextTableCell {
	var __rv uintptr
	q.Drv(379000, 379106, unsafe.Pointer(&position), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableCell{}
	_rp.SetDriver(__rv, 168000, true)
	return _rp
}

//QTextTable::cellAt(int,int)
func (q *QTextTable) CellAtWithRowCol(row int32, col int32) *QTextTableCell {
	var __rv uintptr
	q.Drv(379000, 379107, unsafe.Pointer(&row), unsafe.Pointer(&col), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableCell{}
	_rp.SetDriver(__rv, 168000, true)
	return _rp
}

//QTextTable::columns()
func (q *QTextTable) Columns() int32 {
	var __rv int32
	q.Drv(379000, 379108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTable::format()
func (q *QTextTable) Format() *QTextTableFormat {
	var __rv uintptr
	q.Drv(379000, 379109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextTableFormat{}
	_rp.SetDriver(__rv, 170000, true)
	return _rp
}

//QTextTable::insertColumns(int,int)
func (q *QTextTable) InsertColumns(pos int32, num int32) {
	q.Drv(379000, 379110, unsafe.Pointer(&pos), unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::insertRows(int,int)
func (q *QTextTable) InsertRows(pos int32, num int32) {
	q.Drv(379000, 379111, unsafe.Pointer(&pos), unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::mergeCells(QTextCursor const&)
func (q *QTextTable) MergeCells(cursor *QTextCursor) {
	q.Drv(379000, 379112, Native(cursor), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::mergeCells(int,int,int,int)
func (q *QTextTable) MergeCellsWithRowColNumrowsNumcols(row int32, col int32, numRows int32, numCols int32) {
	q.Drv(379000, 379113, unsafe.Pointer(&row), unsafe.Pointer(&col), unsafe.Pointer(&numRows), unsafe.Pointer(&numCols), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::removeColumns(int,int)
func (q *QTextTable) RemoveColumns(pos int32, num int32) {
	q.Drv(379000, 379114, unsafe.Pointer(&pos), unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::removeRows(int,int)
func (q *QTextTable) RemoveRows(pos int32, num int32) {
	q.Drv(379000, 379115, unsafe.Pointer(&pos), unsafe.Pointer(&num), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::resize(int,int)
func (q *QTextTable) Resize(rows int32, cols int32) {
	q.Drv(379000, 379116, unsafe.Pointer(&rows), unsafe.Pointer(&cols), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::rowEnd(QTextCursor const&)
func (q *QTextTable) RowEnd(c *QTextCursor) *QTextCursor {
	var __rv uintptr
	q.Drv(379000, 379117, Native(c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextTable::rowStart(QTextCursor const&)
func (q *QTextTable) RowStart(c *QTextCursor) *QTextCursor {
	var __rv uintptr
	q.Drv(379000, 379118, Native(c), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTextCursor{}
	_rp.SetDriver(__rv, 147000, true)
	return _rp
}

//QTextTable::rows()
func (q *QTextTable) Rows() int32 {
	var __rv int32
	q.Drv(379000, 379119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTextTable::setFormat(QTextTableFormat const&)
func (q *QTextTable) SetFormat(format *QTextTableFormat) {
	q.Drv(379000, 379120, Native(format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTextTable::splitCell(int,int,int,int)
func (q *QTextTable) SplitCell(row int32, col int32, numRows int32, numCols int32) {
	q.Drv(379000, 379121, unsafe.Pointer(&row), unsafe.Pointer(&col), unsafe.Pointer(&numRows), unsafe.Pointer(&numCols), nil, nil, nil, nil, nil, nil, nil, nil)
}

//struct QTimeEdit : QTimeEdit
type QTimeEdit struct {
	QDateTimeEdit
}

// New QTimeEdit from driver
func NewTimeEditFromDriver(drv Driver) *QTimeEdit {
	_p := &QTimeEdit{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTimeEdit::QTimeEdit()
func NewTimeEdit() *QTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 380000, 380102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimeEdit{}
	_p.SetDriver(__rv, 380000, false)
	return _p
}

//QTimeEdit::QTimeEdit(QWidget*)
func NewTimeEditWithParent(parent QWidgetInterface) *QTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 380000, 380103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimeEdit{}
	_p.SetDriver(__rv, 380000, false)
	return _p
}

//QTimeEdit::QTimeEdit(QTime const&,QWidget*)
func NewTimeEditWithTimeParent(time *QTime, parent QWidgetInterface) *QTimeEdit {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 380000, 380104, Native(time), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimeEdit{}
	_p.SetDriver(__rv, 380000, false)
	return _p
}

//enum QTimeLine_Direction - QTimeLine::Direction
type QTimeLine_Direction uint32

const (
	QTimeLine_Forward  QTimeLine_Direction = 0
	QTimeLine_Backward QTimeLine_Direction = 1
)

//enum QTimeLine_CurveShape - QTimeLine::CurveShape
type QTimeLine_CurveShape uint32

const (
	QTimeLine_EaseInCurve    QTimeLine_CurveShape = 0
	QTimeLine_EaseOutCurve   QTimeLine_CurveShape = 1
	QTimeLine_EaseInOutCurve QTimeLine_CurveShape = 2
	QTimeLine_LinearCurve    QTimeLine_CurveShape = 3
	QTimeLine_SineCurve      QTimeLine_CurveShape = 4
	QTimeLine_CosineCurve    QTimeLine_CurveShape = 5
)

//enum QTimeLine_State - QTimeLine::State
type QTimeLine_State uint32

const (
	QTimeLine_NotRunning QTimeLine_State = 0
	QTimeLine_Paused     QTimeLine_State = 1
	QTimeLine_Running    QTimeLine_State = 2
)

//struct QTimeLine : QTimeLine
type QTimeLine struct {
	QObject
}

// New QTimeLine from driver
func NewTimeLineFromDriver(drv Driver) *QTimeLine {
	_p := &QTimeLine{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTimeLine) OnFrameChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(381000, 381102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTimeLine) OnStateChanged(fn func(QTimeLine_State)) uintptr {
	var __rv uintptr
	q.Drv(381000, 381103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTimeLine) OnFinished(fn func()) uintptr {
	var __rv uintptr
	q.Drv(381000, 381104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTimeLine) OnValueChanged(fn func(float64)) uintptr {
	var __rv uintptr
	q.Drv(381000, 381105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTimeLine::QTimeLine()
func NewTimeLine() *QTimeLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 381000, 381106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimeLine{}
	_p.SetDriver(__rv, 381000, false)
	return _p
}

//QTimeLine::QTimeLine(int,QObject*)
func NewTimeLineWithDurationParent(duration int32, parent QObjectInterface) *QTimeLine {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 381000, 381107, unsafe.Pointer(&duration), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimeLine{}
	_p.SetDriver(__rv, 381000, false)
	return _p
}

//QTimeLine::currentFrame()
func (q *QTimeLine) CurrentFrame() int32 {
	var __rv int32
	q.Drv(381000, 381108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::currentTime()
func (q *QTimeLine) CurrentTime() int32 {
	var __rv int32
	q.Drv(381000, 381109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::currentValue()
func (q *QTimeLine) CurrentValue() float64 {
	var __rv float64
	q.Drv(381000, 381110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::curveShape()
func (q *QTimeLine) CurveShape() QTimeLine_CurveShape {
	var __rv QTimeLine_CurveShape
	q.Drv(381000, 381111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::direction()
func (q *QTimeLine) Direction() QTimeLine_Direction {
	var __rv QTimeLine_Direction
	q.Drv(381000, 381112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::duration()
func (q *QTimeLine) Duration() int32 {
	var __rv int32
	q.Drv(381000, 381113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::easingCurve()
func (q *QTimeLine) EasingCurve() *QEasingCurve {
	var __rv uintptr
	q.Drv(381000, 381114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QEasingCurve{}
	_rp.SetDriver(__rv, 29000, true)
	return _rp
}

//QTimeLine::endFrame()
func (q *QTimeLine) EndFrame() int32 {
	var __rv int32
	q.Drv(381000, 381115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::frameForTime(int)
func (q *QTimeLine) FrameForTime(msec int32) int32 {
	var __rv int32
	q.Drv(381000, 381116, unsafe.Pointer(&msec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::loopCount()
func (q *QTimeLine) LoopCount() int32 {
	var __rv int32
	q.Drv(381000, 381117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::resume()
func (q *QTimeLine) Resume() {
	q.Drv(381000, 381118, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setCurrentTime(int)
func (q *QTimeLine) SetCurrentTime(msec int32) {
	q.Drv(381000, 381119, unsafe.Pointer(&msec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setCurveShape(QTimeLine::CurveShape)
func (q *QTimeLine) SetCurveShape(shape QTimeLine_CurveShape) {
	q.Drv(381000, 381120, unsafe.Pointer(&shape), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setDirection(QTimeLine::Direction)
func (q *QTimeLine) SetDirection(direction QTimeLine_Direction) {
	q.Drv(381000, 381121, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setDuration(int)
func (q *QTimeLine) SetDuration(duration int32) {
	q.Drv(381000, 381122, unsafe.Pointer(&duration), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setEasingCurve(QEasingCurve const&)
func (q *QTimeLine) SetEasingCurve(curve *QEasingCurve) {
	q.Drv(381000, 381123, Native(curve), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setEndFrame(int)
func (q *QTimeLine) SetEndFrame(frame int32) {
	q.Drv(381000, 381124, unsafe.Pointer(&frame), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setFrameRange(int,int)
func (q *QTimeLine) SetFrameRange(startFrame int32, endFrame int32) {
	q.Drv(381000, 381125, unsafe.Pointer(&startFrame), unsafe.Pointer(&endFrame), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setLoopCount(int)
func (q *QTimeLine) SetLoopCount(count int32) {
	q.Drv(381000, 381126, unsafe.Pointer(&count), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setPaused(bool)
func (q *QTimeLine) SetPaused(paused bool) {
	q.Drv(381000, 381127, unsafe.Pointer(&paused), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setStartFrame(int)
func (q *QTimeLine) SetStartFrame(frame int32) {
	q.Drv(381000, 381128, unsafe.Pointer(&frame), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::setUpdateInterval(int)
func (q *QTimeLine) SetUpdateInterval(interval int32) {
	q.Drv(381000, 381129, unsafe.Pointer(&interval), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::start()
func (q *QTimeLine) Start() {
	q.Drv(381000, 381130, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::startFrame()
func (q *QTimeLine) StartFrame() int32 {
	var __rv int32
	q.Drv(381000, 381131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::state()
func (q *QTimeLine) State() QTimeLine_State {
	var __rv QTimeLine_State
	q.Drv(381000, 381132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::stop()
func (q *QTimeLine) Stop() {
	q.Drv(381000, 381133, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::toggleDirection()
func (q *QTimeLine) ToggleDirection() {
	q.Drv(381000, 381134, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimeLine::updateInterval()
func (q *QTimeLine) UpdateInterval() int32 {
	var __rv int32
	q.Drv(381000, 381135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimeLine::valueForTime(int)
func (q *QTimeLine) ValueForTime(msec int32) float64 {
	var __rv float64
	q.Drv(381000, 381136, unsafe.Pointer(&msec), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTimer : QTimer
type QTimer struct {
	QObject
}

// New QTimer from driver
func NewTimerFromDriver(drv Driver) *QTimer {
	_p := &QTimer{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTimer) OnTimeout(fn func()) uintptr {
	var __rv uintptr
	q.Drv(382000, 382102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTimer::QTimer()
func NewTimer() *QTimer {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 382000, 382103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimer{}
	_p.SetDriver(__rv, 382000, false)
	return _p
}

//QTimer::QTimer(QObject*)
func NewTimerWithParent(parent QObjectInterface) *QTimer {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 382000, 382104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTimer{}
	_p.SetDriver(__rv, 382000, false)
	return _p
}

//QTimer::interval()
func (q *QTimer) Interval() int32 {
	var __rv int32
	q.Drv(382000, 382105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimer::isActive()
func (q *QTimer) IsActive() bool {
	var __rv bool
	q.Drv(382000, 382106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimer::isSingleShot()
func (q *QTimer) IsSingleShot() bool {
	var __rv bool
	q.Drv(382000, 382107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTimer::setInterval(int)
func (q *QTimer) SetInterval(msec int32) {
	q.Drv(382000, 382108, unsafe.Pointer(&msec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::setSingleShot(bool)
func (q *QTimer) SetSingleShot(singleShot bool) {
	q.Drv(382000, 382109, unsafe.Pointer(&singleShot), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::singleShot(int,QObject*,char const*)
func QTimerSingleShot(msec int32, receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	DirectQtDrv(nil, 382000, 382110, unsafe.Pointer(&msec), Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::singleShot(int,QObject*,char const*)
func (q *QTimer) SingleShot(msec int32, receiver QObjectInterface, member string) {
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	q.Drv(382000, 382110, unsafe.Pointer(&msec), Native(receiver), unsafe.Pointer(_member), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::start()
func (q *QTimer) Start() {
	q.Drv(382000, 382111, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::start(int)
func (q *QTimer) StartWithMsec(msec int32) {
	q.Drv(382000, 382112, unsafe.Pointer(&msec), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::stop()
func (q *QTimer) Stop() {
	q.Drv(382000, 382113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTimer::timerId()
func (q *QTimer) TimerId() int32 {
	var __rv int32
	q.Drv(382000, 382114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QToolBar : QToolBar
type QToolBar struct {
	QWidget
}

// New QToolBar from driver
func NewToolBarFromDriver(drv Driver) *QToolBar {
	_p := &QToolBar{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QToolBar) OnMovableChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnToolButtonStyleChanged(fn func(Qt_ToolButtonStyle)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnActionTriggered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnTopLevelChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnVisibilityChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnOrientationChanged(fn func(Qt_Orientation)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnAllowedAreasChanged(fn func(Qt_ToolBarArea)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QToolBar) OnIconSizeChanged(fn func(*QSize)) uintptr {
	var __rv uintptr
	q.Drv(383000, 383109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QToolBar::QToolBar()
func NewToolBar() *QToolBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 383000, 383110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBar{}
	_p.SetDriver(__rv, 383000, false)
	return _p
}

//QToolBar::QToolBar(QWidget*)
func NewToolBarWithParent(parent QWidgetInterface) *QToolBar {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 383000, 383111, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBar{}
	_p.SetDriver(__rv, 383000, false)
	return _p
}

//QToolBar::QToolBar(QString const&,QWidget*)
func NewToolBarWithTitleParent(title string, parent QWidgetInterface) *QToolBar {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 383000, 383112, unsafe.Pointer(_title), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBar{}
	_p.SetDriver(__rv, 383000, false)
	return _p
}

//QToolBar::actionAt(QPoint const&)
func (q *QToolBar) ActionAt(p *QPoint) *QAction {
	var __rv uintptr
	q.Drv(383000, 383113, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::actionAt(int,int)
func (q *QToolBar) ActionAtWithXY(x int32, y int32) *QAction {
	var __rv uintptr
	q.Drv(383000, 383114, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::actionGeometry(QAction*)
func (q *QToolBar) ActionGeometry(action *QAction) *QRect {
	var __rv uintptr
	q.Drv(383000, 383115, Native(action), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QToolBar::addAction(QAction*)
func (q *QToolBar) AddAction(action *QAction) {
	q.Drv(383000, 383116, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::addAction(QString const&)
func (q *QToolBar) AddActionWithText(text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(383000, 383117, unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::addAction(QIcon const&,QString const&)
func (q *QToolBar) AddActionWithIconText(icon *QIcon, text string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv uintptr
	q.Drv(383000, 383118, Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::addAction(QString const&,QObject const*,char const*)
func (q *QToolBar) AddActionWithTextObjectMember(text string, receiver QObjectInterface, member string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	var __rv uintptr
	q.Drv(383000, 383119, unsafe.Pointer(_text), Native(receiver), unsafe.Pointer(_member), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::addAction(QIcon const&,QString const&,QObject const*,char const*)
func (q *QToolBar) AddActionWithIconTextObjectMember(icon *QIcon, text string, receiver QObjectInterface, member string) *QAction {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	_member := NewCStringHead(member)
	defer FreeCStringHead(_member)
	var __rv uintptr
	q.Drv(383000, 383120, Native(icon), unsafe.Pointer(_text), Native(receiver), unsafe.Pointer(_member), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::addSeparator()
func (q *QToolBar) AddSeparator() *QAction {
	var __rv uintptr
	q.Drv(383000, 383121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::addWidget(QWidget*)
func (q *QToolBar) AddWidget(widget QWidgetInterface) *QAction {
	var __rv uintptr
	q.Drv(383000, 383122, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::allowedAreas()
func (q *QToolBar) AllowedAreas() Qt_ToolBarArea {
	var __rv Qt_ToolBarArea
	q.Drv(383000, 383123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::clear()
func (q *QToolBar) Clear() {
	q.Drv(383000, 383124, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::iconSize()
func (q *QToolBar) IconSize() *QSize {
	var __rv uintptr
	q.Drv(383000, 383125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QToolBar::insertSeparator(QAction*)
func (q *QToolBar) InsertSeparator(before *QAction) *QAction {
	var __rv uintptr
	q.Drv(383000, 383126, Native(before), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::insertWidget(QAction*,QWidget*)
func (q *QToolBar) InsertWidget(before *QAction, widget QWidgetInterface) *QAction {
	var __rv uintptr
	q.Drv(383000, 383127, Native(before), Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::isAreaAllowed(Qt::ToolBarArea)
func (q *QToolBar) IsAreaAllowed(area Qt_ToolBarArea) bool {
	var __rv bool
	q.Drv(383000, 383128, unsafe.Pointer(&area), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::isFloatable()
func (q *QToolBar) IsFloatable() bool {
	var __rv bool
	q.Drv(383000, 383129, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::isFloating()
func (q *QToolBar) IsFloating() bool {
	var __rv bool
	q.Drv(383000, 383130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::isMovable()
func (q *QToolBar) IsMovable() bool {
	var __rv bool
	q.Drv(383000, 383131, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::orientation()
func (q *QToolBar) Orientation() Qt_Orientation {
	var __rv Qt_Orientation
	q.Drv(383000, 383132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::setAllowedAreas(QFlags<Qt::ToolBarArea>)
func (q *QToolBar) SetAllowedAreas(areas Qt_ToolBarArea) {
	q.Drv(383000, 383133, unsafe.Pointer(&areas), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::setFloatable(bool)
func (q *QToolBar) SetFloatable(floatable bool) {
	q.Drv(383000, 383134, unsafe.Pointer(&floatable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::setIconSize(QSize const&)
func (q *QToolBar) SetIconSize(iconSize *QSize) {
	q.Drv(383000, 383135, Native(iconSize), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::setMovable(bool)
func (q *QToolBar) SetMovable(movable bool) {
	q.Drv(383000, 383136, unsafe.Pointer(&movable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::setOrientation(Qt::Orientation)
func (q *QToolBar) SetOrientation(orientation Qt_Orientation) {
	q.Drv(383000, 383137, unsafe.Pointer(&orientation), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::setToolButtonStyle(Qt::ToolButtonStyle)
func (q *QToolBar) SetToolButtonStyle(toolButtonStyle Qt_ToolButtonStyle) {
	q.Drv(383000, 383138, unsafe.Pointer(&toolButtonStyle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBar::toggleViewAction()
func (q *QToolBar) ToggleViewAction() *QAction {
	var __rv uintptr
	q.Drv(383000, 383139, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolBar::toolButtonStyle()
func (q *QToolBar) ToolButtonStyle() Qt_ToolButtonStyle {
	var __rv Qt_ToolButtonStyle
	q.Drv(383000, 383140, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBar::widgetForAction(QAction*)
func (q *QToolBar) WidgetForAction(action *QAction) *QWidget {
	var __rv uintptr
	q.Drv(383000, 383141, Native(action), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//struct QToolBox : QToolBox
type QToolBox struct {
	QFrame
}

// New QToolBox from driver
func NewToolBoxFromDriver(drv Driver) *QToolBox {
	_p := &QToolBox{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QToolBox) OnCurrentChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(384000, 384102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QToolBox::QToolBox()
func NewToolBox() *QToolBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 384000, 384103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBox{}
	_p.SetDriver(__rv, 384000, false)
	return _p
}

//QToolBox::QToolBox(QWidget*,QFlags<Qt::WindowType>)
func NewToolBoxWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QToolBox {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 384000, 384104, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolBox{}
	_p.SetDriver(__rv, 384000, false)
	return _p
}

//QToolBox::addItem(QWidget*,QString const&)
func (q *QToolBox) AddItemWithWidgetText(widget QWidgetInterface, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(384000, 384105, Native(widget), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::addItem(QWidget*,QIcon const&,QString const&)
func (q *QToolBox) AddItemWithWidgetIconText(widget QWidgetInterface, icon *QIcon, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(384000, 384106, Native(widget), Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::count()
func (q *QToolBox) Count() int32 {
	var __rv int32
	q.Drv(384000, 384107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::currentIndex()
func (q *QToolBox) CurrentIndex() int32 {
	var __rv int32
	q.Drv(384000, 384108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::currentWidget()
func (q *QToolBox) CurrentWidget() *QWidget {
	var __rv uintptr
	q.Drv(384000, 384109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QToolBox::indexOf(QWidget*)
func (q *QToolBox) IndexOf(widget QWidgetInterface) int32 {
	var __rv int32
	q.Drv(384000, 384110, Native(widget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::insertItem(int,QWidget*,QString const&)
func (q *QToolBox) InsertItemWithIndexWidgetText(index int32, widget QWidgetInterface, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(384000, 384111, unsafe.Pointer(&index), Native(widget), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::insertItem(int,QWidget*,QIcon const&,QString const&)
func (q *QToolBox) InsertItemWithIndexWidgetIconText(index int32, widget QWidgetInterface, icon *QIcon, text string) int32 {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv int32
	q.Drv(384000, 384112, unsafe.Pointer(&index), Native(widget), Native(icon), unsafe.Pointer(_text), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::isItemEnabled(int)
func (q *QToolBox) IsItemEnabled(index int32) bool {
	var __rv bool
	q.Drv(384000, 384113, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolBox::itemIcon(int)
func (q *QToolBox) ItemIcon(index int32) *QIcon {
	var __rv uintptr
	q.Drv(384000, 384114, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QToolBox::itemInserted(int)
func (q *QToolBox) ItemInserted(index int32) {
	q.Drv(384000, 384115, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::itemRemoved(int)
func (q *QToolBox) ItemRemoved(index int32) {
	q.Drv(384000, 384116, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::itemText(int)
func (q *QToolBox) ItemText(index int32) string {
	var __rv C.string_head
	q.Drv(384000, 384117, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QToolBox::itemToolTip(int)
func (q *QToolBox) ItemToolTip(index int32) string {
	var __rv C.string_head
	q.Drv(384000, 384118, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QToolBox::removeItem(int)
func (q *QToolBox) RemoveItem(index int32) {
	q.Drv(384000, 384119, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setCurrentIndex(int)
func (q *QToolBox) SetCurrentIndex(index int32) {
	q.Drv(384000, 384120, unsafe.Pointer(&index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setCurrentWidget(QWidget*)
func (q *QToolBox) SetCurrentWidget(widget QWidgetInterface) {
	q.Drv(384000, 384121, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setItemEnabled(int,bool)
func (q *QToolBox) SetItemEnabled(index int32, enabled bool) {
	q.Drv(384000, 384122, unsafe.Pointer(&index), unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setItemIcon(int,QIcon const&)
func (q *QToolBox) SetItemIcon(index int32, icon *QIcon) {
	q.Drv(384000, 384123, unsafe.Pointer(&index), Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setItemText(int,QString const&)
func (q *QToolBox) SetItemText(index int32, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(384000, 384124, unsafe.Pointer(&index), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::setItemToolTip(int,QString const&)
func (q *QToolBox) SetItemToolTip(index int32, toolTip string) {
	_toolTip := NewCStringHead(toolTip)
	defer FreeCStringHead(_toolTip)
	q.Drv(384000, 384125, unsafe.Pointer(&index), unsafe.Pointer(_toolTip), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolBox::widget(int)
func (q *QToolBox) Widget(index int32) *QWidget {
	var __rv uintptr
	q.Drv(384000, 384126, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//enum QToolButton_ToolButtonPopupMode - QToolButton::ToolButtonPopupMode
type QToolButton_ToolButtonPopupMode uint32

const (
	QToolButton_DelayedPopup    QToolButton_ToolButtonPopupMode = 0
	QToolButton_MenuButtonPopup QToolButton_ToolButtonPopupMode = 1
	QToolButton_InstantPopup    QToolButton_ToolButtonPopupMode = 2
)

//struct QToolButton : QToolButton
type QToolButton struct {
	QAbstractButton
}

// New QToolButton from driver
func NewToolButtonFromDriver(drv Driver) *QToolButton {
	_p := &QToolButton{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QToolButton) OnTriggered(fn func(*QAction)) uintptr {
	var __rv uintptr
	q.Drv(385000, 385102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QToolButton::QToolButton()
func NewToolButton() *QToolButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 385000, 385103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolButton{}
	_p.SetDriver(__rv, 385000, false)
	return _p
}

//QToolButton::QToolButton(QWidget*)
func NewToolButtonWithParent(parent QWidgetInterface) *QToolButton {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 385000, 385104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QToolButton{}
	_p.SetDriver(__rv, 385000, false)
	return _p
}

//QToolButton::arrowType()
func (q *QToolButton) ArrowType() Qt_ArrowType {
	var __rv Qt_ArrowType
	q.Drv(385000, 385105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolButton::autoRaise()
func (q *QToolButton) AutoRaise() bool {
	var __rv bool
	q.Drv(385000, 385106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolButton::defaultAction()
func (q *QToolButton) DefaultAction() *QAction {
	var __rv uintptr
	q.Drv(385000, 385107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QToolButton::menu()
func (q *QToolButton) Menu() *QMenu {
	var __rv uintptr
	q.Drv(385000, 385108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMenu{}
	_rp.SetDriver(__rv, 310000, false)
	return _rp
}

//QToolButton::popupMode()
func (q *QToolButton) PopupMode() QToolButton_ToolButtonPopupMode {
	var __rv QToolButton_ToolButtonPopupMode
	q.Drv(385000, 385109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QToolButton::setArrowType(Qt::ArrowType)
func (q *QToolButton) SetArrowType(_type Qt_ArrowType) {
	q.Drv(385000, 385110, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::setAutoRaise(bool)
func (q *QToolButton) SetAutoRaise(enable bool) {
	q.Drv(385000, 385111, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::setDefaultAction(QAction*)
func (q *QToolButton) SetDefaultAction(value *QAction) {
	q.Drv(385000, 385112, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::setMenu(QMenu*)
func (q *QToolButton) SetMenu(menu *QMenu) {
	q.Drv(385000, 385113, Native(menu), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::setPopupMode(QToolButton::ToolButtonPopupMode)
func (q *QToolButton) SetPopupMode(mode QToolButton_ToolButtonPopupMode) {
	q.Drv(385000, 385114, unsafe.Pointer(&mode), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::setToolButtonStyle(Qt::ToolButtonStyle)
func (q *QToolButton) SetToolButtonStyle(style Qt_ToolButtonStyle) {
	q.Drv(385000, 385115, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::showMenu()
func (q *QToolButton) ShowMenu() {
	q.Drv(385000, 385116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QToolButton::toolButtonStyle()
func (q *QToolButton) ToolButtonStyle() Qt_ToolButtonStyle {
	var __rv Qt_ToolButtonStyle
	q.Drv(385000, 385117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTranslator : QTranslator
type QTranslator struct {
	QObject
}

// New QTranslator from driver
func NewTranslatorFromDriver(drv Driver) *QTranslator {
	_p := &QTranslator{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QTranslator::QTranslator()
func NewTranslator() *QTranslator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 386000, 386102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTranslator{}
	_p.SetDriver(__rv, 386000, false)
	return _p
}

//QTranslator::QTranslator(QObject*)
func NewTranslatorWithParent(parent QObjectInterface) *QTranslator {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 386000, 386103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTranslator{}
	_p.SetDriver(__rv, 386000, false)
	return _p
}

//QTranslator::isEmpty()
func (q *QTranslator) IsEmpty() bool {
	var __rv bool
	q.Drv(386000, 386104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTranslator::load(QString const&)
func (q *QTranslator) Load(filename string) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	var __rv bool
	q.Drv(386000, 386105, unsafe.Pointer(_filename), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTranslator::load(unsigned char const*,int)
func (q *QTranslator) LoadWithDataLen(data *byte, len int32) bool {
	var __rv bool
	q.Drv(386000, 386106, unsafe.Pointer(&data), unsafe.Pointer(&len), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTranslator::load(QString const&,QString const&,QString const&,QString const&)
func (q *QTranslator) LoadWithFilenameDirectorySearch_delimitersSuffix(filename string, directory string, search_delimiters string, suffix string) bool {
	_filename := NewCStringHead(filename)
	defer FreeCStringHead(_filename)
	_directory := NewCStringHead(directory)
	defer FreeCStringHead(_directory)
	_search_delimiters := NewCStringHead(search_delimiters)
	defer FreeCStringHead(_search_delimiters)
	_suffix := NewCStringHead(suffix)
	defer FreeCStringHead(_suffix)
	var __rv bool
	q.Drv(386000, 386107, unsafe.Pointer(_filename), unsafe.Pointer(_directory), unsafe.Pointer(_search_delimiters), unsafe.Pointer(_suffix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTranslator::translate(char const*,char const*,char const*)
func (q *QTranslator) TranslateWithContextSourcetextDisambiguation(context string, sourceText string, disambiguation string) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_sourceText := NewCStringHead(sourceText)
	defer FreeCStringHead(_sourceText)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	q.Drv(386000, 386108, unsafe.Pointer(_context), unsafe.Pointer(_sourceText), unsafe.Pointer(_disambiguation), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QTranslator::translate(char const*,char const*,char const*,int)
func (q *QTranslator) TranslateWithContextSourcetextDisambiguationInt32(context string, sourceText string, disambiguation string, n int32) string {
	_context := NewCStringHead(context)
	defer FreeCStringHead(_context)
	_sourceText := NewCStringHead(sourceText)
	defer FreeCStringHead(_sourceText)
	_disambiguation := NewCStringHead(disambiguation)
	defer FreeCStringHead(_disambiguation)
	var __rv C.string_head
	q.Drv(386000, 386109, unsafe.Pointer(_context), unsafe.Pointer(_sourceText), unsafe.Pointer(_disambiguation), unsafe.Pointer(&n), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QTreeView : QTreeView
type QTreeView struct {
	QAbstractItemView
}

// New QTreeView from driver
func NewTreeViewFromDriver(drv Driver) *QTreeView {
	_p := &QTreeView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTreeView) OnCollapsed(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(387000, 387102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeView) OnExpanded(fn func(*QModelIndex)) uintptr {
	var __rv uintptr
	q.Drv(387000, 387103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTreeView::QTreeView()
func NewTreeView() *QTreeView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 387000, 387104, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeView{}
	_p.SetDriver(__rv, 387000, false)
	return _p
}

//QTreeView::QTreeView(QWidget*)
func NewTreeViewWithParent(parent QWidgetInterface) *QTreeView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 387000, 387105, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeView{}
	_p.SetDriver(__rv, 387000, false)
	return _p
}

//QTreeView::allColumnsShowFocus()
func (q *QTreeView) AllColumnsShowFocus() bool {
	var __rv bool
	q.Drv(387000, 387106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::autoExpandDelay()
func (q *QTreeView) AutoExpandDelay() int32 {
	var __rv int32
	q.Drv(387000, 387107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::collapse(QModelIndex const&)
func (q *QTreeView) Collapse(index *QModelIndex) {
	q.Drv(387000, 387108, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::collapseAll()
func (q *QTreeView) CollapseAll() {
	q.Drv(387000, 387109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::columnAt(int)
func (q *QTreeView) ColumnAt(x int32) int32 {
	var __rv int32
	q.Drv(387000, 387110, unsafe.Pointer(&x), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::columnCountChanged(int,int)
func (q *QTreeView) ColumnCountChanged(oldCount int32, newCount int32) {
	q.Drv(387000, 387111, unsafe.Pointer(&oldCount), unsafe.Pointer(&newCount), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::columnMoved()
func (q *QTreeView) ColumnMoved() {
	q.Drv(387000, 387112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::columnResized(int,int,int)
func (q *QTreeView) ColumnResized(column int32, oldSize int32, newSize int32) {
	q.Drv(387000, 387113, unsafe.Pointer(&column), unsafe.Pointer(&oldSize), unsafe.Pointer(&newSize), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::columnViewportPosition(int)
func (q *QTreeView) ColumnViewportPosition(column int32) int32 {
	var __rv int32
	q.Drv(387000, 387114, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::columnWidth(int)
func (q *QTreeView) ColumnWidth(column int32) int32 {
	var __rv int32
	q.Drv(387000, 387115, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::drawBranches(QPainter*,QRect const&,QModelIndex const&)
func (q *QTreeView) DrawBranches(painter *QPainter, rect *QRect, index *QModelIndex) {
	q.Drv(387000, 387116, Native(painter), Native(rect), Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::drawTree(QPainter*,QRegion const&)
func (q *QTreeView) DrawTree(painter *QPainter, region *QRegion) {
	q.Drv(387000, 387117, Native(painter), Native(region), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::expand(QModelIndex const&)
func (q *QTreeView) Expand(index *QModelIndex) {
	q.Drv(387000, 387118, Native(index), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::expandAll()
func (q *QTreeView) ExpandAll() {
	q.Drv(387000, 387119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::expandToDepth(int)
func (q *QTreeView) ExpandToDepth(depth int32) {
	q.Drv(387000, 387120, unsafe.Pointer(&depth), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::expandsOnDoubleClick()
func (q *QTreeView) ExpandsOnDoubleClick() bool {
	var __rv bool
	q.Drv(387000, 387121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::header()
func (q *QTreeView) Header() *QHeaderView {
	var __rv uintptr
	q.Drv(387000, 387122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QHeaderView{}
	_rp.SetDriver(__rv, 292000, false)
	return _rp
}

//QTreeView::hideColumn(int)
func (q *QTreeView) HideColumn(column int32) {
	q.Drv(387000, 387123, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::indentation()
func (q *QTreeView) Indentation() int32 {
	var __rv int32
	q.Drv(387000, 387124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::indexAbove(QModelIndex const&)
func (q *QTreeView) IndexAbove(index *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(387000, 387125, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QTreeView::indexBelow(QModelIndex const&)
func (q *QTreeView) IndexBelow(index *QModelIndex) *QModelIndex {
	var __rv uintptr
	q.Drv(387000, 387126, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QTreeView::indexRowSizeHint(QModelIndex const&)
func (q *QTreeView) IndexRowSizeHint(index *QModelIndex) int32 {
	var __rv int32
	q.Drv(387000, 387127, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isAnimated()
func (q *QTreeView) IsAnimated() bool {
	var __rv bool
	q.Drv(387000, 387128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isColumnHidden(int)
func (q *QTreeView) IsColumnHidden(column int32) bool {
	var __rv bool
	q.Drv(387000, 387129, unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isExpanded(QModelIndex const&)
func (q *QTreeView) IsExpanded(index *QModelIndex) bool {
	var __rv bool
	q.Drv(387000, 387130, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isFirstColumnSpanned(int,QModelIndex const&)
func (q *QTreeView) IsFirstColumnSpanned(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(387000, 387131, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isHeaderHidden()
func (q *QTreeView) IsHeaderHidden() bool {
	var __rv bool
	q.Drv(387000, 387132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isRowHidden(int,QModelIndex const&)
func (q *QTreeView) IsRowHidden(row int32, parent *QModelIndex) bool {
	var __rv bool
	q.Drv(387000, 387133, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::isSortingEnabled()
func (q *QTreeView) IsSortingEnabled() bool {
	var __rv bool
	q.Drv(387000, 387134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::itemsExpandable()
func (q *QTreeView) ItemsExpandable() bool {
	var __rv bool
	q.Drv(387000, 387135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::reexpand()
func (q *QTreeView) Reexpand() {
	q.Drv(387000, 387136, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::resizeColumnToContents(int)
func (q *QTreeView) ResizeColumnToContents(column int32) {
	q.Drv(387000, 387137, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::rootIsDecorated()
func (q *QTreeView) RootIsDecorated() bool {
	var __rv bool
	q.Drv(387000, 387138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::rowHeight(QModelIndex const&)
func (q *QTreeView) RowHeight(index *QModelIndex) int32 {
	var __rv int32
	q.Drv(387000, 387139, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::rowsRemoved(QModelIndex const&,int,int)
func (q *QTreeView) RowsRemoved(parent *QModelIndex, first int32, last int32) {
	q.Drv(387000, 387140, Native(parent), unsafe.Pointer(&first), unsafe.Pointer(&last), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setAllColumnsShowFocus(bool)
func (q *QTreeView) SetAllColumnsShowFocus(enable bool) {
	q.Drv(387000, 387141, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setAnimated(bool)
func (q *QTreeView) SetAnimated(enable bool) {
	q.Drv(387000, 387142, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setAutoExpandDelay(int)
func (q *QTreeView) SetAutoExpandDelay(delay int32) {
	q.Drv(387000, 387143, unsafe.Pointer(&delay), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setColumnHidden(int,bool)
func (q *QTreeView) SetColumnHidden(column int32, hide bool) {
	q.Drv(387000, 387144, unsafe.Pointer(&column), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setColumnWidth(int,int)
func (q *QTreeView) SetColumnWidth(column int32, width int32) {
	q.Drv(387000, 387145, unsafe.Pointer(&column), unsafe.Pointer(&width), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setExpanded(QModelIndex const&,bool)
func (q *QTreeView) SetExpanded(index *QModelIndex, expand bool) {
	q.Drv(387000, 387146, Native(index), unsafe.Pointer(&expand), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setExpandsOnDoubleClick(bool)
func (q *QTreeView) SetExpandsOnDoubleClick(enable bool) {
	q.Drv(387000, 387147, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setFirstColumnSpanned(int,QModelIndex const&,bool)
func (q *QTreeView) SetFirstColumnSpanned(row int32, parent *QModelIndex, span bool) {
	q.Drv(387000, 387148, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&span), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setHeader(QHeaderView*)
func (q *QTreeView) SetHeader(header *QHeaderView) {
	q.Drv(387000, 387149, Native(header), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setHeaderHidden(bool)
func (q *QTreeView) SetHeaderHidden(hide bool) {
	q.Drv(387000, 387150, unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setIndentation(int)
func (q *QTreeView) SetIndentation(i int32) {
	q.Drv(387000, 387151, unsafe.Pointer(&i), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setItemsExpandable(bool)
func (q *QTreeView) SetItemsExpandable(enable bool) {
	q.Drv(387000, 387152, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setRootIsDecorated(bool)
func (q *QTreeView) SetRootIsDecorated(show bool) {
	q.Drv(387000, 387153, unsafe.Pointer(&show), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setRowHidden(int,QModelIndex const&,bool)
func (q *QTreeView) SetRowHidden(row int32, parent *QModelIndex, hide bool) {
	q.Drv(387000, 387154, unsafe.Pointer(&row), Native(parent), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setSortingEnabled(bool)
func (q *QTreeView) SetSortingEnabled(enable bool) {
	q.Drv(387000, 387155, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setUniformRowHeights(bool)
func (q *QTreeView) SetUniformRowHeights(uniform bool) {
	q.Drv(387000, 387156, unsafe.Pointer(&uniform), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::setWordWrap(bool)
func (q *QTreeView) SetWordWrap(on bool) {
	q.Drv(387000, 387157, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::showColumn(int)
func (q *QTreeView) ShowColumn(column int32) {
	q.Drv(387000, 387158, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::sortByColumn(int)
func (q *QTreeView) SortByColumn(column int32) {
	q.Drv(387000, 387159, unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::sortByColumn(int,Qt::SortOrder)
func (q *QTreeView) SortByColumnWithColumnOrder(column int32, order Qt_SortOrder) {
	q.Drv(387000, 387160, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeView::uniformRowHeights()
func (q *QTreeView) UniformRowHeights() bool {
	var __rv bool
	q.Drv(387000, 387161, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeView::wordWrap()
func (q *QTreeView) WordWrap() bool {
	var __rv bool
	q.Drv(387000, 387162, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QTreeWidget : QTreeWidget
type QTreeWidget struct {
	QTreeView
}

// New QTreeWidget from driver
func NewTreeWidgetFromDriver(drv Driver) *QTreeWidget {
	_p := &QTreeWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QTreeWidget) OnItemEntered(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemPressed(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemSelectionChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(388000, 388104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemCollapsed(fn func(*QTreeWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemActivated(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnCurrentItemChanged(fn func(*QTreeWidgetItem, *QTreeWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemDoubleClicked(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemExpanded(fn func(*QTreeWidgetItem)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388109, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemChanged(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388110, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QTreeWidget) OnItemClicked(fn func(*QTreeWidgetItem, int32)) uintptr {
	var __rv uintptr
	q.Drv(388000, 388111, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QTreeWidget::QTreeWidget()
func NewTreeWidget() *QTreeWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 388000, 388112, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidget{}
	_p.SetDriver(__rv, 388000, false)
	return _p
}

//QTreeWidget::QTreeWidget(QWidget*)
func NewTreeWidgetWithParent(parent QWidgetInterface) *QTreeWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 388000, 388113, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QTreeWidget{}
	_p.SetDriver(__rv, 388000, false)
	return _p
}

//QTreeWidget::addTopLevelItem(QTreeWidgetItem*)
func (q *QTreeWidget) AddTopLevelItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388114, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::addTopLevelItems(QList<QTreeWidgetItem*> const&)
func (q *QTreeWidget) AddTopLevelItems(items []*QTreeWidgetItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(388000, 388115, unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::clear()
func (q *QTreeWidget) Clear() {
	q.Drv(388000, 388116, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::closePersistentEditor(QTreeWidgetItem*)
func (q *QTreeWidget) ClosePersistentEditor(item *QTreeWidgetItem) {
	q.Drv(388000, 388117, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::closePersistentEditor(QTreeWidgetItem*,int)
func (q *QTreeWidget) ClosePersistentEditorWithItemColumn(item *QTreeWidgetItem, column int32) {
	q.Drv(388000, 388118, Native(item), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::collapseItem(QTreeWidgetItem const*)
func (q *QTreeWidget) CollapseItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388119, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::columnCount()
func (q *QTreeWidget) ColumnCount() int32 {
	var __rv int32
	q.Drv(388000, 388120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::currentColumn()
func (q *QTreeWidget) CurrentColumn() int32 {
	var __rv int32
	q.Drv(388000, 388121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::currentItem()
func (q *QTreeWidget) CurrentItem() *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::dropMimeData(QTreeWidgetItem*,int,QMimeData const*,Qt::DropAction)
func (q *QTreeWidget) DropMimeData(parent *QTreeWidgetItem, index int32, data *QMimeData, action Qt_DropAction) bool {
	var __rv bool
	q.Drv(388000, 388123, Native(parent), unsafe.Pointer(&index), Native(data), unsafe.Pointer(&action), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::editItem(QTreeWidgetItem*)
func (q *QTreeWidget) EditItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388124, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::editItem(QTreeWidgetItem*,int)
func (q *QTreeWidget) EditItemWithItemColumn(item *QTreeWidgetItem, column int32) {
	q.Drv(388000, 388125, Native(item), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::expandItem(QTreeWidgetItem const*)
func (q *QTreeWidget) ExpandItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388126, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::findItems(QString const&,QFlags<Qt::MatchFlag>,int)
func (q *QTreeWidget) FindItems(text string, flags Qt_MatchFlag, column int32) []*QTreeWidgetItem {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	var __rv []*QTreeWidgetItem
	q.Drv(388000, 388127, unsafe.Pointer(_text), unsafe.Pointer(&flags), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::headerItem()
func (q *QTreeWidget) HeaderItem() *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::indexFromItem(QTreeWidgetItem*,int)
func (q *QTreeWidget) IndexFromItem(item *QTreeWidgetItem, column int32) *QModelIndex {
	var __rv uintptr
	q.Drv(388000, 388129, Native(item), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QModelIndex{}
	_rp.SetDriver(__rv, 80000, true)
	return _rp
}

//QTreeWidget::indexOfTopLevelItem(QTreeWidgetItem*)
func (q *QTreeWidget) IndexOfTopLevelItem(item *QTreeWidgetItem) int32 {
	var __rv int32
	q.Drv(388000, 388130, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::insertTopLevelItem(int,QTreeWidgetItem*)
func (q *QTreeWidget) InsertTopLevelItem(index int32, item *QTreeWidgetItem) {
	q.Drv(388000, 388131, unsafe.Pointer(&index), Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::insertTopLevelItems(int,QList<QTreeWidgetItem*> const&)
func (q *QTreeWidget) InsertTopLevelItems(index int32, items []*QTreeWidgetItem) {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	q.Drv(388000, 388132, unsafe.Pointer(&index), unsafe.Pointer(_items), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::invisibleRootItem()
func (q *QTreeWidget) InvisibleRootItem() *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::isFirstItemColumnSpanned(QTreeWidgetItem const*)
func (q *QTreeWidget) IsFirstItemColumnSpanned(item *QTreeWidgetItem) bool {
	var __rv bool
	q.Drv(388000, 388134, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::isItemExpanded(QTreeWidgetItem const*)
func (q *QTreeWidget) IsItemExpanded(item *QTreeWidgetItem) bool {
	var __rv bool
	q.Drv(388000, 388135, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::isItemHidden(QTreeWidgetItem const*)
func (q *QTreeWidget) IsItemHidden(item *QTreeWidgetItem) bool {
	var __rv bool
	q.Drv(388000, 388136, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::isItemSelected(QTreeWidgetItem const*)
func (q *QTreeWidget) IsItemSelected(item *QTreeWidgetItem) bool {
	var __rv bool
	q.Drv(388000, 388137, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::isSortingEnabled()
func (q *QTreeWidget) IsSortingEnabled() bool {
	var __rv bool
	q.Drv(388000, 388138, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::itemAbove(QTreeWidgetItem const*)
func (q *QTreeWidget) ItemAbove(item *QTreeWidgetItem) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388139, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::itemAt(QPoint const&)
func (q *QTreeWidget) ItemAt(p *QPoint) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388140, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::itemAt(int,int)
func (q *QTreeWidget) ItemAtWithXY(x int32, y int32) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388141, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::itemBelow(QTreeWidgetItem const*)
func (q *QTreeWidget) ItemBelow(item *QTreeWidgetItem) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388142, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::itemFromIndex(QModelIndex const&)
func (q *QTreeWidget) ItemFromIndex(index *QModelIndex) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388143, Native(index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::itemWidget(QTreeWidgetItem*,int)
func (q *QTreeWidget) ItemWidget(item *QTreeWidgetItem, column int32) *QWidget {
	var __rv uintptr
	q.Drv(388000, 388144, Native(item), unsafe.Pointer(&column), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QTreeWidget::items(QMimeData const*)
func (q *QTreeWidget) Items(data *QMimeData) []*QTreeWidgetItem {
	var __rv []*QTreeWidgetItem
	q.Drv(388000, 388145, Native(data), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::mimeData(QList<QTreeWidgetItem*> const)
func (q *QTreeWidget) MimeData(items []*QTreeWidgetItem) *QMimeData {
	_items := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&items)))
	defer FreeCObjectArrayHead(_items)
	var __rv uintptr
	q.Drv(388000, 388146, unsafe.Pointer(_items), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMimeData{}
	_rp.SetDriver(__rv, 313000, false)
	return _rp
}

//QTreeWidget::mimeTypes()
func (q *QTreeWidget) MimeTypes() []string {
	var __rv []string
	q.Drv(388000, 388147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::openPersistentEditor(QTreeWidgetItem*)
func (q *QTreeWidget) OpenPersistentEditor(item *QTreeWidgetItem) {
	q.Drv(388000, 388148, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::openPersistentEditor(QTreeWidgetItem*,int)
func (q *QTreeWidget) OpenPersistentEditorWithItemColumn(item *QTreeWidgetItem, column int32) {
	q.Drv(388000, 388149, Native(item), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::removeItemWidget(QTreeWidgetItem*,int)
func (q *QTreeWidget) RemoveItemWidget(item *QTreeWidgetItem, column int32) {
	q.Drv(388000, 388150, Native(item), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::scrollToItem(QTreeWidgetItem const*)
func (q *QTreeWidget) ScrollToItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388151, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::scrollToItem(QTreeWidgetItem const*,QAbstractItemView::ScrollHint)
func (q *QTreeWidget) ScrollToItemWithItemHint(item *QTreeWidgetItem, hint QAbstractItemView_ScrollHint) {
	q.Drv(388000, 388152, Native(item), unsafe.Pointer(&hint), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::selectedItems()
func (q *QTreeWidget) SelectedItems() []*QTreeWidgetItem {
	var __rv []*QTreeWidgetItem
	q.Drv(388000, 388153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::setColumnCount(int)
func (q *QTreeWidget) SetColumnCount(columns int32) {
	q.Drv(388000, 388154, unsafe.Pointer(&columns), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setCurrentItem(QTreeWidgetItem*)
func (q *QTreeWidget) SetCurrentItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388155, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setCurrentItem(QTreeWidgetItem*,int)
func (q *QTreeWidget) SetCurrentItemWithItemColumn(item *QTreeWidgetItem, column int32) {
	q.Drv(388000, 388156, Native(item), unsafe.Pointer(&column), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setCurrentItem(QTreeWidgetItem*,int,QFlags<QItemSelectionModel::SelectionFlag>)
func (q *QTreeWidget) SetCurrentItemWithItemColumnCommand(item *QTreeWidgetItem, column int32, command QItemSelectionModel_SelectionFlag) {
	q.Drv(388000, 388157, Native(item), unsafe.Pointer(&column), unsafe.Pointer(&command), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setFirstItemColumnSpanned(QTreeWidgetItem const*,bool)
func (q *QTreeWidget) SetFirstItemColumnSpanned(item *QTreeWidgetItem, span bool) {
	q.Drv(388000, 388158, Native(item), unsafe.Pointer(&span), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setHeaderItem(QTreeWidgetItem*)
func (q *QTreeWidget) SetHeaderItem(item *QTreeWidgetItem) {
	q.Drv(388000, 388159, Native(item), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setHeaderLabel(QString const&)
func (q *QTreeWidget) SetHeaderLabel(label string) {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	q.Drv(388000, 388160, unsafe.Pointer(_label), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setHeaderLabels(QStringList const&)
func (q *QTreeWidget) SetHeaderLabels(labels []string) {
	_labels, _labels_size := NewCSArray(labels)
	defer FreeCSArray(_labels, _labels_size)
	q.Drv(388000, 388161, unsafe.Pointer(&_labels[0]), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setItemExpanded(QTreeWidgetItem const*,bool)
func (q *QTreeWidget) SetItemExpanded(item *QTreeWidgetItem, expand bool) {
	q.Drv(388000, 388162, Native(item), unsafe.Pointer(&expand), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setItemHidden(QTreeWidgetItem const*,bool)
func (q *QTreeWidget) SetItemHidden(item *QTreeWidgetItem, hide bool) {
	q.Drv(388000, 388163, Native(item), unsafe.Pointer(&hide), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setItemSelected(QTreeWidgetItem const*,bool)
func (q *QTreeWidget) SetItemSelected(item *QTreeWidgetItem, _select bool) {
	q.Drv(388000, 388164, Native(item), unsafe.Pointer(&_select), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setItemWidget(QTreeWidgetItem*,int,QWidget*)
func (q *QTreeWidget) SetItemWidget(item *QTreeWidgetItem, column int32, widget QWidgetInterface) {
	q.Drv(388000, 388165, Native(item), unsafe.Pointer(&column), Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::setSortingEnabled(bool)
func (q *QTreeWidget) SetSortingEnabled(enable bool) {
	q.Drv(388000, 388166, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::sortColumn()
func (q *QTreeWidget) SortColumn() int32 {
	var __rv int32
	q.Drv(388000, 388167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::sortItems(int,Qt::SortOrder)
func (q *QTreeWidget) SortItems(column int32, order Qt_SortOrder) {
	q.Drv(388000, 388168, unsafe.Pointer(&column), unsafe.Pointer(&order), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QTreeWidget::supportedDropActions()
func (q *QTreeWidget) SupportedDropActions() Qt_DropAction {
	var __rv Qt_DropAction
	q.Drv(388000, 388169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::takeTopLevelItem(int)
func (q *QTreeWidget) TakeTopLevelItem(index int32) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388170, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::topLevelItem(int)
func (q *QTreeWidget) TopLevelItem(index int32) *QTreeWidgetItem {
	var __rv uintptr
	q.Drv(388000, 388171, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QTreeWidgetItem{}
	_rp.SetDriver(__rv, 179000, true)
	return _rp
}

//QTreeWidget::topLevelItemCount()
func (q *QTreeWidget) TopLevelItemCount() int32 {
	var __rv int32
	q.Drv(388000, 388172, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QTreeWidget::visualItemRect(QTreeWidgetItem const*)
func (q *QTreeWidget) VisualItemRect(item *QTreeWidgetItem) *QRect {
	var __rv uintptr
	q.Drv(388000, 388173, Native(item), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//struct QUiLoader : QUiLoader
type QUiLoader struct {
	QObject
}

// New QUiLoader from driver
func NewUiLoaderFromDriver(drv Driver) *QUiLoader {
	_p := &QUiLoader{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QUiLoader::QUiLoader()
func NewUiLoader() *QUiLoader {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 389000, 389102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUiLoader{}
	_p.SetDriver(__rv, 389000, false)
	return _p
}

//QUiLoader::QUiLoader(QObject*)
func NewUiLoaderWithParent(parent QObjectInterface) *QUiLoader {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 389000, 389103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUiLoader{}
	_p.SetDriver(__rv, 389000, false)
	return _p
}

//QUiLoader::addPluginPath(QString const&)
func (q *QUiLoader) AddPluginPath(path string) {
	_path := NewCStringHead(path)
	defer FreeCStringHead(_path)
	q.Drv(389000, 389104, unsafe.Pointer(_path), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUiLoader::availableLayouts()
func (q *QUiLoader) AvailableLayouts() []string {
	var __rv []string
	q.Drv(389000, 389105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUiLoader::availableWidgets()
func (q *QUiLoader) AvailableWidgets() []string {
	var __rv []string
	q.Drv(389000, 389106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUiLoader::clearPluginPaths()
func (q *QUiLoader) ClearPluginPaths() {
	q.Drv(389000, 389107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUiLoader::createAction(QObject*)
func (q *QUiLoader) CreateAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(389000, 389108, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUiLoader::createAction(QObject*,QString const&)
func (q *QUiLoader) CreateActionWithParentName(parent QObjectInterface, name string) *QAction {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(389000, 389109, Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUiLoader::createActionGroup()
func (q *QUiLoader) CreateActionGroup() *QActionGroup {
	var __rv uintptr
	q.Drv(389000, 389110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QActionGroup{}
	_rp.SetDriver(__rv, 210000, false)
	return _rp
}

//QUiLoader::createActionGroup(QObject*,QString const&)
func (q *QUiLoader) CreateActionGroupWithParentName(parent QObjectInterface, name string) *QActionGroup {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(389000, 389111, Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QActionGroup{}
	_rp.SetDriver(__rv, 210000, false)
	return _rp
}

//QUiLoader::createLayout(QString const&)
func (q *QUiLoader) CreateLayout(className string) *QLayout {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	q.Drv(389000, 389112, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayout{}
	_rp.SetDriver(__rv, 302000, false)
	return _rp
}

//QUiLoader::createLayout(QString const&,QObject*,QString const&)
func (q *QUiLoader) CreateLayoutWithClassnameParentName(className string, parent QObjectInterface, name string) *QLayout {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(389000, 389113, unsafe.Pointer(_className), Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayout{}
	_rp.SetDriver(__rv, 302000, false)
	return _rp
}

//QUiLoader::createWidget(QString const&)
func (q *QUiLoader) CreateWidget(className string) *QWidget {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	var __rv uintptr
	q.Drv(389000, 389114, unsafe.Pointer(_className), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QUiLoader::createWidget(QString const&,QWidget*,QString const&)
func (q *QUiLoader) CreateWidgetWithClassnameParentName(className string, parent QWidgetInterface, name string) *QWidget {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(389000, 389115, unsafe.Pointer(_className), Native(parent), unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QUiLoader::isLanguageChangeEnabled()
func (q *QUiLoader) IsLanguageChangeEnabled() bool {
	var __rv bool
	q.Drv(389000, 389116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUiLoader::load(QIODevice*)
func (q *QUiLoader) Load(device QIODeviceInterface) *QWidget {
	var __rv uintptr
	q.Drv(389000, 389117, Native(device), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QUiLoader::load(QIODevice*,QWidget*)
func (q *QUiLoader) LoadWithDeviceWidget(device QIODeviceInterface, parentWidget QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(389000, 389118, Native(device), Native(parentWidget), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QUiLoader::pluginPaths()
func (q *QUiLoader) PluginPaths() []string {
	var __rv []string
	q.Drv(389000, 389119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUiLoader::setLanguageChangeEnabled(bool)
func (q *QUiLoader) SetLanguageChangeEnabled(enabled bool) {
	q.Drv(389000, 389120, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUiLoader::setWorkingDirectory(QDir const&)
func (q *QUiLoader) SetWorkingDirectory(dir *QDir) {
	q.Drv(389000, 389121, Native(dir), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUiLoader::workingDirectory()
func (q *QUiLoader) WorkingDirectory() *QDir {
	var __rv uintptr
	q.Drv(389000, 389122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QDir{}
	_rp.SetDriver(__rv, 22000, true)
	return _rp
}

//struct QUndoGroup : QUndoGroup
type QUndoGroup struct {
	QObject
}

// New QUndoGroup from driver
func NewUndoGroupFromDriver(drv Driver) *QUndoGroup {
	_p := &QUndoGroup{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QUndoGroup) OnIndexChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnActiveStackChanged(fn func(*QUndoStack)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnUndoTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnCanUndoChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnRedoTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnCanRedoChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoGroup) OnCleanChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(390000, 390108, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QUndoGroup::QUndoGroup()
func NewUndoGroup() *QUndoGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 390000, 390109, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoGroup{}
	_p.SetDriver(__rv, 390000, false)
	return _p
}

//QUndoGroup::QUndoGroup(QObject*)
func NewUndoGroupWithParent(parent QObjectInterface) *QUndoGroup {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 390000, 390110, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoGroup{}
	_p.SetDriver(__rv, 390000, false)
	return _p
}

//QUndoGroup::activeStack()
func (q *QUndoGroup) ActiveStack() *QUndoStack {
	var __rv uintptr
	q.Drv(390000, 390111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUndoStack{}
	_rp.SetDriver(__rv, 391000, false)
	return _rp
}

//QUndoGroup::addStack(QUndoStack*)
func (q *QUndoGroup) AddStack(stack *QUndoStack) {
	q.Drv(390000, 390112, Native(stack), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoGroup::canRedo()
func (q *QUndoGroup) CanRedo() bool {
	var __rv bool
	q.Drv(390000, 390113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoGroup::canUndo()
func (q *QUndoGroup) CanUndo() bool {
	var __rv bool
	q.Drv(390000, 390114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoGroup::createRedoAction(QObject*)
func (q *QUndoGroup) CreateRedoAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(390000, 390115, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoGroup::createRedoAction(QObject*,QString const&)
func (q *QUndoGroup) CreateRedoActionWithParentPrefix(parent QObjectInterface, prefix string) *QAction {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv uintptr
	q.Drv(390000, 390116, Native(parent), unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoGroup::createUndoAction(QObject*)
func (q *QUndoGroup) CreateUndoAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(390000, 390117, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoGroup::createUndoAction(QObject*,QString const&)
func (q *QUndoGroup) CreateUndoActionWithParentPrefix(parent QObjectInterface, prefix string) *QAction {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv uintptr
	q.Drv(390000, 390118, Native(parent), unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoGroup::isClean()
func (q *QUndoGroup) IsClean() bool {
	var __rv bool
	q.Drv(390000, 390119, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoGroup::redo()
func (q *QUndoGroup) Redo() {
	q.Drv(390000, 390120, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoGroup::redoText()
func (q *QUndoGroup) RedoText() string {
	var __rv C.string_head
	q.Drv(390000, 390121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUndoGroup::removeStack(QUndoStack*)
func (q *QUndoGroup) RemoveStack(stack *QUndoStack) {
	q.Drv(390000, 390122, Native(stack), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoGroup::setActiveStack(QUndoStack*)
func (q *QUndoGroup) SetActiveStack(stack *QUndoStack) {
	q.Drv(390000, 390123, Native(stack), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoGroup::stacks()
func (q *QUndoGroup) Stacks() []*QUndoStack {
	var __rv []*QUndoStack
	q.Drv(390000, 390124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoGroup::undo()
func (q *QUndoGroup) Undo() {
	q.Drv(390000, 390125, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoGroup::undoText()
func (q *QUndoGroup) UndoText() string {
	var __rv C.string_head
	q.Drv(390000, 390126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QUndoStack : QUndoStack
type QUndoStack struct {
	QObject
}

// New QUndoStack from driver
func NewUndoStackFromDriver(drv Driver) *QUndoStack {
	_p := &QUndoStack{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QUndoStack) OnIndexChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoStack) OnUndoTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoStack) OnCanUndoChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoStack) OnRedoTextChanged(fn func(string)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoStack) OnCanRedoChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QUndoStack) OnCleanChanged(fn func(bool)) uintptr {
	var __rv uintptr
	q.Drv(391000, 391107, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QUndoStack::QUndoStack()
func NewUndoStack() *QUndoStack {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 391000, 391108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoStack{}
	_p.SetDriver(__rv, 391000, false)
	return _p
}

//QUndoStack::QUndoStack(QObject*)
func NewUndoStackWithParent(parent QObjectInterface) *QUndoStack {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 391000, 391109, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoStack{}
	_p.SetDriver(__rv, 391000, false)
	return _p
}

//QUndoStack::beginMacro(QString const&)
func (q *QUndoStack) BeginMacro(text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(391000, 391110, unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::canRedo()
func (q *QUndoStack) CanRedo() bool {
	var __rv bool
	q.Drv(391000, 391111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::canUndo()
func (q *QUndoStack) CanUndo() bool {
	var __rv bool
	q.Drv(391000, 391112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::cleanIndex()
func (q *QUndoStack) CleanIndex() int32 {
	var __rv int32
	q.Drv(391000, 391113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::clear()
func (q *QUndoStack) Clear() {
	q.Drv(391000, 391114, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::command(int)
func (q *QUndoStack) Command(index int32) *QUndoCommand {
	var __rv uintptr
	q.Drv(391000, 391115, unsafe.Pointer(&index), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUndoCommand{}
	_rp.SetDriver(__rv, 181000, true)
	return _rp
}

//QUndoStack::count()
func (q *QUndoStack) Count() int32 {
	var __rv int32
	q.Drv(391000, 391116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::createRedoAction(QObject*)
func (q *QUndoStack) CreateRedoAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(391000, 391117, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoStack::createRedoAction(QObject*,QString const&)
func (q *QUndoStack) CreateRedoActionWithParentPrefix(parent QObjectInterface, prefix string) *QAction {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv uintptr
	q.Drv(391000, 391118, Native(parent), unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoStack::createUndoAction(QObject*)
func (q *QUndoStack) CreateUndoAction(parent QObjectInterface) *QAction {
	var __rv uintptr
	q.Drv(391000, 391119, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoStack::createUndoAction(QObject*,QString const&)
func (q *QUndoStack) CreateUndoActionWithParentPrefix(parent QObjectInterface, prefix string) *QAction {
	_prefix := NewCStringHead(prefix)
	defer FreeCStringHead(_prefix)
	var __rv uintptr
	q.Drv(391000, 391120, Native(parent), unsafe.Pointer(_prefix), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAction{}
	_rp.SetDriver(__rv, 209000, false)
	return _rp
}

//QUndoStack::endMacro()
func (q *QUndoStack) EndMacro() {
	q.Drv(391000, 391121, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::index()
func (q *QUndoStack) Index() int32 {
	var __rv int32
	q.Drv(391000, 391122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::isActive()
func (q *QUndoStack) IsActive() bool {
	var __rv bool
	q.Drv(391000, 391123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::isClean()
func (q *QUndoStack) IsClean() bool {
	var __rv bool
	q.Drv(391000, 391124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::push(QUndoCommand*)
func (q *QUndoStack) Push(cmd *QUndoCommand) {
	q.Drv(391000, 391125, Native(cmd), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::redo()
func (q *QUndoStack) Redo() {
	q.Drv(391000, 391126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::redoText()
func (q *QUndoStack) RedoText() string {
	var __rv C.string_head
	q.Drv(391000, 391127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUndoStack::setActive(bool)
func (q *QUndoStack) SetActive(active bool) {
	q.Drv(391000, 391128, unsafe.Pointer(&active), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::setClean()
func (q *QUndoStack) SetClean() {
	q.Drv(391000, 391129, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::setIndex(int)
func (q *QUndoStack) SetIndex(idx int32) {
	q.Drv(391000, 391130, unsafe.Pointer(&idx), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::setUndoLimit(int)
func (q *QUndoStack) SetUndoLimit(limit int32) {
	q.Drv(391000, 391131, unsafe.Pointer(&limit), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::text(int)
func (q *QUndoStack) Text(idx int32) string {
	var __rv C.string_head
	q.Drv(391000, 391132, unsafe.Pointer(&idx), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUndoStack::undo()
func (q *QUndoStack) Undo() {
	q.Drv(391000, 391133, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoStack::undoLimit()
func (q *QUndoStack) UndoLimit() int32 {
	var __rv int32
	q.Drv(391000, 391134, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUndoStack::undoText()
func (q *QUndoStack) UndoText() string {
	var __rv C.string_head
	q.Drv(391000, 391135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QUndoView : QUndoView
type QUndoView struct {
	QListView
}

// New QUndoView from driver
func NewUndoViewFromDriver(drv Driver) *QUndoView {
	_p := &QUndoView{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QUndoView::QUndoView()
func NewUndoView() *QUndoView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 392000, 392102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoView{}
	_p.SetDriver(__rv, 392000, false)
	return _p
}

//QUndoView::QUndoView(QWidget*)
func NewUndoViewWithParent(parent QWidgetInterface) *QUndoView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 392000, 392103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoView{}
	_p.SetDriver(__rv, 392000, false)
	return _p
}

//QUndoView::QUndoView(QUndoGroup*,QWidget*)
func NewUndoViewWithGroupParent(group *QUndoGroup, parent QWidgetInterface) *QUndoView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 392000, 392104, Native(group), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoView{}
	_p.SetDriver(__rv, 392000, false)
	return _p
}

//QUndoView::QUndoView(QUndoStack*,QWidget*)
func NewUndoViewWithStackParent(stack *QUndoStack, parent QWidgetInterface) *QUndoView {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 392000, 392105, Native(stack), Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUndoView{}
	_p.SetDriver(__rv, 392000, false)
	return _p
}

//QUndoView::cleanIcon()
func (q *QUndoView) CleanIcon() *QIcon {
	var __rv uintptr
	q.Drv(392000, 392106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QUndoView::emptyLabel()
func (q *QUndoView) EmptyLabel() string {
	var __rv C.string_head
	q.Drv(392000, 392107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUndoView::group()
func (q *QUndoView) Group() *QUndoGroup {
	var __rv uintptr
	q.Drv(392000, 392108, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUndoGroup{}
	_rp.SetDriver(__rv, 390000, false)
	return _rp
}

//QUndoView::setCleanIcon(QIcon const&)
func (q *QUndoView) SetCleanIcon(icon *QIcon) {
	q.Drv(392000, 392109, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoView::setEmptyLabel(QString const&)
func (q *QUndoView) SetEmptyLabel(label string) {
	_label := NewCStringHead(label)
	defer FreeCStringHead(_label)
	q.Drv(392000, 392110, unsafe.Pointer(_label), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoView::setGroup(QUndoGroup*)
func (q *QUndoView) SetGroup(group *QUndoGroup) {
	q.Drv(392000, 392111, Native(group), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoView::setStack(QUndoStack*)
func (q *QUndoView) SetStack(stack *QUndoStack) {
	q.Drv(392000, 392112, Native(stack), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUndoView::stack()
func (q *QUndoView) Stack() *QUndoStack {
	var __rv uintptr
	q.Drv(392000, 392113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QUndoStack{}
	_rp.SetDriver(__rv, 391000, false)
	return _rp
}

//struct QUrlQuery : QUrlQuery
type QUrlQuery struct {
	QObject
}

// New QUrlQuery from driver
func NewUrlQueryFromDriver(drv Driver) *QUrlQuery {
	_p := &QUrlQuery{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QUrlQuery::QUrlQuery()
func NewUrlQuery() *QUrlQuery {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 393000, 393102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrlQuery{}
	_p.SetDriver(__rv, 393000, false)
	return _p
}

//QUrlQuery::QUrlQuery(QString const&)
func NewUrlQueryWithQuerystring(queryString string) *QUrlQuery {
	_queryString := NewCStringHead(queryString)
	defer FreeCStringHead(_queryString)
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 393000, 393103, unsafe.Pointer(_queryString), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrlQuery{}
	_p.SetDriver(__rv, 393000, false)
	return _p
}

//QUrlQuery::QUrlQuery(QUrl const&)
func NewUrlQueryWithUrl(url *QUrl) *QUrlQuery {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 393000, 393104, Native(url), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrlQuery{}
	_p.SetDriver(__rv, 393000, false)
	return _p
}

//QUrlQuery::QUrlQuery(QUrlQuery const&)
func NewUrlQueryCopy(other *QUrlQuery) *QUrlQuery {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 393000, 393105, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QUrlQuery{}
	_p.SetDriver(__rv, 393000, false)
	return _p
}

//QUrlQuery::addQueryItem(QString const&,QString const&)
func (q *QUrlQuery) AddQueryItem(key string, value string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(393000, 393106, unsafe.Pointer(_key), unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::allQueryItemValues(QString const&)
func (q *QUrlQuery) AllQueryItemValues(key string) []string {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv []string
	q.Drv(393000, 393107, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::clear()
func (q *QUrlQuery) Clear() {
	q.Drv(393000, 393108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::defaultQueryPairDelimiter()
func QUrlQueryDefaultQueryPairDelimiter() rune {
	var __rv rune
	DirectQtDrv(nil, 393000, 393109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::defaultQueryPairDelimiter()
func (q *QUrlQuery) DefaultQueryPairDelimiter() rune {
	var __rv rune
	q.Drv(393000, 393109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::defaultQueryValueDelimiter()
func QUrlQueryDefaultQueryValueDelimiter() rune {
	var __rv rune
	DirectQtDrv(nil, 393000, 393110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::defaultQueryValueDelimiter()
func (q *QUrlQuery) DefaultQueryValueDelimiter() rune {
	var __rv rune
	q.Drv(393000, 393110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::hasQueryItem(QString const&)
func (q *QUrlQuery) HasQueryItem(key string) bool {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv bool
	q.Drv(393000, 393111, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::isDetached()
func (q *QUrlQuery) IsDetached() bool {
	var __rv bool
	q.Drv(393000, 393112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::isEmpty()
func (q *QUrlQuery) IsEmpty() bool {
	var __rv bool
	q.Drv(393000, 393113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::query()
func (q *QUrlQuery) Query() string {
	var __rv C.string_head
	q.Drv(393000, 393114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrlQuery::queryItemValue(QString const&)
func (q *QUrlQuery) QueryItemValue(key string) string {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	var __rv C.string_head
	q.Drv(393000, 393115, unsafe.Pointer(_key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QUrlQuery::queryPairDelimiter()
func (q *QUrlQuery) QueryPairDelimiter() rune {
	var __rv rune
	q.Drv(393000, 393116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::queryValueDelimiter()
func (q *QUrlQuery) QueryValueDelimiter() rune {
	var __rv rune
	q.Drv(393000, 393117, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QUrlQuery::removeAllQueryItems(QString const&)
func (q *QUrlQuery) RemoveAllQueryItems(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(393000, 393118, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::removeQueryItem(QString const&)
func (q *QUrlQuery) RemoveQueryItem(key string) {
	_key := NewCStringHead(key)
	defer FreeCStringHead(_key)
	q.Drv(393000, 393119, unsafe.Pointer(_key), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::setQuery(QString const&)
func (q *QUrlQuery) SetQuery(queryString string) {
	_queryString := NewCStringHead(queryString)
	defer FreeCStringHead(_queryString)
	q.Drv(393000, 393120, unsafe.Pointer(_queryString), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::setQueryDelimiters(QChar,QChar)
func (q *QUrlQuery) SetQueryDelimiters(valueDelimiter rune, pairDelimiter rune) {
	q.Drv(393000, 393121, unsafe.Pointer(&valueDelimiter), unsafe.Pointer(&pairDelimiter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::swap(QUrlQuery&)
func (q *QUrlQuery) Swap(other *QUrlQuery) {
	q.Drv(393000, 393122, Native(other), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QUrlQuery::toString()
func (q *QUrlQuery) ToString() string {
	var __rv C.string_head
	q.Drv(393000, 393123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//struct QVBoxLayout : QVBoxLayout
type QVBoxLayout struct {
	QBoxLayout
}

// New QVBoxLayout from driver
func NewVBoxLayoutFromDriver(drv Driver) *QVBoxLayout {
	_p := &QVBoxLayout{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QVBoxLayout::QVBoxLayout()
func NewVBoxLayout() *QVBoxLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 394000, 394102, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVBoxLayout{}
	_p.SetDriver(__rv, 394000, false)
	return _p
}

//QVBoxLayout::QVBoxLayout(QWidget*)
func NewVBoxLayoutWithParent(parent QWidgetInterface) *QVBoxLayout {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 394000, 394103, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QVBoxLayout{}
	_p.SetDriver(__rv, 394000, false)
	return _p
}

//enum QValidator_State - QValidator::State
type QValidator_State uint32

const (
	QValidator_Invalid      QValidator_State = 0
	QValidator_Intermediate QValidator_State = 1
	QValidator_Acceptable   QValidator_State = 2
)

//struct QValidator : QValidator
type QValidator struct {
	QObject
}

//QValidator::fixup(QString&)
func (q *QValidator) Fixup(value *string) {
	q.Drv(395000, 395102, unsafe.Pointer(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QValidator::locale()
func (q *QValidator) Locale() *QLocale {
	var __rv uintptr
	q.Drv(395000, 395103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QValidator::setLocale(QLocale const&)
func (q *QValidator) SetLocale(locale *QLocale) {
	q.Drv(395000, 395104, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QValidator::validate(QString&,int&)
func (q *QValidator) Validate(value2 *string, value3 *int32) QValidator_State {
	var __rv QValidator_State
	q.Drv(395000, 395105, unsafe.Pointer(value2), unsafe.Pointer(&value3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QVariantAnimation : QVariantAnimation
type QVariantAnimation struct {
	QAbstractAnimation
}

func (q *QVariantAnimation) OnValueChanged(fn func(*QVariant)) uintptr {
	var __rv uintptr
	q.Drv(396000, 396102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QVariantAnimation::currentValue()
func (q *QVariantAnimation) CurrentValue() *QVariant {
	var __rv uintptr
	q.Drv(396000, 396103, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QVariantAnimation::easingCurve()
func (q *QVariantAnimation) EasingCurve() *QEasingCurve {
	var __rv uintptr
	q.Drv(396000, 396104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QEasingCurve{}
	_rp.SetDriver(__rv, 29000, true)
	return _rp
}

//QVariantAnimation::endValue()
func (q *QVariantAnimation) EndValue() *QVariant {
	var __rv uintptr
	q.Drv(396000, 396105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QVariantAnimation::interpolated(QVariant const&,QVariant const&,double)
func (q *QVariantAnimation) Interpolated(from *QVariant, to *QVariant, progress float64) *QVariant {
	var __rv uintptr
	q.Drv(396000, 396106, Native(from), Native(to), unsafe.Pointer(&progress), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QVariantAnimation::keyValueAt(double)
func (q *QVariantAnimation) KeyValueAt(step float64) *QVariant {
	var __rv uintptr
	q.Drv(396000, 396107, unsafe.Pointer(&step), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QVariantAnimation::setDuration(int)
func (q *QVariantAnimation) SetDuration(msecs int32) {
	q.Drv(396000, 396108, unsafe.Pointer(&msecs), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariantAnimation::setEasingCurve(QEasingCurve const&)
func (q *QVariantAnimation) SetEasingCurve(easing *QEasingCurve) {
	q.Drv(396000, 396109, Native(easing), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariantAnimation::setEndValue(QVariant const&)
func (q *QVariantAnimation) SetEndValue(value *QVariant) {
	q.Drv(396000, 396110, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariantAnimation::setKeyValueAt(double,QVariant const&)
func (q *QVariantAnimation) SetKeyValueAt(step float64, value *QVariant) {
	q.Drv(396000, 396111, unsafe.Pointer(&step), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariantAnimation::setStartValue(QVariant const&)
func (q *QVariantAnimation) SetStartValue(value *QVariant) {
	q.Drv(396000, 396112, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QVariantAnimation::startValue()
func (q *QVariantAnimation) StartValue() *QVariant {
	var __rv uintptr
	q.Drv(396000, 396113, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QVariantAnimation::updateCurrentValue(QVariant const&)
func (q *QVariantAnimation) UpdateCurrentValue(value *QVariant) {
	q.Drv(396000, 396114, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QWidget_RenderFlag - QWidget::RenderFlag
type QWidget_RenderFlag uint32

const (
	QWidget_DrawWindowBackground QWidget_RenderFlag = 0x1
	QWidget_DrawChildren         QWidget_RenderFlag = 0x2
	QWidget_IgnoreMask           QWidget_RenderFlag = 0x4
)

//struct QWidget : QWidget
type QWidget struct {
	QObject
}

// New QWidget from driver
func NewWidgetFromDriver(drv Driver) *QWidget {
	_p := &QWidget{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QWidget) OnCustomContextMenuRequested(fn func(*QPoint)) uintptr {
	var __rv uintptr
	q.Drv(397000, 397102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QWidget::QWidget()
func NewWidget() *QWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 397000, 397103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWidget{}
	_p.SetDriver(__rv, 397000, false)
	return _p
}

//QWidget::QWidget(QWidget*,QFlags<Qt::WindowType>)
func NewWidgetWithParentFlags(parent QWidgetInterface, f Qt_WindowType) *QWidget {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 397000, 397104, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWidget{}
	_p.SetDriver(__rv, 397000, false)
	return _p
}

//QWidget::acceptDrops()
func (q *QWidget) AcceptDrops() bool {
	var __rv bool
	q.Drv(397000, 397105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::accessibleDescription()
func (q *QWidget) AccessibleDescription() string {
	var __rv C.string_head
	q.Drv(397000, 397106, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::accessibleName()
func (q *QWidget) AccessibleName() string {
	var __rv C.string_head
	q.Drv(397000, 397107, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::actionEvent(QActionEvent*)
func (q *QWidget) ActionEvent(value *QActionEvent) {
	q.Drv(397000, 397108, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::actions()
func (q *QWidget) Actions() []*QAction {
	var __rv []*QAction
	q.Drv(397000, 397109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::activateWindow()
func (q *QWidget) ActivateWindow() {
	q.Drv(397000, 397110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::addAction(QAction*)
func (q *QWidget) AddAction(action *QAction) {
	q.Drv(397000, 397111, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::addActions(QList<QAction*>)
func (q *QWidget) AddActions(actions []*QAction) {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	q.Drv(397000, 397112, unsafe.Pointer(_actions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::adjustSize()
func (q *QWidget) AdjustSize() {
	q.Drv(397000, 397113, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::autoFillBackground()
func (q *QWidget) AutoFillBackground() bool {
	var __rv bool
	q.Drv(397000, 397114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::backgroundRole()
func (q *QWidget) BackgroundRole() QPalette_ColorRole {
	var __rv QPalette_ColorRole
	q.Drv(397000, 397115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::baseSize()
func (q *QWidget) BaseSize() *QSize {
	var __rv uintptr
	q.Drv(397000, 397116, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::changeEvent(QEvent*)
func (q *QWidget) ChangeEvent(value *QEvent) {
	q.Drv(397000, 397117, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::childAt(QPoint const&)
func (q *QWidget) ChildAt(p *QPoint) *QWidget {
	var __rv uintptr
	q.Drv(397000, 397118, Native(p), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::childAt(int,int)
func (q *QWidget) ChildAtWithXY(x int32, y int32) *QWidget {
	var __rv uintptr
	q.Drv(397000, 397119, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::childrenRect()
func (q *QWidget) ChildrenRect() *QRect {
	var __rv uintptr
	q.Drv(397000, 397120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::childrenRegion()
func (q *QWidget) ChildrenRegion() *QRegion {
	var __rv uintptr
	q.Drv(397000, 397121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QWidget::clearFocus()
func (q *QWidget) ClearFocus() {
	q.Drv(397000, 397122, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::clearMask()
func (q *QWidget) ClearMask() {
	q.Drv(397000, 397123, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::close()
func (q *QWidget) Close() bool {
	var __rv bool
	q.Drv(397000, 397124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::closeEvent(QCloseEvent*)
func (q *QWidget) CloseEvent(value *QCloseEvent) {
	q.Drv(397000, 397125, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintDevice::colorCount()
func (q *QWidget) ColorCount() int32 {
	var __rv int32
	q.Drv(397000, 397126, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::contentsMargins()
func (q *QWidget) ContentsMargins() *QMargins {
	var __rv uintptr
	q.Drv(397000, 397127, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QMargins{}
	_rp.SetDriver(__rv, 74000, true)
	return _rp
}

//QWidget::contentsRect()
func (q *QWidget) ContentsRect() *QRect {
	var __rv uintptr
	q.Drv(397000, 397128, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::contextMenuEvent(QContextMenuEvent*)
func (q *QWidget) ContextMenuEvent(value *QContextMenuEvent) {
	q.Drv(397000, 397129, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::contextMenuPolicy()
func (q *QWidget) ContextMenuPolicy() Qt_ContextMenuPolicy {
	var __rv Qt_ContextMenuPolicy
	q.Drv(397000, 397130, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::createWinId()
func (q *QWidget) CreateWinId() {
	q.Drv(397000, 397131, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::cursor()
func (q *QWidget) Cursor() *QCursor {
	var __rv uintptr
	q.Drv(397000, 397132, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QCursor{}
	_rp.SetDriver(__rv, 18000, true)
	return _rp
}

//QPaintDevice::depth()
func (q *QWidget) Depth() int32 {
	var __rv int32
	q.Drv(397000, 397133, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::destroy(bool,bool)
func (q *QWidget) Destroy(destroyWindow bool, destroySubWindows bool) {
	q.Drv(397000, 397134, unsafe.Pointer(&destroyWindow), unsafe.Pointer(&destroySubWindows), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::devType()
func (q *QWidget) DevType() int32 {
	var __rv int32
	q.Drv(397000, 397135, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::dragEnterEvent(QDragEnterEvent*)
func (q *QWidget) DragEnterEvent(value *QDragEnterEvent) {
	q.Drv(397000, 397136, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::dragLeaveEvent(QDragLeaveEvent*)
func (q *QWidget) DragLeaveEvent(value *QDragLeaveEvent) {
	q.Drv(397000, 397137, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::dragMoveEvent(QDragMoveEvent*)
func (q *QWidget) DragMoveEvent(value *QDragMoveEvent) {
	q.Drv(397000, 397138, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::dropEvent(QDropEvent*)
func (q *QWidget) DropEvent(value *QDropEvent) {
	q.Drv(397000, 397139, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::ensurePolished()
func (q *QWidget) EnsurePolished() {
	q.Drv(397000, 397140, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::enterEvent(QEvent*)
func (q *QWidget) EnterEvent(value *QEvent) {
	q.Drv(397000, 397141, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::event(QEvent*)
func (q *QWidget) Event(value *QEvent) bool {
	var __rv bool
	q.Drv(397000, 397142, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::focusInEvent(QFocusEvent*)
func (q *QWidget) FocusInEvent(value *QFocusEvent) {
	q.Drv(397000, 397143, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::focusNextChild()
func (q *QWidget) FocusNextChild() bool {
	var __rv bool
	q.Drv(397000, 397144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::focusNextPrevChild(bool)
func (q *QWidget) FocusNextPrevChild(next bool) bool {
	var __rv bool
	q.Drv(397000, 397145, unsafe.Pointer(&next), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::focusOutEvent(QFocusEvent*)
func (q *QWidget) FocusOutEvent(value *QFocusEvent) {
	q.Drv(397000, 397146, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::focusPolicy()
func (q *QWidget) FocusPolicy() Qt_FocusPolicy {
	var __rv Qt_FocusPolicy
	q.Drv(397000, 397147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::focusPreviousChild()
func (q *QWidget) FocusPreviousChild() bool {
	var __rv bool
	q.Drv(397000, 397148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::focusProxy()
func (q *QWidget) FocusProxy() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::focusWidget()
func (q *QWidget) FocusWidget() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397150, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::font()
func (q *QWidget) Font() *QFont {
	var __rv uintptr
	q.Drv(397000, 397151, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFont{}
	_rp.SetDriver(__rv, 37000, true)
	return _rp
}

//QWidget::fontInfo()
func (q *QWidget) FontInfo() *QFontInfo {
	var __rv uintptr
	q.Drv(397000, 397152, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontInfo{}
	_rp.SetDriver(__rv, 39000, true)
	return _rp
}

//QWidget::fontMetrics()
func (q *QWidget) FontMetrics() *QFontMetrics {
	var __rv uintptr
	q.Drv(397000, 397153, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QFontMetrics{}
	_rp.SetDriver(__rv, 40000, true)
	return _rp
}

//QWidget::foregroundRole()
func (q *QWidget) ForegroundRole() QPalette_ColorRole {
	var __rv QPalette_ColorRole
	q.Drv(397000, 397154, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::frameGeometry()
func (q *QWidget) FrameGeometry() *QRect {
	var __rv uintptr
	q.Drv(397000, 397155, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::frameSize()
func (q *QWidget) FrameSize() *QSize {
	var __rv uintptr
	q.Drv(397000, 397156, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::geometry()
func (q *QWidget) Geometry() *QRect {
	var __rv uintptr
	q.Drv(397000, 397157, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::getContentsMargins(int*,int*,int*,int*)
func (q *QWidget) GetContentsMargins(left *int32, top *int32, right *int32, bottom *int32) {
	q.Drv(397000, 397158, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabGesture(Qt::GestureType)
func (q *QWidget) GrabGesture(_type Qt_GestureType) {
	q.Drv(397000, 397159, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabGesture(Qt::GestureType,QFlags<Qt::GestureFlag>)
func (q *QWidget) GrabGestureWithTypeFlags(_type Qt_GestureType, flags Qt_GestureFlag) {
	q.Drv(397000, 397160, unsafe.Pointer(&_type), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabKeyboard()
func (q *QWidget) GrabKeyboard() {
	q.Drv(397000, 397161, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabMouse()
func (q *QWidget) GrabMouse() {
	q.Drv(397000, 397162, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabMouse(QCursor const&)
func (q *QWidget) GrabMouseWithCursor(value *QCursor) {
	q.Drv(397000, 397163, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::grabShortcut(QKeySequence const&)
func (q *QWidget) GrabShortcut(key *QKeySequence) int32 {
	var __rv int32
	q.Drv(397000, 397164, Native(key), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::grabShortcut(QKeySequence const&,Qt::ShortcutContext)
func (q *QWidget) GrabShortcutWithKeyContext(key *QKeySequence, context Qt_ShortcutContext) int32 {
	var __rv int32
	q.Drv(397000, 397165, Native(key), unsafe.Pointer(&context), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::graphicsEffect()
func (q *QWidget) GraphicsEffect() *QGraphicsEffect {
	var __rv uintptr
	q.Drv(397000, 397166, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsEffect{}
	_rp.SetDriver(__rv, 255000, false)
	return _rp
}

//QWidget::graphicsProxyWidget()
func (q *QWidget) GraphicsProxyWidget() *QGraphicsProxyWidget {
	var __rv uintptr
	q.Drv(397000, 397167, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QGraphicsProxyWidget{}
	_rp.SetDriver(__rv, 270000, false)
	return _rp
}

//QWidget::hasFocus()
func (q *QWidget) HasFocus() bool {
	var __rv bool
	q.Drv(397000, 397168, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::hasMouseTracking()
func (q *QWidget) HasMouseTracking() bool {
	var __rv bool
	q.Drv(397000, 397169, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::height()
func (q *QWidget) Height() int32 {
	var __rv int32
	q.Drv(397000, 397170, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::heightForWidth(int)
func (q *QWidget) HeightForWidth(value int32) int32 {
	var __rv int32
	q.Drv(397000, 397171, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::heightMM()
func (q *QWidget) HeightMM() int32 {
	var __rv int32
	q.Drv(397000, 397172, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::hide()
func (q *QWidget) Hide() {
	q.Drv(397000, 397173, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::hideEvent(QHideEvent*)
func (q *QWidget) HideEvent(value *QHideEvent) {
	q.Drv(397000, 397174, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::inputMethodEvent(QInputMethodEvent*)
func (q *QWidget) InputMethodEvent(value *QInputMethodEvent) {
	q.Drv(397000, 397175, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::inputMethodHints()
func (q *QWidget) InputMethodHints() Qt_InputMethodHint {
	var __rv Qt_InputMethodHint
	q.Drv(397000, 397176, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::inputMethodQuery(Qt::InputMethodQuery)
func (q *QWidget) InputMethodQuery(value Qt_InputMethodQuery) *QVariant {
	var __rv uintptr
	q.Drv(397000, 397177, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QWidget::insertAction(QAction*,QAction*)
func (q *QWidget) InsertAction(before *QAction, action *QAction) {
	q.Drv(397000, 397178, Native(before), Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::insertActions(QAction*,QList<QAction*>)
func (q *QWidget) InsertActions(before *QAction, actions []*QAction) {
	_actions := NewCObjectArrayHead(*(*[]*QObject)(unsafe.Pointer(&actions)))
	defer FreeCObjectArrayHead(_actions)
	q.Drv(397000, 397179, Native(before), unsafe.Pointer(_actions), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::isActiveWindow()
func (q *QWidget) IsActiveWindow() bool {
	var __rv bool
	q.Drv(397000, 397180, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isAncestorOf(QWidget const*)
func (q *QWidget) IsAncestorOf(child QWidgetInterface) bool {
	var __rv bool
	q.Drv(397000, 397181, Native(child), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isEnabled()
func (q *QWidget) IsEnabled() bool {
	var __rv bool
	q.Drv(397000, 397182, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isEnabledTo(QWidget*)
func (q *QWidget) IsEnabledTo(value QWidgetInterface) bool {
	var __rv bool
	q.Drv(397000, 397183, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isEnabledToTLW()
func (q *QWidget) IsEnabledToTLW() bool {
	var __rv bool
	q.Drv(397000, 397184, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isFullScreen()
func (q *QWidget) IsFullScreen() bool {
	var __rv bool
	q.Drv(397000, 397185, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isHidden()
func (q *QWidget) IsHidden() bool {
	var __rv bool
	q.Drv(397000, 397186, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isLeftToRight()
func (q *QWidget) IsLeftToRight() bool {
	var __rv bool
	q.Drv(397000, 397187, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isMaximized()
func (q *QWidget) IsMaximized() bool {
	var __rv bool
	q.Drv(397000, 397188, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isMinimized()
func (q *QWidget) IsMinimized() bool {
	var __rv bool
	q.Drv(397000, 397189, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isModal()
func (q *QWidget) IsModal() bool {
	var __rv bool
	q.Drv(397000, 397190, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isRightToLeft()
func (q *QWidget) IsRightToLeft() bool {
	var __rv bool
	q.Drv(397000, 397191, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isTopLevel()
func (q *QWidget) IsTopLevel() bool {
	var __rv bool
	q.Drv(397000, 397192, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isVisible()
func (q *QWidget) IsVisible() bool {
	var __rv bool
	q.Drv(397000, 397193, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isVisibleTo(QWidget*)
func (q *QWidget) IsVisibleTo(value QWidgetInterface) bool {
	var __rv bool
	q.Drv(397000, 397194, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isWindow()
func (q *QWidget) IsWindow() bool {
	var __rv bool
	q.Drv(397000, 397195, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::isWindowModified()
func (q *QWidget) IsWindowModified() bool {
	var __rv bool
	q.Drv(397000, 397196, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::keyPressEvent(QKeyEvent*)
func (q *QWidget) KeyPressEvent(value *QKeyEvent) {
	q.Drv(397000, 397197, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::keyReleaseEvent(QKeyEvent*)
func (q *QWidget) KeyReleaseEvent(value *QKeyEvent) {
	q.Drv(397000, 397198, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::keyboardGrabber()
func QWidgetKeyboardGrabber() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 397000, 397199, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::keyboardGrabber()
func (q *QWidget) KeyboardGrabber() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397199, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::layout()
func (q *QWidget) Layout() *QLayout {
	var __rv uintptr
	q.Drv(397000, 397200, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLayout{}
	_rp.SetDriver(__rv, 302000, false)
	return _rp
}

//QWidget::layoutDirection()
func (q *QWidget) LayoutDirection() Qt_LayoutDirection {
	var __rv Qt_LayoutDirection
	q.Drv(397000, 397201, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::leaveEvent(QEvent*)
func (q *QWidget) LeaveEvent(value *QEvent) {
	q.Drv(397000, 397202, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::locale()
func (q *QWidget) Locale() *QLocale {
	var __rv uintptr
	q.Drv(397000, 397203, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QLocale{}
	_rp.SetDriver(__rv, 73000, true)
	return _rp
}

//QPaintDevice::logicalDpiX()
func (q *QWidget) LogicalDpiX() int32 {
	var __rv int32
	q.Drv(397000, 397204, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::logicalDpiY()
func (q *QWidget) LogicalDpiY() int32 {
	var __rv int32
	q.Drv(397000, 397205, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::lower()
func (q *QWidget) Lower() {
	q.Drv(397000, 397206, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::mapFrom(QWidget*,QPoint const&)
func (q *QWidget) MapFrom(value2 QWidgetInterface, value3 *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397207, Native(value2), Native(value3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mapFromGlobal(QPoint const&)
func (q *QWidget) MapFromGlobal(value *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397208, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mapFromParent(QPoint const&)
func (q *QWidget) MapFromParent(value *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397209, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mapTo(QWidget*,QPoint const&)
func (q *QWidget) MapTo(value2 QWidgetInterface, value3 *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397210, Native(value2), Native(value3), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mapToGlobal(QPoint const&)
func (q *QWidget) MapToGlobal(value *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397211, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mapToParent(QPoint const&)
func (q *QWidget) MapToParent(value *QPoint) *QPoint {
	var __rv uintptr
	q.Drv(397000, 397212, Native(value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::mask()
func (q *QWidget) Mask() *QRegion {
	var __rv uintptr
	q.Drv(397000, 397213, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QWidget::maximumHeight()
func (q *QWidget) MaximumHeight() int32 {
	var __rv int32
	q.Drv(397000, 397214, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::maximumSize()
func (q *QWidget) MaximumSize() *QSize {
	var __rv uintptr
	q.Drv(397000, 397215, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::maximumWidth()
func (q *QWidget) MaximumWidth() int32 {
	var __rv int32
	q.Drv(397000, 397216, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::metric(QPaintDevice::PaintDeviceMetric)
func (q *QWidget) Metric(value QPaintDevice_PaintDeviceMetric) int32 {
	var __rv int32
	q.Drv(397000, 397217, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::minimumHeight()
func (q *QWidget) MinimumHeight() int32 {
	var __rv int32
	q.Drv(397000, 397218, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::minimumSize()
func (q *QWidget) MinimumSize() *QSize {
	var __rv uintptr
	q.Drv(397000, 397219, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::minimumSizeHint()
func (q *QWidget) MinimumSizeHint() *QSize {
	var __rv uintptr
	q.Drv(397000, 397220, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::minimumWidth()
func (q *QWidget) MinimumWidth() int32 {
	var __rv int32
	q.Drv(397000, 397221, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::mouseDoubleClickEvent(QMouseEvent*)
func (q *QWidget) MouseDoubleClickEvent(value *QMouseEvent) {
	q.Drv(397000, 397222, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::mouseGrabber()
func QWidgetMouseGrabber() *QWidget {
	var __rv uintptr
	DirectQtDrv(nil, 397000, 397223, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::mouseGrabber()
func (q *QWidget) MouseGrabber() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397223, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::mouseMoveEvent(QMouseEvent*)
func (q *QWidget) MouseMoveEvent(value *QMouseEvent) {
	q.Drv(397000, 397224, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::mousePressEvent(QMouseEvent*)
func (q *QWidget) MousePressEvent(value *QMouseEvent) {
	q.Drv(397000, 397225, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::mouseReleaseEvent(QMouseEvent*)
func (q *QWidget) MouseReleaseEvent(value *QMouseEvent) {
	q.Drv(397000, 397226, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::move(QPoint const&)
func (q *QWidget) Move(value *QPoint) {
	q.Drv(397000, 397227, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::move(int,int)
func (q *QWidget) MoveWithXY(x int32, y int32) {
	q.Drv(397000, 397228, unsafe.Pointer(&x), unsafe.Pointer(&y), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::moveEvent(QMoveEvent*)
func (q *QWidget) MoveEvent(value *QMoveEvent) {
	q.Drv(397000, 397229, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::nativeParentWidget()
func (q *QWidget) NativeParentWidget() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397230, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::nextInFocusChain()
func (q *QWidget) NextInFocusChain() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397231, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::normalGeometry()
func (q *QWidget) NormalGeometry() *QRect {
	var __rv uintptr
	q.Drv(397000, 397232, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::overrideWindowFlags(QFlags<Qt::WindowType>)
func (q *QWidget) OverrideWindowFlags(_type Qt_WindowType) {
	q.Drv(397000, 397233, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::overrideWindowState(QFlags<Qt::WindowState>)
func (q *QWidget) OverrideWindowState(state Qt_WindowState) {
	q.Drv(397000, 397234, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::paintEngine()
func (q *QWidget) PaintEngine() *QPaintEngine {
	var __rv uintptr
	q.Drv(397000, 397235, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPaintEngine{}
	_rp.SetDriver(__rv, 84000, true)
	return _rp
}

//QWidget::paintEvent(QPaintEvent*)
func (q *QWidget) PaintEvent(value *QPaintEvent) {
	q.Drv(397000, 397236, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QPaintDevice::paintingActive()
func (q *QWidget) PaintingActive() bool {
	var __rv bool
	q.Drv(397000, 397237, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::palette()
func (q *QWidget) Palette() *QPalette {
	var __rv uintptr
	q.Drv(397000, 397238, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPalette{}
	_rp.SetDriver(__rv, 92000, true)
	return _rp
}

//QWidget::parentWidget()
func (q *QWidget) ParentWidget() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397239, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QPaintDevice::physicalDpiX()
func (q *QWidget) PhysicalDpiX() int32 {
	var __rv int32
	q.Drv(397000, 397240, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::physicalDpiY()
func (q *QWidget) PhysicalDpiY() int32 {
	var __rv int32
	q.Drv(397000, 397241, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::pos()
func (q *QWidget) Pos() *QPoint {
	var __rv uintptr
	q.Drv(397000, 397242, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPoint{}
	_rp.SetDriver(__rv, 100000, true)
	return _rp
}

//QWidget::previousInFocusChain()
func (q *QWidget) PreviousInFocusChain() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397243, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::raise()
func (q *QWidget) Raise() {
	q.Drv(397000, 397244, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::rect()
func (q *QWidget) Rect() *QRect {
	var __rv uintptr
	q.Drv(397000, 397245, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRect{}
	_rp.SetDriver(__rv, 111000, true)
	return _rp
}

//QWidget::releaseKeyboard()
func (q *QWidget) ReleaseKeyboard() {
	q.Drv(397000, 397246, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::releaseMouse()
func (q *QWidget) ReleaseMouse() {
	q.Drv(397000, 397247, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::releaseShortcut(int)
func (q *QWidget) ReleaseShortcut(id int32) {
	q.Drv(397000, 397248, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::removeAction(QAction*)
func (q *QWidget) RemoveAction(action *QAction) {
	q.Drv(397000, 397249, Native(action), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::render(QPaintDevice*)
func (q *QWidget) Render(target QPaintDeviceInterface) {
	q.Drv(397000, 397250, unsafe.Pointer(new_pd_head(target)), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::render(QPainter*)
func (q *QWidget) RenderWithPainter(painter *QPainter) {
	q.Drv(397000, 397251, Native(painter), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::render(QPaintDevice*,QPoint const&,QRegion const&,QFlags<QWidget::RenderFlag>)
func (q *QWidget) RenderWithPaintDeviceTargetoffsetSourceregionRenderflags(target QPaintDeviceInterface, targetOffset *QPoint, sourceRegion *QRegion, renderFlags QWidget_RenderFlag) {
	q.Drv(397000, 397252, unsafe.Pointer(new_pd_head(target)), Native(targetOffset), Native(sourceRegion), unsafe.Pointer(&renderFlags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::render(QPainter*,QPoint const&,QRegion const&,QFlags<QWidget::RenderFlag>)
func (q *QWidget) RenderWithPainterTargetoffsetSourceregionRenderflags(painter *QPainter, targetOffset *QPoint, sourceRegion *QRegion, renderFlags QWidget_RenderFlag) {
	q.Drv(397000, 397253, Native(painter), Native(targetOffset), Native(sourceRegion), unsafe.Pointer(&renderFlags), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::repaint()
func (q *QWidget) Repaint() {
	q.Drv(397000, 397254, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::repaint(QRect const&)
func (q *QWidget) RepaintWithRect(value *QRect) {
	q.Drv(397000, 397255, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::repaint(QRegion const&)
func (q *QWidget) RepaintWithRegion(value *QRegion) {
	q.Drv(397000, 397256, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::repaint(int,int,int,int)
func (q *QWidget) RepaintWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(397000, 397257, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::resize(QSize const&)
func (q *QWidget) Resize(value *QSize) {
	q.Drv(397000, 397258, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::resize(int,int)
func (q *QWidget) ResizeWithWidthHeight(w int32, h int32) {
	q.Drv(397000, 397259, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::resizeEvent(QResizeEvent*)
func (q *QWidget) ResizeEvent(value *QResizeEvent) {
	q.Drv(397000, 397260, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::restoreGeometry(QByteArray const&)
func (q *QWidget) RestoreGeometry(geometry []byte) bool {
	_geometry := NewCByteArrayHead(geometry)
	defer FreeCByteArrayHead(_geometry)
	var __rv bool
	q.Drv(397000, 397261, unsafe.Pointer(_geometry), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::saveGeometry()
func (q *QWidget) SaveGeometry() []byte {
	var __rv []byte
	q.Drv(397000, 397262, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::scroll(int,int)
func (q *QWidget) ScrollWithDxDy(dx int32, dy int32) {
	q.Drv(397000, 397263, unsafe.Pointer(&dx), unsafe.Pointer(&dy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::scroll(int,int,QRect const&)
func (q *QWidget) ScrollWithDxDyRect(dx int32, dy int32, value2 *QRect) {
	q.Drv(397000, 397264, unsafe.Pointer(&dx), unsafe.Pointer(&dy), Native(value2), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAcceptDrops(bool)
func (q *QWidget) SetAcceptDrops(on bool) {
	q.Drv(397000, 397265, unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAccessibleDescription(QString const&)
func (q *QWidget) SetAccessibleDescription(description string) {
	_description := NewCStringHead(description)
	defer FreeCStringHead(_description)
	q.Drv(397000, 397266, unsafe.Pointer(_description), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAccessibleName(QString const&)
func (q *QWidget) SetAccessibleName(name string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(397000, 397267, unsafe.Pointer(_name), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAttribute(Qt::WidgetAttribute)
func (q *QWidget) SetAttribute(value Qt_WidgetAttribute) {
	q.Drv(397000, 397268, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAttribute(Qt::WidgetAttribute,bool)
func (q *QWidget) SetAttributeWithWidgetattributeOn(value2 Qt_WidgetAttribute, on bool) {
	q.Drv(397000, 397269, unsafe.Pointer(&value2), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setAutoFillBackground(bool)
func (q *QWidget) SetAutoFillBackground(enabled bool) {
	q.Drv(397000, 397270, unsafe.Pointer(&enabled), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setBackgroundRole(QPalette::ColorRole)
func (q *QWidget) SetBackgroundRole(value QPalette_ColorRole) {
	q.Drv(397000, 397271, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setBaseSize(QSize const&)
func (q *QWidget) SetBaseSize(value *QSize) {
	q.Drv(397000, 397272, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setBaseSize(int,int)
func (q *QWidget) SetBaseSizeWithBasewBaseh(basew int32, baseh int32) {
	q.Drv(397000, 397273, unsafe.Pointer(&basew), unsafe.Pointer(&baseh), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setContentsMargins(QMargins const&)
func (q *QWidget) SetContentsMargins(margins *QMargins) {
	q.Drv(397000, 397274, Native(margins), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setContentsMargins(int,int,int,int)
func (q *QWidget) SetContentsMarginsWithLeftTopRightBottom(left int32, top int32, right int32, bottom int32) {
	q.Drv(397000, 397275, unsafe.Pointer(&left), unsafe.Pointer(&top), unsafe.Pointer(&right), unsafe.Pointer(&bottom), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setContextMenuPolicy(Qt::ContextMenuPolicy)
func (q *QWidget) SetContextMenuPolicy(policy Qt_ContextMenuPolicy) {
	q.Drv(397000, 397276, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setCursor(QCursor const&)
func (q *QWidget) SetCursor(value *QCursor) {
	q.Drv(397000, 397277, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setDisabled(bool)
func (q *QWidget) SetDisabled(value bool) {
	q.Drv(397000, 397278, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setEnabled(bool)
func (q *QWidget) SetEnabled(value bool) {
	q.Drv(397000, 397279, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFixedHeight(int)
func (q *QWidget) SetFixedHeight(h int32) {
	q.Drv(397000, 397280, unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFixedSize(QSize const&)
func (q *QWidget) SetFixedSize(value *QSize) {
	q.Drv(397000, 397281, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFixedSize(int,int)
func (q *QWidget) SetFixedSizeWithWidthHeight(w int32, h int32) {
	q.Drv(397000, 397282, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFixedWidth(int)
func (q *QWidget) SetFixedWidth(w int32) {
	q.Drv(397000, 397283, unsafe.Pointer(&w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFocus()
func (q *QWidget) SetFocus() {
	q.Drv(397000, 397284, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFocus(Qt::FocusReason)
func (q *QWidget) SetFocusWithReason(reason Qt_FocusReason) {
	q.Drv(397000, 397285, unsafe.Pointer(&reason), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFocusPolicy(Qt::FocusPolicy)
func (q *QWidget) SetFocusPolicy(policy Qt_FocusPolicy) {
	q.Drv(397000, 397286, unsafe.Pointer(&policy), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFocusProxy(QWidget*)
func (q *QWidget) SetFocusProxy(value QWidgetInterface) {
	q.Drv(397000, 397287, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setFont(QFont const&)
func (q *QWidget) SetFont(value *QFont) {
	q.Drv(397000, 397288, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setForegroundRole(QPalette::ColorRole)
func (q *QWidget) SetForegroundRole(value QPalette_ColorRole) {
	q.Drv(397000, 397289, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setGeometry(QRect const&)
func (q *QWidget) SetGeometry(value *QRect) {
	q.Drv(397000, 397290, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setGeometry(int,int,int,int)
func (q *QWidget) SetGeometryWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(397000, 397291, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setGraphicsEffect(QGraphicsEffect*)
func (q *QWidget) SetGraphicsEffect(effect *QGraphicsEffect) {
	q.Drv(397000, 397292, Native(effect), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setHidden(bool)
func (q *QWidget) SetHidden(hidden bool) {
	q.Drv(397000, 397293, unsafe.Pointer(&hidden), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setInputMethodHints(QFlags<Qt::InputMethodHint>)
func (q *QWidget) SetInputMethodHints(hints Qt_InputMethodHint) {
	q.Drv(397000, 397294, unsafe.Pointer(&hints), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setLayout(QLayout*)
func (q *QWidget) SetLayout(value QLayoutInterface) {
	q.Drv(397000, 397295, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setLayoutDirection(Qt::LayoutDirection)
func (q *QWidget) SetLayoutDirection(direction Qt_LayoutDirection) {
	q.Drv(397000, 397296, unsafe.Pointer(&direction), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setLocale(QLocale const&)
func (q *QWidget) SetLocale(locale *QLocale) {
	q.Drv(397000, 397297, Native(locale), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMask(QBitmap const&)
func (q *QWidget) SetMask(value *QBitmap) {
	q.Drv(397000, 397298, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMask(QRegion const&)
func (q *QWidget) SetMaskWithRegion(value *QRegion) {
	q.Drv(397000, 397299, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMaximumHeight(int)
func (q *QWidget) SetMaximumHeight(maxh int32) {
	q.Drv(397000, 397300, unsafe.Pointer(&maxh), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMaximumSize(QSize const&)
func (q *QWidget) SetMaximumSize(value *QSize) {
	q.Drv(397000, 397301, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMaximumSize(int,int)
func (q *QWidget) SetMaximumSizeWithMaxwMaxh(maxw int32, maxh int32) {
	q.Drv(397000, 397302, unsafe.Pointer(&maxw), unsafe.Pointer(&maxh), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMaximumWidth(int)
func (q *QWidget) SetMaximumWidth(maxw int32) {
	q.Drv(397000, 397303, unsafe.Pointer(&maxw), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMinimumHeight(int)
func (q *QWidget) SetMinimumHeight(minh int32) {
	q.Drv(397000, 397304, unsafe.Pointer(&minh), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMinimumSize(QSize const&)
func (q *QWidget) SetMinimumSize(value *QSize) {
	q.Drv(397000, 397305, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMinimumSize(int,int)
func (q *QWidget) SetMinimumSizeWithMinwMinh(minw int32, minh int32) {
	q.Drv(397000, 397306, unsafe.Pointer(&minw), unsafe.Pointer(&minh), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMinimumWidth(int)
func (q *QWidget) SetMinimumWidth(minw int32) {
	q.Drv(397000, 397307, unsafe.Pointer(&minw), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setMouseTracking(bool)
func (q *QWidget) SetMouseTracking(enable bool) {
	q.Drv(397000, 397308, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setPalette(QPalette const&)
func (q *QWidget) SetPalette(value *QPalette) {
	q.Drv(397000, 397309, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setParent(QWidget*)
func (q *QWidget) SetParentWidget(parent QWidgetInterface) {
	q.Drv(397000, 397310, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setParent(QWidget*,QFlags<Qt::WindowType>)
func (q *QWidget) SetParentWidgetWithParentFlags(parent QWidgetInterface, f Qt_WindowType) {
	q.Drv(397000, 397311, Native(parent), unsafe.Pointer(&f), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setShortcutAutoRepeat(int)
func (q *QWidget) SetShortcutAutoRepeat(id int32) {
	q.Drv(397000, 397312, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setShortcutAutoRepeat(int,bool)
func (q *QWidget) SetShortcutAutoRepeatWithIdEnable(id int32, enable bool) {
	q.Drv(397000, 397313, unsafe.Pointer(&id), unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setShortcutEnabled(int)
func (q *QWidget) SetShortcutEnabled(id int32) {
	q.Drv(397000, 397314, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setShortcutEnabled(int,bool)
func (q *QWidget) SetShortcutEnabledWithIdEnable(id int32, enable bool) {
	q.Drv(397000, 397315, unsafe.Pointer(&id), unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setSizeIncrement(QSize const&)
func (q *QWidget) SetSizeIncrement(value *QSize) {
	q.Drv(397000, 397316, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setSizeIncrement(int,int)
func (q *QWidget) SetSizeIncrementWithWidthHeight(w int32, h int32) {
	q.Drv(397000, 397317, unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setSizePolicy(QSizePolicy)
func (q *QWidget) SetSizePolicy(value *QSizePolicy) {
	q.Drv(397000, 397318, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setSizePolicy(QSizePolicy::Policy,QSizePolicy::Policy)
func (q *QWidget) SetSizePolicyWithHorizontalVertical(horizontal QSizePolicy_Policy, vertical QSizePolicy_Policy) {
	q.Drv(397000, 397319, unsafe.Pointer(&horizontal), unsafe.Pointer(&vertical), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setStatusTip(QString const&)
func (q *QWidget) SetStatusTip(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397320, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setStyle(QStyle*)
func (q *QWidget) SetStyle(value *QStyle) {
	q.Drv(397000, 397321, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setStyleSheet(QString const&)
func (q *QWidget) SetStyleSheet(styleSheet string) {
	_styleSheet := NewCStringHead(styleSheet)
	defer FreeCStringHead(_styleSheet)
	q.Drv(397000, 397322, unsafe.Pointer(_styleSheet), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setTabOrder(QWidget*,QWidget*)
func QWidgetSetTabOrder(value2 QWidgetInterface, value3 QWidgetInterface) {
	DirectQtDrv(nil, 397000, 397323, Native(value2), Native(value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setTabOrder(QWidget*,QWidget*)
func (q *QWidget) SetTabOrder(value2 QWidgetInterface, value3 QWidgetInterface) {
	q.Drv(397000, 397323, Native(value2), Native(value3), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setToolTip(QString const&)
func (q *QWidget) SetToolTip(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397324, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setUpdatesEnabled(bool)
func (q *QWidget) SetUpdatesEnabled(enable bool) {
	q.Drv(397000, 397325, unsafe.Pointer(&enable), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setVisible(bool)
func (q *QWidget) SetVisible(visible bool) {
	q.Drv(397000, 397326, unsafe.Pointer(&visible), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWhatsThis(QString const&)
func (q *QWidget) SetWhatsThis(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397327, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowFilePath(QString const&)
func (q *QWidget) SetWindowFilePath(filePath string) {
	_filePath := NewCStringHead(filePath)
	defer FreeCStringHead(_filePath)
	q.Drv(397000, 397328, unsafe.Pointer(_filePath), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowFlags(QFlags<Qt::WindowType>)
func (q *QWidget) SetWindowFlags(_type Qt_WindowType) {
	q.Drv(397000, 397329, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowIcon(QIcon const&)
func (q *QWidget) SetWindowIcon(icon *QIcon) {
	q.Drv(397000, 397330, Native(icon), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowIconText(QString const&)
func (q *QWidget) SetWindowIconText(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397331, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowModality(Qt::WindowModality)
func (q *QWidget) SetWindowModality(windowModality Qt_WindowModality) {
	q.Drv(397000, 397332, unsafe.Pointer(&windowModality), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowModified(bool)
func (q *QWidget) SetWindowModified(value bool) {
	q.Drv(397000, 397333, unsafe.Pointer(&value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowOpacity(double)
func (q *QWidget) SetWindowOpacity(level float64) {
	q.Drv(397000, 397334, unsafe.Pointer(&level), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowRole(QString const&)
func (q *QWidget) SetWindowRole(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397335, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowState(QFlags<Qt::WindowState>)
func (q *QWidget) SetWindowState(state Qt_WindowState) {
	q.Drv(397000, 397336, unsafe.Pointer(&state), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::setWindowTitle(QString const&)
func (q *QWidget) SetWindowTitle(value string) {
	_value := NewCStringHead(value)
	defer FreeCStringHead(_value)
	q.Drv(397000, 397337, unsafe.Pointer(_value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::show()
func (q *QWidget) Show() {
	q.Drv(397000, 397338, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::showEvent(QShowEvent*)
func (q *QWidget) ShowEvent(value *QShowEvent) {
	q.Drv(397000, 397339, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::showFullScreen()
func (q *QWidget) ShowFullScreen() {
	q.Drv(397000, 397340, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::showMaximized()
func (q *QWidget) ShowMaximized() {
	q.Drv(397000, 397341, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::showMinimized()
func (q *QWidget) ShowMinimized() {
	q.Drv(397000, 397342, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::showNormal()
func (q *QWidget) ShowNormal() {
	q.Drv(397000, 397343, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::size()
func (q *QWidget) Size() *QSize {
	var __rv uintptr
	q.Drv(397000, 397344, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::sizeHint()
func (q *QWidget) SizeHint() *QSize {
	var __rv uintptr
	q.Drv(397000, 397345, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::sizeIncrement()
func (q *QWidget) SizeIncrement() *QSize {
	var __rv uintptr
	q.Drv(397000, 397346, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSize{}
	_rp.SetDriver(__rv, 120000, true)
	return _rp
}

//QWidget::sizePolicy()
func (q *QWidget) SizePolicy() *QSizePolicy {
	var __rv uintptr
	q.Drv(397000, 397347, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QSizePolicy{}
	_rp.SetDriver(__rv, 122000, true)
	return _rp
}

//QWidget::stackUnder(QWidget*)
func (q *QWidget) StackUnder(value QWidgetInterface) {
	q.Drv(397000, 397348, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::statusTip()
func (q *QWidget) StatusTip() string {
	var __rv C.string_head
	q.Drv(397000, 397349, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::style()
func (q *QWidget) Style() *QStyle {
	var __rv uintptr
	q.Drv(397000, 397350, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QStyle{}
	_rp.SetDriver(__rv, 359000, false)
	return _rp
}

//QWidget::styleSheet()
func (q *QWidget) StyleSheet() string {
	var __rv C.string_head
	q.Drv(397000, 397351, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::tabletEvent(QTabletEvent*)
func (q *QWidget) TabletEvent(value *QTabletEvent) {
	q.Drv(397000, 397352, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::testAttribute(Qt::WidgetAttribute)
func (q *QWidget) TestAttribute(value Qt_WidgetAttribute) bool {
	var __rv bool
	q.Drv(397000, 397353, unsafe.Pointer(&value), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::toolTip()
func (q *QWidget) ToolTip() string {
	var __rv C.string_head
	q.Drv(397000, 397354, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::topLevelWidget()
func (q *QWidget) TopLevelWidget() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397355, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::underMouse()
func (q *QWidget) UnderMouse() bool {
	var __rv bool
	q.Drv(397000, 397356, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::ungrabGesture(Qt::GestureType)
func (q *QWidget) UngrabGesture(_type Qt_GestureType) {
	q.Drv(397000, 397357, unsafe.Pointer(&_type), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::unsetCursor()
func (q *QWidget) UnsetCursor() {
	q.Drv(397000, 397358, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::unsetLayoutDirection()
func (q *QWidget) UnsetLayoutDirection() {
	q.Drv(397000, 397359, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::unsetLocale()
func (q *QWidget) UnsetLocale() {
	q.Drv(397000, 397360, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::update()
func (q *QWidget) Update() {
	q.Drv(397000, 397361, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::update(QRect const&)
func (q *QWidget) UpdateWithRect(value *QRect) {
	q.Drv(397000, 397362, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::update(QRegion const&)
func (q *QWidget) UpdateWithRegion(value *QRegion) {
	q.Drv(397000, 397363, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::update(int,int,int,int)
func (q *QWidget) UpdateWithXYWidthHeight(x int32, y int32, w int32, h int32) {
	q.Drv(397000, 397364, unsafe.Pointer(&x), unsafe.Pointer(&y), unsafe.Pointer(&w), unsafe.Pointer(&h), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::updateGeometry()
func (q *QWidget) UpdateGeometry() {
	q.Drv(397000, 397365, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::updateMicroFocus()
func (q *QWidget) UpdateMicroFocus() {
	q.Drv(397000, 397366, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::updatesEnabled()
func (q *QWidget) UpdatesEnabled() bool {
	var __rv bool
	q.Drv(397000, 397367, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::visibleRegion()
func (q *QWidget) VisibleRegion() *QRegion {
	var __rv uintptr
	q.Drv(397000, 397368, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QRegion{}
	_rp.SetDriver(__rv, 114000, true)
	return _rp
}

//QWidget::whatsThis()
func (q *QWidget) WhatsThis() string {
	var __rv C.string_head
	q.Drv(397000, 397369, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::wheelEvent(QWheelEvent*)
func (q *QWidget) WheelEvent(value *QWheelEvent) {
	q.Drv(397000, 397370, Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidget::width()
func (q *QWidget) Width() int32 {
	var __rv int32
	q.Drv(397000, 397371, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QPaintDevice::widthMM()
func (q *QWidget) WidthMM() int32 {
	var __rv int32
	q.Drv(397000, 397372, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::window()
func (q *QWidget) Window() *QWidget {
	var __rv uintptr
	q.Drv(397000, 397373, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidget::windowFilePath()
func (q *QWidget) WindowFilePath() string {
	var __rv C.string_head
	q.Drv(397000, 397374, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::windowFlags()
func (q *QWidget) WindowFlags() Qt_WindowType {
	var __rv Qt_WindowType
	q.Drv(397000, 397375, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::windowIcon()
func (q *QWidget) WindowIcon() *QIcon {
	var __rv uintptr
	q.Drv(397000, 397376, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QIcon{}
	_rp.SetDriver(__rv, 51000, true)
	return _rp
}

//QWidget::windowIconText()
func (q *QWidget) WindowIconText() string {
	var __rv C.string_head
	q.Drv(397000, 397377, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::windowModality()
func (q *QWidget) WindowModality() Qt_WindowModality {
	var __rv Qt_WindowModality
	q.Drv(397000, 397378, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::windowOpacity()
func (q *QWidget) WindowOpacity() float64 {
	var __rv float64
	q.Drv(397000, 397379, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::windowRole()
func (q *QWidget) WindowRole() string {
	var __rv C.string_head
	q.Drv(397000, 397380, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::windowState()
func (q *QWidget) WindowState() Qt_WindowState {
	var __rv Qt_WindowState
	q.Drv(397000, 397381, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::windowTitle()
func (q *QWidget) WindowTitle() string {
	var __rv C.string_head
	q.Drv(397000, 397382, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWidget::windowType()
func (q *QWidget) WindowType() Qt_WindowType {
	var __rv Qt_WindowType
	q.Drv(397000, 397383, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::x()
func (q *QWidget) X() int32 {
	var __rv int32
	q.Drv(397000, 397384, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidget::y()
func (q *QWidget) Y() int32 {
	var __rv int32
	q.Drv(397000, 397385, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QWidgetAction : QWidgetAction
type QWidgetAction struct {
	QAction
}

// New QWidgetAction from driver
func NewWidgetActionFromDriver(drv Driver) *QWidgetAction {
	_p := &QWidgetAction{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}

//QWidgetAction::QWidgetAction(QObject*)
func NewWidgetAction(parent QObjectInterface) *QWidgetAction {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 398000, 398102, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWidgetAction{}
	_p.SetDriver(__rv, 398000, false)
	return _p
}

//QWidgetAction::createWidget(QWidget*)
func (q *QWidgetAction) CreateWidget(parent QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(398000, 398103, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidgetAction::createdWidgets()
func (q *QWidgetAction) CreatedWidgets() []*QWidget {
	var __rv []*QWidget
	q.Drv(398000, 398104, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWidgetAction::defaultWidget()
func (q *QWidgetAction) DefaultWidget() *QWidget {
	var __rv uintptr
	q.Drv(398000, 398105, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidgetAction::deleteWidget(QWidget*)
func (q *QWidgetAction) DeleteWidget(widget QWidgetInterface) {
	q.Drv(398000, 398106, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidgetAction::releaseWidget(QWidget*)
func (q *QWidgetAction) ReleaseWidget(widget QWidgetInterface) {
	q.Drv(398000, 398107, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWidgetAction::requestWidget(QWidget*)
func (q *QWidgetAction) RequestWidget(parent QWidgetInterface) *QWidget {
	var __rv uintptr
	q.Drv(398000, 398108, Native(parent), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWidgetAction::setDefaultWidget(QWidget*)
func (q *QWidgetAction) SetDefaultWidget(w QWidgetInterface) {
	q.Drv(398000, 398109, Native(w), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//enum QWizard_WizardButton - QWizard::WizardButton
type QWizard_WizardButton int32

const (
	QWizard_BackButton       QWizard_WizardButton = 0
	QWizard_NextButton       QWizard_WizardButton = 1
	QWizard_CommitButton     QWizard_WizardButton = 2
	QWizard_FinishButton     QWizard_WizardButton = 3
	QWizard_CancelButton     QWizard_WizardButton = 4
	QWizard_HelpButton       QWizard_WizardButton = 5
	QWizard_CustomButton1    QWizard_WizardButton = 6
	QWizard_CustomButton2    QWizard_WizardButton = 7
	QWizard_CustomButton3    QWizard_WizardButton = 8
	QWizard_Stretch          QWizard_WizardButton = 9
	QWizard_NoButton         QWizard_WizardButton = -1
	QWizard_NStandardButtons QWizard_WizardButton = 6
	QWizard_NButtons         QWizard_WizardButton = 9
)

//enum QWizard_WizardStyle - QWizard::WizardStyle
type QWizard_WizardStyle uint32

const (
	QWizard_ClassicStyle QWizard_WizardStyle = 0
	QWizard_ModernStyle  QWizard_WizardStyle = 1
	QWizard_MacStyle     QWizard_WizardStyle = 2
	QWizard_AeroStyle    QWizard_WizardStyle = 3
	QWizard_NStyles      QWizard_WizardStyle = 4
)

//enum QWizard_WizardPixmap - QWizard::WizardPixmap
type QWizard_WizardPixmap uint32

const (
	QWizard_WatermarkPixmap  QWizard_WizardPixmap = 0
	QWizard_LogoPixmap       QWizard_WizardPixmap = 1
	QWizard_BannerPixmap     QWizard_WizardPixmap = 2
	QWizard_BackgroundPixmap QWizard_WizardPixmap = 3
	QWizard_NPixmaps         QWizard_WizardPixmap = 4
)

//enum QWizard_WizardOption - QWizard::WizardOption
type QWizard_WizardOption uint32

const (
	QWizard_IndependentPages             QWizard_WizardOption = 0x00000001
	QWizard_IgnoreSubTitles              QWizard_WizardOption = 0x00000002
	QWizard_ExtendedWatermarkPixmap      QWizard_WizardOption = 0x00000004
	QWizard_NoDefaultButton              QWizard_WizardOption = 0x00000008
	QWizard_NoBackButtonOnStartPage      QWizard_WizardOption = 0x00000010
	QWizard_NoBackButtonOnLastPage       QWizard_WizardOption = 0x00000020
	QWizard_DisabledBackButtonOnLastPage QWizard_WizardOption = 0x00000040
	QWizard_HaveNextButtonOnLastPage     QWizard_WizardOption = 0x00000080
	QWizard_HaveFinishButtonOnEarlyPages QWizard_WizardOption = 0x00000100
	QWizard_NoCancelButton               QWizard_WizardOption = 0x00000200
	QWizard_CancelButtonOnLeft           QWizard_WizardOption = 0x00000400
	QWizard_HaveHelpButton               QWizard_WizardOption = 0x00000800
	QWizard_HelpButtonOnRight            QWizard_WizardOption = 0x00001000
	QWizard_HaveCustomButton1            QWizard_WizardOption = 0x00002000
	QWizard_HaveCustomButton2            QWizard_WizardOption = 0x00004000
	QWizard_HaveCustomButton3            QWizard_WizardOption = 0x00008000
)

//struct QWizard : QWizard
type QWizard struct {
	QDialog
}

// New QWizard from driver
func NewWizardFromDriver(drv Driver) *QWizard {
	_p := &QWizard{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QWizard) OnHelpRequested(fn func()) uintptr {
	var __rv uintptr
	q.Drv(399000, 399102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QWizard) OnCurrentIdChanged(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(399000, 399103, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QWizard) OnCustomButtonClicked(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(399000, 399104, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QWizard) OnPageAdded(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(399000, 399105, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}
func (q *QWizard) OnPageRemoved(fn func(int32)) uintptr {
	var __rv uintptr
	q.Drv(399000, 399106, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QWizard::QWizard()
func NewWizard() *QWizard {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 399000, 399107, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWizard{}
	_p.SetDriver(__rv, 399000, false)
	return _p
}

//QWizard::QWizard(QWidget*,QFlags<Qt::WindowType>)
func NewWizardWithParentFlags(parent QWidgetInterface, flags Qt_WindowType) *QWizard {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 399000, 399108, Native(parent), unsafe.Pointer(&flags), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWizard{}
	_p.SetDriver(__rv, 399000, false)
	return _p
}

//QWizard::addPage(QWizardPage*)
func (q *QWizard) AddPage(page *QWizardPage) int32 {
	var __rv int32
	q.Drv(399000, 399109, Native(page), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::back()
func (q *QWizard) Back() {
	q.Drv(399000, 399110, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::button(QWizard::WizardButton)
func (q *QWizard) Button(which QWizard_WizardButton) *QAbstractButton {
	var __rv uintptr
	q.Drv(399000, 399111, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QAbstractButton{}
	_rp.SetDriver(__rv, 195000, false)
	return _rp
}

//QWizard::buttonText(QWizard::WizardButton)
func (q *QWizard) ButtonText(which QWizard_WizardButton) string {
	var __rv C.string_head
	q.Drv(399000, 399112, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWizard::cleanupPage(int)
func (q *QWizard) CleanupPage(id int32) {
	q.Drv(399000, 399113, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::currentId()
func (q *QWizard) CurrentId() int32 {
	var __rv int32
	q.Drv(399000, 399114, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::currentPage()
func (q *QWizard) CurrentPage() *QWizardPage {
	var __rv uintptr
	q.Drv(399000, 399115, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWizardPage{}
	_rp.SetDriver(__rv, 400000, false)
	return _rp
}

//QWizard::field(QString const&)
func (q *QWizard) Field(name string) *QVariant {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(399000, 399116, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QWizard::hasVisitedPage(int)
func (q *QWizard) HasVisitedPage(id int32) bool {
	var __rv bool
	q.Drv(399000, 399117, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::initializePage(int)
func (q *QWizard) InitializePage(id int32) {
	q.Drv(399000, 399118, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::next()
func (q *QWizard) Next() {
	q.Drv(399000, 399119, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::nextId()
func (q *QWizard) NextId() int32 {
	var __rv int32
	q.Drv(399000, 399120, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::options()
func (q *QWizard) Options() QWizard_WizardOption {
	var __rv QWizard_WizardOption
	q.Drv(399000, 399121, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::page(int)
func (q *QWizard) Page(id int32) *QWizardPage {
	var __rv uintptr
	q.Drv(399000, 399122, unsafe.Pointer(&id), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWizardPage{}
	_rp.SetDriver(__rv, 400000, false)
	return _rp
}

//QWizard::pageIds()
func (q *QWizard) PageIds() []int32 {
	var __rv []int32
	q.Drv(399000, 399123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::pixmap(QWizard::WizardPixmap)
func (q *QWizard) Pixmap(which QWizard_WizardPixmap) *QPixmap {
	var __rv uintptr
	q.Drv(399000, 399124, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QWizard::removePage(int)
func (q *QWizard) RemovePage(id int32) {
	q.Drv(399000, 399125, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::restart()
func (q *QWizard) Restart() {
	q.Drv(399000, 399126, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setButton(QWizard::WizardButton,QAbstractButton*)
func (q *QWizard) SetButton(which QWizard_WizardButton, button *QAbstractButton) {
	q.Drv(399000, 399127, unsafe.Pointer(&which), Native(button), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setButtonLayout(QList<QWizard::WizardButton> const&)
func (q *QWizard) SetButtonLayout(layout []QWizard_WizardButton) {
	_layout := NewCIntArrayHead(*(*[]int32)(unsafe.Pointer(&layout)))
	defer FreeCIntArrayHead(_layout)
	q.Drv(399000, 399128, unsafe.Pointer(_layout), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setButtonText(QWizard::WizardButton,QString const&)
func (q *QWizard) SetButtonText(which QWizard_WizardButton, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(399000, 399129, unsafe.Pointer(&which), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setDefaultProperty(char const*,char const*,char const*)
func (q *QWizard) SetDefaultProperty(className string, property string, changedSignal string) {
	_className := NewCStringHead(className)
	defer FreeCStringHead(_className)
	_property := NewCStringHead(property)
	defer FreeCStringHead(_property)
	_changedSignal := NewCStringHead(changedSignal)
	defer FreeCStringHead(_changedSignal)
	q.Drv(399000, 399130, unsafe.Pointer(_className), unsafe.Pointer(_property), unsafe.Pointer(_changedSignal), nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setField(QString const&,QVariant const&)
func (q *QWizard) SetField(name string, value *QVariant) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(399000, 399131, unsafe.Pointer(_name), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setOption(QWizard::WizardOption)
func (q *QWizard) SetOption(option QWizard_WizardOption) {
	q.Drv(399000, 399132, unsafe.Pointer(&option), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setOption(QWizard::WizardOption,bool)
func (q *QWizard) SetOptionWithOptionOn(option QWizard_WizardOption, on bool) {
	q.Drv(399000, 399133, unsafe.Pointer(&option), unsafe.Pointer(&on), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setOptions(QFlags<QWizard::WizardOption>)
func (q *QWizard) SetOptions(options QWizard_WizardOption) {
	q.Drv(399000, 399134, unsafe.Pointer(&options), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setPage(int,QWizardPage*)
func (q *QWizard) SetPage(id int32, page *QWizardPage) {
	q.Drv(399000, 399135, unsafe.Pointer(&id), Native(page), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setPixmap(QWizard::WizardPixmap,QPixmap const&)
func (q *QWizard) SetPixmap(which QWizard_WizardPixmap, pixmap *QPixmap) {
	q.Drv(399000, 399136, unsafe.Pointer(&which), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setSideWidget(QWidget*)
func (q *QWizard) SetSideWidget(widget QWidgetInterface) {
	q.Drv(399000, 399137, Native(widget), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setStartId(int)
func (q *QWizard) SetStartId(id int32) {
	q.Drv(399000, 399138, unsafe.Pointer(&id), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setSubTitleFormat(Qt::TextFormat)
func (q *QWizard) SetSubTitleFormat(format Qt_TextFormat) {
	q.Drv(399000, 399139, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setTitleFormat(Qt::TextFormat)
func (q *QWizard) SetTitleFormat(format Qt_TextFormat) {
	q.Drv(399000, 399140, unsafe.Pointer(&format), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::setWizardStyle(QWizard::WizardStyle)
func (q *QWizard) SetWizardStyle(style QWizard_WizardStyle) {
	q.Drv(399000, 399141, unsafe.Pointer(&style), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizard::sideWidget()
func (q *QWizard) SideWidget() *QWidget {
	var __rv uintptr
	q.Drv(399000, 399142, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWidget{}
	_rp.SetDriver(__rv, 397000, false)
	return _rp
}

//QWizard::startId()
func (q *QWizard) StartId() int32 {
	var __rv int32
	q.Drv(399000, 399143, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::subTitleFormat()
func (q *QWizard) SubTitleFormat() Qt_TextFormat {
	var __rv Qt_TextFormat
	q.Drv(399000, 399144, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::testOption(QWizard::WizardOption)
func (q *QWizard) TestOption(option QWizard_WizardOption) bool {
	var __rv bool
	q.Drv(399000, 399145, unsafe.Pointer(&option), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::titleFormat()
func (q *QWizard) TitleFormat() Qt_TextFormat {
	var __rv Qt_TextFormat
	q.Drv(399000, 399146, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::validateCurrentPage()
func (q *QWizard) ValidateCurrentPage() bool {
	var __rv bool
	q.Drv(399000, 399147, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::visitedPages()
func (q *QWizard) VisitedPages() []int32 {
	var __rv []int32
	q.Drv(399000, 399148, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizard::wizardStyle()
func (q *QWizard) WizardStyle() QWizard_WizardStyle {
	var __rv QWizard_WizardStyle
	q.Drv(399000, 399149, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//struct QWizardPage : QWizardPage
type QWizardPage struct {
	QWidget
}

// New QWizardPage from driver
func NewWizardPageFromDriver(drv Driver) *QWizardPage {
	_p := &QWizardPage{}
	err := _p.SetDriverFrom(drv)
	if err != nil {
		return nil
	}
	return _p
}
func (q *QWizardPage) OnCompleteChanged(fn func()) uintptr {
	var __rv uintptr
	q.Drv(400000, 400102, nil, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	signalMap[__rv] = fn
	return __rv
}

//QWizardPage::QWizardPage()
func NewWizardPage() *QWizardPage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 400000, 400103, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWizardPage{}
	_p.SetDriver(__rv, 400000, false)
	return _p
}

//QWizardPage::QWizardPage(QWidget*)
func NewWizardPageWithParent(parent QWidgetInterface) *QWizardPage {
	var __rv uintptr
	err := DirectQtDrv(unsafe.Pointer(&__rv), 400000, 400104, Native(parent), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if err != nil || __rv == 0 {
		return nil
	}
	_p := &QWizardPage{}
	_p.SetDriver(__rv, 400000, false)
	return _p
}

//QWizardPage::buttonText(QWizard::WizardButton)
func (q *QWizardPage) ButtonText(which QWizard_WizardButton) string {
	var __rv C.string_head
	q.Drv(400000, 400105, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWizardPage::cleanupPage()
func (q *QWizardPage) CleanupPage() {
	q.Drv(400000, 400106, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::field(QString const&)
func (q *QWizardPage) Field(name string) *QVariant {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	var __rv uintptr
	q.Drv(400000, 400107, unsafe.Pointer(_name), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QVariant{}
	_rp.SetDriver(__rv, 184000, true)
	return _rp
}

//QWizardPage::initializePage()
func (q *QWizardPage) InitializePage() {
	q.Drv(400000, 400108, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::isCommitPage()
func (q *QWizardPage) IsCommitPage() bool {
	var __rv bool
	q.Drv(400000, 400109, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizardPage::isComplete()
func (q *QWizardPage) IsComplete() bool {
	var __rv bool
	q.Drv(400000, 400110, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizardPage::isFinalPage()
func (q *QWizardPage) IsFinalPage() bool {
	var __rv bool
	q.Drv(400000, 400111, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizardPage::nextId()
func (q *QWizardPage) NextId() int32 {
	var __rv int32
	q.Drv(400000, 400112, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizardPage::pixmap(QWizard::WizardPixmap)
func (q *QWizardPage) Pixmap(which QWizard_WizardPixmap) *QPixmap {
	var __rv uintptr
	q.Drv(400000, 400113, unsafe.Pointer(&which), unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QPixmap{}
	_rp.SetDriver(__rv, 97000, true)
	return _rp
}

//QWizardPage::registerField(QString const&,QWidget*,char const*,char const*)
func (q *QWizardPage) RegisterField(name string, widget QWidgetInterface, property string, changedSignal string) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	_property := NewCStringHead(property)
	defer FreeCStringHead(_property)
	_changedSignal := NewCStringHead(changedSignal)
	defer FreeCStringHead(_changedSignal)
	q.Drv(400000, 400114, unsafe.Pointer(_name), Native(widget), unsafe.Pointer(_property), unsafe.Pointer(_changedSignal), nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setButtonText(QWizard::WizardButton,QString const&)
func (q *QWizardPage) SetButtonText(which QWizard_WizardButton, text string) {
	_text := NewCStringHead(text)
	defer FreeCStringHead(_text)
	q.Drv(400000, 400115, unsafe.Pointer(&which), unsafe.Pointer(_text), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setCommitPage(bool)
func (q *QWizardPage) SetCommitPage(commitPage bool) {
	q.Drv(400000, 400116, unsafe.Pointer(&commitPage), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setField(QString const&,QVariant const&)
func (q *QWizardPage) SetField(name string, value *QVariant) {
	_name := NewCStringHead(name)
	defer FreeCStringHead(_name)
	q.Drv(400000, 400117, unsafe.Pointer(_name), Native(value), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setFinalPage(bool)
func (q *QWizardPage) SetFinalPage(finalPage bool) {
	q.Drv(400000, 400118, unsafe.Pointer(&finalPage), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setPixmap(QWizard::WizardPixmap,QPixmap const&)
func (q *QWizardPage) SetPixmap(which QWizard_WizardPixmap, pixmap *QPixmap) {
	q.Drv(400000, 400119, unsafe.Pointer(&which), Native(pixmap), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setSubTitle(QString const&)
func (q *QWizardPage) SetSubTitle(subTitle string) {
	_subTitle := NewCStringHead(subTitle)
	defer FreeCStringHead(_subTitle)
	q.Drv(400000, 400120, unsafe.Pointer(_subTitle), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::setTitle(QString const&)
func (q *QWizardPage) SetTitle(title string) {
	_title := NewCStringHead(title)
	defer FreeCStringHead(_title)
	q.Drv(400000, 400121, unsafe.Pointer(_title), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
}

//QWizardPage::subTitle()
func (q *QWizardPage) SubTitle() string {
	var __rv C.string_head
	q.Drv(400000, 400122, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWizardPage::title()
func (q *QWizardPage) Title() string {
	var __rv C.string_head
	q.Drv(400000, 400123, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return C.GoStringN(__rv.data, __rv.size)
}

//QWizardPage::validatePage()
func (q *QWizardPage) ValidatePage() bool {
	var __rv bool
	q.Drv(400000, 400124, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	return __rv
}

//QWizardPage::wizard()
func (q *QWizardPage) Wizard() *QWizard {
	var __rv uintptr
	q.Drv(400000, 400125, unsafe.Pointer(&__rv), nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil)
	if __rv == 0 {
		return nil
	}
	_rp := &QWizard{}
	_rp.SetDriver(__rv, 399000, false)
	return _rp
}
