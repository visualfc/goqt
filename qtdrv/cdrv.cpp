/********************************************************************
** Copyright 2015-2016 visualfc <visualfc@gmail.com>. All rights reserved.
**
** This library is free software; you can redistribute it and/or
** modify it under the terms of the GNU Lesser General Public
** License as published by the Free Software Foundation; either
** version 2.1 of the License, or (at your option) any later version.
**
** This library is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
** Lesser General Public License for more details.
*********************************************************************/

#define protected public

#include <QtGui>
#include "cdrv.h"
#include "cdrv_signal.h"


int drv_QAbstractGraphicsShapeItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractTextDocumentLayout_PaintContext(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractTextDocumentLayout_Selection(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractUndoItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QActionEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QApplication(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QBasicTimer(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QBitmap(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QBrush(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QByteArrayMatcher(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QChildEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCloseEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QColor(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QColormap(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QConicalGradient(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QContextMenuEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCryptographicHash(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCursor(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDate(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDateTime(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDesktopServices(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDir(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDirIterator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDragEnterEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDragLeaveEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDragMoveEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDropEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDynamicPropertyChangeEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QEasingCurve(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QElapsedTimer(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFactoryInterface(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileIconProvider(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileInfo(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileOpenEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFocusEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFont(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontDatabase(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontInfo(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontMetrics(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontMetricsF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGenericArgument(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGenericReturnArgument(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGestureEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGestureRecognizer(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGradient(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHashDummyValue(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHelpEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHideEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHoverEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QIcon(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QIconDragEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QImage(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QImageIOHandler(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QImageReader(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QImageWriter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QInputEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QInputMethodEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QInputMethodEvent_Attribute(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QIntVariantMap(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemEditorCreatorBase(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemEditorFactory(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemSelection(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemSelectionRange(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QKeyEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QKeySequence(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLayoutItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLibraryInfo(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLineF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLinearGradient(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QListWidgetItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLocale(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMargins(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMatrix(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMetaEnum(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMetaMethod(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMetaObject(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMetaProperty(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QModelIndex(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMouseEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMoveEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPaintDevice(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPaintEngine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPaintEngineState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPaintEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPainter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPainter_PixmapFragment(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPainterPath(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPainterPath_Element(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPainterPathStroker(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPalette(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPen(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPersistentModelIndex(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPicture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPictureIO(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPixmap(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPixmapCache(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPixmapCache_Key(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPoint(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPointF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPolygon(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPolygonF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrintEngine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrinter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrinterInfo(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QProcessEnvironment(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QQuaternion(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRadialGradient(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QReadLocker(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRectF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRegExp(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRegion(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QResHelp(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QResizeEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QResource(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QShortcutEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QShowEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSize(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSizeF(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSizePolicy(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSpacerItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStandardItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStateMachine_SignalEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStateMachine_WrappedEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStaticText(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStatusTipEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStringMatcher(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStringVariantMap(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyleFactory(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyleHintReturn(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyleHintReturnMask(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyleHintReturnVariant(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStylePainter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTableWidgetItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTableWidgetSelectionRange(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTabletEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBlock(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBlock_iterator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBlockFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBlockUserData(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBoundaryFinder(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextCharFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextCodec(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextCodec_ConverterState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextCursor(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextDecoder(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextDocumentFragment(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextDocumentWriter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextEdit_ExtraSelection(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextEncoder(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextFragment(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextFrame_iterator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextFrameFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextImageFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextInlineObject(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextLayout_FormatRange(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextLength(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextLine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextListFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextObjectInterface(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextOption(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextOption_Tab(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextTableCell(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextTableCellFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextTableFormat(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTileRules(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTime(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTimerEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QToolBarChangeEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QToolTip(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTouchEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTouchEvent_TouchPoint(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTransform(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTreeWidgetItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTreeWidgetItemIterator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUndoCommand(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUrl(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUuid(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVariant(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVariantComparisonHelper(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVector2D(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVector3D(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVector4D(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWhatsThis(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWhatsThisClickedEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWheelEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWidgetItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWindowStateChangeEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractAnimation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractButton(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractItemDelegate(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractItemModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractItemView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractListModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractPrintDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractProxyModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractScrollArea(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractSlider(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractSpinBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractTableModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractTextDocumentLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAbstractTransition(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAction(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QActionGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QAnimationGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QBoxLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QButtonGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCalendarWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCheckBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QClipboard(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QColorDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QColumnView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QComboBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCommandLinkButton(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCommonStyle(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QCompleter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDataWidgetMapper(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDateEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDateTimeEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDesktopWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDial(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDialogButtonBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDirModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDockWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDoubleSpinBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDoubleValidator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QDrag(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QErrorMessage(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QEventLoop(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QEventTransition(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFile(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileSystemModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFileSystemWatcher(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFinalState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFocusFrame(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontComboBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFontDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFormLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFrame(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QFutureWatcherBase(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsAnchor(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsAnchorLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsBlurEffect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsColorizeEffect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsDropShadowEffect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsEffect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsEllipseItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsGridLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsItemAnimation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsItemGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsLayoutItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsLineItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsLinearLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsObject(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsOpacityEffect(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsPathItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsPixmapItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsPolygonItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsProxyWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsRectItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsRotation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsScale(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsScene(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneContextMenuEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneDragDropEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneHelpEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneHoverEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneMouseEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneMoveEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneResizeEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSceneWheelEvent(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsSimpleTextItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsTextItem(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsTransform(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGraphicsWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGridLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QGroupBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHBoxLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHeaderView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QHistoryState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QIODevice(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QInputDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QIntValidator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemDelegate(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QItemSelectionModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QKeyEventTransition(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLCDNumber(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLabel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLibrary(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QLineEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QListView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QListWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMainWindow(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMdiArea(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMdiSubWindow(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMenu(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMenuBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMessageBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMimeData(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMouseEventTransition(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QMovie(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QObject(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QObjectCleanupHandler(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPanGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QParallelAnimationGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPauseAnimation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPinchGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPlainTextDocumentLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPlainTextEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPluginLoader(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrintDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrintPreviewDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPrintPreviewWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QProcess(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QProgressBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QProgressDialog(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPropertyAnimation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QProxyStyle(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QPushButton(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRadioButton(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRegExpValidator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QRubberBand(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QScrollArea(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QScrollBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSequentialAnimationGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSessionManager(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSettings(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSharedMemory(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QShortcut(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSignalMapper(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSizeGrip(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSlider(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSortFilterProxyModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSpinBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSplashScreen(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSplitter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSplitterHandle(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStackedLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStackedWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStandardItemModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QState(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStateMachine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStatusBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStringListModel(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyle(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QStyledItemDelegate(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSwipeGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSyntaxHighlighter(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSyntaxHighlighterHook(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QSystemTrayIcon(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTabBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTabWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTableView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTableWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTapAndHoldGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTapGesture(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTemporaryFile(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBlockGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextBrowser(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextDocument(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextFrame(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextList(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextObject(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTextTable(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTimeEdit(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTimeLine(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTimer(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QToolBar(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QToolBox(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QToolButton(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTranslator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTreeView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QTreeWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUiLoader(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUndoGroup(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUndoStack(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUndoView(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QUrlQuery(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVBoxLayout(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QValidator(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QVariantAnimation(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWidget(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWidgetAction(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWizard(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
int drv_QWizardPage(void *_p, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12);
// QAbstractGraphicsShapeItem
int drv_QAbstractGraphicsShapeItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractGraphicsShapeItem *pThis = (QAbstractGraphicsShapeItem*)_p;
	switch (funcid) {
	case 1000+1: {
		delete pThis;
		break;
	}
	case 1102: {
		*(void**)p1 = new QBrush(pThis->brush());
		break;
	}
	case 1103: {
		*(void**)p1 = new QPen(pThis->pen());
		break;
	}
	case 1104: {
		if(p1==0)return -2;
		pThis->setBrush(*(QBrush*)(p1));
		break;
	}
	case 1105: {
		if(p1==0)return -2;
		pThis->setPen(*(QPen*)(p1));
		break;
	}
	default:
		return drv_QGraphicsItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractTextDocumentLayout_PaintContext
int drv_QAbstractTextDocumentLayout_PaintContext(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QAbstractTextDocumentLayout::PaintContext *pThis = (QAbstractTextDocumentLayout::PaintContext*)_p;
	switch (funcid) {
	case 2000+1: {
		delete pThis;
		break;
	}
	case 2102: {
		*(void**)_p = new QAbstractTextDocumentLayout::PaintContext();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QAbstractTextDocumentLayout_Selection
int drv_QAbstractTextDocumentLayout_Selection(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QAbstractTextDocumentLayout::Selection *pThis = (QAbstractTextDocumentLayout::Selection*)_p;
	switch (funcid) {
	case 3000+1: {
		delete pThis;
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QAbstractUndoItem
int drv_QAbstractUndoItem(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QAbstractUndoItem *pThis = (QAbstractUndoItem*)_p;
	switch (funcid) {
	case 4000+1: {
		delete pThis;
		break;
	}
	case 4102: {
		pThis->redo();
		break;
	}
	case 4103: {
		pThis->undo();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QActionEvent
int drv_QActionEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QActionEvent *pThis = (QActionEvent*)_p;
	switch (funcid) {
	case 5000+1: {
		delete pThis;
		break;
	}
	case 5102: {
		*(void**)_p = new QActionEvent(*(int*)p1,(QAction*)(p2),(QAction*)(p3));
		break;
	}
	case 5103: {
		*(void**)p1 = pThis->action();
		break;
	}
	case 5104: {
		*(void**)p1 = pThis->before();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QApplication
int drv_QApplication(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QApplication *pThis = (QApplication*)_p;
	switch (funcid) {
	case 6000+1: {
		delete pThis;
		break;
	}
	case 6102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(lastWindowClosed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 6103: {
		UISignal60 *uis = new UISignal60(pThis);
		if (QObject::connect(pThis,SIGNAL(focusChanged(QWidget*,QWidget*)),uis,SLOT(call(QWidget*,QWidget*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 6104: {
		UISignal37 *uis = new UISignal37(pThis);
		if (QObject::connect(pThis,SIGNAL(saveStateRequest(QSessionManager&)),uis,SLOT(call(QSessionManager&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 6105: {
		UISignal37 *uis = new UISignal37(pThis);
		if (QObject::connect(pThis,SIGNAL(commitDataRequest(QSessionManager&)),uis,SLOT(call(QSessionManager&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 6106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(fontDatabaseChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 6107: {
		*(void**)_p = new QApplication(*(int*)p1,(char **)(p2));
		break;
	}
	case 6108: {
		QApplication::aboutQt();
		break;
	}
	case 6109: {
		*(void**)p1 = QApplication::activeModalWidget();
		break;
	}
	case 6110: {
		*(void**)p1 = QApplication::activePopupWidget();
		break;
	}
	case 6111: {
		*(void**)p1 = QApplication::activeWindow();
		break;
	}
	case 6112: {
		QCoreApplication::addLibraryPath(drvGetStringHead(p1));
		break;
	}
	case 6113: {
		QApplication::alert((QWidget*)(p1));
		break;
	}
	case 6114: {
		QApplication::alert((QWidget*)(p1),*(int*)p2);
		break;
	}
	case 6115: {
		drvSetListObj<QWidget*>(p1,397000,QApplication::allWidgets());
		break;
	}
	case 6116: {
		drvSetString(p1,QCoreApplication::applicationDirPath());
		break;
	}
	case 6117: {
		drvSetString(p1,QCoreApplication::applicationFilePath());
		break;
	}
	case 6118: {
		drvSetString(p1,QCoreApplication::applicationName());
		break;
	}
	case 6119: {
		*(qint64*)p1 = QCoreApplication::applicationPid();
		break;
	}
	case 6120: {
		drvSetString(p1,QCoreApplication::applicationVersion());
		break;
	}
	case 6121: {
		drvSetStringArray(p1,QCoreApplication::arguments());
		break;
	}
	case 6122: {
		*(bool*)p1 = pThis->autoSipEnabled();
		break;
	}
	case 6123: {
		QApplication::beep();
		break;
	}
	case 6124: {
		if(p1==0)return -2;
		QApplication::changeOverrideCursor(*(QCursor*)(p1));
		break;
	}
	case 6125: {
		*(void**)p1 = QApplication::clipboard();
		break;
	}
	case 6126: {
		QApplication::closeAllWindows();
		break;
	}
	case 6127: {
		*(bool*)p1 = QCoreApplication::closingDown();
		break;
	}
	case 6128: {
		*(int*)p1 = QApplication::colorSpec();
		break;
	}
	case 6129: {
		*(int*)p1 = QApplication::cursorFlashTime();
		break;
	}
	case 6130: {
		*(void**)p1 = QApplication::desktop();
		break;
	}
	case 6131: {
		*(bool*)p1 = QApplication::desktopSettingsAware();
		break;
	}
	case 6132: {
		*(int*)p1 = QApplication::doubleClickInterval();
		break;
	}
	case 6133: {
		*(int*)p1 = QApplication::exec();
		break;
	}
	case 6134: {
		QCoreApplication::exit();
		break;
	}
	case 6135: {
		QCoreApplication::exit(*(int*)p1);
		break;
	}
	case 6136: {
		QCoreApplication::flush();
		break;
	}
	case 6137: {
		*(void**)p1 = QApplication::focusWidget();
		break;
	}
	case 6138: {
		*(void**)p1 = new QFont(QApplication::font());
		break;
	}
	case 6139: {
		*(void**)p2 = new QFont(QApplication::font((QWidget*)(p1)));
		break;
	}
	case 6140: {
		*(void**)p2 = new QFont(QApplication::font(drvGet_const_char(p1)));
		break;
	}
	case 6141: {
		*(void**)p1 = new QFontMetrics(QApplication::fontMetrics());
		break;
	}
	case 6142: {
		*(void**)p1 = new QSize(QApplication::globalStrut());
		break;
	}
	case 6143: {
		*(bool*)p1 = QCoreApplication::hasPendingEvents();
		break;
	}
	case 6144: {
		QCoreApplication::installTranslator((QTranslator*)(p1));
		break;
	}
	case 6145: {
		*(void**)p1 = QCoreApplication::instance();
		break;
	}
	case 6146: {
		*(bool*)p2 = QApplication::isEffectEnabled(*(Qt::UIEffect*)p1);
		break;
	}
	case 6147: {
		*(bool*)p1 = QApplication::isLeftToRight();
		break;
	}
	case 6148: {
		*(bool*)p1 = QApplication::isRightToLeft();
		break;
	}
	case 6149: {
		*(bool*)p1 = pThis->isSessionRestored();
		break;
	}
	case 6150: {
		*(int*)p1 = QApplication::keyboardInputInterval();
		break;
	}
	case 6151: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = QApplication::keyboardModifiers();
		break;
	}
	case 6152: {
		*(Qt::LayoutDirection*)p1 = QApplication::layoutDirection();
		break;
	}
	case 6153: {
		drvSetStringArray(p1,QCoreApplication::libraryPaths());
		break;
	}
	case 6154: {
		*(QFlags<Qt::MouseButton>*)p1 = QApplication::mouseButtons();
		break;
	}
	case 6155: {
		*(bool*)p3 = pThis->notify((QObject*)(p1),(QEvent*)(p2));
		break;
	}
	case 6156: {
		drvSetString(p1,QCoreApplication::organizationDomain());
		break;
	}
	case 6157: {
		drvSetString(p1,QCoreApplication::organizationName());
		break;
	}
	case 6158: {
		*(void**)p1 = QApplication::overrideCursor();
		break;
	}
	case 6159: {
		*(void**)p1 = new QPalette(QApplication::palette());
		break;
	}
	case 6160: {
		*(void**)p2 = new QPalette(QApplication::palette((QWidget*)(p1)));
		break;
	}
	case 6161: {
		*(void**)p2 = new QPalette(QApplication::palette(drvGet_const_char(p1)));
		break;
	}
	case 6162: {
		QCoreApplication::postEvent((QObject*)(p1),(QEvent*)(p2));
		break;
	}
	case 6163: {
		QCoreApplication::quit();
		break;
	}
	case 6164: {
		*(bool*)p1 = QApplication::quitOnLastWindowClosed();
		break;
	}
	case 6165: {
		QCoreApplication::removeLibraryPath(drvGetStringHead(p1));
		break;
	}
	case 6166: {
		QCoreApplication::removePostedEvents((QObject*)(p1));
		break;
	}
	case 6167: {
		QCoreApplication::removeTranslator((QTranslator*)(p1));
		break;
	}
	case 6168: {
		QApplication::restoreOverrideCursor();
		break;
	}
	case 6169: {
		*(bool*)p3 = QCoreApplication::sendEvent((QObject*)(p1),(QEvent*)(p2));
		break;
	}
	case 6170: {
		QCoreApplication::sendPostedEvents();
		break;
	}
	case 6171: {
		drvSetString(p1,pThis->sessionId());
		break;
	}
	case 6172: {
		drvSetString(p1,pThis->sessionKey());
		break;
	}
	case 6173: {
		QApplication::setActiveWindow((QWidget*)(p1));
		break;
	}
	case 6174: {
		QCoreApplication::setApplicationName(drvGetStringHead(p1));
		break;
	}
	case 6175: {
		QCoreApplication::setApplicationVersion(drvGetStringHead(p1));
		break;
	}
	case 6176: {
		QCoreApplication::setAttribute(*(Qt::ApplicationAttribute*)p1);
		break;
	}
	case 6177: {
		QCoreApplication::setAttribute(*(Qt::ApplicationAttribute*)p1,*(bool*)p2);
		break;
	}
	case 6178: {
		pThis->setAutoSipEnabled(*(bool const*)p1);
		break;
	}
	case 6179: {
		QApplication::setColorSpec(*(int*)p1);
		break;
	}
	case 6180: {
		QApplication::setCursorFlashTime(*(int*)p1);
		break;
	}
	case 6181: {
		QApplication::setDesktopSettingsAware(*(bool*)p1);
		break;
	}
	case 6182: {
		QApplication::setDoubleClickInterval(*(int*)p1);
		break;
	}
	case 6183: {
		QApplication::setEffectEnabled(*(Qt::UIEffect*)p1);
		break;
	}
	case 6184: {
		QApplication::setEffectEnabled(*(Qt::UIEffect*)p1,*(bool*)p2);
		break;
	}
	case 6185: {
		if(p1==0)return -2;
		QApplication::setFont(*(QFont*)(p1));
		break;
	}
	case 6186: {
		if(p1==0)return -2;
		QApplication::setFont(*(QFont*)(p1),drvGet_const_char(p2));
		break;
	}
	case 6187: {
		if(p1==0)return -2;
		QApplication::setGlobalStrut(*(QSize*)(p1));
		break;
	}
	case 6188: {
		QApplication::setKeyboardInputInterval(*(int*)p1);
		break;
	}
	case 6189: {
		QApplication::setLayoutDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 6190: {
		QCoreApplication::setLibraryPaths(drvGetStringArray(p1));
		break;
	}
	case 6191: {
		QCoreApplication::setOrganizationDomain(drvGetStringHead(p1));
		break;
	}
	case 6192: {
		QCoreApplication::setOrganizationName(drvGetStringHead(p1));
		break;
	}
	case 6193: {
		if(p1==0)return -2;
		QApplication::setOverrideCursor(*(QCursor*)(p1));
		break;
	}
	case 6194: {
		if(p1==0)return -2;
		QApplication::setPalette(*(QPalette*)(p1));
		break;
	}
	case 6195: {
		if(p1==0)return -2;
		QApplication::setPalette(*(QPalette*)(p1),drvGet_const_char(p2));
		break;
	}
	case 6196: {
		QApplication::setQuitOnLastWindowClosed(*(bool*)p1);
		break;
	}
	case 6197: {
		QApplication::setStartDragDistance(*(int*)p1);
		break;
	}
	case 6198: {
		QApplication::setStartDragTime(*(int*)p1);
		break;
	}
	case 6199: {
		*(void**)p2 = QApplication::setStyle(drvGetStringHead(p1));
		break;
	}
	case 6200: {
		QApplication::setStyle((QStyle*)(p1));
		break;
	}
	case 6201: {
		pThis->setStyleSheet(drvGetStringHead(p1));
		break;
	}
	case 6202: {
		QApplication::setWheelScrollLines(*(int*)p1);
		break;
	}
	case 6203: {
		if(p1==0)return -2;
		QApplication::setWindowIcon(*(QIcon*)(p1));
		break;
	}
	case 6204: {
		*(int*)p1 = QApplication::startDragDistance();
		break;
	}
	case 6205: {
		*(int*)p1 = QApplication::startDragTime();
		break;
	}
	case 6206: {
		*(bool*)p1 = QCoreApplication::startingUp();
		break;
	}
	case 6207: {
		*(void**)p1 = QApplication::style();
		break;
	}
	case 6208: {
		drvSetString(p1,pThis->styleSheet());
		break;
	}
	case 6209: {
		*(bool*)p2 = QCoreApplication::testAttribute(*(Qt::ApplicationAttribute*)p1);
		break;
	}
	case 6210: {
		if(p1==0)return -2;
		*(void**)p2 = QApplication::topLevelAt(*(QPoint*)(p1));
		break;
	}
	case 6211: {
		*(void**)p3 = QApplication::topLevelAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 6212: {
		drvSetListObj<QWidget*>(p1,397000,QApplication::topLevelWidgets());
		break;
	}
	case 6213: {
#ifdef QTDRV_QT5
		drvSetString(p4,QCoreApplication::translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3)));
#else
		drvSetString(p4,QCoreApplication::translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3),QCoreApplication::UnicodeUTF8));
#endif
		break;
	}
	case 6214: {
#ifdef QTDRV_QT5
		drvSetString(p5,QCoreApplication::translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3),*(int*)p4));
#else
		drvSetString(p5,QCoreApplication::translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3),QCoreApplication::UnicodeUTF8,*(int*)p4));
#endif
		break;
	}
	case 6215: {
		*(int*)p1 = QApplication::wheelScrollLines();
		break;
	}
	case 6216: {
		if(p1==0)return -2;
		*(void**)p2 = QApplication::widgetAt(*(QPoint*)(p1));
		break;
	}
	case 6217: {
		*(void**)p3 = QApplication::widgetAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 6218: {
		*(void**)p1 = new QIcon(QApplication::windowIcon());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QBasicTimer
int drv_QBasicTimer(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QBasicTimer *pThis = (QBasicTimer*)_p;
	switch (funcid) {
	case 7000+1: {
		delete pThis;
		break;
	}
	case 7102: {
		*(void**)_p = new QBasicTimer();
		break;
	}
	case 7103: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 7104: {
		pThis->start(*(int*)p1,(QObject*)(p2));
		break;
	}
	case 7105: {
		pThis->stop();
		break;
	}
	case 7106: {
		*(int*)p1 = pThis->timerId();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QBitmap
int drv_QBitmap(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QBitmap *pThis = (QBitmap*)_p;
	switch (funcid) {
	case 8000+1: {
		delete pThis;
		break;
	}
	case 8102: {
		*(void**)_p = new QBitmap();
		break;
	}
	case 8103: {
		if(p1==0)return -2;
		*(void**)_p = new QBitmap(*(QPixmap*)(p1));
		break;
	}
	case 8104: {
		if(p1==0)return -2;
		*(void**)_p = new QBitmap(*(QSize*)(p1));
		break;
	}
	case 8105: {
		*(void**)_p = new QBitmap(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 8106: {
		*(void**)_p = new QBitmap(*(int*)p1,*(int*)p2);
		break;
	}
	case 8107: {
		pThis->clear();
		break;
	}
	case 8108: {
		if(p1==0)return -2;
		*(void**)p4 = new QBitmap(QBitmap::fromData(*(QSize*)(p1),*(unsigned char const**)p2,*(QImage::Format*)p3));
		break;
	}
	case 8109: {
		if(p1==0)return -2;
		*(void**)p2 = new QBitmap(QBitmap::fromImage(*(QImage*)(p1)));
		break;
	}
	case 8110: {
		if(p1==0)return -2;
		*(void**)p3 = new QBitmap(QBitmap::fromImage(*(QImage*)(p1),*(QFlags<Qt::ImageConversionFlag>*)p2));
		break;
	}
	case 8111: {
		if(p1==0)return -2;
		*(void**)p2 = new QBitmap(pThis->transformed(*(QMatrix*)(p1)));
		break;
	}
	case 8112: {
		if(p1==0)return -2;
		*(void**)p2 = new QBitmap(pThis->transformed(*(QTransform*)(p1)));
		break;
	}
	default:
		return drv_QPixmap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QBrush
int drv_QBrush(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QBrush *pThis = (QBrush*)_p;
	switch (funcid) {
	case 9000+1: {
		delete pThis;
		break;
	}
	case 9102: {
		*(void**)_p = new QBrush();
		break;
	}
	case 9103: {
		if(p1==0)return -2;
		*(void**)_p = new QBrush(*(QBrush*)(p1));
		break;
	}
	case 9104: {
		if(p1==0)return -2;
		*(void**)_p = new QBrush(*(QGradient*)(p1));
		break;
	}
	case 9105: {
		if(p1==0)return -2;
		*(void**)_p = new QBrush(*(QImage*)(p1));
		break;
	}
	case 9106: {
		if(p1==0)return -2;
		*(void**)_p = new QBrush(*(QPixmap*)(p1));
		break;
	}
	case 9107: {
		*(void**)_p = new QBrush(*(Qt::BrushStyle*)p1);
		break;
	}
	case 9108: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QBrush(*(QColor*)(p1),*(QPixmap*)(p2));
		break;
	}
	case 9109: {
		if(p1==0)return -2;
		*(void**)_p = new QBrush(*(QColor*)(p1),*(Qt::BrushStyle*)p2);
		break;
	}
	case 9110: {
		if(p2==0)return -2;
		*(void**)_p = new QBrush(*(Qt::GlobalColor*)p1,*(QPixmap*)(p2));
		break;
	}
	case 9111: {
		*(void**)_p = new QBrush(*(Qt::GlobalColor*)p1,*(Qt::BrushStyle*)p2);
		break;
	}
	case 9112: {
		*(const void**)p1 = new QColor(pThis->color());
		break;
	}
	case 9113: {
		*(const void**)p1 = pThis->gradient();
		break;
	}
	case 9114: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 9115: {
		*(bool*)p1 = pThis->isOpaque();
		break;
	}
	case 9116: {
		*(const void**)p1 = new QMatrix(pThis->matrix());
		break;
	}
	case 9117: {
		if(p1==0)return -2;
		pThis->setColor(*(QColor*)(p1));
		break;
	}
	case 9118: {
		pThis->setColor(*(Qt::GlobalColor*)p1);
		break;
	}
	case 9119: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1));
		break;
	}
	case 9120: {
		pThis->setStyle(*(Qt::BrushStyle*)p1);
		break;
	}
	case 9121: {
		if(p1==0)return -2;
		pThis->setTexture(*(QPixmap*)(p1));
		break;
	}
	case 9122: {
		if(p1==0)return -2;
		pThis->setTextureImage(*(QImage*)(p1));
		break;
	}
	case 9123: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1));
		break;
	}
	case 9124: {
		*(Qt::BrushStyle*)p1 = pThis->style();
		break;
	}
	case 9125: {
		*(void**)p1 = new QPixmap(pThis->texture());
		break;
	}
	case 9126: {
		*(void**)p1 = new QImage(pThis->textureImage());
		break;
	}
	case 9127: {
		*(void**)p1 = new QTransform(pThis->transform());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QByteArrayMatcher
int drv_QByteArrayMatcher(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QByteArrayMatcher *pThis = (QByteArrayMatcher*)_p;
	switch (funcid) {
	case 10000+1: {
		delete pThis;
		break;
	}
	case 10102: {
		*(void**)_p = new QByteArrayMatcher();
		break;
	}
	case 10103: {
		*(void**)_p = new QByteArrayMatcher(drvGetByteArrayHead(p1));
		break;
	}
	case 10104: {
		if(p1==0)return -2;
		*(void**)_p = new QByteArrayMatcher(*(QByteArrayMatcher*)(p1));
		break;
	}
	case 10105: {
		*(int*)p2 = pThis->indexIn(drvGetByteArrayHead(p1));
		break;
	}
	case 10106: {
		*(int*)p3 = pThis->indexIn(drvGetByteArrayHead(p1),*(int*)p2);
		break;
	}
	case 10107: {
		drvSetByteArray(p1,pThis->pattern());
		break;
	}
	case 10108: {
		pThis->setPattern(drvGetByteArrayHead(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QChildEvent
int drv_QChildEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QChildEvent *pThis = (QChildEvent*)_p;
	switch (funcid) {
	case 11000+1: {
		delete pThis;
		break;
	}
	case 11102: {
		*(void**)_p = new QChildEvent(*(QEvent::Type*)p1,(QObject*)(p2));
		break;
	}
	case 11103: {
		*(bool*)p1 = pThis->added();
		break;
	}
	case 11104: {
		*(void**)p1 = pThis->child();
		break;
	}
	case 11105: {
		*(bool*)p1 = pThis->polished();
		break;
	}
	case 11106: {
		*(bool*)p1 = pThis->removed();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCloseEvent
int drv_QCloseEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCloseEvent *pThis = (QCloseEvent*)_p;
	switch (funcid) {
	case 12000+1: {
		delete pThis;
		break;
	}
	case 12102: {
		*(void**)_p = new QCloseEvent();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QColor
int drv_QColor(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void*,void*,void*,void*,void*,void*)
{
	QColor *pThis = (QColor*)_p;
	switch (funcid) {
	case 13000+1: {
		delete pThis;
		break;
	}
	case 13102: {
		*(void**)_p = new QColor();
		break;
	}
	case 13103: {
		if(p1==0)return -2;
		*(void**)_p = new QColor(*(QColor*)(p1));
		break;
	}
	case 13104: {
		*(void**)_p = new QColor(*(QColor::Spec*)p1);
		break;
	}
	case 13105: {
		*(void**)_p = new QColor(drvGetStringHead(p1));
		break;
	}
	case 13106: {
		*(void**)_p = new QColor(*(Qt::GlobalColor*)p1);
		break;
	}
	case 13107: {
		*(void**)_p = new QColor(*(unsigned int*)p1);
		break;
	}
	case 13108: {
		*(void**)_p = new QColor(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 13109: {
		*(int*)p1 = pThis->alpha();
		break;
	}
	case 13110: {
		*(double*)p1 = pThis->alphaF();
		break;
	}
	case 13111: {
		*(int*)p1 = pThis->black();
		break;
	}
	case 13112: {
		*(double*)p1 = pThis->blackF();
		break;
	}
	case 13113: {
		*(int*)p1 = pThis->blue();
		break;
	}
	case 13114: {
		*(double*)p1 = pThis->blueF();
		break;
	}
	case 13115: {
		drvSetStringArray(p1,QColor::colorNames());
		break;
	}
	case 13116: {
		*(void**)p2 = new QColor(pThis->convertTo(*(QColor::Spec*)p1));
		break;
	}
	case 13117: {
		*(int*)p1 = pThis->cyan();
		break;
	}
	case 13118: {
		*(double*)p1 = pThis->cyanF();
		break;
	}
	case 13119: {
		*(void**)p1 = new QColor(pThis->dark());
		break;
	}
	case 13120: {
		*(void**)p2 = new QColor(pThis->dark(*(int*)p1));
		break;
	}
	case 13121: {
		*(void**)p1 = new QColor(pThis->darker());
		break;
	}
	case 13122: {
		*(void**)p2 = new QColor(pThis->darker(*(int*)p1));
		break;
	}
	case 13123: {
		*(void**)p6 = new QColor(QColor::fromCmyk(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5));
		break;
	}
	case 13124: {
		*(void**)p6 = new QColor(QColor::fromCmykF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5));
		break;
	}
	case 13125: {
		*(void**)p5 = new QColor(QColor::fromHsl(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 13126: {
		*(void**)p5 = new QColor(QColor::fromHslF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 13127: {
		*(void**)p5 = new QColor(QColor::fromHsv(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 13128: {
		*(void**)p5 = new QColor(QColor::fromHsvF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 13129: {
		*(void**)p2 = new QColor(QColor::fromRgb(*(unsigned int*)p1));
		break;
	}
	case 13130: {
		*(void**)p5 = new QColor(QColor::fromRgb(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 13131: {
		*(void**)p5 = new QColor(QColor::fromRgbF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 13132: {
		*(void**)p2 = new QColor(QColor::fromRgba(*(unsigned int*)p1));
		break;
	}
	case 13133: {
		pThis->getCmyk(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4,*(int**)p5);
		break;
	}
	case 13134: {
		pThis->getCmykF(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4,*(double**)p5);
		break;
	}
	case 13135: {
		pThis->getHsl(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 13136: {
		pThis->getHslF(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 13137: {
		pThis->getHsv(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 13138: {
		pThis->getHsvF(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 13139: {
		pThis->getRgb(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 13140: {
		pThis->getRgbF(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 13141: {
		*(int*)p1 = pThis->green();
		break;
	}
	case 13142: {
		*(double*)p1 = pThis->greenF();
		break;
	}
	case 13143: {
		*(int*)p1 = pThis->hslHue();
		break;
	}
	case 13144: {
		*(double*)p1 = pThis->hslHueF();
		break;
	}
	case 13145: {
		*(int*)p1 = pThis->hslSaturation();
		break;
	}
	case 13146: {
		*(double*)p1 = pThis->hslSaturationF();
		break;
	}
	case 13147: {
		*(int*)p1 = pThis->hsvHue();
		break;
	}
	case 13148: {
		*(double*)p1 = pThis->hsvHueF();
		break;
	}
	case 13149: {
		*(int*)p1 = pThis->hsvSaturation();
		break;
	}
	case 13150: {
		*(double*)p1 = pThis->hsvSaturationF();
		break;
	}
	case 13151: {
		*(int*)p1 = pThis->hue();
		break;
	}
	case 13152: {
		*(double*)p1 = pThis->hueF();
		break;
	}
	case 13153: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 13154: {
		*(bool*)p2 = QColor::isValidColor(drvGetStringHead(p1));
		break;
	}
	case 13155: {
		*(void**)p1 = new QColor(pThis->light());
		break;
	}
	case 13156: {
		*(void**)p2 = new QColor(pThis->light(*(int*)p1));
		break;
	}
	case 13157: {
		*(void**)p1 = new QColor(pThis->lighter());
		break;
	}
	case 13158: {
		*(void**)p2 = new QColor(pThis->lighter(*(int*)p1));
		break;
	}
	case 13159: {
		*(int*)p1 = pThis->lightness();
		break;
	}
	case 13160: {
		*(double*)p1 = pThis->lightnessF();
		break;
	}
	case 13161: {
		*(int*)p1 = pThis->magenta();
		break;
	}
	case 13162: {
		*(double*)p1 = pThis->magentaF();
		break;
	}
	case 13163: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 13164: {
		*(int*)p1 = pThis->red();
		break;
	}
	case 13165: {
		*(double*)p1 = pThis->redF();
		break;
	}
	case 13166: {
		*(unsigned int*)p1 = pThis->rgb();
		break;
	}
	case 13167: {
		*(unsigned int*)p1 = pThis->rgba();
		break;
	}
	case 13168: {
		*(int*)p1 = pThis->saturation();
		break;
	}
	case 13169: {
		*(double*)p1 = pThis->saturationF();
		break;
	}
	case 13170: {
		pThis->setAlpha(*(int*)p1);
		break;
	}
	case 13171: {
		pThis->setAlphaF(*(double*)p1);
		break;
	}
	case 13172: {
		pThis->setBlue(*(int*)p1);
		break;
	}
	case 13173: {
		pThis->setBlueF(*(double*)p1);
		break;
	}
	case 13174: {
		pThis->setCmyk(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5);
		break;
	}
	case 13175: {
		pThis->setCmykF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5);
		break;
	}
	case 13176: {
		pThis->setGreen(*(int*)p1);
		break;
	}
	case 13177: {
		pThis->setGreenF(*(double*)p1);
		break;
	}
	case 13178: {
		pThis->setHsl(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 13179: {
		pThis->setHslF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 13180: {
		pThis->setHsv(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 13181: {
		pThis->setHsvF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 13182: {
		pThis->setNamedColor(drvGetStringHead(p1));
		break;
	}
	case 13183: {
		pThis->setRed(*(int*)p1);
		break;
	}
	case 13184: {
		pThis->setRedF(*(double*)p1);
		break;
	}
	case 13185: {
		pThis->setRgb(*(unsigned int*)p1);
		break;
	}
	case 13186: {
		pThis->setRgb(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 13187: {
		pThis->setRgbF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 13188: {
		pThis->setRgba(*(unsigned int*)p1);
		break;
	}
	case 13189: {
		*(QColor::Spec*)p1 = pThis->spec();
		break;
	}
	case 13190: {
		*(void**)p1 = new QColor(pThis->toCmyk());
		break;
	}
	case 13191: {
		*(void**)p1 = new QColor(pThis->toHsl());
		break;
	}
	case 13192: {
		*(void**)p1 = new QColor(pThis->toHsv());
		break;
	}
	case 13193: {
		*(void**)p1 = new QColor(pThis->toRgb());
		break;
	}
	case 13194: {
		*(int*)p1 = pThis->value();
		break;
	}
	case 13195: {
		*(double*)p1 = pThis->valueF();
		break;
	}
	case 13196: {
		*(int*)p1 = pThis->yellow();
		break;
	}
	case 13197: {
		*(double*)p1 = pThis->yellowF();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QColormap
int drv_QColormap(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QColormap *pThis = (QColormap*)_p;
	switch (funcid) {
	case 14000+1: {
		delete pThis;
		break;
	}
	case 14102: {
		if(p1==0)return -2;
		*(void**)_p = new QColormap(*(QColormap*)(p1));
		break;
	}
	case 14103: {
		QColormap::cleanup();
		break;
	}
	case 14104: {
		*(const void**)p2 = new QColor(pThis->colorAt(*(unsigned int*)p1));
		break;
	}
	case 14105: {
		drvSetVectorPtr<QColor>(p1,13000,pThis->colormap());
		break;
	}
	case 14106: {
		*(int*)p1 = pThis->depth();
		break;
	}
	case 14107: {
		QColormap::initialize();
		break;
	}
	case 14108: {
		*(void**)p1 = new QColormap(QColormap::instance());
		break;
	}
	case 14109: {
		*(void**)p2 = new QColormap(QColormap::instance(*(int*)p1));
		break;
	}
	case 14110: {
		*(QColormap::Mode*)p1 = pThis->mode();
		break;
	}
	case 14111: {
		if(p1==0)return -2;
		*(unsigned int*)p2 = pThis->pixel(*(QColor*)(p1));
		break;
	}
	case 14112: {
		*(int*)p1 = pThis->size();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QConicalGradient
int drv_QConicalGradient(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QConicalGradient *pThis = (QConicalGradient*)_p;
	switch (funcid) {
	case 15000+1: {
		delete pThis;
		break;
	}
	case 15102: {
		*(void**)_p = new QConicalGradient();
		break;
	}
	case 15103: {
		if(p1==0)return -2;
		*(void**)_p = new QConicalGradient(*(QPointF*)(p1),*(double*)p2);
		break;
	}
	case 15104: {
		*(void**)_p = new QConicalGradient(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 15105: {
		*(double*)p1 = pThis->angle();
		break;
	}
	case 15106: {
		*(void**)p1 = new QPointF(pThis->center());
		break;
	}
	case 15107: {
		pThis->setAngle(*(double*)p1);
		break;
	}
	case 15108: {
		if(p1==0)return -2;
		pThis->setCenter(*(QPointF*)(p1));
		break;
	}
	case 15109: {
		pThis->setCenter(*(double*)p1,*(double*)p2);
		break;
	}
	default:
		return drv_QGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QContextMenuEvent
int drv_QContextMenuEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QContextMenuEvent *pThis = (QContextMenuEvent*)_p;
	switch (funcid) {
	case 16000+1: {
		delete pThis;
		break;
	}
	case 16102: {
		if(p2==0)return -2;
		*(void**)_p = new QContextMenuEvent(*(QContextMenuEvent::Reason*)p1,*(QPoint*)(p2));
		break;
	}
	case 16103: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QContextMenuEvent(*(QContextMenuEvent::Reason*)p1,*(QPoint*)(p2),*(QPoint*)(p3));
		break;
	}
	case 16104: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QContextMenuEvent(*(QContextMenuEvent::Reason*)p1,*(QPoint*)(p2),*(QPoint*)(p3),*(QFlags<Qt::KeyboardModifier>*)p4);
		break;
	}
	case 16105: {
		*(const void**)p1 = new QPoint(pThis->globalPos());
		break;
	}
	case 16106: {
		*(int*)p1 = pThis->globalX();
		break;
	}
	case 16107: {
		*(int*)p1 = pThis->globalY();
		break;
	}
	case 16108: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 16109: {
		*(QContextMenuEvent::Reason*)p1 = pThis->reason();
		break;
	}
	case 16110: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 16111: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCryptographicHash
int drv_QCryptographicHash(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QCryptographicHash *pThis = (QCryptographicHash*)_p;
	switch (funcid) {
	case 17000+1: {
		delete pThis;
		break;
	}
	case 17102: {
		*(void**)_p = new QCryptographicHash(*(QCryptographicHash::Algorithm*)p1);
		break;
	}
	case 17103: {
		pThis->addData(drvGetByteArrayHead(p1));
		break;
	}
	case 17104: {
		drvSetByteArray(p3,QCryptographicHash::hash(drvGetByteArrayHead(p1),*(QCryptographicHash::Algorithm*)p2));
		break;
	}
	case 17105: {
		pThis->reset();
		break;
	}
	case 17106: {
		drvSetByteArray(p1,pThis->result());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QCursor
int drv_QCursor(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QCursor *pThis = (QCursor*)_p;
	switch (funcid) {
	case 18000+1: {
		delete pThis;
		break;
	}
	case 18102: {
		*(void**)_p = new QCursor();
		break;
	}
	case 18103: {
		if(p1==0)return -2;
		*(void**)_p = new QCursor(*(QCursor*)(p1));
		break;
	}
	case 18104: {
		*(void**)_p = new QCursor(*(Qt::CursorShape*)p1);
		break;
	}
	case 18105: {
		if(p1==0)return -2;
		*(void**)_p = new QCursor(*(QPixmap*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 18106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QCursor(*(QBitmap*)(p1),*(QBitmap*)(p2),*(int*)p3,*(int*)p4);
		break;
	}
	case 18107: {
		*(const void**)p1 = pThis->bitmap();
		break;
	}
	case 18108: {
		*(void**)p1 = new QPoint(pThis->hotSpot());
		break;
	}
	case 18109: {
		*(const void**)p1 = pThis->mask();
		break;
	}
	case 18110: {
		*(void**)p1 = new QPixmap(pThis->pixmap());
		break;
	}
	case 18111: {
		*(void**)p1 = new QPoint(QCursor::pos());
		break;
	}
	case 18112: {
		if(p1==0)return -2;
		QCursor::setPos(*(QPoint*)(p1));
		break;
	}
	case 18113: {
		QCursor::setPos(*(int*)p1,*(int*)p2);
		break;
	}
	case 18114: {
		pThis->setShape(*(Qt::CursorShape*)p1);
		break;
	}
	case 18115: {
		*(Qt::CursorShape*)p1 = pThis->shape();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDate
int drv_QDate(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QDate *pThis = (QDate*)_p;
	switch (funcid) {
	case 19000+1: {
		delete pThis;
		break;
	}
	case 19102: {
		*(void**)_p = new QDate();
		break;
	}
	case 19103: {
		if(p1==0)return -2;
		*(void**)_p = new QDate(*(QDate*)(p1));
		break;
	}
	case 19104: {
		*(void**)_p = new QDate(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 19105: {
		*(void**)p2 = new QDate(pThis->addDays(*(int*)p1));
		break;
	}
	case 19106: {
		*(void**)p2 = new QDate(pThis->addMonths(*(int*)p1));
		break;
	}
	case 19107: {
		*(void**)p2 = new QDate(pThis->addYears(*(int*)p1));
		break;
	}
	case 19108: {
		*(void**)p1 = new QDate(QDate::currentDate());
		break;
	}
	case 19109: {
		*(int*)p1 = pThis->day();
		break;
	}
	case 19110: {
		*(int*)p1 = pThis->dayOfWeek();
		break;
	}
	case 19111: {
		*(int*)p1 = pThis->dayOfYear();
		break;
	}
	case 19112: {
		*(int*)p1 = pThis->daysInMonth();
		break;
	}
	case 19113: {
		*(int*)p1 = pThis->daysInYear();
		break;
	}
	case 19114: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->daysTo(*(QDate*)(p1));
		break;
	}
	case 19115: {
		*(void**)p2 = new QDate(QDate::fromJulianDay(*(int*)p1));
		break;
	}
	case 19116: {
		*(void**)p2 = new QDate(QDate::fromString(drvGetStringHead(p1)));
		break;
	}
	case 19117: {
		*(void**)p3 = new QDate(QDate::fromString(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 19118: {
		*(void**)p3 = new QDate(QDate::fromString(drvGetStringHead(p1),*(Qt::DateFormat*)p2));
		break;
	}
	case 19119: {
		pThis->getDate(*(int**)p1,*(int**)p2,*(int**)p3);
		break;
	}
	case 19120: {
		*(bool*)p2 = QDate::isLeapYear(*(int*)p1);
		break;
	}
	case 19121: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 19122: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 19123: {
		*(bool*)p4 = QDate::isValid(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 19124: {
		drvSetString(p2,QDate::longDayName(*(int*)p1));
		break;
	}
	case 19125: {
		drvSetString(p3,QDate::longDayName(*(int*)p1,*(QDate::MonthNameType*)p2));
		break;
	}
	case 19126: {
		drvSetString(p2,QDate::longMonthName(*(int*)p1));
		break;
	}
	case 19127: {
		drvSetString(p3,QDate::longMonthName(*(int*)p1,*(QDate::MonthNameType*)p2));
		break;
	}
	case 19128: {
		*(int*)p1 = pThis->month();
		break;
	}
	case 19129: {
		*(bool*)p4 = pThis->setDate(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 19130: {
		drvSetString(p2,QDate::shortDayName(*(int*)p1));
		break;
	}
	case 19131: {
		drvSetString(p3,QDate::shortDayName(*(int*)p1,*(QDate::MonthNameType*)p2));
		break;
	}
	case 19132: {
		drvSetString(p2,QDate::shortMonthName(*(int*)p1));
		break;
	}
	case 19133: {
		drvSetString(p3,QDate::shortMonthName(*(int*)p1,*(QDate::MonthNameType*)p2));
		break;
	}
	case 19134: {
		*(int*)p1 = pThis->toJulianDay();
		break;
	}
	case 19135: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 19136: {
		drvSetString(p2,pThis->toString(drvGetStringHead(p1)));
		break;
	}
	case 19137: {
		drvSetString(p2,pThis->toString(*(Qt::DateFormat*)p1));
		break;
	}
	case 19138: {
		*(int*)p1 = pThis->weekNumber();
		break;
	}
	case 19139: {
		*(int*)p2 = pThis->weekNumber(*(int**)p1);
		break;
	}
	case 19140: {
		*(int*)p1 = pThis->year();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDateTime
int drv_QDateTime(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QDateTime *pThis = (QDateTime*)_p;
	switch (funcid) {
	case 20000+1: {
		delete pThis;
		break;
	}
	case 20102: {
		*(void**)_p = new QDateTime();
		break;
	}
	case 20103: {
		if(p1==0)return -2;
		*(void**)_p = new QDateTime(*(QDate*)(p1));
		break;
	}
	case 20104: {
		if(p1==0)return -2;
		*(void**)_p = new QDateTime(*(QDateTime*)(p1));
		break;
	}
	case 20105: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QDateTime(*(QDate*)(p1),*(QTime*)(p2),*(Qt::TimeSpec*)p3);
		break;
	}
	case 20106: {
		*(void**)p2 = new QDateTime(pThis->addDays(*(int*)p1));
		break;
	}
	case 20107: {
		*(void**)p2 = new QDateTime(pThis->addMSecs(*(qint64*)p1));
		break;
	}
	case 20108: {
		*(void**)p2 = new QDateTime(pThis->addMonths(*(int*)p1));
		break;
	}
	case 20109: {
		*(void**)p2 = new QDateTime(pThis->addSecs(*(int*)p1));
		break;
	}
	case 20110: {
		*(void**)p2 = new QDateTime(pThis->addYears(*(int*)p1));
		break;
	}
	case 20111: {
		*(void**)p1 = new QDateTime(QDateTime::currentDateTime());
		break;
	}
	case 20112: {
		*(void**)p1 = new QDateTime(QDateTime::currentDateTimeUtc());
		break;
	}
	case 20113: {
		*(qint64*)p1 = QDateTime::currentMSecsSinceEpoch();
		break;
	}
	case 20114: {
		*(void**)p1 = new QDate(pThis->date());
		break;
	}
	case 20115: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->daysTo(*(QDateTime*)(p1));
		break;
	}
	case 20116: {
		*(void**)p2 = new QDateTime(QDateTime::fromMSecsSinceEpoch(*(qint64*)p1));
		break;
	}
	case 20117: {
		*(void**)p2 = new QDateTime(QDateTime::fromString(drvGetStringHead(p1)));
		break;
	}
	case 20118: {
		*(void**)p3 = new QDateTime(QDateTime::fromString(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 20119: {
		*(void**)p3 = new QDateTime(QDateTime::fromString(drvGetStringHead(p1),*(Qt::DateFormat*)p2));
		break;
	}
	case 20120: {
		*(void**)p2 = new QDateTime(QDateTime::fromTime_t(*(unsigned int*)p1));
		break;
	}
	case 20121: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 20122: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 20123: {
		if(p1==0)return -2;
		*(qint64*)p2 = pThis->msecsTo(*(QDateTime*)(p1));
		break;
	}
	case 20124: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->secsTo(*(QDateTime*)(p1));
		break;
	}
	case 20125: {
		if(p1==0)return -2;
		pThis->setDate(*(QDate*)(p1));
		break;
	}
	case 20126: {
		pThis->setMSecsSinceEpoch(*(qint64*)p1);
		break;
	}
	case 20127: {
		if(p1==0)return -2;
		pThis->setTime(*(QTime*)(p1));
		break;
	}
	case 20128: {
		pThis->setTimeSpec(*(Qt::TimeSpec*)p1);
		break;
	}
	case 20129: {
		pThis->setTime_t(*(unsigned int*)p1);
		break;
	}
	case 20130: {
		pThis->setUtcOffset(*(int*)p1);
		break;
	}
	case 20131: {
		*(void**)p1 = new QTime(pThis->time());
		break;
	}
	case 20132: {
		*(Qt::TimeSpec*)p1 = pThis->timeSpec();
		break;
	}
	case 20133: {
		*(void**)p1 = new QDateTime(pThis->toLocalTime());
		break;
	}
	case 20134: {
		*(qint64*)p1 = pThis->toMSecsSinceEpoch();
		break;
	}
	case 20135: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 20136: {
		drvSetString(p2,pThis->toString(drvGetStringHead(p1)));
		break;
	}
	case 20137: {
		drvSetString(p2,pThis->toString(*(Qt::DateFormat*)p1));
		break;
	}
	case 20138: {
		*(void**)p2 = new QDateTime(pThis->toTimeSpec(*(Qt::TimeSpec*)p1));
		break;
	}
	case 20139: {
		*(unsigned int*)p1 = pThis->toTime_t();
		break;
	}
	case 20140: {
		*(void**)p1 = new QDateTime(pThis->toUTC());
		break;
	}
	case 20141: {
		*(int*)p1 = pThis->utcOffset();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDesktopServices
int drv_QDesktopServices(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QDesktopServices *pThis = (QDesktopServices*)_p;
	switch (funcid) {
	case 21000+1: {
		delete pThis;
		break;
	}
	case 21102: {
		*(void**)_p = new QDesktopServices();
		break;
	}
	case 21103: {
#ifdef QTDRV_QT5
		drvSetString(p2,QStandardPaths::displayName(*(QStandardPaths::StandardLocation*)p1));
#else
		drvSetString(p2,QDesktopServices::displayName(*(QDesktopServices::StandardLocation*)p1));
#endif
		break;
	}
	case 21104: {
		if(p1==0)return -2;
		*(bool*)p2 = QDesktopServices::openUrl(*(QUrl*)(p1));
		break;
	}
	case 21105: {
		QDesktopServices::setUrlHandler(drvGetStringHead(p1),(QObject*)(p2),drvGet_const_char(p3));
		break;
	}
	case 21106: {
#ifdef QTDRV_QT5
		drvSetString(p2,QStandardPaths::writableLocation(*(QStandardPaths::StandardLocation*)p1));
#else
		drvSetString(p2,QDesktopServices::storageLocation(*(QDesktopServices::StandardLocation*)p1));
#endif
		break;
	}
	case 21107: {
		QDesktopServices::unsetUrlHandler(drvGetStringHead(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDir
int drv_QDir(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QDir *pThis = (QDir*)_p;
	switch (funcid) {
	case 22000+1: {
		delete pThis;
		break;
	}
	case 22102: {
		*(void**)_p = new QDir();
		break;
	}
	case 22103: {
		if(p1==0)return -2;
		*(void**)_p = new QDir(*(QDir*)(p1));
		break;
	}
	case 22104: {
		*(void**)_p = new QDir(drvGetStringHead(p1));
		break;
	}
	case 22105: {
		*(void**)_p = new QDir(drvGetStringHead(p1),drvGetStringHead(p2),*(QFlags<QDir::SortFlag>*)p3,*(QFlags<QDir::Filter>*)p4);
		break;
	}
	case 22106: {
		drvSetString(p2,pThis->absoluteFilePath(drvGetStringHead(p1)));
		break;
	}
	case 22107: {
		drvSetString(p1,pThis->absolutePath());
		break;
	}
	case 22108: {
		QDir::addResourceSearchPath(drvGetStringHead(p1));
		break;
	}
	case 22109: {
		QDir::addSearchPath(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 22110: {
		drvSetString(p1,pThis->canonicalPath());
		break;
	}
	case 22111: {
		*(bool*)p2 = pThis->cd(drvGetStringHead(p1));
		break;
	}
	case 22112: {
		*(bool*)p1 = pThis->cdUp();
		break;
	}
	case 22113: {
		drvSetString(p2,QDir::cleanPath(drvGetStringHead(p1)));
		break;
	}
	case 22114: {
		*(unsigned int*)p1 = pThis->count();
		break;
	}
	case 22115: {
		*(void**)p1 = new QDir(QDir::current());
		break;
	}
	case 22116: {
		drvSetString(p1,QDir::currentPath());
		break;
	}
	case 22117: {
		drvSetString(p1,pThis->dirName());
		break;
	}
	case 22118: {
		drvSetListPtr<QFileInfo>(p1,34000,QDir::drives());
		break;
	}
	case 22119: {
		drvSetListPtr<QFileInfo>(p1,34000,pThis->entryInfoList());
		break;
	}
	case 22120: {
		drvSetListPtr<QFileInfo>(p2,34000,pThis->entryInfoList(drvGetStringArray(p1)));
		break;
	}
	case 22121: {
		drvSetListPtr<QFileInfo>(p3,34000,pThis->entryInfoList(*(QFlags<QDir::Filter>*)p1,*(QFlags<QDir::SortFlag>*)p2));
		break;
	}
	case 22122: {
		drvSetListPtr<QFileInfo>(p4,34000,pThis->entryInfoList(drvGetStringArray(p1),*(QFlags<QDir::Filter>*)p2,*(QFlags<QDir::SortFlag>*)p3));
		break;
	}
	case 22123: {
		drvSetStringArray(p1,pThis->entryList());
		break;
	}
	case 22124: {
		drvSetStringArray(p2,pThis->entryList(drvGetStringArray(p1)));
		break;
	}
	case 22125: {
		drvSetStringArray(p3,pThis->entryList(*(QFlags<QDir::Filter>*)p1,*(QFlags<QDir::SortFlag>*)p2));
		break;
	}
	case 22126: {
		drvSetStringArray(p4,pThis->entryList(drvGetStringArray(p1),*(QFlags<QDir::Filter>*)p2,*(QFlags<QDir::SortFlag>*)p3));
		break;
	}
	case 22127: {
		*(bool*)p1 = pThis->exists();
		break;
	}
	case 22128: {
		*(bool*)p2 = pThis->exists(drvGetStringHead(p1));
		break;
	}
	case 22129: {
		drvSetString(p2,pThis->filePath(drvGetStringHead(p1)));
		break;
	}
	case 22130: {
		*(QFlags<QDir::Filter>*)p1 = pThis->filter();
		break;
	}
	case 22131: {
		drvSetString(p2,QDir::fromNativeSeparators(drvGetStringHead(p1)));
		break;
	}
	case 22132: {
		*(void**)p1 = new QDir(QDir::home());
		break;
	}
	case 22133: {
		drvSetString(p1,QDir::homePath());
		break;
	}
	case 22134: {
		*(bool*)p1 = pThis->isAbsolute();
		break;
	}
	case 22135: {
		*(bool*)p2 = QDir::isAbsolutePath(drvGetStringHead(p1));
		break;
	}
	case 22136: {
		*(bool*)p1 = pThis->isReadable();
		break;
	}
	case 22137: {
		*(bool*)p1 = pThis->isRelative();
		break;
	}
	case 22138: {
		*(bool*)p2 = QDir::isRelativePath(drvGetStringHead(p1));
		break;
	}
	case 22139: {
		*(bool*)p1 = pThis->isRoot();
		break;
	}
	case 22140: {
		*(bool*)p1 = pThis->makeAbsolute();
		break;
	}
	case 22141: {
		*(bool*)p3 = QDir::match(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 22142: {
		*(bool*)p3 = QDir::match(drvGetStringArray(p1),drvGetStringHead(p2));
		break;
	}
	case 22143: {
		*(bool*)p2 = pThis->mkdir(drvGetStringHead(p1));
		break;
	}
	case 22144: {
		*(bool*)p2 = pThis->mkpath(drvGetStringHead(p1));
		break;
	}
	case 22145: {
		drvSetStringArray(p1,pThis->nameFilters());
		break;
	}
	case 22146: {
		drvSetStringArray(p2,QDir::nameFiltersFromString(drvGetStringHead(p1)));
		break;
	}
	case 22147: {
		drvSetString(p1,pThis->path());
		break;
	}
	case 22148: {
		pThis->refresh();
		break;
	}
	case 22149: {
		drvSetString(p2,pThis->relativeFilePath(drvGetStringHead(p1)));
		break;
	}
	case 22150: {
		*(bool*)p2 = pThis->remove(drvGetStringHead(p1));
		break;
	}
	case 22151: {
		*(bool*)p3 = pThis->rename(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 22152: {
		*(bool*)p2 = pThis->rmdir(drvGetStringHead(p1));
		break;
	}
	case 22153: {
		*(bool*)p2 = pThis->rmpath(drvGetStringHead(p1));
		break;
	}
	case 22154: {
		*(void**)p1 = new QDir(QDir::root());
		break;
	}
	case 22155: {
		drvSetString(p1,QDir::rootPath());
		break;
	}
	case 22156: {
		drvSetStringArray(p2,QDir::searchPaths(drvGetStringHead(p1)));
		break;
	}
	case 22157: {
		*(QChar*)p1 = QDir::separator();
		break;
	}
	case 22158: {
		*(bool*)p2 = QDir::setCurrent(drvGetStringHead(p1));
		break;
	}
	case 22159: {
		pThis->setFilter(*(QFlags<QDir::Filter>*)p1);
		break;
	}
	case 22160: {
		pThis->setNameFilters(drvGetStringArray(p1));
		break;
	}
	case 22161: {
		pThis->setPath(drvGetStringHead(p1));
		break;
	}
	case 22162: {
		QDir::setSearchPaths(drvGetStringHead(p1),drvGetStringArray(p2));
		break;
	}
	case 22163: {
		pThis->setSorting(*(QFlags<QDir::SortFlag>*)p1);
		break;
	}
	case 22164: {
		*(QFlags<QDir::SortFlag>*)p1 = pThis->sorting();
		break;
	}
	case 22165: {
		*(void**)p1 = new QDir(QDir::temp());
		break;
	}
	case 22166: {
		drvSetString(p1,QDir::tempPath());
		break;
	}
	case 22167: {
		drvSetString(p2,QDir::toNativeSeparators(drvGetStringHead(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDirIterator
int drv_QDirIterator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QDirIterator *pThis = (QDirIterator*)_p;
	switch (funcid) {
	case 23000+1: {
		delete pThis;
		break;
	}
	case 23102: {
		if(p1==0)return -2;
		*(void**)_p = new QDirIterator(*(QDir*)(p1),*(QFlags<QDirIterator::IteratorFlag>*)p2);
		break;
	}
	case 23103: {
		*(void**)_p = new QDirIterator(drvGetStringHead(p1),*(QFlags<QDirIterator::IteratorFlag>*)p2);
		break;
	}
	case 23104: {
		*(void**)_p = new QDirIterator(drvGetStringHead(p1),*(QFlags<QDir::Filter>*)p2,*(QFlags<QDirIterator::IteratorFlag>*)p3);
		break;
	}
	case 23105: {
		*(void**)_p = new QDirIterator(drvGetStringHead(p1),drvGetStringArray(p2),*(QFlags<QDir::Filter>*)p3,*(QFlags<QDirIterator::IteratorFlag>*)p4);
		break;
	}
	case 23106: {
		*(void**)p1 = new QFileInfo(pThis->fileInfo());
		break;
	}
	case 23107: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 23108: {
		drvSetString(p1,pThis->filePath());
		break;
	}
	case 23109: {
		*(bool*)p1 = pThis->hasNext();
		break;
	}
	case 23110: {
		drvSetString(p1,pThis->next());
		break;
	}
	case 23111: {
		drvSetString(p1,pThis->path());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QDragEnterEvent
int drv_QDragEnterEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDragEnterEvent *pThis = (QDragEnterEvent*)_p;
	switch (funcid) {
	case 24000+1: {
		delete pThis;
		break;
	}
	default:
		return drv_QDragMoveEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDragLeaveEvent
int drv_QDragLeaveEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDragLeaveEvent *pThis = (QDragLeaveEvent*)_p;
	switch (funcid) {
	case 25000+1: {
		delete pThis;
		break;
	}
	case 25102: {
		*(void**)_p = new QDragLeaveEvent();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDragMoveEvent
int drv_QDragMoveEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDragMoveEvent *pThis = (QDragMoveEvent*)_p;
	switch (funcid) {
	case 26000+1: {
		delete pThis;
		break;
	}
	case 26102: {
		pThis->accept();
		break;
	}
	case 26103: {
		if(p1==0)return -2;
		pThis->accept(*(QRect*)(p1));
		break;
	}
	case 26104: {
		*(void**)p1 = new QRect(pThis->answerRect());
		break;
	}
	case 26105: {
		pThis->ignore();
		break;
	}
	case 26106: {
		if(p1==0)return -2;
		pThis->ignore(*(QRect*)(p1));
		break;
	}
	default:
		return drv_QDropEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDropEvent
int drv_QDropEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDropEvent *pThis = (QDropEvent*)_p;
	switch (funcid) {
	case 27000+1: {
		delete pThis;
		break;
	}
	case 27102: {
		pThis->acceptProposedAction();
		break;
	}
	case 27103: {
		*(Qt::DropAction*)p1 = pThis->dropAction();
		break;
	}
	case 27104: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->keyboardModifiers();
		break;
	}
	case 27105: {
		*(const void**)p1 = pThis->mimeData();
		break;
	}
	case 27106: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->mouseButtons();
		break;
	}
	case 27107: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 27108: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->possibleActions();
		break;
	}
	case 27109: {
		*(Qt::DropAction*)p1 = pThis->proposedAction();
		break;
	}
	case 27110: {
		pThis->setDropAction(*(Qt::DropAction*)p1);
		break;
	}
	case 27111: {
		*(void**)p1 = pThis->source();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDynamicPropertyChangeEvent
int drv_QDynamicPropertyChangeEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDynamicPropertyChangeEvent *pThis = (QDynamicPropertyChangeEvent*)_p;
	switch (funcid) {
	case 28000+1: {
		delete pThis;
		break;
	}
	case 28102: {
		*(void**)_p = new QDynamicPropertyChangeEvent(drvGetByteArrayHead(p1));
		break;
	}
	case 28103: {
		drvSetByteArray(p1,pThis->propertyName());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QEasingCurve
int drv_QEasingCurve(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QEasingCurve *pThis = (QEasingCurve*)_p;
	switch (funcid) {
	case 29000+1: {
		delete pThis;
		break;
	}
	case 29102: {
		*(void**)_p = new QEasingCurve();
		break;
	}
	case 29103: {
		if(p1==0)return -2;
		*(void**)_p = new QEasingCurve(*(QEasingCurve*)(p1));
		break;
	}
	case 29104: {
		*(void**)_p = new QEasingCurve(*(QEasingCurve::Type*)p1);
		break;
	}
	case 29105: {
		*(double*)p1 = pThis->amplitude();
		break;
	}
	case 29106: {
		*(double*)p1 = pThis->overshoot();
		break;
	}
	case 29107: {
		*(double*)p1 = pThis->period();
		break;
	}
	case 29108: {
		pThis->setAmplitude(*(double*)p1);
		break;
	}
	case 29109: {
		pThis->setOvershoot(*(double*)p1);
		break;
	}
	case 29110: {
		pThis->setPeriod(*(double*)p1);
		break;
	}
	case 29111: {
		pThis->setType(*(QEasingCurve::Type*)p1);
		break;
	}
	case 29112: {
		*(QEasingCurve::Type*)p1 = pThis->type();
		break;
	}
	case 29113: {
		*(double*)p2 = pThis->valueForProgress(*(double*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QElapsedTimer
int drv_QElapsedTimer(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QElapsedTimer *pThis = (QElapsedTimer*)_p;
	switch (funcid) {
	case 30000+1: {
		delete pThis;
		break;
	}
	case 30102: {
		*(void**)_p = new QElapsedTimer();
		break;
	}
	case 30103: {
		*(QElapsedTimer::ClockType*)p1 = QElapsedTimer::clockType();
		break;
	}
	case 30104: {
		*(qint64*)p1 = pThis->elapsed();
		break;
	}
	case 30105: {
		*(bool*)p2 = pThis->hasExpired(*(qint64*)p1);
		break;
	}
	case 30106: {
		pThis->invalidate();
		break;
	}
	case 30107: {
		*(bool*)p1 = QElapsedTimer::isMonotonic();
		break;
	}
	case 30108: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 30109: {
		*(qint64*)p1 = pThis->msecsSinceReference();
		break;
	}
	case 30110: {
		if(p1==0)return -2;
		*(qint64*)p2 = pThis->msecsTo(*(QElapsedTimer*)(p1));
		break;
	}
	case 30111: {
		*(qint64*)p1 = pThis->restart();
		break;
	}
	case 30112: {
		if(p1==0)return -2;
		*(qint64*)p2 = pThis->secsTo(*(QElapsedTimer*)(p1));
		break;
	}
	case 30113: {
		pThis->start();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QEvent
int drv_QEvent(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QEvent *pThis = (QEvent*)_p;
	switch (funcid) {
	case 31000+1: {
		delete pThis;
		break;
	}
	case 31102: {
		*(void**)_p = new QEvent(*(QEvent::Type*)p1);
		break;
	}
	case 31103: {
		pThis->accept();
		break;
	}
	case 31104: {
		pThis->ignore();
		break;
	}
	case 31105: {
		*(bool*)p1 = pThis->isAccepted();
		break;
	}
	case 31106: {
		*(int*)p1 = QEvent::registerEventType();
		break;
	}
	case 31107: {
		*(int*)p2 = QEvent::registerEventType(*(int*)p1);
		break;
	}
	case 31108: {
		pThis->setAccepted(*(bool*)p1);
		break;
	}
	case 31109: {
		*(bool*)p1 = pThis->spontaneous();
		break;
	}
	case 31110: {
		*(QEvent::Type*)p1 = pThis->type();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFactoryInterface
int drv_QFactoryInterface(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFactoryInterface *pThis = (QFactoryInterface*)_p;
	switch (funcid) {
	case 32000+1: {
		delete pThis;
		break;
	}
	case 32102: {
		drvSetStringArray(p1,pThis->keys());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFileIconProvider
int drv_QFileIconProvider(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFileIconProvider *pThis = (QFileIconProvider*)_p;
	switch (funcid) {
	case 33000+1: {
		delete pThis;
		break;
	}
	case 33102: {
		*(void**)_p = new QFileIconProvider();
		break;
	}
	case 33103: {
		*(void**)p2 = new QIcon(pThis->icon(*(QFileIconProvider::IconType*)p1));
		break;
	}
	case 33104: {
		if(p1==0)return -2;
		*(void**)p2 = new QIcon(pThis->icon(*(QFileInfo*)(p1)));
		break;
	}
	case 33105: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->type(*(QFileInfo*)(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFileInfo
int drv_QFileInfo(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFileInfo *pThis = (QFileInfo*)_p;
	switch (funcid) {
	case 34000+1: {
		delete pThis;
		break;
	}
	case 34102: {
		*(void**)_p = new QFileInfo();
		break;
	}
	case 34103: {
		if(p1==0)return -2;
		*(void**)_p = new QFileInfo(*(QFile*)(p1));
		break;
	}
	case 34104: {
		if(p1==0)return -2;
		*(void**)_p = new QFileInfo(*(QFileInfo*)(p1));
		break;
	}
	case 34105: {
		*(void**)_p = new QFileInfo(drvGetStringHead(p1));
		break;
	}
	case 34106: {
		if(p1==0)return -2;
		*(void**)_p = new QFileInfo(*(QDir*)(p1),drvGetStringHead(p2));
		break;
	}
	case 34107: {
		*(void**)p1 = new QDir(pThis->absoluteDir());
		break;
	}
	case 34108: {
		drvSetString(p1,pThis->absoluteFilePath());
		break;
	}
	case 34109: {
		drvSetString(p1,pThis->absolutePath());
		break;
	}
	case 34110: {
		drvSetString(p1,pThis->baseName());
		break;
	}
	case 34111: {
		drvSetString(p1,pThis->bundleName());
		break;
	}
	case 34112: {
		*(bool*)p1 = pThis->caching();
		break;
	}
	case 34113: {
		drvSetString(p1,pThis->canonicalFilePath());
		break;
	}
	case 34114: {
		drvSetString(p1,pThis->canonicalPath());
		break;
	}
	case 34115: {
		drvSetString(p1,pThis->completeBaseName());
		break;
	}
	case 34116: {
		drvSetString(p1,pThis->completeSuffix());
		break;
	}
	case 34117: {
		*(void**)p1 = new QDateTime(pThis->created());
		break;
	}
	case 34118: {
		*(void**)p1 = new QDir(pThis->dir());
		break;
	}
	case 34119: {
		*(bool*)p1 = pThis->exists();
		break;
	}
	case 34120: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 34121: {
		drvSetString(p1,pThis->filePath());
		break;
	}
	case 34122: {
		drvSetString(p1,pThis->group());
		break;
	}
	case 34123: {
		*(unsigned int*)p1 = pThis->groupId();
		break;
	}
	case 34124: {
		*(bool*)p1 = pThis->isAbsolute();
		break;
	}
	case 34125: {
		*(bool*)p1 = pThis->isBundle();
		break;
	}
	case 34126: {
		*(bool*)p1 = pThis->isDir();
		break;
	}
	case 34127: {
		*(bool*)p1 = pThis->isExecutable();
		break;
	}
	case 34128: {
		*(bool*)p1 = pThis->isFile();
		break;
	}
	case 34129: {
		*(bool*)p1 = pThis->isHidden();
		break;
	}
	case 34130: {
		*(bool*)p1 = pThis->isReadable();
		break;
	}
	case 34131: {
		*(bool*)p1 = pThis->isRelative();
		break;
	}
	case 34132: {
		*(bool*)p1 = pThis->isRoot();
		break;
	}
	case 34133: {
		*(bool*)p1 = pThis->isSymLink();
		break;
	}
	case 34134: {
		*(bool*)p1 = pThis->isWritable();
		break;
	}
	case 34135: {
		*(void**)p1 = new QDateTime(pThis->lastModified());
		break;
	}
	case 34136: {
		*(void**)p1 = new QDateTime(pThis->lastRead());
		break;
	}
	case 34137: {
		*(bool*)p1 = pThis->makeAbsolute();
		break;
	}
	case 34138: {
		drvSetString(p1,pThis->owner());
		break;
	}
	case 34139: {
		*(unsigned int*)p1 = pThis->ownerId();
		break;
	}
	case 34140: {
		drvSetString(p1,pThis->path());
		break;
	}
	case 34141: {
		*(bool*)p2 = pThis->permission(*(QFlags<QFile::Permission>*)p1);
		break;
	}
	case 34142: {
		*(QFlags<QFile::Permission>*)p1 = pThis->permissions();
		break;
	}
	case 34143: {
		drvSetString(p1,pThis->readLink());
		break;
	}
	case 34144: {
		pThis->refresh();
		break;
	}
	case 34145: {
		pThis->setCaching(*(bool*)p1);
		break;
	}
	case 34146: {
		if(p1==0)return -2;
		pThis->setFile(*(QFile*)(p1));
		break;
	}
	case 34147: {
		pThis->setFile(drvGetStringHead(p1));
		break;
	}
	case 34148: {
		if(p1==0)return -2;
		pThis->setFile(*(QDir*)(p1),drvGetStringHead(p2));
		break;
	}
	case 34149: {
		*(qint64*)p1 = pThis->size();
		break;
	}
	case 34150: {
		drvSetString(p1,pThis->suffix());
		break;
	}
	case 34151: {
		drvSetString(p1,pThis->symLinkTarget());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFileOpenEvent
int drv_QFileOpenEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFileOpenEvent *pThis = (QFileOpenEvent*)_p;
	switch (funcid) {
	case 35000+1: {
		delete pThis;
		break;
	}
	case 35102: {
		*(void**)_p = new QFileOpenEvent(drvGetStringHead(p1));
		break;
	}
	case 35103: {
		if(p1==0)return -2;
		*(void**)_p = new QFileOpenEvent(*(QUrl*)(p1));
		break;
	}
	case 35104: {
		drvSetString(p1,pThis->file());
		break;
	}
	case 35105: {
		*(void**)p1 = new QUrl(pThis->url());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFocusEvent
int drv_QFocusEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFocusEvent *pThis = (QFocusEvent*)_p;
	switch (funcid) {
	case 36000+1: {
		delete pThis;
		break;
	}
	case 36102: {
		*(void**)_p = new QFocusEvent(*(QEvent::Type*)p1,*(Qt::FocusReason*)p2);
		break;
	}
	case 36103: {
		*(bool*)p1 = pThis->gotFocus();
		break;
	}
	case 36104: {
		*(bool*)p1 = pThis->lostFocus();
		break;
	}
	case 36105: {
		*(Qt::FocusReason*)p1 = pThis->reason();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFont
int drv_QFont(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFont *pThis = (QFont*)_p;
	switch (funcid) {
	case 37000+1: {
		delete pThis;
		break;
	}
	case 37102: {
		*(void**)_p = new QFont();
		break;
	}
	case 37103: {
		if(p1==0)return -2;
		*(void**)_p = new QFont(*(QFont*)(p1));
		break;
	}
	case 37104: {
		if(p1==0)return -2;
		*(void**)_p = new QFont(*(QFont*)(p1),drvGetPaintDevice(p2));
		break;
	}
	case 37105: {
		*(void**)_p = new QFont(drvGetStringHead(p1),*(int*)p2,*(int*)p3,*(bool*)p4);
		break;
	}
	case 37106: {
		*(bool*)p1 = pThis->bold();
		break;
	}
	case 37107: {
		QFont::cacheStatistics();
		break;
	}
	case 37108: {
		*(QFont::Capitalization*)p1 = pThis->capitalization();
		break;
	}
	case 37109: {
		QFont::cleanup();
		break;
	}
	case 37110: {
		drvSetString(p1,pThis->defaultFamily());
		break;
	}
	case 37111: {
		*(bool*)p1 = pThis->exactMatch();
		break;
	}
	case 37112: {
		drvSetString(p1,pThis->family());
		break;
	}
	case 37113: {
		*(bool*)p1 = pThis->fixedPitch();
		break;
	}
	case 37114: {
		*(bool*)p2 = pThis->fromString(drvGetStringHead(p1));
		break;
	}
	case 37115: {
		QFont::initialize();
		break;
	}
	case 37116: {
		QFont::insertSubstitution(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 37117: {
		QFont::insertSubstitutions(drvGetStringHead(p1),drvGetStringArray(p2));
		break;
	}
	case 37118: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isCopyOf(*(QFont*)(p1));
		break;
	}
	case 37119: {
		*(bool*)p1 = pThis->italic();
		break;
	}
	case 37120: {
		*(bool*)p1 = pThis->kerning();
		break;
	}
	case 37121: {
		drvSetString(p1,pThis->key());
		break;
	}
	case 37122: {
		drvSetString(p1,pThis->lastResortFamily());
		break;
	}
	case 37123: {
		drvSetString(p1,pThis->lastResortFont());
		break;
	}
	case 37124: {
		*(double*)p1 = pThis->letterSpacing();
		break;
	}
	case 37125: {
		*(QFont::SpacingType*)p1 = pThis->letterSpacingType();
		break;
	}
	case 37126: {
		*(bool*)p1 = pThis->overline();
		break;
	}
	case 37127: {
		*(int*)p1 = pThis->pixelSize();
		break;
	}
	case 37128: {
		*(int*)p1 = pThis->pointSize();
		break;
	}
	case 37129: {
		*(double*)p1 = pThis->pointSizeF();
		break;
	}
	case 37130: {
		*(bool*)p1 = pThis->rawMode();
		break;
	}
	case 37131: {
		drvSetString(p1,pThis->rawName());
		break;
	}
	case 37132: {
#ifdef QTDRV_QT5
		QFont::removeSubstitutions(drvGetStringHead(p1));
#else
		QFont::removeSubstitution(drvGetStringHead(p1));
#endif
		break;
	}
	case 37133: {
		*(unsigned int*)p1 = pThis->resolve();
		break;
	}
	case 37134: {
		if(p1==0)return -2;
		*(void**)p2 = new QFont(pThis->resolve(*(QFont*)(p1)));
		break;
	}
	case 37135: {
		pThis->resolve(*(unsigned int*)p1);
		break;
	}
	case 37136: {
		pThis->setBold(*(bool*)p1);
		break;
	}
	case 37137: {
		pThis->setCapitalization(*(QFont::Capitalization*)p1);
		break;
	}
	case 37138: {
		pThis->setFamily(drvGetStringHead(p1));
		break;
	}
	case 37139: {
		pThis->setFixedPitch(*(bool*)p1);
		break;
	}
	case 37140: {
		pThis->setItalic(*(bool*)p1);
		break;
	}
	case 37141: {
		pThis->setKerning(*(bool*)p1);
		break;
	}
	case 37142: {
		pThis->setLetterSpacing(*(QFont::SpacingType*)p1,*(double*)p2);
		break;
	}
	case 37143: {
		pThis->setOverline(*(bool*)p1);
		break;
	}
	case 37144: {
		pThis->setPixelSize(*(int*)p1);
		break;
	}
	case 37145: {
		pThis->setPointSize(*(int*)p1);
		break;
	}
	case 37146: {
		pThis->setPointSizeF(*(double*)p1);
		break;
	}
	case 37147: {
		pThis->setRawMode(*(bool*)p1);
		break;
	}
	case 37148: {
		pThis->setRawName(drvGetStringHead(p1));
		break;
	}
	case 37149: {
		pThis->setStretch(*(int*)p1);
		break;
	}
	case 37150: {
		pThis->setStrikeOut(*(bool*)p1);
		break;
	}
	case 37151: {
		pThis->setStyle(*(QFont::Style*)p1);
		break;
	}
	case 37152: {
		pThis->setStyleHint(*(QFont::StyleHint*)p1);
		break;
	}
	case 37153: {
		pThis->setStyleHint(*(QFont::StyleHint*)p1,*(QFont::StyleStrategy*)p2);
		break;
	}
	case 37154: {
		pThis->setStyleStrategy(*(QFont::StyleStrategy*)p1);
		break;
	}
	case 37155: {
		pThis->setUnderline(*(bool*)p1);
		break;
	}
	case 37156: {
		pThis->setWeight(*(int*)p1);
		break;
	}
	case 37157: {
		pThis->setWordSpacing(*(double*)p1);
		break;
	}
	case 37158: {
		*(int*)p1 = pThis->stretch();
		break;
	}
	case 37159: {
		*(bool*)p1 = pThis->strikeOut();
		break;
	}
	case 37160: {
		*(QFont::Style*)p1 = pThis->style();
		break;
	}
	case 37161: {
		*(QFont::StyleHint*)p1 = pThis->styleHint();
		break;
	}
	case 37162: {
		*(QFont::StyleStrategy*)p1 = pThis->styleStrategy();
		break;
	}
	case 37163: {
		drvSetString(p2,QFont::substitute(drvGetStringHead(p1)));
		break;
	}
	case 37164: {
		drvSetStringArray(p2,QFont::substitutes(drvGetStringHead(p1)));
		break;
	}
	case 37165: {
		drvSetStringArray(p1,QFont::substitutions());
		break;
	}
	case 37166: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 37167: {
		*(bool*)p1 = pThis->underline();
		break;
	}
	case 37168: {
		*(int*)p1 = pThis->weight();
		break;
	}
	case 37169: {
		*(double*)p1 = pThis->wordSpacing();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFontDatabase
int drv_QFontDatabase(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFontDatabase *pThis = (QFontDatabase*)_p;
	switch (funcid) {
	case 38000+1: {
		delete pThis;
		break;
	}
	case 38102: {
		*(void**)_p = new QFontDatabase();
		break;
	}
	case 38103: {
		*(int*)p2 = QFontDatabase::addApplicationFont(drvGetStringHead(p1));
		break;
	}
	case 38104: {
		*(int*)p2 = QFontDatabase::addApplicationFontFromData(drvGetByteArrayHead(p1));
		break;
	}
	case 38105: {
		drvSetStringArray(p2,QFontDatabase::applicationFontFamilies(*(int*)p1));
		break;
	}
	case 38106: {
		*(bool*)p3 = pThis->bold(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38107: {
		drvSetStringArray(p1,pThis->families());
		break;
	}
	case 38108: {
		drvSetStringArray(p2,pThis->families(*(QFontDatabase::WritingSystem*)p1));
		break;
	}
	case 38109: {
		*(void**)p4 = new QFont(pThis->font(drvGetStringHead(p1),drvGetStringHead(p2),*(int*)p3));
		break;
	}
	case 38110: {
		*(bool*)p2 = pThis->isBitmapScalable(drvGetStringHead(p1));
		break;
	}
	case 38111: {
		*(bool*)p3 = pThis->isBitmapScalable(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38112: {
		*(bool*)p2 = pThis->isFixedPitch(drvGetStringHead(p1));
		break;
	}
	case 38113: {
		*(bool*)p3 = pThis->isFixedPitch(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38114: {
		*(bool*)p2 = pThis->isScalable(drvGetStringHead(p1));
		break;
	}
	case 38115: {
		*(bool*)p3 = pThis->isScalable(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38116: {
		*(bool*)p2 = pThis->isSmoothlyScalable(drvGetStringHead(p1));
		break;
	}
	case 38117: {
		*(bool*)p3 = pThis->isSmoothlyScalable(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38118: {
		*(bool*)p3 = pThis->italic(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38119: {
		drvSetList<int>(p2,pThis->pointSizes(drvGetStringHead(p1)));
		break;
	}
	case 38120: {
		drvSetList<int>(p3,pThis->pointSizes(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 38121: {
		*(bool*)p1 = QFontDatabase::removeAllApplicationFonts();
		break;
	}
	case 38122: {
		*(bool*)p2 = QFontDatabase::removeApplicationFont(*(int*)p1);
		break;
	}
	case 38123: {
		drvSetList<int>(p3,pThis->smoothSizes(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 38124: {
		drvSetList<int>(p1,QFontDatabase::standardSizes());
		break;
	}
	case 38125: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->styleString(*(QFont*)(p1)));
		break;
	}
	case 38126: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->styleString(*(QFontInfo*)(p1)));
		break;
	}
	case 38127: {
		drvSetStringArray(p2,pThis->styles(drvGetStringHead(p1)));
		break;
	}
	case 38128: {
		*(bool*)p1 = QFontDatabase::supportsThreadedFontRendering();
		break;
	}
	case 38129: {
		*(int*)p3 = pThis->weight(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 38130: {
		drvSetString(p2,QFontDatabase::writingSystemName(*(QFontDatabase::WritingSystem*)p1));
		break;
	}
	case 38131: {
		drvSetString(p2,QFontDatabase::writingSystemSample(*(QFontDatabase::WritingSystem*)p1));
		break;
	}
	case 38132: {
		drvSetList<QFontDatabase::WritingSystem>(p1,pThis->writingSystems());
		break;
	}
	case 38133: {
		drvSetList<QFontDatabase::WritingSystem>(p2,pThis->writingSystems(drvGetStringHead(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFontInfo
int drv_QFontInfo(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QFontInfo *pThis = (QFontInfo*)_p;
	switch (funcid) {
	case 39000+1: {
		delete pThis;
		break;
	}
	case 39102: {
		if(p1==0)return -2;
		*(void**)_p = new QFontInfo(*(QFont*)(p1));
		break;
	}
	case 39103: {
		if(p1==0)return -2;
		*(void**)_p = new QFontInfo(*(QFontInfo*)(p1));
		break;
	}
	case 39104: {
		*(bool*)p1 = pThis->bold();
		break;
	}
	case 39105: {
		*(bool*)p1 = pThis->exactMatch();
		break;
	}
	case 39106: {
		drvSetString(p1,pThis->family());
		break;
	}
	case 39107: {
		*(bool*)p1 = pThis->fixedPitch();
		break;
	}
	case 39108: {
		*(bool*)p1 = pThis->italic();
		break;
	}
	case 39109: {
		*(bool*)p1 = pThis->overline();
		break;
	}
	case 39110: {
		*(int*)p1 = pThis->pixelSize();
		break;
	}
	case 39111: {
		*(int*)p1 = pThis->pointSize();
		break;
	}
	case 39112: {
		*(double*)p1 = pThis->pointSizeF();
		break;
	}
	case 39113: {
		*(bool*)p1 = pThis->rawMode();
		break;
	}
	case 39114: {
		*(bool*)p1 = pThis->strikeOut();
		break;
	}
	case 39115: {
		*(QFont::Style*)p1 = pThis->style();
		break;
	}
	case 39116: {
		*(QFont::StyleHint*)p1 = pThis->styleHint();
		break;
	}
	case 39117: {
		*(bool*)p1 = pThis->underline();
		break;
	}
	case 39118: {
		*(int*)p1 = pThis->weight();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFontMetrics
int drv_QFontMetrics(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void*,void*,void*)
{
	QFontMetrics *pThis = (QFontMetrics*)_p;
	switch (funcid) {
	case 40000+1: {
		delete pThis;
		break;
	}
	case 40102: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetrics(*(QFont*)(p1));
		break;
	}
	case 40103: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetrics(*(QFontMetrics*)(p1));
		break;
	}
	case 40104: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetrics(*(QFont*)(p1),drvGetPaintDevice(p2));
		break;
	}
	case 40105: {
		*(int*)p1 = pThis->ascent();
		break;
	}
	case 40106: {
		*(int*)p1 = pThis->averageCharWidth();
		break;
	}
	case 40107: {
		*(void**)p2 = new QRect(pThis->boundingRect(*(QChar*)p1));
		break;
	}
	case 40108: {
		*(void**)p2 = new QRect(pThis->boundingRect(drvGetStringHead(p1)));
		break;
	}
	case 40109: {
		if(p1==0)return -2;
		*(void**)p6 = new QRect(pThis->boundingRect(*(QRect*)(p1),*(int*)p2,drvGetStringHead(p3),*(int*)p4,*(int**)p5));
		break;
	}
	case 40110: {
		*(void**)p9 = new QRect(pThis->boundingRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,drvGetStringHead(p6),*(int*)p7,*(int**)p8));
		break;
	}
	case 40111: {
		*(int*)p3 = pThis->charWidth(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 40112: {
		*(int*)p1 = pThis->descent();
		break;
	}
	case 40113: {
		drvSetString(p5,pThis->elidedText(drvGetStringHead(p1),*(Qt::TextElideMode*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 40114: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 40115: {
		*(bool*)p2 = pThis->inFont(*(QChar*)p1);
		break;
	}
	case 40116: {
		*(int*)p1 = pThis->leading();
		break;
	}
	case 40117: {
		*(int*)p2 = pThis->leftBearing(*(QChar*)p1);
		break;
	}
	case 40118: {
		*(int*)p1 = pThis->lineSpacing();
		break;
	}
	case 40119: {
		*(int*)p1 = pThis->lineWidth();
		break;
	}
	case 40120: {
		*(int*)p1 = pThis->maxWidth();
		break;
	}
	case 40121: {
		*(int*)p1 = pThis->minLeftBearing();
		break;
	}
	case 40122: {
		*(int*)p1 = pThis->minRightBearing();
		break;
	}
	case 40123: {
		*(int*)p1 = pThis->overlinePos();
		break;
	}
	case 40124: {
		*(int*)p2 = pThis->rightBearing(*(QChar*)p1);
		break;
	}
	case 40125: {
		*(void**)p5 = new QSize(pThis->size(*(int*)p1,drvGetStringHead(p2),*(int*)p3,*(int**)p4));
		break;
	}
	case 40126: {
		*(int*)p1 = pThis->strikeOutPos();
		break;
	}
	case 40127: {
		*(void**)p2 = new QRect(pThis->tightBoundingRect(drvGetStringHead(p1)));
		break;
	}
	case 40128: {
		*(int*)p1 = pThis->underlinePos();
		break;
	}
	case 40129: {
		*(int*)p2 = pThis->width(*(QChar*)p1);
		break;
	}
	case 40130: {
		*(int*)p2 = pThis->width(drvGetStringHead(p1));
		break;
	}
	case 40131: {
		*(int*)p3 = pThis->width(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 40132: {
		*(int*)p4 = pThis->width(drvGetStringHead(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 40133: {
		*(int*)p1 = pThis->xHeight();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QFontMetricsF
int drv_QFontMetricsF(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void*,void*,void*,void*,void*,void*)
{
	QFontMetricsF *pThis = (QFontMetricsF*)_p;
	switch (funcid) {
	case 41000+1: {
		delete pThis;
		break;
	}
	case 41102: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetricsF(*(QFont*)(p1));
		break;
	}
	case 41103: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetricsF(*(QFontMetrics*)(p1));
		break;
	}
	case 41104: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetricsF(*(QFontMetricsF*)(p1));
		break;
	}
	case 41105: {
		if(p1==0)return -2;
		*(void**)_p = new QFontMetricsF(*(QFont*)(p1),drvGetPaintDevice(p2));
		break;
	}
	case 41106: {
		*(double*)p1 = pThis->ascent();
		break;
	}
	case 41107: {
		*(double*)p1 = pThis->averageCharWidth();
		break;
	}
	case 41108: {
		*(void**)p2 = new QRectF(pThis->boundingRect(*(QChar*)p1));
		break;
	}
	case 41109: {
		*(void**)p2 = new QRectF(pThis->boundingRect(drvGetStringHead(p1)));
		break;
	}
	case 41110: {
		if(p1==0)return -2;
		*(void**)p6 = new QRectF(pThis->boundingRect(*(QRectF*)(p1),*(int*)p2,drvGetStringHead(p3),*(int*)p4,*(int**)p5));
		break;
	}
	case 41111: {
		*(double*)p1 = pThis->descent();
		break;
	}
	case 41112: {
		drvSetString(p5,pThis->elidedText(drvGetStringHead(p1),*(Qt::TextElideMode*)p2,*(double*)p3,*(int*)p4));
		break;
	}
	case 41113: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 41114: {
		*(bool*)p2 = pThis->inFont(*(QChar*)p1);
		break;
	}
	case 41115: {
		*(double*)p1 = pThis->leading();
		break;
	}
	case 41116: {
		*(double*)p2 = pThis->leftBearing(*(QChar*)p1);
		break;
	}
	case 41117: {
		*(double*)p1 = pThis->lineSpacing();
		break;
	}
	case 41118: {
		*(double*)p1 = pThis->lineWidth();
		break;
	}
	case 41119: {
		*(double*)p1 = pThis->maxWidth();
		break;
	}
	case 41120: {
		*(double*)p1 = pThis->minLeftBearing();
		break;
	}
	case 41121: {
		*(double*)p1 = pThis->minRightBearing();
		break;
	}
	case 41122: {
		*(double*)p1 = pThis->overlinePos();
		break;
	}
	case 41123: {
		*(double*)p2 = pThis->rightBearing(*(QChar*)p1);
		break;
	}
	case 41124: {
		*(void**)p5 = new QSizeF(pThis->size(*(int*)p1,drvGetStringHead(p2),*(int*)p3,*(int**)p4));
		break;
	}
	case 41125: {
		*(double*)p1 = pThis->strikeOutPos();
		break;
	}
	case 41126: {
		*(void**)p2 = new QRectF(pThis->tightBoundingRect(drvGetStringHead(p1)));
		break;
	}
	case 41127: {
		*(double*)p1 = pThis->underlinePos();
		break;
	}
	case 41128: {
		*(double*)p2 = pThis->width(*(QChar*)p1);
		break;
	}
	case 41129: {
		*(double*)p2 = pThis->width(drvGetStringHead(p1));
		break;
	}
	case 41130: {
		*(double*)p1 = pThis->xHeight();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QGenericArgument
int drv_QGenericArgument(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QGenericArgument *pThis = (QGenericArgument*)_p;
	switch (funcid) {
	case 42000+1: {
		delete pThis;
		break;
	}
	case 42102: {
		*(void**)_p = new QGenericArgument();
		break;
	}
	case 42103: {
		*(void**)_p = new QGenericArgument(drvGet_const_char(p1),*(void const**)p2);
		break;
	}
	case 42104: {
		*(void**)p1 = pThis->data();
		break;
	}
	case 42105: {
		drvSetString(p1,pThis->name());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QGenericReturnArgument
int drv_QGenericReturnArgument(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGenericReturnArgument *pThis = (QGenericReturnArgument*)_p;
	switch (funcid) {
	case 43000+1: {
		delete pThis;
		break;
	}
	case 43102: {
		*(void**)_p = new QGenericReturnArgument();
		break;
	}
	case 43103: {
		*(void**)_p = new QGenericReturnArgument(drvGet_const_char(p1),*(void**)p2);
		break;
	}
	default:
		return drv_QGenericArgument(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGestureEvent
int drv_QGestureEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGestureEvent *pThis = (QGestureEvent*)_p;
	switch (funcid) {
	case 44000+1: {
		delete pThis;
		break;
	}
	case 44102: {
		*(void**)_p = new QGestureEvent(drvGetObjectArrayHeadT<QGesture*>(p1));
		break;
	}
	case 44103: {
		pThis->accept();
		break;
	}
	case 44104: {
		pThis->accept((QGesture*)(p1));
		break;
	}
	case 44105: {
		pThis->accept(*(Qt::GestureType*)p1);
		break;
	}
	case 44106: {
		drvSetListObj<QGesture*>(p1,249000,pThis->activeGestures());
		break;
	}
	case 44107: {
		drvSetListObj<QGesture*>(p1,249000,pThis->canceledGestures());
		break;
	}
	case 44108: {
		*(void**)p2 = pThis->gesture(*(Qt::GestureType*)p1);
		break;
	}
	case 44109: {
		drvSetListObj<QGesture*>(p1,249000,pThis->gestures());
		break;
	}
	case 44110: {
		pThis->ignore();
		break;
	}
	case 44111: {
		pThis->ignore((QGesture*)(p1));
		break;
	}
	case 44112: {
		pThis->ignore(*(Qt::GestureType*)p1);
		break;
	}
	case 44113: {
		*(bool*)p1 = pThis->isAccepted();
		break;
	}
	case 44114: {
		*(bool*)p2 = pThis->isAccepted((QGesture*)(p1));
		break;
	}
	case 44115: {
		*(bool*)p2 = pThis->isAccepted(*(Qt::GestureType*)p1);
		break;
	}
	case 44116: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapToGraphicsScene(*(QPointF*)(p1)));
		break;
	}
	case 44117: {
		pThis->setAccepted(*(bool*)p1);
		break;
	}
	case 44118: {
		pThis->setAccepted((QGesture*)(p1),*(bool*)p2);
		break;
	}
	case 44119: {
		pThis->setAccepted(*(Qt::GestureType*)p1,*(bool*)p2);
		break;
	}
	case 44120: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 44121: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGestureRecognizer
int drv_QGestureRecognizer(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QGestureRecognizer *pThis = (QGestureRecognizer*)_p;
	switch (funcid) {
	case 45000+1: {
		delete pThis;
		break;
	}
	case 45102: {
		*(void**)p2 = pThis->create((QObject*)(p1));
		break;
	}
	case 45103: {
		*(QFlags<QGestureRecognizer::ResultFlag>*)p4 = pThis->recognize((QGesture*)(p1),(QObject*)(p2),(QEvent*)(p3));
		break;
	}
	case 45104: {
		*(Qt::GestureType*)p2 = QGestureRecognizer::registerRecognizer((QGestureRecognizer*)(p1));
		break;
	}
	case 45105: {
		pThis->reset((QGesture*)(p1));
		break;
	}
	case 45106: {
		QGestureRecognizer::unregisterRecognizer(*(Qt::GestureType*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QGradient
int drv_QGradient(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QGradient *pThis = (QGradient*)_p;
	switch (funcid) {
	case 46000+1: {
		delete pThis;
		break;
	}
	case 46102: {
		*(void**)_p = new QGradient();
		break;
	}
	case 46103: {
		*(QGradient::CoordinateMode*)p1 = pThis->coordinateMode();
		break;
	}
	case 46104: {
		*(QGradient::InterpolationMode*)p1 = pThis->interpolationMode();
		break;
	}
	case 46105: {
		if(p2==0)return -2;
		pThis->setColorAt(*(double*)p1,*(QColor*)(p2));
		break;
	}
	case 46106: {
		pThis->setCoordinateMode(*(QGradient::CoordinateMode*)p1);
		break;
	}
	case 46107: {
		pThis->setInterpolationMode(*(QGradient::InterpolationMode*)p1);
		break;
	}
	case 46108: {
		pThis->setSpread(*(QGradient::Spread*)p1);
		break;
	}
	case 46109: {
		*(QGradient::Spread*)p1 = pThis->spread();
		break;
	}
	case 46110: {
		*(QGradient::Type*)p1 = pThis->type();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QHashDummyValue
int drv_QHashDummyValue(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QHashDummyValue *pThis = (QHashDummyValue*)_p;
	switch (funcid) {
	case 47000+1: {
		delete pThis;
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QHelpEvent
int drv_QHelpEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHelpEvent *pThis = (QHelpEvent*)_p;
	switch (funcid) {
	case 48000+1: {
		delete pThis;
		break;
	}
	case 48102: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QHelpEvent(*(QEvent::Type*)p1,*(QPoint*)(p2),*(QPoint*)(p3));
		break;
	}
	case 48103: {
		*(const void**)p1 = new QPoint(pThis->globalPos());
		break;
	}
	case 48104: {
		*(int*)p1 = pThis->globalX();
		break;
	}
	case 48105: {
		*(int*)p1 = pThis->globalY();
		break;
	}
	case 48106: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 48107: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 48108: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QHideEvent
int drv_QHideEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHideEvent *pThis = (QHideEvent*)_p;
	switch (funcid) {
	case 49000+1: {
		delete pThis;
		break;
	}
	case 49102: {
		*(void**)_p = new QHideEvent();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QHoverEvent
int drv_QHoverEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHoverEvent *pThis = (QHoverEvent*)_p;
	switch (funcid) {
	case 50000+1: {
		delete pThis;
		break;
	}
	case 50102: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QHoverEvent(*(QEvent::Type*)p1,*(QPoint*)(p2),*(QPoint*)(p3));
		break;
	}
	case 50103: {
		*(const void**)p1 = new QPoint(pThis->oldPos());
		break;
	}
	case 50104: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QIcon
int drv_QIcon(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void*,void*,void*,void*)
{
	QIcon *pThis = (QIcon*)_p;
	switch (funcid) {
	case 51000+1: {
		delete pThis;
		break;
	}
	case 51102: {
		*(void**)_p = new QIcon();
		break;
	}
	case 51103: {
		if(p1==0)return -2;
		*(void**)_p = new QIcon(*(QIcon*)(p1));
		break;
	}
	case 51104: {
		if(p1==0)return -2;
		*(void**)_p = new QIcon(*(QPixmap*)(p1));
		break;
	}
	case 51105: {
		*(void**)_p = new QIcon(drvGetStringHead(p1));
		break;
	}
	case 51106: {
		if(p1==0)return -2;
		*(void**)p2 = new QSize(pThis->actualSize(*(QSize*)(p1)));
		break;
	}
	case 51107: {
		if(p1==0)return -2;
		*(void**)p4 = new QSize(pThis->actualSize(*(QSize*)(p1),*(QIcon::Mode*)p2,*(QIcon::State*)p3));
		break;
	}
	case 51108: {
		pThis->addFile(drvGetStringHead(p1));
		break;
	}
	case 51109: {
		pThis->addFile(drvGetStringHead(p1),p2==0?QSize():*(QSize*)(p2),*(QIcon::Mode*)p3,*(QIcon::State*)p4);
		break;
	}
	case 51110: {
		if(p1==0)return -2;
		pThis->addPixmap(*(QPixmap*)(p1));
		break;
	}
	case 51111: {
		if(p1==0)return -2;
		pThis->addPixmap(*(QPixmap*)(p1),*(QIcon::Mode*)p2,*(QIcon::State*)p3);
		break;
	}
	case 51112: {
		drvSetListPtr<QSize>(p1,120000,pThis->availableSizes());
		break;
	}
	case 51113: {
		drvSetListPtr<QSize>(p3,120000,pThis->availableSizes(*(QIcon::Mode*)p1,*(QIcon::State*)p2));
		break;
	}
	case 51114: {
		*(qint64*)p1 = pThis->cacheKey();
		break;
	}
	case 51115: {
		pThis->detach();
		break;
	}
	case 51116: {
		*(void**)p2 = new QIcon(QIcon::fromTheme(drvGetStringHead(p1)));
		break;
	}
	case 51117: {
		*(void**)p3 = new QIcon(QIcon::fromTheme(drvGetStringHead(p1),p2==0?QIcon():*(QIcon*)(p2)));
		break;
	}
	case 51118: {
		*(bool*)p2 = QIcon::hasThemeIcon(drvGetStringHead(p1));
		break;
	}
	case 51119: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 51120: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 51121: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 51122: {
		if(p2==0)return -2;
		pThis->paint((QPainter*)(p1),*(QRect*)(p2),*(QFlags<Qt::AlignmentFlag>*)p3,*(QIcon::Mode*)p4,*(QIcon::State*)p5);
		break;
	}
	case 51123: {
		pThis->paint((QPainter*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(QFlags<Qt::AlignmentFlag>*)p6,*(QIcon::Mode*)p7,*(QIcon::State*)p8);
		break;
	}
	case 51124: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmap(pThis->pixmap(*(QSize*)(p1)));
		break;
	}
	case 51125: {
		*(void**)p2 = new QPixmap(pThis->pixmap(*(int*)p1));
		break;
	}
	case 51126: {
		if(p1==0)return -2;
		*(void**)p4 = new QPixmap(pThis->pixmap(*(QSize*)(p1),*(QIcon::Mode*)p2,*(QIcon::State*)p3));
		break;
	}
	case 51127: {
		*(void**)p4 = new QPixmap(pThis->pixmap(*(int*)p1,*(QIcon::Mode*)p2,*(QIcon::State*)p3));
		break;
	}
	case 51128: {
		*(void**)p5 = new QPixmap(pThis->pixmap(*(int*)p1,*(int*)p2,*(QIcon::Mode*)p3,*(QIcon::State*)p4));
		break;
	}
	case 51129: {
		QIcon::setThemeName(drvGetStringHead(p1));
		break;
	}
	case 51130: {
		QIcon::setThemeSearchPaths(drvGetStringArray(p1));
		break;
	}
	case 51131: {
		drvSetString(p1,QIcon::themeName());
		break;
	}
	case 51132: {
		drvSetStringArray(p1,QIcon::themeSearchPaths());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QIconDragEvent
int drv_QIconDragEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QIconDragEvent *pThis = (QIconDragEvent*)_p;
	switch (funcid) {
	case 52000+1: {
		delete pThis;
		break;
	}
	case 52102: {
		*(void**)_p = new QIconDragEvent();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QImage
int drv_QImage(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QImage *pThis = (QImage*)_p;
	switch (funcid) {
	case 53000+1: {
		delete pThis;
		break;
	}
	case 53102: {
		*(void**)_p = new QImage();
		break;
	}
	case 53103: {
		if(p1==0)return -2;
		*(void**)_p = new QImage(*(QImage*)(p1));
		break;
	}
	case 53104: {
		*(void**)_p = new QImage((const char **)(p1));
		break;
	}
	case 53105: {
		if(p1==0)return -2;
		*(void**)_p = new QImage(*(QSize*)(p1),*(QImage::Format*)p2);
		break;
	}
	case 53106: {
		*(void**)_p = new QImage(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 53107: {
		*(void**)_p = new QImage(*(int*)p1,*(int*)p2,*(QImage::Format*)p3);
		break;
	}
	case 53108: {
		*(void**)_p = new QImage(*(unsigned char const**)p1,*(int*)p2,*(int*)p3,*(QImage::Format*)p4);
		break;
	}
	case 53109: {
		*(void**)_p = new QImage(*(unsigned char const**)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QImage::Format*)p5);
		break;
	}
	case 53110: {
		*(bool*)p1 = pThis->allGray();
		break;
	}
	case 53111: {
		*(int*)p1 = pThis->bitPlaneCount();
		break;
	}
	case 53112: {
		*(unsigned char const**)p1 = pThis->bits();
		break;
	}
	case 53113: {
		*(int*)p1 = pThis->byteCount();
		break;
	}
	case 53114: {
		*(int*)p1 = pThis->bytesPerLine();
		break;
	}
	case 53115: {
		*(qint64*)p1 = pThis->cacheKey();
		break;
	}
	case 53116: {
		*(unsigned int*)p2 = pThis->color(*(int*)p1);
		break;
	}
	case 53117: {
		*(int*)p1 = pThis->colorCount();
		break;
	}
	case 53118: {
		drvSetVectorQRgb(p1,pThis->colorTable());
		break;
	}
	case 53119: {
		*(unsigned char const**)p1 = pThis->constBits();
		break;
	}
	case 53120: {
		*(unsigned char const**)p2 = pThis->constScanLine(*(int*)p1);
		break;
	}
	case 53121: {
		*(void**)p2 = new QImage(pThis->convertToFormat(*(QImage::Format*)p1));
		break;
	}
	case 53122: {
		*(void**)p3 = new QImage(pThis->convertToFormat(*(QImage::Format*)p1,*(QFlags<Qt::ImageConversionFlag>*)p2));
		break;
	}
	case 53123: {
		*(void**)p4 = new QImage(pThis->convertToFormat(*(QImage::Format*)p1,drvGetUintVectorHeadT<QRgb>(p2),*(QFlags<Qt::ImageConversionFlag>*)p3));
		break;
	}
	case 53124: {
		*(void**)p1 = new QImage(pThis->copy());
		break;
	}
	case 53125: {
		*(void**)p2 = new QImage(pThis->copy(p1==0?QRect():*(QRect*)(p1)));
		break;
	}
	case 53126: {
		*(void**)p5 = new QImage(pThis->copy(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 53127: {
		*(void**)p1 = new QImage(pThis->createAlphaMask());
		break;
	}
	case 53128: {
		*(void**)p2 = new QImage(pThis->createAlphaMask(*(QFlags<Qt::ImageConversionFlag>*)p1));
		break;
	}
	case 53129: {
		*(void**)p2 = new QImage(pThis->createHeuristicMask(*(bool*)p1));
		break;
	}
	case 53130: {
		*(void**)p2 = new QImage(pThis->createMaskFromColor(*(unsigned int*)p1));
		break;
	}
	case 53131: {
		*(void**)p3 = new QImage(pThis->createMaskFromColor(*(unsigned int*)p1,*(Qt::MaskMode*)p2));
		break;
	}
	case 53132: {
		*(int*)p1 = pThis->depth();
		break;
	}
	case 53133: {
		pThis->detach();
		break;
	}
	case 53134: {
		*(int*)p1 = pThis->dotsPerMeterX();
		break;
	}
	case 53135: {
		*(int*)p1 = pThis->dotsPerMeterY();
		break;
	}
	case 53136: {
		pThis->fill(*(unsigned int*)p1);
		break;
	}
	case 53137: {
		*(QImage::Format*)p1 = pThis->format();
		break;
	}
	case 53138: {
		*(void**)p2 = new QImage(QImage::fromData(drvGetByteArrayHead(p1)));
		break;
	}
	case 53139: {
		*(void**)p3 = new QImage(QImage::fromData(drvGetByteArrayHead(p1),drvGet_const_char(p2)));
		break;
	}
	case 53140: {
		*(void**)p4 = new QImage(QImage::fromData(*(unsigned char const**)p1,*(int*)p2,drvGet_const_char(p3)));
		break;
	}
	case 53141: {
		*(bool*)p1 = pThis->hasAlphaChannel();
		break;
	}
	case 53142: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 53143: {
		pThis->invertPixels();
		break;
	}
	case 53144: {
		pThis->invertPixels(*(QImage::InvertMode*)p1);
		break;
	}
	case 53145: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 53146: {
		*(bool*)p1 = pThis->isGrayscale();
		break;
	}
	case 53147: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 53148: {
		*(bool*)p2 = pThis->load(drvGetStringHead(p1));
		break;
	}
	case 53149: {
		*(bool*)p3 = pThis->load((QIODevice*)(p1),drvGet_const_char(p2));
		break;
	}
	case 53150: {
		*(bool*)p3 = pThis->load(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 53151: {
		*(bool*)p2 = pThis->loadFromData(drvGetByteArrayHead(p1));
		break;
	}
	case 53152: {
		*(bool*)p3 = pThis->loadFromData(drvGetByteArrayHead(p1),drvGet_const_char(p2));
		break;
	}
	case 53153: {
		*(bool*)p4 = pThis->loadFromData(*(unsigned char const**)p1,*(int*)p2,drvGet_const_char(p3));
		break;
	}
	case 53154: {
		*(void**)p1 = new QImage(pThis->mirrored());
		break;
	}
	case 53155: {
		*(void**)p3 = new QImage(pThis->mirrored(*(bool*)p1,*(bool*)p2));
		break;
	}
	case 53156: {
		*(void**)p1 = new QPoint(pThis->offset());
		break;
	}
	case 53157: {
		if(p1==0)return -2;
		*(unsigned int*)p2 = pThis->pixel(*(QPoint*)(p1));
		break;
	}
	case 53158: {
		*(unsigned int*)p3 = pThis->pixel(*(int*)p1,*(int*)p2);
		break;
	}
	case 53159: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->pixelIndex(*(QPoint*)(p1));
		break;
	}
	case 53160: {
		*(int*)p3 = pThis->pixelIndex(*(int*)p1,*(int*)p2);
		break;
	}
	case 53161: {
		*(void**)p1 = new QRect(pThis->rect());
		break;
	}
	case 53162: {
		*(void**)p1 = new QImage(pThis->rgbSwapped());
		break;
	}
	case 53163: {
		*(bool*)p2 = pThis->save((QIODevice*)(p1));
		break;
	}
	case 53164: {
		*(bool*)p2 = pThis->save(drvGetStringHead(p1));
		break;
	}
	case 53165: {
		*(bool*)p4 = pThis->save((QIODevice*)(p1),drvGet_const_char(p2),*(int*)p3);
		break;
	}
	case 53166: {
		*(bool*)p4 = pThis->save(drvGetStringHead(p1),drvGet_const_char(p2),*(int*)p3);
		break;
	}
	case 53167: {
		if(p1==0)return -2;
		*(void**)p2 = new QImage(pThis->scaled(*(QSize*)(p1)));
		break;
	}
	case 53168: {
		if(p1==0)return -2;
		*(void**)p4 = new QImage(pThis->scaled(*(QSize*)(p1),*(Qt::AspectRatioMode*)p2,*(Qt::TransformationMode*)p3));
		break;
	}
	case 53169: {
		*(void**)p5 = new QImage(pThis->scaled(*(int*)p1,*(int*)p2,*(Qt::AspectRatioMode*)p3,*(Qt::TransformationMode*)p4));
		break;
	}
	case 53170: {
		*(void**)p2 = new QImage(pThis->scaledToHeight(*(int*)p1));
		break;
	}
	case 53171: {
		*(void**)p3 = new QImage(pThis->scaledToHeight(*(int*)p1,*(Qt::TransformationMode*)p2));
		break;
	}
	case 53172: {
		*(void**)p2 = new QImage(pThis->scaledToWidth(*(int*)p1));
		break;
	}
	case 53173: {
		*(void**)p3 = new QImage(pThis->scaledToWidth(*(int*)p1,*(Qt::TransformationMode*)p2));
		break;
	}
	case 53174: {
		*(unsigned char const**)p2 = pThis->scanLine(*(int*)p1);
		break;
	}
	case 53175: {
		pThis->setColor(*(int*)p1,*(unsigned int*)p2);
		break;
	}
	case 53176: {
		pThis->setColorCount(*(int*)p1);
		break;
	}
	case 53177: {
		pThis->setColorTable(drvGetUintVectorHeadT<QRgb>(p1));
		break;
	}
	case 53178: {
		pThis->setDotsPerMeterX(*(int*)p1);
		break;
	}
	case 53179: {
		pThis->setDotsPerMeterY(*(int*)p1);
		break;
	}
	case 53180: {
		if(p1==0)return -2;
		pThis->setOffset(*(QPoint*)(p1));
		break;
	}
	case 53181: {
		if(p1==0)return -2;
		pThis->setPixel(*(QPoint*)(p1),*(unsigned int*)p2);
		break;
	}
	case 53182: {
		pThis->setPixel(*(int*)p1,*(int*)p2,*(unsigned int*)p3);
		break;
	}
	case 53183: {
		pThis->setText(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 53184: {
		*(void**)p1 = new QSize(pThis->size());
		break;
	}
	case 53185: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 53186: {
		drvSetString(p2,pThis->text(drvGetStringHead(p1)));
		break;
	}
	case 53187: {
		drvSetStringArray(p1,pThis->textKeys());
		break;
	}
	case 53188: {
		if(p1==0)return -2;
		*(void**)p2 = new QImage(pThis->transformed(*(QMatrix*)(p1)));
		break;
	}
	case 53189: {
		if(p1==0)return -2;
		*(void**)p2 = new QImage(pThis->transformed(*(QTransform*)(p1)));
		break;
	}
	case 53190: {
		if(p1==0)return -2;
		*(void**)p3 = new QImage(pThis->transformed(*(QMatrix*)(p1),*(Qt::TransformationMode*)p2));
		break;
	}
	case 53191: {
		if(p1==0)return -2;
		*(void**)p3 = new QImage(pThis->transformed(*(QTransform*)(p1),*(Qt::TransformationMode*)p2));
		break;
	}
	case 53192: {
		if(p1==0)return -2;
		*(void**)p4 = new QMatrix(QImage::trueMatrix(*(QMatrix*)(p1),*(int*)p2,*(int*)p3));
		break;
	}
	case 53193: {
		if(p1==0)return -2;
		*(void**)p4 = new QTransform(QImage::trueMatrix(*(QTransform*)(p1),*(int*)p2,*(int*)p3));
		break;
	}
	case 53194: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->valid(*(QPoint*)(p1));
		break;
	}
	case 53195: {
		*(bool*)p3 = pThis->valid(*(int*)p1,*(int*)p2);
		break;
	}
	case 53196: {
		*(int*)p1 = pThis->width();
		break;
	}
	default:
		return drv_QPaintDevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QImageIOHandler
int drv_QImageIOHandler(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QImageIOHandler *pThis = (QImageIOHandler*)_p;
	switch (funcid) {
	case 54000+1: {
		delete pThis;
		break;
	}
	case 54102: {
		*(bool*)p1 = pThis->canRead();
		break;
	}
	case 54103: {
		*(int*)p1 = pThis->currentImageNumber();
		break;
	}
	case 54104: {
		*(void**)p1 = new QRect(pThis->currentImageRect());
		break;
	}
	case 54105: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 54106: {
		drvSetByteArray(p1,pThis->format());
		break;
	}
	case 54107: {
		*(int*)p1 = pThis->imageCount();
		break;
	}
	case 54108: {
		*(bool*)p2 = pThis->jumpToImage(*(int*)p1);
		break;
	}
	case 54109: {
		*(bool*)p1 = pThis->jumpToNextImage();
		break;
	}
	case 54110: {
		*(int*)p1 = pThis->loopCount();
		break;
	}
	case 54111: {
		drvSetByteArray(p1,pThis->name());
		break;
	}
	case 54112: {
		*(int*)p1 = pThis->nextImageDelay();
		break;
	}
	case 54113: {
		*(void**)p2 = new QVariant(pThis->option(*(QImageIOHandler::ImageOption*)p1));
		break;
	}
	case 54114: {
		*(bool*)p2 = pThis->read((QImage*)(p1));
		break;
	}
	case 54115: {
		pThis->setDevice((QIODevice*)(p1));
		break;
	}
	case 54116: {
		pThis->setFormat(drvGetByteArrayHead(p1));
		break;
	}
	case 54117: {
		if(p2==0)return -2;
		pThis->setOption(*(QImageIOHandler::ImageOption*)p1,*(QVariant*)(p2));
		break;
	}
	case 54118: {
		*(bool*)p2 = pThis->supportsOption(*(QImageIOHandler::ImageOption*)p1);
		break;
	}
	case 54119: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->write(*(QImage*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QImageReader
int drv_QImageReader(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QImageReader *pThis = (QImageReader*)_p;
	switch (funcid) {
	case 55000+1: {
		delete pThis;
		break;
	}
	case 55102: {
		*(void**)_p = new QImageReader();
		break;
	}
	case 55103: {
		*(void**)_p = new QImageReader((QIODevice*)(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 55104: {
		*(void**)_p = new QImageReader(drvGetStringHead(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 55105: {
		*(bool*)p1 = pThis->autoDetectImageFormat();
		break;
	}
	case 55106: {
		*(void**)p1 = new QColor(pThis->backgroundColor());
		break;
	}
	case 55107: {
		*(bool*)p1 = pThis->canRead();
		break;
	}
	case 55108: {
		*(void**)p1 = new QRect(pThis->clipRect());
		break;
	}
	case 55109: {
		*(int*)p1 = pThis->currentImageNumber();
		break;
	}
	case 55110: {
		*(void**)p1 = new QRect(pThis->currentImageRect());
		break;
	}
	case 55111: {
		*(bool*)p1 = pThis->decideFormatFromContent();
		break;
	}
	case 55112: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 55113: {
		*(QImageReader::ImageReaderError*)p1 = pThis->error();
		break;
	}
	case 55114: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 55115: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 55116: {
		drvSetByteArray(p1,pThis->format());
		break;
	}
	case 55117: {
		*(int*)p1 = pThis->imageCount();
		break;
	}
	case 55118: {
		*(QImage::Format*)p1 = pThis->imageFormat();
		break;
	}
	case 55119: {
		drvSetByteArray(p2,QImageReader::imageFormat((QIODevice*)(p1)));
		break;
	}
	case 55120: {
		drvSetByteArray(p2,QImageReader::imageFormat(drvGetStringHead(p1)));
		break;
	}
	case 55121: {
		*(bool*)p2 = pThis->jumpToImage(*(int*)p1);
		break;
	}
	case 55122: {
		*(bool*)p1 = pThis->jumpToNextImage();
		break;
	}
	case 55123: {
		*(int*)p1 = pThis->loopCount();
		break;
	}
	case 55124: {
		*(int*)p1 = pThis->nextImageDelay();
		break;
	}
	case 55125: {
		*(int*)p1 = pThis->quality();
		break;
	}
	case 55126: {
		*(void**)p1 = new QImage(pThis->read());
		break;
	}
	case 55127: {
		*(bool*)p2 = pThis->read((QImage*)(p1));
		break;
	}
	case 55128: {
		*(void**)p1 = new QRect(pThis->scaledClipRect());
		break;
	}
	case 55129: {
		*(void**)p1 = new QSize(pThis->scaledSize());
		break;
	}
	case 55130: {
		pThis->setAutoDetectImageFormat(*(bool*)p1);
		break;
	}
	case 55131: {
		if(p1==0)return -2;
		pThis->setBackgroundColor(*(QColor*)(p1));
		break;
	}
	case 55132: {
		if(p1==0)return -2;
		pThis->setClipRect(*(QRect*)(p1));
		break;
	}
	case 55133: {
		pThis->setDecideFormatFromContent(*(bool*)p1);
		break;
	}
	case 55134: {
		pThis->setDevice((QIODevice*)(p1));
		break;
	}
	case 55135: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 55136: {
		pThis->setFormat(drvGetByteArrayHead(p1));
		break;
	}
	case 55137: {
		pThis->setQuality(*(int*)p1);
		break;
	}
	case 55138: {
		if(p1==0)return -2;
		pThis->setScaledClipRect(*(QRect*)(p1));
		break;
	}
	case 55139: {
		if(p1==0)return -2;
		pThis->setScaledSize(*(QSize*)(p1));
		break;
	}
	case 55140: {
		*(void**)p1 = new QSize(pThis->size());
		break;
	}
	case 55141: {
		drvSetBytesArray(p1,QImageReader::supportedImageFormats());
		break;
	}
	case 55142: {
		*(bool*)p1 = pThis->supportsAnimation();
		break;
	}
	case 55143: {
		*(bool*)p2 = pThis->supportsOption(*(QImageIOHandler::ImageOption*)p1);
		break;
	}
	case 55144: {
		drvSetString(p2,pThis->text(drvGetStringHead(p1)));
		break;
	}
	case 55145: {
		drvSetStringArray(p1,pThis->textKeys());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QImageWriter
int drv_QImageWriter(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QImageWriter *pThis = (QImageWriter*)_p;
	switch (funcid) {
	case 56000+1: {
		delete pThis;
		break;
	}
	case 56102: {
		*(void**)_p = new QImageWriter();
		break;
	}
	case 56103: {
		*(void**)_p = new QImageWriter((QIODevice*)(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 56104: {
		*(void**)_p = new QImageWriter(drvGetStringHead(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 56105: {
		*(bool*)p1 = pThis->canWrite();
		break;
	}
	case 56106: {
		*(int*)p1 = pThis->compression();
		break;
	}
	case 56107: {
		drvSetString(p1,pThis->description());
		break;
	}
	case 56108: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 56109: {
		*(QImageWriter::ImageWriterError*)p1 = pThis->error();
		break;
	}
	case 56110: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 56111: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 56112: {
		drvSetByteArray(p1,pThis->format());
		break;
	}
	case 56113: {
		*(float*)p1 = pThis->gamma();
		break;
	}
	case 56114: {
		*(int*)p1 = pThis->quality();
		break;
	}
	case 56115: {
		pThis->setCompression(*(int*)p1);
		break;
	}
	case 56116: {
		pThis->setDescription(drvGetStringHead(p1));
		break;
	}
	case 56117: {
		pThis->setDevice((QIODevice*)(p1));
		break;
	}
	case 56118: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 56119: {
		pThis->setFormat(drvGetByteArrayHead(p1));
		break;
	}
	case 56120: {
		pThis->setGamma(*(float*)p1);
		break;
	}
	case 56121: {
		pThis->setQuality(*(int*)p1);
		break;
	}
	case 56122: {
		pThis->setText(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 56123: {
		drvSetBytesArray(p1,QImageWriter::supportedImageFormats());
		break;
	}
	case 56124: {
		*(bool*)p2 = pThis->supportsOption(*(QImageIOHandler::ImageOption*)p1);
		break;
	}
	case 56125: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->write(*(QImage*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QInputEvent
int drv_QInputEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QInputEvent *pThis = (QInputEvent*)_p;
	switch (funcid) {
	case 57000+1: {
		delete pThis;
		break;
	}
	case 57102: {
		*(void**)_p = new QInputEvent(*(QEvent::Type*)p1,*(QFlags<Qt::KeyboardModifier>*)p2);
		break;
	}
	case 57103: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 57104: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QInputMethodEvent
int drv_QInputMethodEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QInputMethodEvent *pThis = (QInputMethodEvent*)_p;
	switch (funcid) {
	case 58000+1: {
		delete pThis;
		break;
	}
	case 58102: {
		*(void**)_p = new QInputMethodEvent();
		break;
	}
	case 58103: {
		if(p1==0)return -2;
		*(void**)_p = new QInputMethodEvent(*(QInputMethodEvent*)(p1));
		break;
	}
	case 58104: {
		*(void**)_p = new QInputMethodEvent(drvGetStringHead(p1),drvGetNoObjectArrayHeadT<QInputMethodEvent::Attribute>(p2));
		break;
	}
	case 58105: {
		drvSetListPtr<QInputMethodEvent::Attribute>(p1,59000,pThis->attributes());
		break;
	}
	case 58106: {
		drvSetString(p1,pThis->commitString());
		break;
	}
	case 58107: {
		drvSetString(p1,pThis->preeditString());
		break;
	}
	case 58108: {
		*(int*)p1 = pThis->replacementLength();
		break;
	}
	case 58109: {
		*(int*)p1 = pThis->replacementStart();
		break;
	}
	case 58110: {
		pThis->setCommitString(drvGetStringHead(p1));
		break;
	}
	case 58111: {
		pThis->setCommitString(drvGetStringHead(p1),*(int*)p2,*(int*)p3);
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QInputMethodEvent_Attribute
int drv_QInputMethodEvent_Attribute(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QInputMethodEvent::Attribute *pThis = (QInputMethodEvent::Attribute*)_p;
	switch (funcid) {
	case 59000+1: {
		delete pThis;
		break;
	}
	case 59102: {
		if(p4==0)return -2;
		*(void**)_p = new QInputMethodEvent::Attribute(*(QInputMethodEvent::AttributeType*)p1,*(int*)p2,*(int*)p3,*(QVariant*)(p4));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QIntVariantMap
int drv_QIntVariantMap(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QIntVariantMap *pThis = (QIntVariantMap*)_p;
	switch (funcid) {
	case 60000+1: {
		delete pThis;
		break;
	}
	case 60102: {
		*(void**)_p = new QIntVariantMap();
		break;
	}
	case 60103: {
		if(p2==0)return -2;
		pThis->insert(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 60104: {
		drvSetList<int>(p1,pThis->keys());
		break;
	}
	case 60105: {
		*(void**)p2 = new QVariant(pThis->value(*(int*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QItemEditorCreatorBase
int drv_QItemEditorCreatorBase(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QItemEditorCreatorBase *pThis = (QItemEditorCreatorBase*)_p;
	switch (funcid) {
	case 61000+1: {
		delete pThis;
		break;
	}
	case 61102: {
		*(void**)p2 = pThis->createWidget((QWidget*)(p1));
		break;
	}
	case 61103: {
		drvSetByteArray(p1,pThis->valuePropertyName());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QItemEditorFactory
int drv_QItemEditorFactory(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QItemEditorFactory *pThis = (QItemEditorFactory*)_p;
	switch (funcid) {
	case 62000+1: {
		delete pThis;
		break;
	}
	case 62102: {
		*(void**)_p = new QItemEditorFactory();
		break;
	}
	case 62103: {
		*(void**)p3 = pThis->createEditor(*(QVariant::Type*)p1,(QWidget*)(p2));
		break;
	}
	case 62104: {
		*(const void**)p1 = QItemEditorFactory::defaultFactory();
		break;
	}
	case 62105: {
		pThis->registerEditor(*(QVariant::Type*)p1,(QItemEditorCreatorBase*)(p2));
		break;
	}
	case 62106: {
		QItemEditorFactory::setDefaultFactory((QItemEditorFactory*)(p1));
		break;
	}
	case 62107: {
		drvSetByteArray(p2,pThis->valuePropertyName(*(QVariant::Type*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QItemSelection
int drv_QItemSelection(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QItemSelection *pThis = (QItemSelection*)_p;
	switch (funcid) {
	case 63000+1: {
		delete pThis;
		break;
	}
	case 63102: {
		*(void**)_p = new QItemSelection();
		break;
	}
	case 63103: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QItemSelection(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 63104: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QModelIndex*)(p1));
		break;
	}
	case 63105: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->indexes());
		break;
	}
	case 63106: {
		if(p1==0)return -2;
		pThis->merge(*(QItemSelection*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 63107: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->select(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 63108: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		QItemSelection::split(*(QItemSelectionRange*)(p1),*(QItemSelectionRange*)(p2),(QItemSelection*)(p3));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QItemSelectionRange
int drv_QItemSelectionRange(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QItemSelectionRange *pThis = (QItemSelectionRange*)_p;
	switch (funcid) {
	case 64000+1: {
		delete pThis;
		break;
	}
	case 64102: {
		*(void**)_p = new QItemSelectionRange();
		break;
	}
	case 64103: {
		if(p1==0)return -2;
		*(void**)_p = new QItemSelectionRange(*(QItemSelectionRange*)(p1));
		break;
	}
	case 64104: {
		if(p1==0)return -2;
		*(void**)_p = new QItemSelectionRange(*(QModelIndex*)(p1));
		break;
	}
	case 64105: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QItemSelectionRange(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 64106: {
		*(int*)p1 = pThis->bottom();
		break;
	}
	case 64107: {
		*(void**)p1 = new QModelIndex(pThis->bottomRight());
		break;
	}
	case 64108: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QModelIndex*)(p1));
		break;
	}
	case 64109: {
		if(p3==0)return -2;
		*(bool*)p4 = pThis->contains(*(int*)p1,*(int*)p2,*(QModelIndex*)(p3));
		break;
	}
	case 64110: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 64111: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->indexes());
		break;
	}
	case 64112: {
		if(p1==0)return -2;
		*(void**)p2 = new QItemSelectionRange(pThis->intersected(*(QItemSelectionRange*)(p1)));
		break;
	}
	case 64113: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QItemSelectionRange*)(p1));
		break;
	}
	case 64114: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 64115: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 64116: {
		*(int*)p1 = pThis->left();
		break;
	}
	case 64117: {
		*(const void**)p1 = pThis->model();
		break;
	}
	case 64118: {
		*(void**)p1 = new QModelIndex(pThis->parent());
		break;
	}
	case 64119: {
		*(int*)p1 = pThis->right();
		break;
	}
	case 64120: {
		*(int*)p1 = pThis->top();
		break;
	}
	case 64121: {
		*(void**)p1 = new QModelIndex(pThis->topLeft());
		break;
	}
	case 64122: {
		*(int*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QKeyEvent
int drv_QKeyEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QKeyEvent *pThis = (QKeyEvent*)_p;
	switch (funcid) {
	case 65000+1: {
		delete pThis;
		break;
	}
	case 65102: {
		*(void**)_p = new QKeyEvent(*(QEvent::Type*)p1,*(int*)p2,*(QFlags<Qt::KeyboardModifier>*)p3,drvGetStringHead(p4),*(bool*)p5,*(unsigned short*)p6);
		break;
	}
	case 65103: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 65104: {
		*(bool*)p1 = pThis->isAutoRepeat();
		break;
	}
	case 65105: {
		*(int*)p1 = pThis->key();
		break;
	}
	case 65106: {
		*(bool*)p2 = pThis->matches(*(QKeySequence::StandardKey*)p1);
		break;
	}
	case 65107: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 65108: {
		*(unsigned int*)p1 = pThis->nativeModifiers();
		break;
	}
	case 65109: {
		*(unsigned int*)p1 = pThis->nativeScanCode();
		break;
	}
	case 65110: {
		*(unsigned int*)p1 = pThis->nativeVirtualKey();
		break;
	}
	case 65111: {
		drvSetString(p1,pThis->text());
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QKeySequence
int drv_QKeySequence(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QKeySequence *pThis = (QKeySequence*)_p;
	switch (funcid) {
	case 66000+1: {
		delete pThis;
		break;
	}
	case 66102: {
		*(void**)_p = new QKeySequence();
		break;
	}
	case 66103: {
		if(p1==0)return -2;
		*(void**)_p = new QKeySequence(*(QKeySequence*)(p1));
		break;
	}
	case 66104: {
		*(void**)_p = new QKeySequence(*(QKeySequence::StandardKey*)p1);
		break;
	}
	case 66105: {
		*(void**)_p = new QKeySequence(drvGetStringHead(p1));
		break;
	}
	case 66106: {
		*(void**)_p = new QKeySequence(drvGetStringHead(p1),*(QKeySequence::SequenceFormat*)p2);
		break;
	}
	case 66107: {
		*(void**)_p = new QKeySequence(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 66108: {
		*(unsigned int*)p1 = pThis->count();
		break;
	}
	case 66109: {
		*(void**)p2 = new QKeySequence(QKeySequence::fromString(drvGetStringHead(p1)));
		break;
	}
	case 66110: {
		*(void**)p3 = new QKeySequence(QKeySequence::fromString(drvGetStringHead(p1),*(QKeySequence::SequenceFormat*)p2));
		break;
	}
	case 66111: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 66112: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 66113: {
		drvSetListPtr<QKeySequence>(p2,66000,QKeySequence::keyBindings(*(QKeySequence::StandardKey*)p1));
		break;
	}
	case 66114: {
		if(p1==0)return -2;
		*(QKeySequence::SequenceMatch*)p2 = pThis->matches(*(QKeySequence*)(p1));
		break;
	}
	case 66115: {
		*(void**)p2 = new QKeySequence(QKeySequence::mnemonic(drvGetStringHead(p1)));
		break;
	}
	case 66116: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 66117: {
		drvSetString(p2,pThis->toString(*(QKeySequence::SequenceFormat*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLayoutItem
int drv_QLayoutItem(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QLayoutItem *pThis = (QLayoutItem*)_p;
	switch (funcid) {
	case 67000+1: {
		delete pThis;
		break;
	}
	case 67102: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 67103: {
		*(QFlags<QSizePolicy::ControlType>*)p1 = pThis->controlTypes();
		break;
	}
	case 67104: {
		*(QFlags<Qt::Orientation>*)p1 = pThis->expandingDirections();
		break;
	}
	case 67105: {
		*(void**)p1 = new QRect(pThis->geometry());
		break;
	}
	case 67106: {
		*(bool*)p1 = pThis->hasHeightForWidth();
		break;
	}
	case 67107: {
		*(int*)p2 = pThis->heightForWidth(*(int*)p1);
		break;
	}
	case 67108: {
		pThis->invalidate();
		break;
	}
	case 67109: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 67110: {
		*(void**)p1 = pThis->layout();
		break;
	}
	case 67111: {
		*(void**)p1 = new QSize(pThis->maximumSize());
		break;
	}
	case 67112: {
		*(int*)p2 = pThis->minimumHeightForWidth(*(int*)p1);
		break;
	}
	case 67113: {
		*(void**)p1 = new QSize(pThis->minimumSize());
		break;
	}
	case 67114: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 67115: {
		if(p1==0)return -2;
		pThis->setGeometry(*(QRect*)(p1));
		break;
	}
	case 67116: {
		*(void**)p1 = new QSize(pThis->sizeHint());
		break;
	}
	case 67117: {
		*(void**)p1 = pThis->spacerItem();
		break;
	}
	case 67118: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLibraryInfo
int drv_QLibraryInfo(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QLibraryInfo *pThis = (QLibraryInfo*)_p;
	switch (funcid) {
	case 68000+1: {
		delete pThis;
		break;
	}
	case 68102: {
		*(void**)p1 = new QDate(QLibraryInfo::buildDate());
		break;
	}
	case 68103: {
		drvSetString(p1,QLibraryInfo::licensedProducts());
		break;
	}
	case 68104: {
		drvSetString(p1,QLibraryInfo::licensee());
		break;
	}
	case 68105: {
		drvSetString(p2,QLibraryInfo::location(*(QLibraryInfo::LibraryLocation*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLine
int drv_QLine(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QLine *pThis = (QLine*)_p;
	switch (funcid) {
	case 69000+1: {
		delete pThis;
		break;
	}
	case 69102: {
		*(void**)_p = new QLine();
		break;
	}
	case 69103: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QLine(*(QPoint*)(p1),*(QPoint*)(p2));
		break;
	}
	case 69104: {
		*(void**)_p = new QLine(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 69105: {
		*(int*)p1 = pThis->dx();
		break;
	}
	case 69106: {
		*(int*)p1 = pThis->dy();
		break;
	}
	case 69107: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 69108: {
		*(void**)p1 = new QPoint(pThis->p1());
		break;
	}
	case 69109: {
		*(void**)p1 = new QPoint(pThis->p2());
		break;
	}
	case 69110: {
		pThis->setLine(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 69111: {
		if(p1==0)return -2;
		pThis->setP1(*(QPoint*)(p1));
		break;
	}
	case 69112: {
		if(p1==0)return -2;
		pThis->setP2(*(QPoint*)(p1));
		break;
	}
	case 69113: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setPoints(*(QPoint*)(p1),*(QPoint*)(p2));
		break;
	}
	case 69114: {
		if(p1==0)return -2;
		pThis->translate(*(QPoint*)(p1));
		break;
	}
	case 69115: {
		pThis->translate(*(int*)p1,*(int*)p2);
		break;
	}
	case 69116: {
		if(p1==0)return -2;
		*(void**)p2 = new QLine(pThis->translated(*(QPoint*)(p1)));
		break;
	}
	case 69117: {
		*(void**)p3 = new QLine(pThis->translated(*(int*)p1,*(int*)p2));
		break;
	}
	case 69118: {
		*(int*)p1 = pThis->x1();
		break;
	}
	case 69119: {
		*(int*)p1 = pThis->x2();
		break;
	}
	case 69120: {
		*(int*)p1 = pThis->y1();
		break;
	}
	case 69121: {
		*(int*)p1 = pThis->y2();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLineF
int drv_QLineF(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QLineF *pThis = (QLineF*)_p;
	switch (funcid) {
	case 70000+1: {
		delete pThis;
		break;
	}
	case 70102: {
		*(void**)_p = new QLineF();
		break;
	}
	case 70103: {
		if(p1==0)return -2;
		*(void**)_p = new QLineF(*(QLine*)(p1));
		break;
	}
	case 70104: {
		if(p1==0)return -2;
		*(void**)_p = new QLineF(*(QLineF*)(p1));
		break;
	}
	case 70105: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QLineF(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 70106: {
		*(void**)_p = new QLineF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 70107: {
		*(double*)p1 = pThis->angle();
		break;
	}
	case 70108: {
		if(p1==0)return -2;
		*(double*)p2 = pThis->angle(*(QLineF*)(p1));
		break;
	}
	case 70109: {
		if(p1==0)return -2;
		*(double*)p2 = pThis->angleTo(*(QLineF*)(p1));
		break;
	}
	case 70110: {
		*(double*)p1 = pThis->dx();
		break;
	}
	case 70111: {
		*(double*)p1 = pThis->dy();
		break;
	}
	case 70112: {
		*(void**)p3 = new QLineF(QLineF::fromPolar(*(double*)p1,*(double*)p2));
		break;
	}
	case 70113: {
		if(p1==0)return -2;
		*(QLineF::IntersectType*)p3 = pThis->intersect(*(QLineF*)(p1),(QPointF*)(p2));
		break;
	}
	case 70114: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 70115: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 70116: {
		*(void**)p1 = new QLineF(pThis->normalVector());
		break;
	}
	case 70117: {
		*(void**)p1 = new QPointF(pThis->p1());
		break;
	}
	case 70118: {
		*(void**)p1 = new QPointF(pThis->p2());
		break;
	}
	case 70119: {
		*(void**)p2 = new QPointF(pThis->pointAt(*(double*)p1));
		break;
	}
	case 70120: {
		pThis->setAngle(*(double*)p1);
		break;
	}
	case 70121: {
		pThis->setLength(*(double*)p1);
		break;
	}
	case 70122: {
		pThis->setLine(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 70123: {
		if(p1==0)return -2;
		pThis->setP1(*(QPointF*)(p1));
		break;
	}
	case 70124: {
		if(p1==0)return -2;
		pThis->setP2(*(QPointF*)(p1));
		break;
	}
	case 70125: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setPoints(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 70126: {
		*(void**)p1 = new QLine(pThis->toLine());
		break;
	}
	case 70127: {
		if(p1==0)return -2;
		pThis->translate(*(QPointF*)(p1));
		break;
	}
	case 70128: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 70129: {
		if(p1==0)return -2;
		*(void**)p2 = new QLineF(pThis->translated(*(QPointF*)(p1)));
		break;
	}
	case 70130: {
		*(void**)p3 = new QLineF(pThis->translated(*(double*)p1,*(double*)p2));
		break;
	}
	case 70131: {
		*(void**)p1 = new QLineF(pThis->unitVector());
		break;
	}
	case 70132: {
		*(double*)p1 = pThis->x1();
		break;
	}
	case 70133: {
		*(double*)p1 = pThis->x2();
		break;
	}
	case 70134: {
		*(double*)p1 = pThis->y1();
		break;
	}
	case 70135: {
		*(double*)p1 = pThis->y2();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLinearGradient
int drv_QLinearGradient(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLinearGradient *pThis = (QLinearGradient*)_p;
	switch (funcid) {
	case 71000+1: {
		delete pThis;
		break;
	}
	case 71102: {
		*(void**)_p = new QLinearGradient();
		break;
	}
	case 71103: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QLinearGradient(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 71104: {
		*(void**)_p = new QLinearGradient(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 71105: {
		*(void**)p1 = new QPointF(pThis->finalStop());
		break;
	}
	case 71106: {
		if(p1==0)return -2;
		pThis->setFinalStop(*(QPointF*)(p1));
		break;
	}
	case 71107: {
		pThis->setFinalStop(*(double*)p1,*(double*)p2);
		break;
	}
	case 71108: {
		if(p1==0)return -2;
		pThis->setStart(*(QPointF*)(p1));
		break;
	}
	case 71109: {
		pThis->setStart(*(double*)p1,*(double*)p2);
		break;
	}
	case 71110: {
		*(void**)p1 = new QPointF(pThis->start());
		break;
	}
	default:
		return drv_QGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QListWidgetItem
int drv_QListWidgetItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QListWidgetItem *pThis = (QListWidgetItem*)_p;
	switch (funcid) {
	case 72000+1: {
		delete pThis;
		break;
	}
	case 72102: {
		*(void**)_p = new QListWidgetItem();
		break;
	}
	case 72103: {
		if(p1==0)return -2;
		*(void**)_p = new QListWidgetItem(*(QListWidgetItem*)(p1));
		break;
	}
	case 72104: {
		*(void**)_p = new QListWidgetItem((QListWidget*)(p1),*(int*)p2);
		break;
	}
	case 72105: {
		*(void**)_p = new QListWidgetItem(drvGetStringHead(p1),(QListWidget*)(p2),*(int*)p3);
		break;
	}
	case 72106: {
		if(p1==0)return -2;
		*(void**)_p = new QListWidgetItem(*(QIcon*)(p1),drvGetStringHead(p2),(QListWidget*)(p3),*(int*)p4);
		break;
	}
	case 72107: {
		*(void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 72108: {
		*(void**)p1 = new QColor(pThis->backgroundColor());
		break;
	}
	case 72109: {
		*(Qt::CheckState*)p1 = pThis->checkState();
		break;
	}
	case 72110: {
		*(void**)p1 = pThis->clone();
		break;
	}
	case 72111: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 72112: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 72113: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 72114: {
		*(void**)p1 = new QBrush(pThis->foreground());
		break;
	}
	case 72115: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 72116: {
		*(bool*)p1 = pThis->isHidden();
		break;
	}
	case 72117: {
		*(bool*)p1 = pThis->isSelected();
		break;
	}
	case 72118: {
		*(void**)p1 = pThis->listWidget();
		break;
	}
	case 72119: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 72120: {
		if(p1==0)return -2;
		pThis->setBackgroundColor(*(QColor*)(p1));
		break;
	}
	case 72121: {
		pThis->setCheckState(*(Qt::CheckState*)p1);
		break;
	}
	case 72122: {
		if(p2==0)return -2;
		pThis->setData(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 72123: {
		pThis->setFlags(*(QFlags<Qt::ItemFlag>*)p1);
		break;
	}
	case 72124: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 72125: {
		if(p1==0)return -2;
		pThis->setForeground(*(QBrush*)(p1));
		break;
	}
	case 72126: {
		pThis->setHidden(*(bool*)p1);
		break;
	}
	case 72127: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 72128: {
		pThis->setSelected(*(bool*)p1);
		break;
	}
	case 72129: {
		if(p1==0)return -2;
		pThis->setSizeHint(*(QSize*)(p1));
		break;
	}
	case 72130: {
		pThis->setStatusTip(drvGetStringHead(p1));
		break;
	}
	case 72131: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 72132: {
		pThis->setTextAlignment(*(int*)p1);
		break;
	}
	case 72133: {
		if(p1==0)return -2;
		pThis->setTextColor(*(QColor*)(p1));
		break;
	}
	case 72134: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 72135: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 72136: {
		*(void**)p1 = new QSize(pThis->sizeHint());
		break;
	}
	case 72137: {
		drvSetString(p1,pThis->statusTip());
		break;
	}
	case 72138: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 72139: {
		*(int*)p1 = pThis->textAlignment();
		break;
	}
	case 72140: {
		*(void**)p1 = new QColor(pThis->textColor());
		break;
	}
	case 72141: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 72142: {
		*(int*)p1 = pThis->type();
		break;
	}
	case 72143: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QLocale
int drv_QLocale(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QLocale *pThis = (QLocale*)_p;
	switch (funcid) {
	case 73000+1: {
		delete pThis;
		break;
	}
	case 73102: {
		*(void**)_p = new QLocale();
		break;
	}
	case 73103: {
		if(p1==0)return -2;
		*(void**)_p = new QLocale(*(QLocale*)(p1));
		break;
	}
	case 73104: {
		*(void**)_p = new QLocale(drvGetStringHead(p1));
		break;
	}
	case 73105: {
		*(void**)_p = new QLocale(*(QLocale::Language*)p1,*(QLocale::Country*)p2);
		break;
	}
	case 73106: {
		drvSetString(p1,pThis->amText());
		break;
	}
	case 73107: {
		*(void**)p1 = new QLocale(QLocale::c());
		break;
	}
	case 73108: {
		drvSetList<QLocale::Country>(p2,QLocale::countriesForLanguage(*(QLocale::Language*)p1));
		break;
	}
	case 73109: {
		*(QLocale::Country*)p1 = pThis->country();
		break;
	}
	case 73110: {
		drvSetString(p2,QLocale::countryToString(*(QLocale::Country*)p1));
		break;
	}
	case 73111: {
		drvSetString(p1,pThis->dateFormat());
		break;
	}
	case 73112: {
		drvSetString(p2,pThis->dateFormat(*(QLocale::FormatType*)p1));
		break;
	}
	case 73113: {
		drvSetString(p1,pThis->dateTimeFormat());
		break;
	}
	case 73114: {
		drvSetString(p2,pThis->dateTimeFormat(*(QLocale::FormatType*)p1));
		break;
	}
	case 73115: {
		drvSetString(p2,pThis->dayName(*(int*)p1));
		break;
	}
	case 73116: {
		drvSetString(p3,pThis->dayName(*(int*)p1,*(QLocale::FormatType*)p2));
		break;
	}
	case 73117: {
		*(QChar*)p1 = pThis->decimalPoint();
		break;
	}
	case 73118: {
		*(QChar*)p1 = pThis->exponential();
		break;
	}
	case 73119: {
		*(QChar*)p1 = pThis->groupSeparator();
		break;
	}
	case 73120: {
		*(QLocale::Language*)p1 = pThis->language();
		break;
	}
	case 73121: {
		drvSetString(p2,QLocale::languageToString(*(QLocale::Language*)p1));
		break;
	}
	case 73122: {
		*(QLocale::MeasurementSystem*)p1 = pThis->measurementSystem();
		break;
	}
	case 73123: {
		drvSetString(p2,pThis->monthName(*(int*)p1));
		break;
	}
	case 73124: {
		drvSetString(p3,pThis->monthName(*(int*)p1,*(QLocale::FormatType*)p2));
		break;
	}
	case 73125: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 73126: {
		*(QChar*)p1 = pThis->negativeSign();
		break;
	}
	case 73127: {
		*(QFlags<QLocale::NumberOption>*)p1 = pThis->numberOptions();
		break;
	}
	case 73128: {
		*(QChar*)p1 = pThis->percent();
		break;
	}
	case 73129: {
		drvSetString(p1,pThis->pmText());
		break;
	}
	case 73130: {
		*(QChar*)p1 = pThis->positiveSign();
		break;
	}
	case 73131: {
		if(p1==0)return -2;
		QLocale::setDefault(*(QLocale*)(p1));
		break;
	}
	case 73132: {
		pThis->setNumberOptions(*(QFlags<QLocale::NumberOption>*)p1);
		break;
	}
	case 73133: {
		drvSetString(p2,pThis->standaloneDayName(*(int*)p1));
		break;
	}
	case 73134: {
		drvSetString(p3,pThis->standaloneDayName(*(int*)p1,*(QLocale::FormatType*)p2));
		break;
	}
	case 73135: {
		drvSetString(p2,pThis->standaloneMonthName(*(int*)p1));
		break;
	}
	case 73136: {
		drvSetString(p3,pThis->standaloneMonthName(*(int*)p1,*(QLocale::FormatType*)p2));
		break;
	}
	case 73137: {
		*(void**)p1 = new QLocale(QLocale::system());
		break;
	}
	case 73138: {
		*(Qt::LayoutDirection*)p1 = pThis->textDirection();
		break;
	}
	case 73139: {
		drvSetString(p1,pThis->timeFormat());
		break;
	}
	case 73140: {
		drvSetString(p2,pThis->timeFormat(*(QLocale::FormatType*)p1));
		break;
	}
	case 73141: {
		*(void**)p2 = new QDate(pThis->toDate(drvGetStringHead(p1)));
		break;
	}
	case 73142: {
		*(void**)p3 = new QDate(pThis->toDate(drvGetStringHead(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73143: {
		*(void**)p3 = new QDate(pThis->toDate(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 73144: {
		*(void**)p2 = new QDateTime(pThis->toDateTime(drvGetStringHead(p1)));
		break;
	}
	case 73145: {
		*(void**)p3 = new QDateTime(pThis->toDateTime(drvGetStringHead(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73146: {
		*(void**)p3 = new QDateTime(pThis->toDateTime(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 73147: {
		*(double*)p2 = pThis->toDouble(drvGetStringHead(p1));
		break;
	}
	case 73148: {
		*(double*)p3 = pThis->toDouble(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73149: {
		*(float*)p2 = pThis->toFloat(drvGetStringHead(p1));
		break;
	}
	case 73150: {
		*(float*)p3 = pThis->toFloat(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73151: {
		*(int*)p2 = pThis->toInt(drvGetStringHead(p1));
		break;
	}
	case 73152: {
		*(int*)p4 = pThis->toInt(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73153: {
		*(qint64*)p2 = pThis->toLongLong(drvGetStringHead(p1));
		break;
	}
	case 73154: {
		*(qint64*)p4 = pThis->toLongLong(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73155: {
		*(short*)p2 = pThis->toShort(drvGetStringHead(p1));
		break;
	}
	case 73156: {
		*(short*)p4 = pThis->toShort(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73157: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->toString(*(QDate*)(p1)));
		break;
	}
	case 73158: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->toString(*(QDateTime*)(p1)));
		break;
	}
	case 73159: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->toString(*(QTime*)(p1)));
		break;
	}
	case 73160: {
		drvSetString(p2,pThis->toString(*(double*)p1));
		break;
	}
	case 73161: {
		drvSetString(p2,pThis->toString(*(float*)p1));
		break;
	}
	case 73162: {
		drvSetString(p2,pThis->toString(*(int*)p1));
		break;
	}
	case 73163: {
		drvSetString(p2,pThis->toString(*(qint64*)p1));
		break;
	}
	case 73164: {
		drvSetString(p2,pThis->toString(*(short*)p1));
		break;
	}
	case 73165: {
		drvSetString(p2,pThis->toString(*(unsigned int*)p1));
		break;
	}
	case 73166: {
		drvSetString(p2,pThis->toString(*(unsigned short*)p1));
		break;
	}
	case 73167: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QDate*)(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73168: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QDate*)(p1),drvGetStringHead(p2)));
		break;
	}
	case 73169: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QDateTime*)(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73170: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QDateTime*)(p1),drvGetStringHead(p2)));
		break;
	}
	case 73171: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QTime*)(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73172: {
		if(p1==0)return -2;
		drvSetString(p3,pThis->toString(*(QTime*)(p1),drvGetStringHead(p2)));
		break;
	}
	case 73173: {
		drvSetString(p4,pThis->toString(*(double*)p1,*(char*)p2,*(int*)p3));
		break;
	}
	case 73174: {
		drvSetString(p4,pThis->toString(*(float*)p1,*(char*)p2,*(int*)p3));
		break;
	}
	case 73175: {
		*(void**)p2 = new QTime(pThis->toTime(drvGetStringHead(p1)));
		break;
	}
	case 73176: {
		*(void**)p3 = new QTime(pThis->toTime(drvGetStringHead(p1),*(QLocale::FormatType*)p2));
		break;
	}
	case 73177: {
		*(void**)p3 = new QTime(pThis->toTime(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 73178: {
		*(unsigned int*)p2 = pThis->toUInt(drvGetStringHead(p1));
		break;
	}
	case 73179: {
		*(unsigned int*)p4 = pThis->toUInt(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73180: {
		*(qint64*)p2 = pThis->toULongLong(drvGetStringHead(p1));
		break;
	}
	case 73181: {
		*(qint64*)p4 = pThis->toULongLong(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73182: {
		*(unsigned short*)p2 = pThis->toUShort(drvGetStringHead(p1));
		break;
	}
	case 73183: {
		*(unsigned short*)p4 = pThis->toUShort(drvGetStringHead(p1),*(bool**)p2);
		break;
	}
	case 73184: {
		*(QChar*)p1 = pThis->zeroDigit();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMargins
int drv_QMargins(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QMargins *pThis = (QMargins*)_p;
	switch (funcid) {
	case 74000+1: {
		delete pThis;
		break;
	}
	case 74102: {
		*(void**)_p = new QMargins();
		break;
	}
	case 74103: {
		*(void**)_p = new QMargins(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 74104: {
		*(int*)p1 = pThis->bottom();
		break;
	}
	case 74105: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 74106: {
		*(int*)p1 = pThis->left();
		break;
	}
	case 74107: {
		*(int*)p1 = pThis->right();
		break;
	}
	case 74108: {
		pThis->setBottom(*(int*)p1);
		break;
	}
	case 74109: {
		pThis->setLeft(*(int*)p1);
		break;
	}
	case 74110: {
		pThis->setRight(*(int*)p1);
		break;
	}
	case 74111: {
		pThis->setTop(*(int*)p1);
		break;
	}
	case 74112: {
		*(int*)p1 = pThis->top();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMatrix
int drv_QMatrix(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void*,void*,void*,void*,void*,void*)
{
	QMatrix *pThis = (QMatrix*)_p;
	switch (funcid) {
	case 75000+1: {
		delete pThis;
		break;
	}
	case 75102: {
		*(void**)_p = new QMatrix();
		break;
	}
	case 75103: {
		if(p1==0)return -2;
		*(void**)_p = new QMatrix(*(QMatrix*)(p1));
		break;
	}
	case 75104: {
		*(void**)_p = new QMatrix(*(Qt::Initialization*)p1);
		break;
	}
	case 75105: {
		*(void**)_p = new QMatrix(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6);
		break;
	}
	case 75106: {
		*(double*)p1 = pThis->determinant();
		break;
	}
	case 75107: {
		*(double*)p1 = pThis->dx();
		break;
	}
	case 75108: {
		*(double*)p1 = pThis->dy();
		break;
	}
	case 75109: {
		*(void**)p2 = new QMatrix(pThis->inverted(*(bool**)p1));
		break;
	}
	case 75110: {
		*(bool*)p1 = pThis->isIdentity();
		break;
	}
	case 75111: {
		*(bool*)p1 = pThis->isInvertible();
		break;
	}
	case 75112: {
		*(double*)p1 = pThis->m11();
		break;
	}
	case 75113: {
		*(double*)p1 = pThis->m12();
		break;
	}
	case 75114: {
		*(double*)p1 = pThis->m21();
		break;
	}
	case 75115: {
		*(double*)p1 = pThis->m22();
		break;
	}
	case 75116: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->mapRect(*(QRect*)(p1)));
		break;
	}
	case 75117: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRect(*(QRectF*)(p1)));
		break;
	}
	case 75118: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->mapToPolygon(*(QRect*)(p1)));
		break;
	}
	case 75119: {
		pThis->reset();
		break;
	}
	case 75120: {
		*(void**)p2 = new QMatrix(pThis->rotate(*(double*)p1));
		break;
	}
	case 75121: {
		*(void**)p3 = new QMatrix(pThis->scale(*(double*)p1,*(double*)p2));
		break;
	}
	case 75122: {
		pThis->setMatrix(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6);
		break;
	}
	case 75123: {
		*(void**)p3 = new QMatrix(pThis->shear(*(double*)p1,*(double*)p2));
		break;
	}
	case 75124: {
		*(void**)p3 = new QMatrix(pThis->translate(*(double*)p1,*(double*)p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMetaEnum
int drv_QMetaEnum(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QMetaEnum *pThis = (QMetaEnum*)_p;
	switch (funcid) {
	case 76000+1: {
		delete pThis;
		break;
	}
	case 76102: {
		*(void**)_p = new QMetaEnum();
		break;
	}
	case 76103: {
		*(const void**)p1 = pThis->enclosingMetaObject();
		break;
	}
	case 76104: {
		*(bool*)p1 = pThis->isFlag();
		break;
	}
	case 76105: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 76106: {
		drvSetString(p2,pThis->key(*(int*)p1));
		break;
	}
	case 76107: {
		*(int*)p1 = pThis->keyCount();
		break;
	}
	case 76108: {
		*(int*)p2 = pThis->keyToValue(drvGet_const_char(p1));
		break;
	}
	case 76109: {
		*(int*)p2 = pThis->keysToValue(drvGet_const_char(p1));
		break;
	}
	case 76110: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 76111: {
		drvSetString(p1,pThis->scope());
		break;
	}
	case 76112: {
		*(int*)p2 = pThis->value(*(int*)p1);
		break;
	}
	case 76113: {
		drvSetString(p2,pThis->valueToKey(*(int*)p1));
		break;
	}
	case 76114: {
		drvSetByteArray(p2,pThis->valueToKeys(*(int*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMetaMethod
int drv_QMetaMethod(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QMetaMethod *pThis = (QMetaMethod*)_p;
	switch (funcid) {
	case 77000+1: {
		delete pThis;
		break;
	}
	case 77102: {
		*(void**)_p = new QMetaMethod();
		break;
	}
	case 77103: {
		*(QMetaMethod::Access*)p1 = pThis->access();
		break;
	}
	case 77104: {
		*(int*)p1 = pThis->attributes();
		break;
	}
	case 77105: {
		*(const void**)p1 = pThis->enclosingMetaObject();
		break;
	}
	case 77106: {
		*(int*)p1 = pThis->methodIndex();
		break;
	}
	case 77107: {
		*(QMetaMethod::MethodType*)p1 = pThis->methodType();
		break;
	}
	case 77108: {
		drvSetBytesArray(p1,pThis->parameterNames());
		break;
	}
	case 77109: {
		drvSetBytesArray(p1,pThis->parameterTypes());
		break;
	}
	case 77110: {
#ifdef QTDRV_QT5
		drvSetByteArray(p1,pThis->methodSignature());
#else
		drvSetByteArray(p1,pThis->signature());
#endif
		break;
	}
	case 77111: {
		drvSetString(p1,pThis->tag());
		break;
	}
	case 77112: {
		drvSetString(p1,pThis->typeName());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMetaObject
int drv_QMetaObject(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void*)
{
	QMetaObject *pThis = (QMetaObject*)_p;
	switch (funcid) {
	case 78000+1: {
		delete pThis;
		break;
	}
	case 78102: {
		*(void**)_p = new QMetaObject();
		break;
	}
	case 78103: {
		*(void**)p2 = pThis->cast((QObject*)(p1));
		break;
	}
	case 78104: {
		*(bool*)p3 = QMetaObject::checkConnectArgs(drvGet_const_char(p1),drvGet_const_char(p2));
		break;
	}
	case 78105: {
		*(int*)p1 = pThis->classInfoCount();
		break;
	}
	case 78106: {
		*(int*)p1 = pThis->classInfoOffset();
		break;
	}
	case 78107: {
		drvSetString(p1,pThis->className());
		break;
	}
	case 78108: {
		*(bool*)p7 = QMetaObject::connect((QObject*)(p1),*(int*)p2,(QObject*)(p3),*(int*)p4,*(int*)p5,*(int**)p6);
		break;
	}
	case 78109: {
		QMetaObject::connectSlotsByName((QObject*)(p1));
		break;
	}
	case 78110: {
		*(void**)p2 = new QMetaMethod(pThis->constructor(*(int*)p1));
		break;
	}
	case 78111: {
		*(int*)p1 = pThis->constructorCount();
		break;
	}
	case 78112: {
		*(bool*)p5 = QMetaObject::disconnect((QObject*)(p1),*(int*)p2,(QObject*)(p3),*(int*)p4);
		break;
	}
	case 78113: {
		*(bool*)p5 = QMetaObject::disconnectOne((QObject*)(p1),*(int*)p2,(QObject*)(p3),*(int*)p4);
		break;
	}
	case 78114: {
		*(void**)p2 = new QMetaEnum(pThis->enumerator(*(int*)p1));
		break;
	}
	case 78115: {
		*(int*)p1 = pThis->enumeratorCount();
		break;
	}
	case 78116: {
		*(int*)p1 = pThis->enumeratorOffset();
		break;
	}
	case 78117: {
		*(int*)p2 = pThis->indexOfClassInfo(drvGet_const_char(p1));
		break;
	}
	case 78118: {
		*(int*)p2 = pThis->indexOfConstructor(drvGet_const_char(p1));
		break;
	}
	case 78119: {
		*(int*)p2 = pThis->indexOfEnumerator(drvGet_const_char(p1));
		break;
	}
	case 78120: {
		*(int*)p2 = pThis->indexOfMethod(drvGet_const_char(p1));
		break;
	}
	case 78121: {
		*(int*)p2 = pThis->indexOfProperty(drvGet_const_char(p1));
		break;
	}
	case 78122: {
		*(int*)p2 = pThis->indexOfSignal(drvGet_const_char(p1));
		break;
	}
	case 78123: {
		*(int*)p2 = pThis->indexOfSlot(drvGet_const_char(p1));
		break;
	}
	case 78124: {
		*(void**)p2 = new QMetaMethod(pThis->method(*(int*)p1));
		break;
	}
	case 78125: {
		*(int*)p1 = pThis->methodCount();
		break;
	}
	case 78126: {
		*(int*)p1 = pThis->methodOffset();
		break;
	}
	case 78127: {
		*(void**)p1 = pThis->newInstance();
		break;
	}
	case 78128: {
		*(void**)p11 = pThis->newInstance(p1==0?QGenericArgument():*(QGenericArgument*)(p1),p2==0?QGenericArgument():*(QGenericArgument*)(p2),p3==0?QGenericArgument():*(QGenericArgument*)(p3),p4==0?QGenericArgument():*(QGenericArgument*)(p4),p5==0?QGenericArgument():*(QGenericArgument*)(p5),p6==0?QGenericArgument():*(QGenericArgument*)(p6),p7==0?QGenericArgument():*(QGenericArgument*)(p7),p8==0?QGenericArgument():*(QGenericArgument*)(p8),p9==0?QGenericArgument():*(QGenericArgument*)(p9),p10==0?QGenericArgument():*(QGenericArgument*)(p10));
		break;
	}
	case 78129: {
		drvSetByteArray(p2,QMetaObject::normalizedSignature(drvGet_const_char(p1)));
		break;
	}
	case 78130: {
		drvSetByteArray(p2,QMetaObject::normalizedType(drvGet_const_char(p1)));
		break;
	}
	case 78131: {
		*(void**)p2 = new QMetaProperty(pThis->property(*(int*)p1));
		break;
	}
	case 78132: {
		*(int*)p1 = pThis->propertyCount();
		break;
	}
	case 78133: {
		*(int*)p1 = pThis->propertyOffset();
		break;
	}
	case 78134: {
		*(const void**)p1 = pThis->superClass();
		break;
	}
	case 78135: {
		drvSetString(p3,pThis->tr(drvGet_const_char(p1),drvGet_const_char(p2)));
		break;
	}
	case 78136: {
		drvSetString(p4,pThis->tr(drvGet_const_char(p1),drvGet_const_char(p2),*(int*)p3));
		break;
	}
	case 78137: {
		*(void**)p1 = new QMetaProperty(pThis->userProperty());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMetaProperty
int drv_QMetaProperty(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QMetaProperty *pThis = (QMetaProperty*)_p;
	switch (funcid) {
	case 79000+1: {
		delete pThis;
		break;
	}
	case 79102: {
		*(void**)_p = new QMetaProperty();
		break;
	}
	case 79103: {
		*(const void**)p1 = pThis->enclosingMetaObject();
		break;
	}
	case 79104: {
		*(void**)p1 = new QMetaEnum(pThis->enumerator());
		break;
	}
	case 79105: {
		*(bool*)p1 = pThis->hasNotifySignal();
		break;
	}
	case 79106: {
		*(bool*)p1 = pThis->hasStdCppSet();
		break;
	}
	case 79107: {
		*(bool*)p1 = pThis->isConstant();
		break;
	}
	case 79108: {
		*(bool*)p1 = pThis->isDesignable();
		break;
	}
	case 79109: {
		*(bool*)p2 = pThis->isDesignable((QObject*)(p1));
		break;
	}
	case 79110: {
		*(bool*)p1 = pThis->isEditable();
		break;
	}
	case 79111: {
		*(bool*)p2 = pThis->isEditable((QObject*)(p1));
		break;
	}
	case 79112: {
		*(bool*)p1 = pThis->isEnumType();
		break;
	}
	case 79113: {
		*(bool*)p1 = pThis->isFinal();
		break;
	}
	case 79114: {
		*(bool*)p1 = pThis->isFlagType();
		break;
	}
	case 79115: {
		*(bool*)p1 = pThis->isReadable();
		break;
	}
	case 79116: {
		*(bool*)p1 = pThis->isResettable();
		break;
	}
	case 79117: {
		*(bool*)p1 = pThis->isScriptable();
		break;
	}
	case 79118: {
		*(bool*)p2 = pThis->isScriptable((QObject*)(p1));
		break;
	}
	case 79119: {
		*(bool*)p1 = pThis->isStored();
		break;
	}
	case 79120: {
		*(bool*)p2 = pThis->isStored((QObject*)(p1));
		break;
	}
	case 79121: {
		*(bool*)p1 = pThis->isUser();
		break;
	}
	case 79122: {
		*(bool*)p2 = pThis->isUser((QObject*)(p1));
		break;
	}
	case 79123: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 79124: {
		*(bool*)p1 = pThis->isWritable();
		break;
	}
	case 79125: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 79126: {
		*(void**)p1 = new QMetaMethod(pThis->notifySignal());
		break;
	}
	case 79127: {
		*(int*)p1 = pThis->notifySignalIndex();
		break;
	}
	case 79128: {
		*(int*)p1 = pThis->propertyIndex();
		break;
	}
	case 79129: {
		*(void**)p2 = new QVariant(pThis->read((QObject*)(p1)));
		break;
	}
	case 79130: {
		*(bool*)p2 = pThis->reset((QObject*)(p1));
		break;
	}
	case 79131: {
		*(QVariant::Type*)p1 = pThis->type();
		break;
	}
	case 79132: {
		drvSetString(p1,pThis->typeName());
		break;
	}
	case 79133: {
		*(int*)p1 = pThis->userType();
		break;
	}
	case 79134: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->write((QObject*)(p1),*(QVariant*)(p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QModelIndex
int drv_QModelIndex(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QModelIndex *pThis = (QModelIndex*)_p;
	switch (funcid) {
	case 80000+1: {
		delete pThis;
		break;
	}
	case 80102: {
		*(void**)_p = new QModelIndex();
		break;
	}
	case 80103: {
		if(p1==0)return -2;
		*(void**)_p = new QModelIndex(*(QModelIndex*)(p1));
		break;
	}
	case 80104: {
		*(void**)p3 = new QModelIndex(pThis->child(*(int*)p1,*(int*)p2));
		break;
	}
	case 80105: {
		*(int*)p1 = pThis->column();
		break;
	}
	case 80106: {
		*(void**)p1 = new QVariant(pThis->data());
		break;
	}
	case 80107: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 80108: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 80109: {
		*(qint64*)p1 = pThis->internalId();
		break;
	}
	case 80110: {
		*(void**)p1 = pThis->internalPointer();
		break;
	}
	case 80111: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 80112: {
		*(const void**)p1 = pThis->model();
		break;
	}
	case 80113: {
		*(void**)p1 = new QModelIndex(pThis->parent());
		break;
	}
	case 80114: {
		*(int*)p1 = pThis->row();
		break;
	}
	case 80115: {
		*(void**)p3 = new QModelIndex(pThis->sibling(*(int*)p1,*(int*)p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QMouseEvent
int drv_QMouseEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMouseEvent *pThis = (QMouseEvent*)_p;
	switch (funcid) {
	case 81000+1: {
		delete pThis;
		break;
	}
	case 81102: {
		if(p2==0)return -2;
		*(void**)_p = new QMouseEvent(*(QEvent::Type*)p1,*(QPoint*)(p2),*(Qt::MouseButton*)p3,*(QFlags<Qt::MouseButton>*)p4,*(QFlags<Qt::KeyboardModifier>*)p5);
		break;
	}
	case 81103: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QMouseEvent(*(QEvent::Type*)p1,*(QPoint*)(p2),*(QPoint*)(p3),*(Qt::MouseButton*)p4,*(QFlags<Qt::MouseButton>*)p5,*(QFlags<Qt::KeyboardModifier>*)p6);
		break;
	}
	case 81104: {
		*(Qt::MouseButton*)p1 = pThis->button();
		break;
	}
	case 81105: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->buttons();
		break;
	}
	case 81106: {
		*(const void**)p1 = new QPoint(pThis->globalPos());
		break;
	}
	case 81107: {
		*(int*)p1 = pThis->globalX();
		break;
	}
	case 81108: {
		*(int*)p1 = pThis->globalY();
		break;
	}
	case 81109: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 81110: {
#ifdef QTDRV_QT5
		*(void**)p1 = new QPointF(pThis->localPos());
#else
		*(void**)p1 = new QPointF(pThis->posF());
#endif
		break;
	}
	case 81111: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 81112: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMoveEvent
int drv_QMoveEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMoveEvent *pThis = (QMoveEvent*)_p;
	switch (funcid) {
	case 82000+1: {
		delete pThis;
		break;
	}
	case 82102: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QMoveEvent(*(QPoint*)(p1),*(QPoint*)(p2));
		break;
	}
	case 82103: {
		*(const void**)p1 = new QPoint(pThis->oldPos());
		break;
	}
	case 82104: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPaintDevice
int drv_QPaintDevice(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPaintDevice *pThis = (QPaintDevice*)_p;
	switch (funcid) {
	case 83000+1: {
		delete pThis;
		break;
	}
	case 83102: {
		*(int*)p1 = pThis->colorCount();
		break;
	}
	case 83103: {
		*(int*)p1 = pThis->depth();
		break;
	}
	case 83104: {
		*(int*)p1 = pThis->devType();
		break;
	}
	case 83105: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 83106: {
		*(int*)p1 = pThis->heightMM();
		break;
	}
	case 83107: {
		*(int*)p1 = pThis->logicalDpiX();
		break;
	}
	case 83108: {
		*(int*)p1 = pThis->logicalDpiY();
		break;
	}
	case 83109: {
		*(void**)p1 = pThis->paintEngine();
		break;
	}
	case 83110: {
		*(bool*)p1 = pThis->paintingActive();
		break;
	}
	case 83111: {
		*(int*)p1 = pThis->physicalDpiX();
		break;
	}
	case 83112: {
		*(int*)p1 = pThis->physicalDpiY();
		break;
	}
	case 83113: {
		*(int*)p1 = pThis->width();
		break;
	}
	case 83114: {
		*(int*)p1 = pThis->widthMM();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPaintEngine
int drv_QPaintEngine(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPaintEngine *pThis = (QPaintEngine*)_p;
	switch (funcid) {
	case 84000+1: {
		delete pThis;
		break;
	}
	case 84102: {
		*(bool*)p2 = pThis->begin(drvGetPaintDevice(p1));
		break;
	}
	case 84103: {
		pThis->clearDirty(*(QFlags<QPaintEngine::DirtyFlag>*)p1);
		break;
	}
	case 84104: {
		*(void**)p1 = new QPoint(pThis->coordinateOffset());
		break;
	}
	case 84105: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QRect*)(p1));
		break;
	}
	case 84106: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QRectF*)(p1));
		break;
	}
	case 84107: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawImage(*(QRectF*)(p1),*(QImage*)(p2),*(QRectF*)(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 84108: {
		pThis->drawLines((QLine*)(p1),*(int*)p2);
		break;
	}
	case 84109: {
		pThis->drawLines((QLineF*)(p1),*(int*)p2);
		break;
	}
	case 84110: {
		if(p1==0)return -2;
		pThis->drawPath(*(QPainterPath*)(p1));
		break;
	}
	case 84111: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawPixmap(*(QRectF*)(p1),*(QPixmap*)(p2),*(QRectF*)(p3));
		break;
	}
	case 84112: {
		pThis->drawPoints((QPoint*)(p1),*(int*)p2);
		break;
	}
	case 84113: {
		pThis->drawPoints((QPointF*)(p1),*(int*)p2);
		break;
	}
	case 84114: {
		pThis->drawPolygon((QPoint*)(p1),*(int*)p2,*(QPaintEngine::PolygonDrawMode*)p3);
		break;
	}
	case 84115: {
		pThis->drawPolygon((QPointF*)(p1),*(int*)p2,*(QPaintEngine::PolygonDrawMode*)p3);
		break;
	}
	case 84116: {
		pThis->drawRects((QRect*)(p1),*(int*)p2);
		break;
	}
	case 84117: {
		pThis->drawRects((QRectF*)(p1),*(int*)p2);
		break;
	}
	case 84118: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawTextItem(*(QPointF*)(p1),*(QTextItem*)(p2));
		break;
	}
	case 84119: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawTiledPixmap(*(QRectF*)(p1),*(QPixmap*)(p2),*(QPointF*)(p3));
		break;
	}
	case 84120: {
		*(bool*)p1 = pThis->end();
		break;
	}
	case 84121: {
		pThis->fix_neg_rect(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 84122: {
		*(bool*)p2 = pThis->hasFeature(*(QFlags<QPaintEngine::PaintEngineFeature>*)p1);
		break;
	}
	case 84123: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 84124: {
		*(bool*)p1 = pThis->isExtended();
		break;
	}
	case 84125: {
		*(void**)p1 = pThis->paintDevice();
		break;
	}
	case 84126: {
		*(void**)p1 = pThis->painter();
		break;
	}
	case 84127: {
		pThis->setActive(*(bool*)p1);
		break;
	}
	case 84128: {
		pThis->setDirty(*(QFlags<QPaintEngine::DirtyFlag>*)p1);
		break;
	}
	case 84129: {
		pThis->setPaintDevice(drvGetPaintDevice(p1));
		break;
	}
	case 84130: {
		if(p1==0)return -2;
		pThis->setSystemClip(*(QRegion*)(p1));
		break;
	}
	case 84131: {
		if(p1==0)return -2;
		pThis->setSystemRect(*(QRect*)(p1));
		break;
	}
	case 84132: {
		pThis->syncState();
		break;
	}
	case 84133: {
		*(void**)p1 = new QRegion(pThis->systemClip());
		break;
	}
	case 84134: {
		*(void**)p1 = new QRect(pThis->systemRect());
		break;
	}
	case 84135: {
		*(bool*)p2 = pThis->testDirty(*(QFlags<QPaintEngine::DirtyFlag>*)p1);
		break;
	}
	case 84136: {
		*(QPaintEngine::Type*)p1 = pThis->type();
		break;
	}
	case 84137: {
		if(p1==0)return -2;
		pThis->updateState(*(QPaintEngineState*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPaintEngineState
int drv_QPaintEngineState(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPaintEngineState *pThis = (QPaintEngineState*)_p;
	switch (funcid) {
	case 85000+1: {
		delete pThis;
		break;
	}
	case 85102: {
		*(void**)_p = new QPaintEngineState();
		break;
	}
	case 85103: {
		*(void**)p1 = new QBrush(pThis->backgroundBrush());
		break;
	}
	case 85104: {
		*(Qt::BGMode*)p1 = pThis->backgroundMode();
		break;
	}
	case 85105: {
		*(void**)p1 = new QBrush(pThis->brush());
		break;
	}
	case 85106: {
		*(bool*)p1 = pThis->brushNeedsResolving();
		break;
	}
	case 85107: {
		*(void**)p1 = new QPointF(pThis->brushOrigin());
		break;
	}
	case 85108: {
		*(Qt::ClipOperation*)p1 = pThis->clipOperation();
		break;
	}
	case 85109: {
		*(void**)p1 = new QPainterPath(pThis->clipPath());
		break;
	}
	case 85110: {
		*(void**)p1 = new QRegion(pThis->clipRegion());
		break;
	}
	case 85111: {
		*(QPainter::CompositionMode*)p1 = pThis->compositionMode();
		break;
	}
	case 85112: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 85113: {
		*(bool*)p1 = pThis->isClipEnabled();
		break;
	}
	case 85114: {
		*(void**)p1 = new QMatrix(pThis->matrix());
		break;
	}
	case 85115: {
		*(double*)p1 = pThis->opacity();
		break;
	}
	case 85116: {
		*(void**)p1 = pThis->painter();
		break;
	}
	case 85117: {
		*(void**)p1 = new QPen(pThis->pen());
		break;
	}
	case 85118: {
		*(bool*)p1 = pThis->penNeedsResolving();
		break;
	}
	case 85119: {
		*(QFlags<QPainter::RenderHint>*)p1 = pThis->renderHints();
		break;
	}
	case 85120: {
		*(QFlags<QPaintEngine::DirtyFlag>*)p1 = pThis->state();
		break;
	}
	case 85121: {
		*(void**)p1 = new QTransform(pThis->transform());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPaintEvent
int drv_QPaintEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPaintEvent *pThis = (QPaintEvent*)_p;
	switch (funcid) {
	case 86000+1: {
		delete pThis;
		break;
	}
	case 86102: {
		if(p1==0)return -2;
		*(void**)_p = new QPaintEvent(*(QRect*)(p1));
		break;
	}
	case 86103: {
		if(p1==0)return -2;
		*(void**)_p = new QPaintEvent(*(QRegion*)(p1));
		break;
	}
	case 86104: {
		*(const void**)p1 = new QRect(pThis->rect());
		break;
	}
	case 86105: {
		*(const void**)p1 = new QRegion(pThis->region());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPainter
int drv_QPainter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void*,void*,void*)
{
	QPainter *pThis = (QPainter*)_p;
	switch (funcid) {
	case 87000+1: {
		delete pThis;
		break;
	}
	case 87102: {
		*(void**)_p = new QPainter();
		break;
	}
	case 87103: {
		*(void**)_p = new QPainter(drvGetPaintDevice(p1));
		break;
	}
	case 87104: {
		*(const void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 87105: {
		*(Qt::BGMode*)p1 = pThis->backgroundMode();
		break;
	}
	case 87106: {
		*(bool*)p2 = pThis->begin(drvGetPaintDevice(p1));
		break;
	}
	case 87107: {
		pThis->beginNativePainting();
		break;
	}
	case 87108: {
		if(p1==0)return -2;
		*(void**)p4 = new QRect(pThis->boundingRect(*(QRect*)(p1),*(int*)p2,drvGetStringHead(p3)));
		break;
	}
	case 87109: {
		if(p1==0)return -2;
		*(void**)p4 = new QRectF(pThis->boundingRect(*(QRectF*)(p1),drvGetStringHead(p2),p3==0?QTextOption():*(QTextOption*)(p3)));
		break;
	}
	case 87110: {
		if(p1==0)return -2;
		*(void**)p4 = new QRectF(pThis->boundingRect(*(QRectF*)(p1),*(int*)p2,drvGetStringHead(p3)));
		break;
	}
	case 87111: {
		*(void**)p7 = new QRect(pThis->boundingRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,drvGetStringHead(p6)));
		break;
	}
	case 87112: {
		*(const void**)p1 = new QBrush(pThis->brush());
		break;
	}
	case 87113: {
		*(void**)p1 = new QPoint(pThis->brushOrigin());
		break;
	}
	case 87114: {
		*(void**)p1 = new QPainterPath(pThis->clipPath());
		break;
	}
	case 87115: {
		*(void**)p1 = new QRegion(pThis->clipRegion());
		break;
	}
	case 87116: {
		*(void**)p1 = new QMatrix(pThis->combinedMatrix());
		break;
	}
	case 87117: {
		*(void**)p1 = new QTransform(pThis->combinedTransform());
		break;
	}
	case 87118: {
		*(QPainter::CompositionMode*)p1 = pThis->compositionMode();
		break;
	}
	case 87119: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 87120: {
		*(const void**)p1 = new QMatrix(pThis->deviceMatrix());
		break;
	}
	case 87121: {
		*(const void**)p1 = new QTransform(pThis->deviceTransform());
		break;
	}
	case 87122: {
		if(p1==0)return -2;
		pThis->drawArc(*(QRect*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87123: {
		if(p1==0)return -2;
		pThis->drawArc(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87124: {
		pThis->drawArc(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 87125: {
		if(p1==0)return -2;
		pThis->drawChord(*(QRect*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87126: {
		if(p1==0)return -2;
		pThis->drawChord(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87127: {
		pThis->drawChord(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 87128: {
		if(p1==0)return -2;
		pThis->drawConvexPolygon(*(QPolygon*)(p1));
		break;
	}
	case 87129: {
		if(p1==0)return -2;
		pThis->drawConvexPolygon(*(QPolygonF*)(p1));
		break;
	}
	case 87130: {
		pThis->drawConvexPolygon((QPoint*)(p1),*(int*)p2);
		break;
	}
	case 87131: {
		pThis->drawConvexPolygon((QPointF*)(p1),*(int*)p2);
		break;
	}
	case 87132: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QRect*)(p1));
		break;
	}
	case 87133: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QRectF*)(p1));
		break;
	}
	case 87134: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QPoint*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87135: {
		if(p1==0)return -2;
		pThis->drawEllipse(*(QPointF*)(p1),*(double*)p2,*(double*)p3);
		break;
	}
	case 87136: {
		pThis->drawEllipse(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87137: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawImage(*(QPoint*)(p1),*(QImage*)(p2));
		break;
	}
	case 87138: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawImage(*(QPointF*)(p1),*(QImage*)(p2));
		break;
	}
	case 87139: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawImage(*(QRect*)(p1),*(QImage*)(p2));
		break;
	}
	case 87140: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawImage(*(QRectF*)(p1),*(QImage*)(p2));
		break;
	}
	case 87141: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawImage(*(QPoint*)(p1),*(QImage*)(p2),*(QRect*)(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 87142: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawImage(*(QPointF*)(p1),*(QImage*)(p2),*(QRectF*)(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 87143: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawImage(*(QRect*)(p1),*(QImage*)(p2),*(QRect*)(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 87144: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawImage(*(QRectF*)(p1),*(QImage*)(p2),*(QRectF*)(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 87145: {
		if(p3==0)return -2;
		pThis->drawImage(*(int*)p1,*(int*)p2,*(QImage*)(p3),*(int*)p4,*(int*)p5,*(int*)p6,*(int*)p7,*(QFlags<Qt::ImageConversionFlag>*)p8);
		break;
	}
	case 87146: {
		if(p1==0)return -2;
		pThis->drawLine(*(QLine*)(p1));
		break;
	}
	case 87147: {
		if(p1==0)return -2;
		pThis->drawLine(*(QLineF*)(p1));
		break;
	}
	case 87148: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawLine(*(QPoint*)(p1),*(QPoint*)(p2));
		break;
	}
	case 87149: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawLine(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 87150: {
		pThis->drawLine(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87151: {
		pThis->drawLines(drvGetVectorPtr<QLine>(p1));
		break;
	}
	case 87152: {
		pThis->drawLines(drvGetVectorPtr<QLineF>(p1));
		break;
	}
	case 87153: {
		pThis->drawLines(drvGetVectorPtr<QPoint>(p1));
		break;
	}
	case 87154: {
		pThis->drawLines(drvGetVectorPtr<QPointF>(p1));
		break;
	}
	case 87155: {
		pThis->drawLines((QLine*)(p1),*(int*)p2);
		break;
	}
	case 87156: {
		pThis->drawLines((QLineF*)(p1),*(int*)p2);
		break;
	}
	case 87157: {
		pThis->drawLines((QPoint*)(p1),*(int*)p2);
		break;
	}
	case 87158: {
		pThis->drawLines((QPointF*)(p1),*(int*)p2);
		break;
	}
	case 87159: {
		if(p1==0)return -2;
		pThis->drawPath(*(QPainterPath*)(p1));
		break;
	}
	case 87160: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawPicture(*(QPoint*)(p1),*(QPicture*)(p2));
		break;
	}
	case 87161: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawPicture(*(QPointF*)(p1),*(QPicture*)(p2));
		break;
	}
	case 87162: {
		if(p3==0)return -2;
		pThis->drawPicture(*(int*)p1,*(int*)p2,*(QPicture*)(p3));
		break;
	}
	case 87163: {
		if(p1==0)return -2;
		pThis->drawPie(*(QRect*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87164: {
		if(p1==0)return -2;
		pThis->drawPie(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87165: {
		pThis->drawPie(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 87166: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawPixmap(*(QPoint*)(p1),*(QPixmap*)(p2));
		break;
	}
	case 87167: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawPixmap(*(QPointF*)(p1),*(QPixmap*)(p2));
		break;
	}
	case 87168: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawPixmap(*(QRect*)(p1),*(QPixmap*)(p2));
		break;
	}
	case 87169: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawPixmap(*(QPoint*)(p1),*(QPixmap*)(p2),*(QRect*)(p3));
		break;
	}
	case 87170: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawPixmap(*(QPointF*)(p1),*(QPixmap*)(p2),*(QRectF*)(p3));
		break;
	}
	case 87171: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawPixmap(*(QRect*)(p1),*(QPixmap*)(p2),*(QRect*)(p3));
		break;
	}
	case 87172: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawPixmap(*(QRectF*)(p1),*(QPixmap*)(p2),*(QRectF*)(p3));
		break;
	}
	case 87173: {
		if(p3==0)return -2;
		pThis->drawPixmap(*(int*)p1,*(int*)p2,*(QPixmap*)(p3));
		break;
	}
	case 87174: {
		if(p5==0)return -2;
		pThis->drawPixmap(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QPixmap*)(p5));
		break;
	}
	case 87175: {
		if(p3==0)return -2;
		pThis->drawPixmap(*(int*)p1,*(int*)p2,*(QPixmap*)(p3),*(int*)p4,*(int*)p5,*(int*)p6,*(int*)p7);
		break;
	}
	case 87176: {
		if(p5==0)return -2;
		pThis->drawPixmap(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QPixmap*)(p5),*(int*)p6,*(int*)p7,*(int*)p8,*(int*)p9);
		break;
	}
	case 87177: {
		if(p3==0)return -2;
		pThis->drawPixmapFragments((QPainter::PixmapFragment*)(p1),*(int*)p2,*(QPixmap*)(p3),*(QFlags<QPainter::PixmapFragmentHint>*)p4);
		break;
	}
	case 87178: {
		if(p1==0)return -2;
		pThis->drawPoint(*(QPoint*)(p1));
		break;
	}
	case 87179: {
		if(p1==0)return -2;
		pThis->drawPoint(*(QPointF*)(p1));
		break;
	}
	case 87180: {
		pThis->drawPoint(*(int*)p1,*(int*)p2);
		break;
	}
	case 87181: {
		if(p1==0)return -2;
		pThis->drawPoints(*(QPolygon*)(p1));
		break;
	}
	case 87182: {
		if(p1==0)return -2;
		pThis->drawPoints(*(QPolygonF*)(p1));
		break;
	}
	case 87183: {
		pThis->drawPoints((QPoint*)(p1),*(int*)p2);
		break;
	}
	case 87184: {
		pThis->drawPoints((QPointF*)(p1),*(int*)p2);
		break;
	}
	case 87185: {
		if(p1==0)return -2;
		pThis->drawPolygon(*(QPolygon*)(p1));
		break;
	}
	case 87186: {
		if(p1==0)return -2;
		pThis->drawPolygon(*(QPolygonF*)(p1));
		break;
	}
	case 87187: {
		if(p1==0)return -2;
		pThis->drawPolygon(*(QPolygon*)(p1),*(Qt::FillRule*)p2);
		break;
	}
	case 87188: {
		if(p1==0)return -2;
		pThis->drawPolygon(*(QPolygonF*)(p1),*(Qt::FillRule*)p2);
		break;
	}
	case 87189: {
		pThis->drawPolygon((QPoint*)(p1),*(int*)p2,*(Qt::FillRule*)p3);
		break;
	}
	case 87190: {
		pThis->drawPolygon((QPointF*)(p1),*(int*)p2,*(Qt::FillRule*)p3);
		break;
	}
	case 87191: {
		if(p1==0)return -2;
		pThis->drawPolyline(*(QPolygon*)(p1));
		break;
	}
	case 87192: {
		if(p1==0)return -2;
		pThis->drawPolyline(*(QPolygonF*)(p1));
		break;
	}
	case 87193: {
		pThis->drawPolyline((QPoint*)(p1),*(int*)p2);
		break;
	}
	case 87194: {
		pThis->drawPolyline((QPointF*)(p1),*(int*)p2);
		break;
	}
	case 87195: {
		if(p1==0)return -2;
		pThis->drawRect(*(QRect*)(p1));
		break;
	}
	case 87196: {
		if(p1==0)return -2;
		pThis->drawRect(*(QRectF*)(p1));
		break;
	}
	case 87197: {
		pThis->drawRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87198: {
		pThis->drawRects(drvGetVectorPtr<QRect>(p1));
		break;
	}
	case 87199: {
		pThis->drawRects(drvGetVectorPtr<QRectF>(p1));
		break;
	}
	case 87200: {
		pThis->drawRects((QRect*)(p1),*(int*)p2);
		break;
	}
	case 87201: {
		pThis->drawRects((QRectF*)(p1),*(int*)p2);
		break;
	}
	case 87202: {
		if(p1==0)return -2;
		pThis->drawRoundRect(*(QRect*)(p1));
		break;
	}
	case 87203: {
		if(p1==0)return -2;
		pThis->drawRoundRect(*(QRectF*)(p1));
		break;
	}
	case 87204: {
		if(p1==0)return -2;
		pThis->drawRoundRect(*(QRect*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87205: {
		if(p1==0)return -2;
		pThis->drawRoundRect(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 87206: {
		pThis->drawRoundRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 87207: {
		if(p1==0)return -2;
		pThis->drawRoundedRect(*(QRect*)(p1),*(double*)p2,*(double*)p3,*(Qt::SizeMode*)p4);
		break;
	}
	case 87208: {
		if(p1==0)return -2;
		pThis->drawRoundedRect(*(QRectF*)(p1),*(double*)p2,*(double*)p3,*(Qt::SizeMode*)p4);
		break;
	}
	case 87209: {
		pThis->drawRoundedRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(double*)p5,*(double*)p6,*(Qt::SizeMode*)p7);
		break;
	}
	case 87210: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawStaticText(*(QPoint*)(p1),*(QStaticText*)(p2));
		break;
	}
	case 87211: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawStaticText(*(QPointF*)(p1),*(QStaticText*)(p2));
		break;
	}
	case 87212: {
		if(p3==0)return -2;
		pThis->drawStaticText(*(int*)p1,*(int*)p2,*(QStaticText*)(p3));
		break;
	}
	case 87213: {
		if(p1==0)return -2;
		pThis->drawText(*(QPoint*)(p1),drvGetStringHead(p2));
		break;
	}
	case 87214: {
		if(p1==0)return -2;
		pThis->drawText(*(QPointF*)(p1),drvGetStringHead(p2));
		break;
	}
	case 87215: {
		if(p1==0)return -2;
		pThis->drawText(*(QRectF*)(p1),drvGetStringHead(p2),p3==0?QTextOption():*(QTextOption*)(p3));
		break;
	}
	case 87216: {
		pThis->drawText(*(int*)p1,*(int*)p2,drvGetStringHead(p3));
		break;
	}
	case 87217: {
		if(p1==0)return -2;
		pThis->drawText(*(QPointF*)(p1),drvGetStringHead(p2),*(int*)p3,*(int*)p4);
		break;
	}
	case 87218: {
		if(p1==0)return -2;
		pThis->drawText(*(QRect*)(p1),*(int*)p2,drvGetStringHead(p3),(QRect*)(p4));
		break;
	}
	case 87219: {
		if(p1==0)return -2;
		pThis->drawText(*(QRectF*)(p1),*(int*)p2,drvGetStringHead(p3),(QRectF*)(p4));
		break;
	}
	case 87220: {
		pThis->drawText(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,drvGetStringHead(p6),(QRect*)(p7));
		break;
	}
	case 87221: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawTextItem(*(QPoint*)(p1),*(QTextItem*)(p2));
		break;
	}
	case 87222: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawTextItem(*(QPointF*)(p1),*(QTextItem*)(p2));
		break;
	}
	case 87223: {
		if(p3==0)return -2;
		pThis->drawTextItem(*(int*)p1,*(int*)p2,*(QTextItem*)(p3));
		break;
	}
	case 87224: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawTiledPixmap(*(QRect*)(p1),*(QPixmap*)(p2),p3==0?QPoint():*(QPoint*)(p3));
		break;
	}
	case 87225: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->drawTiledPixmap(*(QRectF*)(p1),*(QPixmap*)(p2),p3==0?QPointF():*(QPointF*)(p3));
		break;
	}
	case 87226: {
		if(p5==0)return -2;
		pThis->drawTiledPixmap(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QPixmap*)(p5),*(int*)p6,*(int*)p7);
		break;
	}
	case 87227: {
		*(bool*)p1 = pThis->end();
		break;
	}
	case 87228: {
		pThis->endNativePainting();
		break;
	}
	case 87229: {
		if(p1==0)return -2;
		pThis->eraseRect(*(QRect*)(p1));
		break;
	}
	case 87230: {
		if(p1==0)return -2;
		pThis->eraseRect(*(QRectF*)(p1));
		break;
	}
	case 87231: {
		pThis->eraseRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87232: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->fillPath(*(QPainterPath*)(p1),*(QBrush*)(p2));
		break;
	}
	case 87233: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->fillRect(*(QRect*)(p1),*(QBrush*)(p2));
		break;
	}
	case 87234: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->fillRect(*(QRect*)(p1),*(QColor*)(p2));
		break;
	}
	case 87235: {
		if(p1==0)return -2;
		pThis->fillRect(*(QRect*)(p1),*(Qt::BrushStyle*)p2);
		break;
	}
	case 87236: {
		if(p1==0)return -2;
		pThis->fillRect(*(QRect*)(p1),*(Qt::GlobalColor*)p2);
		break;
	}
	case 87237: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->fillRect(*(QRectF*)(p1),*(QBrush*)(p2));
		break;
	}
	case 87238: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->fillRect(*(QRectF*)(p1),*(QColor*)(p2));
		break;
	}
	case 87239: {
		if(p1==0)return -2;
		pThis->fillRect(*(QRectF*)(p1),*(Qt::BrushStyle*)p2);
		break;
	}
	case 87240: {
		if(p1==0)return -2;
		pThis->fillRect(*(QRectF*)(p1),*(Qt::GlobalColor*)p2);
		break;
	}
	case 87241: {
		if(p5==0)return -2;
		pThis->fillRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QBrush*)(p5));
		break;
	}
	case 87242: {
		if(p5==0)return -2;
		pThis->fillRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QColor*)(p5));
		break;
	}
	case 87243: {
		pThis->fillRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(Qt::BrushStyle*)p5);
		break;
	}
	case 87244: {
		pThis->fillRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(Qt::GlobalColor*)p5);
		break;
	}
	case 87245: {
		*(const void**)p1 = new QFont(pThis->font());
		break;
	}
	case 87246: {
		*(void**)p1 = new QFontInfo(pThis->fontInfo());
		break;
	}
	case 87247: {
		*(void**)p1 = new QFontMetrics(pThis->fontMetrics());
		break;
	}
	case 87248: {
		*(bool*)p1 = pThis->hasClipping();
		break;
	}
	case 87249: {
		pThis->initFrom((QWidget*)(p1));
		break;
	}
	case 87250: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 87251: {
		*(Qt::LayoutDirection*)p1 = pThis->layoutDirection();
		break;
	}
	case 87252: {
		*(const void**)p1 = new QMatrix(pThis->matrix());
		break;
	}
	case 87253: {
		*(bool*)p1 = pThis->matrixEnabled();
		break;
	}
	case 87254: {
		*(double*)p1 = pThis->opacity();
		break;
	}
	case 87255: {
		*(void**)p1 = pThis->paintEngine();
		break;
	}
	case 87256: {
		*(const void**)p1 = new QPen(pThis->pen());
		break;
	}
	case 87257: {
		*(void**)p2 = QPainter::redirected(drvGetPaintDevice(p1));
		break;
	}
	case 87258: {
		*(void**)p3 = QPainter::redirected(drvGetPaintDevice(p1),(QPoint*)(p2));
		break;
	}
	case 87259: {
		*(QFlags<QPainter::RenderHint>*)p1 = pThis->renderHints();
		break;
	}
	case 87260: {
		pThis->resetMatrix();
		break;
	}
	case 87261: {
		pThis->resetTransform();
		break;
	}
	case 87262: {
		pThis->restore();
		break;
	}
	case 87263: {
		QPainter::restoreRedirected(drvGetPaintDevice(p1));
		break;
	}
	case 87264: {
		pThis->rotate(*(double*)p1);
		break;
	}
	case 87265: {
		pThis->save();
		break;
	}
	case 87266: {
		pThis->scale(*(double*)p1,*(double*)p2);
		break;
	}
	case 87267: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 87268: {
		pThis->setBackgroundMode(*(Qt::BGMode*)p1);
		break;
	}
	case 87269: {
		if(p1==0)return -2;
		pThis->setBrush(*(QBrush*)(p1));
		break;
	}
	case 87270: {
		pThis->setBrush(*(Qt::BrushStyle*)p1);
		break;
	}
	case 87271: {
		if(p1==0)return -2;
		pThis->setBrushOrigin(*(QPoint*)(p1));
		break;
	}
	case 87272: {
		if(p1==0)return -2;
		pThis->setBrushOrigin(*(QPointF*)(p1));
		break;
	}
	case 87273: {
		pThis->setBrushOrigin(*(int*)p1,*(int*)p2);
		break;
	}
	case 87274: {
		if(p1==0)return -2;
		pThis->setClipPath(*(QPainterPath*)(p1));
		break;
	}
	case 87275: {
		if(p1==0)return -2;
		pThis->setClipPath(*(QPainterPath*)(p1),*(Qt::ClipOperation*)p2);
		break;
	}
	case 87276: {
		if(p1==0)return -2;
		pThis->setClipRect(*(QRect*)(p1));
		break;
	}
	case 87277: {
		if(p1==0)return -2;
		pThis->setClipRect(*(QRectF*)(p1));
		break;
	}
	case 87278: {
		if(p1==0)return -2;
		pThis->setClipRect(*(QRect*)(p1),*(Qt::ClipOperation*)p2);
		break;
	}
	case 87279: {
		if(p1==0)return -2;
		pThis->setClipRect(*(QRectF*)(p1),*(Qt::ClipOperation*)p2);
		break;
	}
	case 87280: {
		pThis->setClipRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(Qt::ClipOperation*)p5);
		break;
	}
	case 87281: {
		if(p1==0)return -2;
		pThis->setClipRegion(*(QRegion*)(p1));
		break;
	}
	case 87282: {
		if(p1==0)return -2;
		pThis->setClipRegion(*(QRegion*)(p1),*(Qt::ClipOperation*)p2);
		break;
	}
	case 87283: {
		pThis->setClipping(*(bool*)p1);
		break;
	}
	case 87284: {
		pThis->setCompositionMode(*(QPainter::CompositionMode*)p1);
		break;
	}
	case 87285: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 87286: {
		pThis->setLayoutDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 87287: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1));
		break;
	}
	case 87288: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1),*(bool*)p2);
		break;
	}
	case 87289: {
		pThis->setMatrixEnabled(*(bool*)p1);
		break;
	}
	case 87290: {
		pThis->setOpacity(*(double*)p1);
		break;
	}
	case 87291: {
		if(p1==0)return -2;
		pThis->setPen(*(QColor*)(p1));
		break;
	}
	case 87292: {
		if(p1==0)return -2;
		pThis->setPen(*(QPen*)(p1));
		break;
	}
	case 87293: {
		pThis->setPen(*(Qt::PenStyle*)p1);
		break;
	}
	case 87294: {
		QPainter::setRedirected(drvGetPaintDevice(p1),drvGetPaintDevice(p2),p3==0?QPoint():*(QPoint*)(p3));
		break;
	}
	case 87295: {
		pThis->setRenderHint(*(QPainter::RenderHint*)p1);
		break;
	}
	case 87296: {
		pThis->setRenderHint(*(QPainter::RenderHint*)p1,*(bool*)p2);
		break;
	}
	case 87297: {
		pThis->setRenderHints(*(QFlags<QPainter::RenderHint>*)p1);
		break;
	}
	case 87298: {
		pThis->setRenderHints(*(QFlags<QPainter::RenderHint>*)p1,*(bool*)p2);
		break;
	}
	case 87299: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1));
		break;
	}
	case 87300: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1),*(bool*)p2);
		break;
	}
	case 87301: {
		pThis->setViewTransformEnabled(*(bool*)p1);
		break;
	}
	case 87302: {
		if(p1==0)return -2;
		pThis->setViewport(*(QRect*)(p1));
		break;
	}
	case 87303: {
		pThis->setViewport(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87304: {
		if(p1==0)return -2;
		pThis->setWindow(*(QRect*)(p1));
		break;
	}
	case 87305: {
		pThis->setWindow(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 87306: {
		if(p1==0)return -2;
		pThis->setWorldMatrix(*(QMatrix*)(p1));
		break;
	}
	case 87307: {
		if(p1==0)return -2;
		pThis->setWorldMatrix(*(QMatrix*)(p1),*(bool*)p2);
		break;
	}
	case 87308: {
		pThis->setWorldMatrixEnabled(*(bool*)p1);
		break;
	}
	case 87309: {
		if(p1==0)return -2;
		pThis->setWorldTransform(*(QTransform*)(p1));
		break;
	}
	case 87310: {
		if(p1==0)return -2;
		pThis->setWorldTransform(*(QTransform*)(p1),*(bool*)p2);
		break;
	}
	case 87311: {
		pThis->shear(*(double*)p1,*(double*)p2);
		break;
	}
	case 87312: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->strokePath(*(QPainterPath*)(p1),*(QPen*)(p2));
		break;
	}
	case 87313: {
		*(bool*)p2 = pThis->testRenderHint(*(QPainter::RenderHint*)p1);
		break;
	}
	case 87314: {
		*(const void**)p1 = new QTransform(pThis->transform());
		break;
	}
	case 87315: {
		if(p1==0)return -2;
		pThis->translate(*(QPoint*)(p1));
		break;
	}
	case 87316: {
		if(p1==0)return -2;
		pThis->translate(*(QPointF*)(p1));
		break;
	}
	case 87317: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 87318: {
		*(bool*)p1 = pThis->viewTransformEnabled();
		break;
	}
	case 87319: {
		*(void**)p1 = new QRect(pThis->viewport());
		break;
	}
	case 87320: {
		*(void**)p1 = new QRect(pThis->window());
		break;
	}
	case 87321: {
		*(const void**)p1 = new QMatrix(pThis->worldMatrix());
		break;
	}
	case 87322: {
		*(bool*)p1 = pThis->worldMatrixEnabled();
		break;
	}
	case 87323: {
		*(const void**)p1 = new QTransform(pThis->worldTransform());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPainter_PixmapFragment
int drv_QPainter_PixmapFragment(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void*,void*,void*,void*,void*)
{
	QPainter::PixmapFragment *pThis = (QPainter::PixmapFragment*)_p;
	switch (funcid) {
	case 88000+1: {
		delete pThis;
		break;
	}
	case 88102: {
		*(void**)_p = new QPainter::PixmapFragment();
		break;
	}
	case 88103: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p7 = new QPainter::PixmapFragment(QPainter::PixmapFragment::create(*(QPointF*)(p1),*(QRectF*)(p2),*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPainterPath
int drv_QPainterPath(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void*,void*,void*,void*,void*)
{
	QPainterPath *pThis = (QPainterPath*)_p;
	switch (funcid) {
	case 89000+1: {
		delete pThis;
		break;
	}
	case 89102: {
		*(void**)_p = new QPainterPath();
		break;
	}
	case 89103: {
		if(p1==0)return -2;
		*(void**)_p = new QPainterPath(*(QPainterPath*)(p1));
		break;
	}
	case 89104: {
		if(p1==0)return -2;
		*(void**)_p = new QPainterPath(*(QPointF*)(p1));
		break;
	}
	case 89105: {
		if(p1==0)return -2;
		pThis->addEllipse(*(QRectF*)(p1));
		break;
	}
	case 89106: {
		if(p1==0)return -2;
		pThis->addEllipse(*(QPointF*)(p1),*(double*)p2,*(double*)p3);
		break;
	}
	case 89107: {
		pThis->addEllipse(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 89108: {
		if(p1==0)return -2;
		pThis->addPath(*(QPainterPath*)(p1));
		break;
	}
	case 89109: {
		if(p1==0)return -2;
		pThis->addPolygon(*(QPolygonF*)(p1));
		break;
	}
	case 89110: {
		if(p1==0)return -2;
		pThis->addRect(*(QRectF*)(p1));
		break;
	}
	case 89111: {
		pThis->addRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 89112: {
		if(p1==0)return -2;
		pThis->addRegion(*(QRegion*)(p1));
		break;
	}
	case 89113: {
		if(p1==0)return -2;
		pThis->addRoundRect(*(QRectF*)(p1),*(int*)p2);
		break;
	}
	case 89114: {
		if(p1==0)return -2;
		pThis->addRoundRect(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 89115: {
		pThis->addRoundRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(int*)p5);
		break;
	}
	case 89116: {
		pThis->addRoundRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 89117: {
		if(p1==0)return -2;
		pThis->addRoundedRect(*(QRectF*)(p1),*(double*)p2,*(double*)p3,*(Qt::SizeMode*)p4);
		break;
	}
	case 89118: {
		pThis->addRoundedRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6,*(Qt::SizeMode*)p7);
		break;
	}
	case 89119: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->addText(*(QPointF*)(p1),*(QFont*)(p2),drvGetStringHead(p3));
		break;
	}
	case 89120: {
		if(p3==0)return -2;
		pThis->addText(*(double*)p1,*(double*)p2,*(QFont*)(p3),drvGetStringHead(p4));
		break;
	}
	case 89121: {
		*(double*)p2 = pThis->angleAtPercent(*(double*)p1);
		break;
	}
	case 89122: {
		if(p1==0)return -2;
		pThis->arcMoveTo(*(QRectF*)(p1),*(double*)p2);
		break;
	}
	case 89123: {
		pThis->arcMoveTo(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5);
		break;
	}
	case 89124: {
		if(p1==0)return -2;
		pThis->arcTo(*(QRectF*)(p1),*(double*)p2,*(double*)p3);
		break;
	}
	case 89125: {
		pThis->arcTo(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6);
		break;
	}
	case 89126: {
		*(void**)p1 = new QRectF(pThis->boundingRect());
		break;
	}
	case 89127: {
		pThis->closeSubpath();
		break;
	}
	case 89128: {
		if(p1==0)return -2;
		pThis->connectPath(*(QPainterPath*)(p1));
		break;
	}
	case 89129: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPainterPath*)(p1));
		break;
	}
	case 89130: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPointF*)(p1));
		break;
	}
	case 89131: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QRectF*)(p1));
		break;
	}
	case 89132: {
		*(void**)p1 = new QRectF(pThis->controlPointRect());
		break;
	}
	case 89133: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->cubicTo(*(QPointF*)(p1),*(QPointF*)(p2),*(QPointF*)(p3));
		break;
	}
	case 89134: {
		pThis->cubicTo(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6);
		break;
	}
	case 89135: {
		*(void**)p1 = new QPointF(pThis->currentPosition());
		break;
	}
	case 89136: {
		*(const void**)p2 = new QPainterPath::Element(pThis->elementAt(*(int*)p1));
		break;
	}
	case 89137: {
		*(int*)p1 = pThis->elementCount();
		break;
	}
	case 89138: {
		*(Qt::FillRule*)p1 = pThis->fillRule();
		break;
	}
	case 89139: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->intersected(*(QPainterPath*)(p1)));
		break;
	}
	case 89140: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QPainterPath*)(p1));
		break;
	}
	case 89141: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QRectF*)(p1));
		break;
	}
	case 89142: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 89143: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 89144: {
		if(p1==0)return -2;
		pThis->lineTo(*(QPointF*)(p1));
		break;
	}
	case 89145: {
		pThis->lineTo(*(double*)p1,*(double*)p2);
		break;
	}
	case 89146: {
		if(p1==0)return -2;
		pThis->moveTo(*(QPointF*)(p1));
		break;
	}
	case 89147: {
		pThis->moveTo(*(double*)p1,*(double*)p2);
		break;
	}
	case 89148: {
		*(double*)p2 = pThis->percentAtLength(*(double*)p1);
		break;
	}
	case 89149: {
		*(void**)p2 = new QPointF(pThis->pointAtPercent(*(double*)p1));
		break;
	}
	case 89150: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->quadTo(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 89151: {
		pThis->quadTo(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 89152: {
		pThis->setElementPositionAt(*(int*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 89153: {
		pThis->setFillRule(*(Qt::FillRule*)p1);
		break;
	}
	case 89154: {
		*(void**)p1 = new QPainterPath(pThis->simplified());
		break;
	}
	case 89155: {
		*(double*)p2 = pThis->slopeAtPercent(*(double*)p1);
		break;
	}
	case 89156: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->subtracted(*(QPainterPath*)(p1)));
		break;
	}
	case 89157: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->subtractedInverted(*(QPainterPath*)(p1)));
		break;
	}
	case 89158: {
		*(void**)p1 = new QPolygonF(pThis->toFillPolygon());
		break;
	}
	case 89159: {
		*(void**)p2 = new QPolygonF(pThis->toFillPolygon(p1==0?QMatrix():*(QMatrix*)(p1)));
		break;
	}
	case 89160: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->toFillPolygon(*(QTransform*)(p1)));
		break;
	}
	case 89161: {
		drvSetListPtr<QPolygonF>(p1,103000,pThis->toFillPolygons());
		break;
	}
	case 89162: {
		drvSetListPtr<QPolygonF>(p2,103000,pThis->toFillPolygons(p1==0?QMatrix():*(QMatrix*)(p1)));
		break;
	}
	case 89163: {
		if(p1==0)return -2;
		drvSetListPtr<QPolygonF>(p2,103000,pThis->toFillPolygons(*(QTransform*)(p1)));
		break;
	}
	case 89164: {
		*(void**)p1 = new QPainterPath(pThis->toReversed());
		break;
	}
	case 89165: {
		drvSetListPtr<QPolygonF>(p1,103000,pThis->toSubpathPolygons());
		break;
	}
	case 89166: {
		drvSetListPtr<QPolygonF>(p2,103000,pThis->toSubpathPolygons(p1==0?QMatrix():*(QMatrix*)(p1)));
		break;
	}
	case 89167: {
		if(p1==0)return -2;
		drvSetListPtr<QPolygonF>(p2,103000,pThis->toSubpathPolygons(*(QTransform*)(p1)));
		break;
	}
	case 89168: {
		if(p1==0)return -2;
		pThis->translate(*(QPointF*)(p1));
		break;
	}
	case 89169: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 89170: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->translated(*(QPointF*)(p1)));
		break;
	}
	case 89171: {
		*(void**)p3 = new QPainterPath(pThis->translated(*(double*)p1,*(double*)p2));
		break;
	}
	case 89172: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->united(*(QPainterPath*)(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPainterPath_Element
int drv_QPainterPath_Element(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPainterPath::Element *pThis = (QPainterPath::Element*)_p;
	switch (funcid) {
	case 90000+1: {
		delete pThis;
		break;
	}
	case 90102: {
		*(void**)_p = new QPainterPath::Element();
		break;
	}
	case 90103: {
		*(bool*)p1 = pThis->isCurveTo();
		break;
	}
	case 90104: {
		*(bool*)p1 = pThis->isLineTo();
		break;
	}
	case 90105: {
		*(bool*)p1 = pThis->isMoveTo();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPainterPathStroker
int drv_QPainterPathStroker(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPainterPathStroker *pThis = (QPainterPathStroker*)_p;
	switch (funcid) {
	case 91000+1: {
		delete pThis;
		break;
	}
	case 91102: {
		*(void**)_p = new QPainterPathStroker();
		break;
	}
	case 91103: {
		*(Qt::PenCapStyle*)p1 = pThis->capStyle();
		break;
	}
	case 91104: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->createStroke(*(QPainterPath*)(p1)));
		break;
	}
	case 91105: {
		*(double*)p1 = pThis->curveThreshold();
		break;
	}
	case 91106: {
		*(double*)p1 = pThis->dashOffset();
		break;
	}
	case 91107: {
		drvSetVectorDouble(p1,pThis->dashPattern());
		break;
	}
	case 91108: {
		*(Qt::PenJoinStyle*)p1 = pThis->joinStyle();
		break;
	}
	case 91109: {
		*(double*)p1 = pThis->miterLimit();
		break;
	}
	case 91110: {
		pThis->setCapStyle(*(Qt::PenCapStyle*)p1);
		break;
	}
	case 91111: {
		pThis->setCurveThreshold(*(double*)p1);
		break;
	}
	case 91112: {
		pThis->setDashOffset(*(double*)p1);
		break;
	}
	case 91113: {
		pThis->setDashPattern(drvGetDoubleVectorHead(p1));
		break;
	}
	case 91114: {
		pThis->setDashPattern(*(Qt::PenStyle*)p1);
		break;
	}
	case 91115: {
		pThis->setJoinStyle(*(Qt::PenJoinStyle*)p1);
		break;
	}
	case 91116: {
		pThis->setMiterLimit(*(double*)p1);
		break;
	}
	case 91117: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 91118: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPalette
int drv_QPalette(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void*,void*)
{
	QPalette *pThis = (QPalette*)_p;
	switch (funcid) {
	case 92000+1: {
		delete pThis;
		break;
	}
	case 92102: {
		*(void**)_p = new QPalette();
		break;
	}
	case 92103: {
		if(p1==0)return -2;
		*(void**)_p = new QPalette(*(QColor*)(p1));
		break;
	}
	case 92104: {
		if(p1==0)return -2;
		*(void**)_p = new QPalette(*(QPalette*)(p1));
		break;
	}
	case 92105: {
		*(void**)_p = new QPalette(*(Qt::GlobalColor*)p1);
		break;
	}
	case 92106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QPalette(*(QColor*)(p1),*(QColor*)(p2));
		break;
	}
	case 92107: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
	if(p4==0)return -2;
	if(p5==0)return -2;
	if(p6==0)return -2;
	if(p7==0)return -2;
		*(void**)_p = new QPalette(*(QColor*)(p1),*(QColor*)(p2),*(QColor*)(p3),*(QColor*)(p4),*(QColor*)(p5),*(QColor*)(p6),*(QColor*)(p7));
		break;
	}
	case 92108: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
	if(p4==0)return -2;
	if(p5==0)return -2;
	if(p6==0)return -2;
	if(p7==0)return -2;
	if(p8==0)return -2;
	if(p9==0)return -2;
		*(void**)_p = new QPalette(*(QBrush*)(p1),*(QBrush*)(p2),*(QBrush*)(p3),*(QBrush*)(p4),*(QBrush*)(p5),*(QBrush*)(p6),*(QBrush*)(p7),*(QBrush*)(p8),*(QBrush*)(p9));
		break;
	}
	case 92109: {
		*(const void**)p1 = new QBrush(pThis->alternateBase());
		break;
	}
	case 92110: {
		*(const void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 92111: {
		*(const void**)p1 = new QBrush(pThis->base());
		break;
	}
	case 92112: {
		*(const void**)p1 = new QBrush(pThis->brightText());
		break;
	}
	case 92113: {
		*(const void**)p2 = new QBrush(pThis->brush(*(QPalette::ColorRole*)p1));
		break;
	}
	case 92114: {
		*(const void**)p3 = new QBrush(pThis->brush(*(QPalette::ColorGroup*)p1,*(QPalette::ColorRole*)p2));
		break;
	}
	case 92115: {
		*(const void**)p1 = new QBrush(pThis->button());
		break;
	}
	case 92116: {
		*(const void**)p1 = new QBrush(pThis->buttonText());
		break;
	}
	case 92117: {
		*(qint64*)p1 = pThis->cacheKey();
		break;
	}
	case 92118: {
		*(const void**)p2 = new QColor(pThis->color(*(QPalette::ColorRole*)p1));
		break;
	}
	case 92119: {
		*(const void**)p3 = new QColor(pThis->color(*(QPalette::ColorGroup*)p1,*(QPalette::ColorRole*)p2));
		break;
	}
	case 92120: {
		*(QPalette::ColorGroup*)p1 = pThis->currentColorGroup();
		break;
	}
	case 92121: {
		*(const void**)p1 = new QBrush(pThis->dark());
		break;
	}
	case 92122: {
		*(const void**)p1 = new QBrush(pThis->foreground());
		break;
	}
	case 92123: {
		*(const void**)p1 = new QBrush(pThis->highlight());
		break;
	}
	case 92124: {
		*(const void**)p1 = new QBrush(pThis->highlightedText());
		break;
	}
	case 92125: {
		*(bool*)p3 = pThis->isBrushSet(*(QPalette::ColorGroup*)p1,*(QPalette::ColorRole*)p2);
		break;
	}
	case 92126: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isCopyOf(*(QPalette*)(p1));
		break;
	}
	case 92127: {
		*(bool*)p3 = pThis->isEqual(*(QPalette::ColorGroup*)p1,*(QPalette::ColorGroup*)p2);
		break;
	}
	case 92128: {
		*(const void**)p1 = new QBrush(pThis->light());
		break;
	}
	case 92129: {
		*(const void**)p1 = new QBrush(pThis->link());
		break;
	}
	case 92130: {
		*(const void**)p1 = new QBrush(pThis->linkVisited());
		break;
	}
	case 92131: {
		*(const void**)p1 = new QBrush(pThis->mid());
		break;
	}
	case 92132: {
		*(const void**)p1 = new QBrush(pThis->midlight());
		break;
	}
	case 92133: {
		*(unsigned int*)p1 = pThis->resolve();
		break;
	}
	case 92134: {
		if(p1==0)return -2;
		*(void**)p2 = new QPalette(pThis->resolve(*(QPalette*)(p1)));
		break;
	}
	case 92135: {
		pThis->resolve(*(unsigned int*)p1);
		break;
	}
	case 92136: {
		if(p2==0)return -2;
		pThis->setBrush(*(QPalette::ColorRole*)p1,*(QBrush*)(p2));
		break;
	}
	case 92137: {
		if(p3==0)return -2;
		pThis->setBrush(*(QPalette::ColorGroup*)p1,*(QPalette::ColorRole*)p2,*(QBrush*)(p3));
		break;
	}
	case 92138: {
		if(p2==0)return -2;
		pThis->setColor(*(QPalette::ColorRole*)p1,*(QColor*)(p2));
		break;
	}
	case 92139: {
		if(p3==0)return -2;
		pThis->setColor(*(QPalette::ColorGroup*)p1,*(QPalette::ColorRole*)p2,*(QColor*)(p3));
		break;
	}
	case 92140: {
		if(p2==0)return -2;
	if(p3==0)return -2;
	if(p4==0)return -2;
	if(p5==0)return -2;
	if(p6==0)return -2;
	if(p7==0)return -2;
	if(p8==0)return -2;
	if(p9==0)return -2;
	if(p10==0)return -2;
		pThis->setColorGroup(*(QPalette::ColorGroup*)p1,*(QBrush*)(p2),*(QBrush*)(p3),*(QBrush*)(p4),*(QBrush*)(p5),*(QBrush*)(p6),*(QBrush*)(p7),*(QBrush*)(p8),*(QBrush*)(p9),*(QBrush*)(p10));
		break;
	}
	case 92141: {
		pThis->setCurrentColorGroup(*(QPalette::ColorGroup*)p1);
		break;
	}
	case 92142: {
		*(const void**)p1 = new QBrush(pThis->shadow());
		break;
	}
	case 92143: {
		*(const void**)p1 = new QBrush(pThis->text());
		break;
	}
	case 92144: {
		*(const void**)p1 = new QBrush(pThis->toolTipBase());
		break;
	}
	case 92145: {
		*(const void**)p1 = new QBrush(pThis->toolTipText());
		break;
	}
	case 92146: {
		*(const void**)p1 = new QBrush(pThis->window());
		break;
	}
	case 92147: {
		*(const void**)p1 = new QBrush(pThis->windowText());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPen
int drv_QPen(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QPen *pThis = (QPen*)_p;
	switch (funcid) {
	case 93000+1: {
		delete pThis;
		break;
	}
	case 93102: {
		*(void**)_p = new QPen();
		break;
	}
	case 93103: {
		if(p1==0)return -2;
		*(void**)_p = new QPen(*(QColor*)(p1));
		break;
	}
	case 93104: {
		if(p1==0)return -2;
		*(void**)_p = new QPen(*(QPen*)(p1));
		break;
	}
	case 93105: {
		*(void**)_p = new QPen(*(Qt::PenStyle*)p1);
		break;
	}
	case 93106: {
		if(p1==0)return -2;
		*(void**)_p = new QPen(*(QBrush*)(p1),*(double*)p2,*(Qt::PenStyle*)p3,*(Qt::PenCapStyle*)p4,*(Qt::PenJoinStyle*)p5);
		break;
	}
	case 93107: {
		*(void**)p1 = new QBrush(pThis->brush());
		break;
	}
	case 93108: {
		*(Qt::PenCapStyle*)p1 = pThis->capStyle();
		break;
	}
	case 93109: {
		*(void**)p1 = new QColor(pThis->color());
		break;
	}
	case 93110: {
		*(double*)p1 = pThis->dashOffset();
		break;
	}
	case 93111: {
		drvSetVectorDouble(p1,pThis->dashPattern());
		break;
	}
	case 93112: {
		*(bool*)p1 = pThis->isCosmetic();
		break;
	}
	case 93113: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 93114: {
		*(bool*)p1 = pThis->isSolid();
		break;
	}
	case 93115: {
		*(Qt::PenJoinStyle*)p1 = pThis->joinStyle();
		break;
	}
	case 93116: {
		*(double*)p1 = pThis->miterLimit();
		break;
	}
	case 93117: {
		if(p1==0)return -2;
		pThis->setBrush(*(QBrush*)(p1));
		break;
	}
	case 93118: {
		pThis->setCapStyle(*(Qt::PenCapStyle*)p1);
		break;
	}
	case 93119: {
		if(p1==0)return -2;
		pThis->setColor(*(QColor*)(p1));
		break;
	}
	case 93120: {
		pThis->setCosmetic(*(bool*)p1);
		break;
	}
	case 93121: {
		pThis->setDashOffset(*(double*)p1);
		break;
	}
	case 93122: {
		pThis->setDashPattern(drvGetDoubleVectorHead(p1));
		break;
	}
	case 93123: {
		pThis->setJoinStyle(*(Qt::PenJoinStyle*)p1);
		break;
	}
	case 93124: {
		pThis->setMiterLimit(*(double*)p1);
		break;
	}
	case 93125: {
		pThis->setStyle(*(Qt::PenStyle*)p1);
		break;
	}
	case 93126: {
		pThis->setWidth(*(int*)p1);
		break;
	}
	case 93127: {
		pThis->setWidthF(*(double*)p1);
		break;
	}
	case 93128: {
		*(Qt::PenStyle*)p1 = pThis->style();
		break;
	}
	case 93129: {
		*(int*)p1 = pThis->width();
		break;
	}
	case 93130: {
		*(double*)p1 = pThis->widthF();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPersistentModelIndex
int drv_QPersistentModelIndex(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPersistentModelIndex *pThis = (QPersistentModelIndex*)_p;
	switch (funcid) {
	case 94000+1: {
		delete pThis;
		break;
	}
	case 94102: {
		*(void**)_p = new QPersistentModelIndex();
		break;
	}
	case 94103: {
		if(p1==0)return -2;
		*(void**)_p = new QPersistentModelIndex(*(QModelIndex*)(p1));
		break;
	}
	case 94104: {
		if(p1==0)return -2;
		*(void**)_p = new QPersistentModelIndex(*(QPersistentModelIndex*)(p1));
		break;
	}
	case 94105: {
		*(void**)p3 = new QModelIndex(pThis->child(*(int*)p1,*(int*)p2));
		break;
	}
	case 94106: {
		*(int*)p1 = pThis->column();
		break;
	}
	case 94107: {
		*(void**)p1 = new QVariant(pThis->data());
		break;
	}
	case 94108: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 94109: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 94110: {
		*(qint64*)p1 = pThis->internalId();
		break;
	}
	case 94111: {
		*(void**)p1 = pThis->internalPointer();
		break;
	}
	case 94112: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 94113: {
		*(const void**)p1 = pThis->model();
		break;
	}
	case 94114: {
		*(void**)p1 = new QModelIndex(pThis->parent());
		break;
	}
	case 94115: {
		*(int*)p1 = pThis->row();
		break;
	}
	case 94116: {
		*(void**)p3 = new QModelIndex(pThis->sibling(*(int*)p1,*(int*)p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPicture
int drv_QPicture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPicture *pThis = (QPicture*)_p;
	switch (funcid) {
	case 95000+1: {
		delete pThis;
		break;
	}
	case 95102: {
		*(void**)_p = new QPicture();
		break;
	}
	case 95103: {
		if(p1==0)return -2;
		*(void**)_p = new QPicture(*(QPicture*)(p1));
		break;
	}
	case 95104: {
		*(void**)_p = new QPicture(*(int*)p1);
		break;
	}
	case 95105: {
		*(void**)p1 = new QRect(pThis->boundingRect());
		break;
	}
	case 95106: {
		drvSetString(p1,pThis->data());
		break;
	}
	case 95107: {
		pThis->detach();
		break;
	}
	case 95108: {
		drvSetStringArray(p1,QPicture::inputFormatList());
		break;
	}
	case 95109: {
		drvSetBytesArray(p1,QPicture::inputFormats());
		break;
	}
	case 95110: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 95111: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 95112: {
		*(bool*)p2 = pThis->load((QIODevice*)(p1));
		break;
	}
	case 95113: {
		*(bool*)p2 = pThis->load(drvGetStringHead(p1));
		break;
	}
	case 95114: {
		*(bool*)p3 = pThis->load((QIODevice*)(p1),drvGet_const_char(p2));
		break;
	}
	case 95115: {
		*(bool*)p3 = pThis->load(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 95116: {
		drvSetStringArray(p1,QPicture::outputFormatList());
		break;
	}
	case 95117: {
		drvSetBytesArray(p1,QPicture::outputFormats());
		break;
	}
	case 95118: {
		drvSetString(p2,QPicture::pictureFormat(drvGetStringHead(p1)));
		break;
	}
	case 95119: {
		*(bool*)p2 = pThis->play((QPainter*)(p1));
		break;
	}
	case 95120: {
		*(bool*)p2 = pThis->save((QIODevice*)(p1));
		break;
	}
	case 95121: {
		*(bool*)p2 = pThis->save(drvGetStringHead(p1));
		break;
	}
	case 95122: {
		*(bool*)p3 = pThis->save((QIODevice*)(p1),drvGet_const_char(p2));
		break;
	}
	case 95123: {
		*(bool*)p3 = pThis->save(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 95124: {
		if(p1==0)return -2;
		pThis->setBoundingRect(*(QRect*)(p1));
		break;
	}
	case 95125: {
		pThis->setData(drvGet_const_char(p1),*(unsigned int*)p2);
		break;
	}
	case 95126: {
		*(unsigned int*)p1 = pThis->size();
		break;
	}
	default:
		return drv_QPaintDevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPictureIO
int drv_QPictureIO(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPictureIO *pThis = (QPictureIO*)_p;
	switch (funcid) {
	case 96000+1: {
		delete pThis;
		break;
	}
	case 96102: {
		*(void**)_p = new QPictureIO();
		break;
	}
	case 96103: {
		*(void**)_p = new QPictureIO((QIODevice*)(p1),drvGet_const_char(p2));
		break;
	}
	case 96104: {
		*(void**)_p = new QPictureIO(drvGetStringHead(p1),drvGet_const_char(p2));
		break;
	}
	case 96105: {
		drvSetString(p1,pThis->description());
		break;
	}
	case 96106: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 96107: {
		drvSetString(p1,pThis->format());
		break;
	}
	case 96108: {
		*(float*)p1 = pThis->gamma();
		break;
	}
	case 96109: {
		drvSetBytesArray(p1,QPictureIO::inputFormats());
		break;
	}
	case 96110: {
		*(void**)p1 = pThis->ioDevice();
		break;
	}
	case 96111: {
		drvSetBytesArray(p1,QPictureIO::outputFormats());
		break;
	}
	case 96112: {
		drvSetString(p1,pThis->parameters());
		break;
	}
	case 96113: {
		*(const void**)p1 = new QPicture(pThis->picture());
		break;
	}
	case 96114: {
		drvSetByteArray(p2,QPictureIO::pictureFormat((QIODevice*)(p1)));
		break;
	}
	case 96115: {
		drvSetByteArray(p2,QPictureIO::pictureFormat(drvGetStringHead(p1)));
		break;
	}
	case 96116: {
		*(int*)p1 = pThis->quality();
		break;
	}
	case 96117: {
		*(bool*)p1 = pThis->read();
		break;
	}
	case 96118: {
		pThis->setDescription(drvGetStringHead(p1));
		break;
	}
	case 96119: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 96120: {
		pThis->setFormat(drvGet_const_char(p1));
		break;
	}
	case 96121: {
		pThis->setGamma(*(float*)p1);
		break;
	}
	case 96122: {
		pThis->setIODevice((QIODevice*)(p1));
		break;
	}
	case 96123: {
		pThis->setParameters(drvGet_const_char(p1));
		break;
	}
	case 96124: {
		if(p1==0)return -2;
		pThis->setPicture(*(QPicture*)(p1));
		break;
	}
	case 96125: {
		pThis->setQuality(*(int*)p1);
		break;
	}
	case 96126: {
		pThis->setStatus(*(int*)p1);
		break;
	}
	case 96127: {
		*(int*)p1 = pThis->status();
		break;
	}
	case 96128: {
		*(bool*)p1 = pThis->write();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPixmap
int drv_QPixmap(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPixmap *pThis = (QPixmap*)_p;
	switch (funcid) {
	case 97000+1: {
		delete pThis;
		break;
	}
	case 97102: {
		*(void**)_p = new QPixmap();
		break;
	}
	case 97103: {
		if(p1==0)return -2;
		*(void**)_p = new QPixmap(*(QPixmap*)(p1));
		break;
	}
	case 97104: {
		if(p1==0)return -2;
		*(void**)_p = new QPixmap(*(QSize*)(p1));
		break;
	}
	case 97105: {
		*(void**)_p = new QPixmap((const char **)(p1));
		break;
	}
	case 97106: {
		*(void**)_p = new QPixmap(*(int*)p1,*(int*)p2);
		break;
	}
	case 97107: {
		*(void**)_p = new QPixmap(drvGetStringHead(p1),drvGet_const_char(p2),*(QFlags<Qt::ImageConversionFlag>*)p3);
		break;
	}
	case 97108: {
		*(qint64*)p1 = pThis->cacheKey();
		break;
	}
	case 97109: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->convertFromImage(*(QImage*)(p1));
		break;
	}
	case 97110: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->convertFromImage(*(QImage*)(p1),*(QFlags<Qt::ImageConversionFlag>*)p2);
		break;
	}
	case 97111: {
		*(void**)p1 = new QPixmap(pThis->copy());
		break;
	}
	case 97112: {
		*(void**)p2 = new QPixmap(pThis->copy(p1==0?QRect():*(QRect*)(p1)));
		break;
	}
	case 97113: {
		*(void**)p5 = new QPixmap(pThis->copy(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 97114: {
		*(void**)p2 = new QBitmap(pThis->createHeuristicMask(*(bool*)p1));
		break;
	}
	case 97115: {
		if(p1==0)return -2;
		*(void**)p2 = new QBitmap(pThis->createMaskFromColor(*(QColor*)(p1)));
		break;
	}
	case 97116: {
		if(p1==0)return -2;
		*(void**)p3 = new QBitmap(pThis->createMaskFromColor(*(QColor*)(p1),*(Qt::MaskMode*)p2));
		break;
	}
	case 97117: {
		*(int*)p1 = QPixmap::defaultDepth();
		break;
	}
	case 97118: {
		*(int*)p1 = pThis->depth();
		break;
	}
	case 97119: {
		pThis->detach();
		break;
	}
	case 97120: {
		pThis->fill();
		break;
	}
	case 97121: {
		pThis->fill(p1==0?QColor():*(QColor*)(p1));
		break;
	}
	case 97122: {
		if(p2==0)return -2;
		pThis->fill((QWidget*)(p1),*(QPoint*)(p2));
		break;
	}
	case 97123: {
		pThis->fill((QWidget*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 97124: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmap(QPixmap::fromImage(*(QImage*)(p1)));
		break;
	}
	case 97125: {
		if(p1==0)return -2;
		*(void**)p3 = new QPixmap(QPixmap::fromImage(*(QImage*)(p1),*(QFlags<Qt::ImageConversionFlag>*)p2));
		break;
	}
	case 97126: {
		*(void**)p2 = new QPixmap(QPixmap::fromImageReader((QImageReader*)(p1)));
		break;
	}
	case 97127: {
		*(void**)p3 = new QPixmap(QPixmap::fromImageReader((QImageReader*)(p1),*(QFlags<Qt::ImageConversionFlag>*)p2));
		break;
	}
	case 97128: {
		*(void**)p2 = new QPixmap(QPixmap::grabWidget((QWidget*)(p1)));
		break;
	}
	case 97129: {
		if(p2==0)return -2;
		*(void**)p3 = new QPixmap(QPixmap::grabWidget((QWidget*)(p1),*(QRect*)(p2)));
		break;
	}
	case 97130: {
		*(void**)p6 = new QPixmap(QPixmap::grabWidget((QWidget*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5));
		break;
	}
	case 97131: {
		*(bool*)p1 = pThis->hasAlpha();
		break;
	}
	case 97132: {
		*(bool*)p1 = pThis->hasAlphaChannel();
		break;
	}
	case 97133: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 97134: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 97135: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 97136: {
		*(bool*)p1 = pThis->isQBitmap();
		break;
	}
	case 97137: {
		*(bool*)p2 = pThis->load(drvGetStringHead(p1));
		break;
	}
	case 97138: {
		*(bool*)p4 = pThis->load(drvGetStringHead(p1),drvGet_const_char(p2),*(QFlags<Qt::ImageConversionFlag>*)p3);
		break;
	}
	case 97139: {
		*(bool*)p2 = pThis->loadFromData(drvGetByteArrayHead(p1));
		break;
	}
	case 97140: {
		*(bool*)p4 = pThis->loadFromData(drvGetByteArrayHead(p1),drvGet_const_char(p2),*(QFlags<Qt::ImageConversionFlag>*)p3);
		break;
	}
	case 97141: {
		*(bool*)p5 = pThis->loadFromData(*(unsigned char const**)p1,*(unsigned int*)p2,drvGet_const_char(p3),*(QFlags<Qt::ImageConversionFlag>*)p4);
		break;
	}
	case 97142: {
		*(void**)p1 = new QBitmap(pThis->mask());
		break;
	}
	case 97143: {
		*(void**)p1 = new QRect(pThis->rect());
		break;
	}
	case 97144: {
		*(bool*)p2 = pThis->save((QIODevice*)(p1));
		break;
	}
	case 97145: {
		*(bool*)p2 = pThis->save(drvGetStringHead(p1));
		break;
	}
	case 97146: {
		*(bool*)p4 = pThis->save((QIODevice*)(p1),drvGet_const_char(p2),*(int*)p3);
		break;
	}
	case 97147: {
		*(bool*)p4 = pThis->save(drvGetStringHead(p1),drvGet_const_char(p2),*(int*)p3);
		break;
	}
	case 97148: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmap(pThis->scaled(*(QSize*)(p1)));
		break;
	}
	case 97149: {
		if(p1==0)return -2;
		*(void**)p4 = new QPixmap(pThis->scaled(*(QSize*)(p1),*(Qt::AspectRatioMode*)p2,*(Qt::TransformationMode*)p3));
		break;
	}
	case 97150: {
		*(void**)p5 = new QPixmap(pThis->scaled(*(int*)p1,*(int*)p2,*(Qt::AspectRatioMode*)p3,*(Qt::TransformationMode*)p4));
		break;
	}
	case 97151: {
		*(void**)p2 = new QPixmap(pThis->scaledToHeight(*(int*)p1));
		break;
	}
	case 97152: {
		*(void**)p3 = new QPixmap(pThis->scaledToHeight(*(int*)p1,*(Qt::TransformationMode*)p2));
		break;
	}
	case 97153: {
		*(void**)p2 = new QPixmap(pThis->scaledToWidth(*(int*)p1));
		break;
	}
	case 97154: {
		*(void**)p3 = new QPixmap(pThis->scaledToWidth(*(int*)p1,*(Qt::TransformationMode*)p2));
		break;
	}
	case 97155: {
		if(p3==0)return -2;
		pThis->scroll(*(int*)p1,*(int*)p2,*(QRect*)(p3),(QRegion*)(p4));
		break;
	}
	case 97156: {
		pThis->scroll(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(int*)p6,(QRegion*)(p7));
		break;
	}
	case 97157: {
		if(p1==0)return -2;
		pThis->setMask(*(QBitmap*)(p1));
		break;
	}
	case 97158: {
		*(void**)p1 = new QSize(pThis->size());
		break;
	}
	case 97159: {
		*(void**)p1 = new QImage(pThis->toImage());
		break;
	}
	case 97160: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmap(pThis->transformed(*(QMatrix*)(p1)));
		break;
	}
	case 97161: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmap(pThis->transformed(*(QTransform*)(p1)));
		break;
	}
	case 97162: {
		if(p1==0)return -2;
		*(void**)p3 = new QPixmap(pThis->transformed(*(QMatrix*)(p1),*(Qt::TransformationMode*)p2));
		break;
	}
	case 97163: {
		if(p1==0)return -2;
		*(void**)p3 = new QPixmap(pThis->transformed(*(QTransform*)(p1),*(Qt::TransformationMode*)p2));
		break;
	}
	case 97164: {
		if(p1==0)return -2;
		*(void**)p4 = new QMatrix(QPixmap::trueMatrix(*(QMatrix*)(p1),*(int*)p2,*(int*)p3));
		break;
	}
	case 97165: {
		if(p1==0)return -2;
		*(void**)p4 = new QTransform(QPixmap::trueMatrix(*(QTransform*)(p1),*(int*)p2,*(int*)p3));
		break;
	}
	case 97166: {
		*(int*)p1 = pThis->width();
		break;
	}
	default:
		return drv_QPaintDevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPixmapCache
int drv_QPixmapCache(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPixmapCache *pThis = (QPixmapCache*)_p;
	switch (funcid) {
	case 98000+1: {
		delete pThis;
		break;
	}
	case 98102: {
		*(void**)_p = new QPixmapCache();
		break;
	}
	case 98103: {
		*(int*)p1 = QPixmapCache::cacheLimit();
		break;
	}
	case 98104: {
		QPixmapCache::clear();
		break;
	}
	case 98105: {
		*(void**)p2 = QPixmapCache::find(drvGetStringHead(p1));
		break;
	}
	case 98106: {
		if(p1==0)return -2;
		*(bool*)p3 = QPixmapCache::find(*(QPixmapCache::Key*)(p1),(QPixmap*)(p2));
		break;
	}
	case 98107: {
		if(p2==0)return -2;
		*(bool*)p3 = QPixmapCache::find(drvGetStringHead(p1),*(QPixmap*)(p2));
		break;
	}
	case 98108: {
		if(p1==0)return -2;
		*(void**)p2 = new QPixmapCache::Key(QPixmapCache::insert(*(QPixmap*)(p1)));
		break;
	}
	case 98109: {
		if(p2==0)return -2;
		*(bool*)p3 = QPixmapCache::insert(drvGetStringHead(p1),*(QPixmap*)(p2));
		break;
	}
	case 98110: {
		if(p1==0)return -2;
		QPixmapCache::remove(*(QPixmapCache::Key*)(p1));
		break;
	}
	case 98111: {
		QPixmapCache::remove(drvGetStringHead(p1));
		break;
	}
	case 98112: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(bool*)p3 = QPixmapCache::replace(*(QPixmapCache::Key*)(p1),*(QPixmap*)(p2));
		break;
	}
	case 98113: {
		QPixmapCache::setCacheLimit(*(int*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPixmapCache_Key
int drv_QPixmapCache_Key(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPixmapCache::Key *pThis = (QPixmapCache::Key*)_p;
	switch (funcid) {
	case 99000+1: {
		delete pThis;
		break;
	}
	case 99102: {
		*(void**)_p = new QPixmapCache::Key();
		break;
	}
	case 99103: {
		if(p1==0)return -2;
		*(void**)_p = new QPixmapCache::Key(*(QPixmapCache::Key*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPoint
int drv_QPoint(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPoint *pThis = (QPoint*)_p;
	switch (funcid) {
	case 100000+1: {
		delete pThis;
		break;
	}
	case 100102: {
		*(void**)_p = new QPoint();
		break;
	}
	case 100103: {
		*(void**)_p = new QPoint(*(int*)p1,*(int*)p2);
		break;
	}
	case 100104: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 100105: {
		*(int*)p1 = pThis->manhattanLength();
		break;
	}
	case 100106: {
		*(int**)p1 = &pThis->rx();
		break;
	}
	case 100107: {
		*(int**)p1 = &pThis->ry();
		break;
	}
	case 100108: {
		pThis->setX(*(int*)p1);
		break;
	}
	case 100109: {
		pThis->setY(*(int*)p1);
		break;
	}
	case 100110: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 100111: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPointF
int drv_QPointF(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPointF *pThis = (QPointF*)_p;
	switch (funcid) {
	case 101000+1: {
		delete pThis;
		break;
	}
	case 101102: {
		*(void**)_p = new QPointF();
		break;
	}
	case 101103: {
		if(p1==0)return -2;
		*(void**)_p = new QPointF(*(QPoint*)(p1));
		break;
	}
	case 101104: {
		*(void**)_p = new QPointF(*(double*)p1,*(double*)p2);
		break;
	}
	case 101105: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 101106: {
		*(double*)p1 = pThis->manhattanLength();
		break;
	}
	case 101107: {
		*(double**)p1 = &pThis->rx();
		break;
	}
	case 101108: {
		*(double**)p1 = &pThis->ry();
		break;
	}
	case 101109: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 101110: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 101111: {
		*(void**)p1 = new QPoint(pThis->toPoint());
		break;
	}
	case 101112: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 101113: {
		*(double*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPolygon
int drv_QPolygon(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPolygon *pThis = (QPolygon*)_p;
	switch (funcid) {
	case 102000+1: {
		delete pThis;
		break;
	}
	case 102102: {
		*(void**)_p = new QPolygon();
		break;
	}
	case 102103: {
		if(p1==0)return -2;
		*(void**)_p = new QPolygon(*(QPolygon*)(p1));
		break;
	}
	case 102104: {
		*(void**)_p = new QPolygon(drvGetVectorPtr<QPoint>(p1));
		break;
	}
	case 102105: {
		*(void**)_p = new QPolygon(*(int*)p1);
		break;
	}
	case 102106: {
		if(p1==0)return -2;
		*(void**)_p = new QPolygon(*(QRect*)(p1),*(bool*)p2);
		break;
	}
	case 102107: {
		*(void**)_p = new QPolygon(*(int*)p1,*(int const**)p2);
		break;
	}
	case 102108: {
		*(void**)p1 = new QRect(pThis->boundingRect());
		break;
	}
	case 102109: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->containsPoint(*(QPoint*)(p1),*(Qt::FillRule*)p2);
		break;
	}
	case 102110: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->intersected(*(QPolygon*)(p1)));
		break;
	}
	case 102111: {
		*(void**)p2 = new QPoint(pThis->point(*(int*)p1));
		break;
	}
	case 102112: {
		pThis->point(*(int*)p1,*(int**)p2,*(int**)p3);
		break;
	}
	case 102113: {
		if(p2==0)return -2;
		pThis->setPoint(*(int*)p1,*(QPoint*)(p2));
		break;
	}
	case 102114: {
		pThis->setPoint(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 102115: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->subtracted(*(QPolygon*)(p1)));
		break;
	}
	case 102116: {
		if(p1==0)return -2;
		pThis->translate(*(QPoint*)(p1));
		break;
	}
	case 102117: {
		pThis->translate(*(int*)p1,*(int*)p2);
		break;
	}
	case 102118: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->translated(*(QPoint*)(p1)));
		break;
	}
	case 102119: {
		*(void**)p3 = new QPolygon(pThis->translated(*(int*)p1,*(int*)p2));
		break;
	}
	case 102120: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->united(*(QPolygon*)(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPolygonF
int drv_QPolygonF(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPolygonF *pThis = (QPolygonF*)_p;
	switch (funcid) {
	case 103000+1: {
		delete pThis;
		break;
	}
	case 103102: {
		*(void**)_p = new QPolygonF();
		break;
	}
	case 103103: {
		if(p1==0)return -2;
		*(void**)_p = new QPolygonF(*(QPolygon*)(p1));
		break;
	}
	case 103104: {
		if(p1==0)return -2;
		*(void**)_p = new QPolygonF(*(QPolygonF*)(p1));
		break;
	}
	case 103105: {
		if(p1==0)return -2;
		*(void**)_p = new QPolygonF(*(QRectF*)(p1));
		break;
	}
	case 103106: {
		*(void**)_p = new QPolygonF(drvGetVectorPtr<QPointF>(p1));
		break;
	}
	case 103107: {
		*(void**)_p = new QPolygonF(*(int*)p1);
		break;
	}
	case 103108: {
		*(void**)p1 = new QRectF(pThis->boundingRect());
		break;
	}
	case 103109: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->containsPoint(*(QPointF*)(p1),*(Qt::FillRule*)p2);
		break;
	}
	case 103110: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->intersected(*(QPolygonF*)(p1)));
		break;
	}
	case 103111: {
		*(bool*)p1 = pThis->isClosed();
		break;
	}
	case 103112: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->subtracted(*(QPolygonF*)(p1)));
		break;
	}
	case 103113: {
		*(void**)p1 = new QPolygon(pThis->toPolygon());
		break;
	}
	case 103114: {
		if(p1==0)return -2;
		pThis->translate(*(QPointF*)(p1));
		break;
	}
	case 103115: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 103116: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->translated(*(QPointF*)(p1)));
		break;
	}
	case 103117: {
		*(void**)p3 = new QPolygonF(pThis->translated(*(double*)p1,*(double*)p2));
		break;
	}
	case 103118: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->united(*(QPolygonF*)(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPrintEngine
int drv_QPrintEngine(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPrintEngine *pThis = (QPrintEngine*)_p;
	switch (funcid) {
	case 104000+1: {
		delete pThis;
		break;
	}
	case 104102: {
		*(bool*)p1 = pThis->abort();
		break;
	}
	case 104103: {
		*(int*)p2 = pThis->metric(*(QPaintDevice::PaintDeviceMetric*)p1);
		break;
	}
	case 104104: {
		*(bool*)p1 = pThis->newPage();
		break;
	}
	case 104105: {
		*(QPrinter::PrinterState*)p1 = pThis->printerState();
		break;
	}
	case 104106: {
		*(void**)p2 = new QVariant(pThis->property(*(QPrintEngine::PrintEnginePropertyKey*)p1));
		break;
	}
	case 104107: {
		if(p2==0)return -2;
		pThis->setProperty(*(QPrintEngine::PrintEnginePropertyKey*)p1,*(QVariant*)(p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QPrinter
int drv_QPrinter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPrinter *pThis = (QPrinter*)_p;
	switch (funcid) {
	case 105000+1: {
		delete pThis;
		break;
	}
	case 105102: {
		*(void**)_p = new QPrinter();
		break;
	}
	case 105103: {
		*(void**)_p = new QPrinter(*(QPrinter::PrinterMode*)p1);
		break;
	}
	case 105104: {
		if(p1==0)return -2;
		*(void**)_p = new QPrinter(*(QPrinterInfo*)(p1),*(QPrinter::PrinterMode*)p2);
		break;
	}
	case 105105: {
		*(bool*)p1 = pThis->abort();
		break;
	}
	case 105106: {
		*(int*)p1 = pThis->actualNumCopies();
		break;
	}
	case 105107: {
		*(bool*)p1 = pThis->collateCopies();
		break;
	}
	case 105108: {
		*(QPrinter::ColorMode*)p1 = pThis->colorMode();
		break;
	}
	case 105109: {
		*(int*)p1 = pThis->copyCount();
		break;
	}
	case 105110: {
		drvSetString(p1,pThis->creator());
		break;
	}
	case 105111: {
		drvSetString(p1,pThis->docName());
		break;
	}
	case 105112: {
		*(bool*)p1 = pThis->doubleSidedPrinting();
		break;
	}
	case 105113: {
		*(QPrinter::DuplexMode*)p1 = pThis->duplex();
		break;
	}
	case 105114: {
		*(bool*)p1 = pThis->fontEmbeddingEnabled();
		break;
	}
	case 105115: {
		*(int*)p1 = pThis->fromPage();
		break;
	}
	case 105116: {
		*(bool*)p1 = pThis->fullPage();
		break;
	}
	case 105117: {
		pThis->getPageMargins(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4,*(QPrinter::Unit*)p5);
		break;
	}
	case 105118: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 105119: {
		*(bool*)p1 = pThis->newPage();
		break;
	}
	case 105120: {
		*(int*)p1 = pThis->numCopies();
		break;
	}
	case 105121: {
		*(QPrinter::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 105122: {
		drvSetString(p1,pThis->outputFileName());
		break;
	}
	case 105123: {
		*(QPrinter::OutputFormat*)p1 = pThis->outputFormat();
		break;
	}
	case 105124: {
		*(QPrinter::PageOrder*)p1 = pThis->pageOrder();
		break;
	}
	case 105125: {
		*(void**)p1 = new QRect(pThis->pageRect());
		break;
	}
	case 105126: {
		*(void**)p2 = new QRectF(pThis->pageRect(*(QPrinter::Unit*)p1));
		break;
	}
	case 105127: {
		*(QPrinter::PageSize*)p1 = pThis->pageSize();
		break;
	}
	case 105128: {
		*(void**)p1 = new QRect(pThis->paperRect());
		break;
	}
	case 105129: {
		*(void**)p2 = new QRectF(pThis->paperRect(*(QPrinter::Unit*)p1));
		break;
	}
	case 105130: {
		*(QPrinter::PageSize*)p1 = pThis->paperSize();
		break;
	}
	case 105131: {
		*(void**)p2 = new QSizeF(pThis->paperSize(*(QPrinter::Unit*)p1));
		break;
	}
	case 105132: {
		*(QPrinter::PaperSource*)p1 = pThis->paperSource();
		break;
	}
	case 105133: {
		*(void**)p1 = pThis->printEngine();
		break;
	}
	case 105134: {
		drvSetString(p1,pThis->printProgram());
		break;
	}
	case 105135: {
		*(QPrinter::PrintRange*)p1 = pThis->printRange();
		break;
	}
	case 105136: {
		drvSetString(p1,pThis->printerName());
		break;
	}
	case 105137: {
		*(QPrinter::PrinterState*)p1 = pThis->printerState();
		break;
	}
	case 105138: {
		*(int*)p1 = pThis->resolution();
		break;
	}
	case 105139: {
		pThis->setCollateCopies(*(bool*)p1);
		break;
	}
	case 105140: {
		pThis->setColorMode(*(QPrinter::ColorMode*)p1);
		break;
	}
	case 105141: {
		pThis->setCopyCount(*(int*)p1);
		break;
	}
	case 105142: {
		pThis->setCreator(drvGetStringHead(p1));
		break;
	}
	case 105143: {
		pThis->setDocName(drvGetStringHead(p1));
		break;
	}
	case 105144: {
		pThis->setDoubleSidedPrinting(*(bool*)p1);
		break;
	}
	case 105145: {
		pThis->setDuplex(*(QPrinter::DuplexMode*)p1);
		break;
	}
	case 105146: {
		pThis->setFontEmbeddingEnabled(*(bool*)p1);
		break;
	}
	case 105147: {
		pThis->setFromTo(*(int*)p1,*(int*)p2);
		break;
	}
	case 105148: {
		pThis->setFullPage(*(bool*)p1);
		break;
	}
	case 105149: {
		pThis->setNumCopies(*(int*)p1);
		break;
	}
	case 105150: {
		pThis->setOrientation(*(QPrinter::Orientation*)p1);
		break;
	}
	case 105151: {
		pThis->setOutputFileName(drvGetStringHead(p1));
		break;
	}
	case 105152: {
		pThis->setOutputFormat(*(QPrinter::OutputFormat*)p1);
		break;
	}
	case 105153: {
		pThis->setPageMargins(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(QPrinter::Unit*)p5);
		break;
	}
	case 105154: {
		pThis->setPageOrder(*(QPrinter::PageOrder*)p1);
		break;
	}
	case 105155: {
		pThis->setPageSize(*(QPrinter::PageSize*)p1);
		break;
	}
	case 105156: {
		pThis->setPaperSize(*(QPrinter::PageSize*)p1);
		break;
	}
	case 105157: {
		if(p1==0)return -2;
		pThis->setPaperSize(*(QSizeF*)(p1),*(QPrinter::Unit*)p2);
		break;
	}
	case 105158: {
		pThis->setPaperSource(*(QPrinter::PaperSource*)p1);
		break;
	}
	case 105159: {
		pThis->setPrintProgram(drvGetStringHead(p1));
		break;
	}
	case 105160: {
		pThis->setPrintRange(*(QPrinter::PrintRange*)p1);
		break;
	}
	case 105161: {
		pThis->setPrinterName(drvGetStringHead(p1));
		break;
	}
	case 105162: {
		pThis->setResolution(*(int*)p1);
		break;
	}
	case 105163: {
		drvSetList<int>(p1,pThis->supportedResolutions());
		break;
	}
	case 105164: {
		*(bool*)p1 = pThis->supportsMultipleCopies();
		break;
	}
	case 105165: {
		*(int*)p1 = pThis->toPage();
		break;
	}
	default:
		return drv_QPaintDevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPrinterInfo
int drv_QPrinterInfo(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QPrinterInfo *pThis = (QPrinterInfo*)_p;
	switch (funcid) {
	case 106000+1: {
		delete pThis;
		break;
	}
	case 106102: {
		*(void**)_p = new QPrinterInfo();
		break;
	}
	case 106103: {
		if(p1==0)return -2;
		*(void**)_p = new QPrinterInfo(*(QPrinter*)(p1));
		break;
	}
	case 106104: {
		if(p1==0)return -2;
		*(void**)_p = new QPrinterInfo(*(QPrinterInfo*)(p1));
		break;
	}
	case 106105: {
		drvSetListPtr<QPrinterInfo>(p1,106000,QPrinterInfo::availablePrinters());
		break;
	}
	case 106106: {
		*(void**)p1 = new QPrinterInfo(QPrinterInfo::defaultPrinter());
		break;
	}
	case 106107: {
		*(bool*)p1 = pThis->isDefault();
		break;
	}
	case 106108: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 106109: {
		drvSetString(p1,pThis->printerName());
		break;
	}
	case 106110: {
		drvSetList<QPrinter::PaperSize>(p1,pThis->supportedPaperSizes());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QProcessEnvironment
int drv_QProcessEnvironment(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QProcessEnvironment *pThis = (QProcessEnvironment*)_p;
	switch (funcid) {
	case 107000+1: {
		delete pThis;
		break;
	}
	case 107102: {
		*(void**)_p = new QProcessEnvironment();
		break;
	}
	case 107103: {
		if(p1==0)return -2;
		*(void**)_p = new QProcessEnvironment(*(QProcessEnvironment*)(p1));
		break;
	}
	case 107104: {
		pThis->clear();
		break;
	}
	case 107105: {
		*(bool*)p2 = pThis->contains(drvGetStringHead(p1));
		break;
	}
	case 107106: {
		pThis->insert(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 107107: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 107108: {
		pThis->remove(drvGetStringHead(p1));
		break;
	}
	case 107109: {
		*(void**)p1 = new QProcessEnvironment(QProcessEnvironment::systemEnvironment());
		break;
	}
	case 107110: {
		drvSetStringArray(p1,pThis->toStringList());
		break;
	}
	case 107111: {
		drvSetString(p2,pThis->value(drvGetStringHead(p1)));
		break;
	}
	case 107112: {
		drvSetString(p3,pThis->value(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QQuaternion
int drv_QQuaternion(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QQuaternion *pThis = (QQuaternion*)_p;
	switch (funcid) {
	case 108000+1: {
		delete pThis;
		break;
	}
	case 108102: {
		*(void**)_p = new QQuaternion();
		break;
	}
	case 108103: {
		if(p1==0)return -2;
		*(void**)_p = new QQuaternion(*(QVector4D*)(p1));
		break;
	}
	case 108104: {
		if(p2==0)return -2;
		*(void**)_p = new QQuaternion(*(double*)p1,*(QVector3D*)(p2));
		break;
	}
	case 108105: {
		*(void**)_p = new QQuaternion(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 108106: {
		*(void**)p1 = new QQuaternion(pThis->conjugate());
		break;
	}
	case 108107: {
		if(p1==0)return -2;
		*(void**)p3 = new QQuaternion(QQuaternion::fromAxisAndAngle(*(QVector3D*)(p1),*(double*)p2));
		break;
	}
	case 108108: {
		*(void**)p5 = new QQuaternion(QQuaternion::fromAxisAndAngle(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 108109: {
		*(bool*)p1 = pThis->isIdentity();
		break;
	}
	case 108110: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 108111: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 108112: {
		*(double*)p1 = pThis->lengthSquared();
		break;
	}
	case 108113: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p4 = new QQuaternion(QQuaternion::nlerp(*(QQuaternion*)(p1),*(QQuaternion*)(p2),*(double*)p3));
		break;
	}
	case 108114: {
		pThis->normalize();
		break;
	}
	case 108115: {
		*(void**)p1 = new QQuaternion(pThis->normalized());
		break;
	}
	case 108116: {
		if(p1==0)return -2;
		*(void**)p2 = new QVector3D(pThis->rotatedVector(*(QVector3D*)(p1)));
		break;
	}
	case 108117: {
		*(double*)p1 = pThis->scalar();
		break;
	}
	case 108118: {
		pThis->setScalar(*(double*)p1);
		break;
	}
	case 108119: {
		if(p1==0)return -2;
		pThis->setVector(*(QVector3D*)(p1));
		break;
	}
	case 108120: {
		pThis->setVector(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 108121: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 108122: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 108123: {
		pThis->setZ(*(double*)p1);
		break;
	}
	case 108124: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p4 = new QQuaternion(QQuaternion::slerp(*(QQuaternion*)(p1),*(QQuaternion*)(p2),*(double*)p3));
		break;
	}
	case 108125: {
		*(void**)p1 = new QVector4D(pThis->toVector4D());
		break;
	}
	case 108126: {
		*(void**)p1 = new QVector3D(pThis->vector());
		break;
	}
	case 108127: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 108128: {
		*(double*)p1 = pThis->y();
		break;
	}
	case 108129: {
		*(double*)p1 = pThis->z();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QRadialGradient
int drv_QRadialGradient(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QRadialGradient *pThis = (QRadialGradient*)_p;
	switch (funcid) {
	case 109000+1: {
		delete pThis;
		break;
	}
	case 109102: {
		*(void**)_p = new QRadialGradient();
		break;
	}
	case 109103: {
		if(p1==0)return -2;
		*(void**)_p = new QRadialGradient(*(QPointF*)(p1),*(double*)p2);
		break;
	}
	case 109104: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		*(void**)_p = new QRadialGradient(*(QPointF*)(p1),*(double*)p2,*(QPointF*)(p3));
		break;
	}
	case 109105: {
		*(void**)_p = new QRadialGradient(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 109106: {
		*(void**)_p = new QRadialGradient(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5);
		break;
	}
	case 109107: {
		*(void**)p1 = new QPointF(pThis->center());
		break;
	}
	case 109108: {
		*(void**)p1 = new QPointF(pThis->focalPoint());
		break;
	}
	case 109109: {
		*(double*)p1 = pThis->radius();
		break;
	}
	case 109110: {
		if(p1==0)return -2;
		pThis->setCenter(*(QPointF*)(p1));
		break;
	}
	case 109111: {
		pThis->setCenter(*(double*)p1,*(double*)p2);
		break;
	}
	case 109112: {
		if(p1==0)return -2;
		pThis->setFocalPoint(*(QPointF*)(p1));
		break;
	}
	case 109113: {
		pThis->setFocalPoint(*(double*)p1,*(double*)p2);
		break;
	}
	case 109114: {
		pThis->setRadius(*(double*)p1);
		break;
	}
	default:
		return drv_QGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QReadLocker
int drv_QReadLocker(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QReadLocker *pThis = (QReadLocker*)_p;
	switch (funcid) {
	case 110000+1: {
		delete pThis;
		break;
	}
	case 110102: {
		pThis->relock();
		break;
	}
	case 110103: {
		pThis->unlock();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QRect
int drv_QRect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QRect *pThis = (QRect*)_p;
	switch (funcid) {
	case 111000+1: {
		delete pThis;
		break;
	}
	case 111102: {
		*(void**)_p = new QRect();
		break;
	}
	case 111103: {
		if(p1==0)return -2;
		*(void**)_p = new QRect(*(QRect*)(p1));
		break;
	}
	case 111104: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QRect(*(QPoint*)(p1),*(QPoint*)(p2));
		break;
	}
	case 111105: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QRect(*(QPoint*)(p1),*(QSize*)(p2));
		break;
	}
	case 111106: {
		*(void**)_p = new QRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 111107: {
		pThis->adjust(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 111108: {
		*(void**)p5 = new QRect(pThis->adjusted(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 111109: {
		*(int*)p1 = pThis->bottom();
		break;
	}
	case 111110: {
		*(void**)p1 = new QPoint(pThis->bottomLeft());
		break;
	}
	case 111111: {
		*(void**)p1 = new QPoint(pThis->bottomRight());
		break;
	}
	case 111112: {
		*(void**)p1 = new QPoint(pThis->center());
		break;
	}
	case 111113: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPoint*)(p1));
		break;
	}
	case 111114: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QRect*)(p1));
		break;
	}
	case 111115: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->contains(*(QPoint*)(p1),*(bool*)p2);
		break;
	}
	case 111116: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->contains(*(QRect*)(p1),*(bool*)p2);
		break;
	}
	case 111117: {
		*(bool*)p3 = pThis->contains(*(int*)p1,*(int*)p2);
		break;
	}
	case 111118: {
		*(bool*)p4 = pThis->contains(*(int*)p1,*(int*)p2,*(bool*)p3);
		break;
	}
	case 111119: {
		pThis->getCoords(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 111120: {
		pThis->getRect(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 111121: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 111122: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->intersected(*(QRect*)(p1)));
		break;
	}
	case 111123: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QRect*)(p1));
		break;
	}
	case 111124: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 111125: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 111126: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 111127: {
		*(int*)p1 = pThis->left();
		break;
	}
	case 111128: {
		pThis->moveBottom(*(int*)p1);
		break;
	}
	case 111129: {
		if(p1==0)return -2;
		pThis->moveBottomLeft(*(QPoint*)(p1));
		break;
	}
	case 111130: {
		if(p1==0)return -2;
		pThis->moveBottomRight(*(QPoint*)(p1));
		break;
	}
	case 111131: {
		if(p1==0)return -2;
		pThis->moveCenter(*(QPoint*)(p1));
		break;
	}
	case 111132: {
		pThis->moveLeft(*(int*)p1);
		break;
	}
	case 111133: {
		pThis->moveRight(*(int*)p1);
		break;
	}
	case 111134: {
		if(p1==0)return -2;
		pThis->moveTo(*(QPoint*)(p1));
		break;
	}
	case 111135: {
		pThis->moveTo(*(int*)p1,*(int*)p2);
		break;
	}
	case 111136: {
		pThis->moveTop(*(int*)p1);
		break;
	}
	case 111137: {
		if(p1==0)return -2;
		pThis->moveTopLeft(*(QPoint*)(p1));
		break;
	}
	case 111138: {
		if(p1==0)return -2;
		pThis->moveTopRight(*(QPoint*)(p1));
		break;
	}
	case 111139: {
		*(void**)p1 = new QRect(pThis->normalized());
		break;
	}
	case 111140: {
		*(int*)p1 = pThis->right();
		break;
	}
	case 111141: {
		pThis->setBottom(*(int*)p1);
		break;
	}
	case 111142: {
		if(p1==0)return -2;
		pThis->setBottomLeft(*(QPoint*)(p1));
		break;
	}
	case 111143: {
		if(p1==0)return -2;
		pThis->setBottomRight(*(QPoint*)(p1));
		break;
	}
	case 111144: {
		pThis->setCoords(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 111145: {
		pThis->setHeight(*(int*)p1);
		break;
	}
	case 111146: {
		pThis->setLeft(*(int*)p1);
		break;
	}
	case 111147: {
		pThis->setRect(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 111148: {
		pThis->setRight(*(int*)p1);
		break;
	}
	case 111149: {
		if(p1==0)return -2;
		pThis->setSize(*(QSize*)(p1));
		break;
	}
	case 111150: {
		pThis->setTop(*(int*)p1);
		break;
	}
	case 111151: {
		if(p1==0)return -2;
		pThis->setTopLeft(*(QPoint*)(p1));
		break;
	}
	case 111152: {
		if(p1==0)return -2;
		pThis->setTopRight(*(QPoint*)(p1));
		break;
	}
	case 111153: {
		pThis->setWidth(*(int*)p1);
		break;
	}
	case 111154: {
		pThis->setX(*(int*)p1);
		break;
	}
	case 111155: {
		pThis->setY(*(int*)p1);
		break;
	}
	case 111156: {
		*(void**)p1 = new QSize(pThis->size());
		break;
	}
	case 111157: {
		*(int*)p1 = pThis->top();
		break;
	}
	case 111158: {
		*(void**)p1 = new QPoint(pThis->topLeft());
		break;
	}
	case 111159: {
		*(void**)p1 = new QPoint(pThis->topRight());
		break;
	}
	case 111160: {
		if(p1==0)return -2;
		pThis->translate(*(QPoint*)(p1));
		break;
	}
	case 111161: {
		pThis->translate(*(int*)p1,*(int*)p2);
		break;
	}
	case 111162: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->translated(*(QPoint*)(p1)));
		break;
	}
	case 111163: {
		*(void**)p3 = new QRect(pThis->translated(*(int*)p1,*(int*)p2));
		break;
	}
	case 111164: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->united(*(QRect*)(p1)));
		break;
	}
	case 111165: {
		*(int*)p1 = pThis->width();
		break;
	}
	case 111166: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 111167: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QRectF
int drv_QRectF(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QRectF *pThis = (QRectF*)_p;
	switch (funcid) {
	case 112000+1: {
		delete pThis;
		break;
	}
	case 112102: {
		*(void**)_p = new QRectF();
		break;
	}
	case 112103: {
		if(p1==0)return -2;
		*(void**)_p = new QRectF(*(QRect*)(p1));
		break;
	}
	case 112104: {
		if(p1==0)return -2;
		*(void**)_p = new QRectF(*(QRectF*)(p1));
		break;
	}
	case 112105: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QRectF(*(QPointF*)(p1),*(QPointF*)(p2));
		break;
	}
	case 112106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QRectF(*(QPointF*)(p1),*(QSizeF*)(p2));
		break;
	}
	case 112107: {
		*(void**)_p = new QRectF(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 112108: {
		pThis->adjust(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 112109: {
		*(void**)p5 = new QRectF(pThis->adjusted(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 112110: {
		*(double*)p1 = pThis->bottom();
		break;
	}
	case 112111: {
		*(void**)p1 = new QPointF(pThis->bottomLeft());
		break;
	}
	case 112112: {
		*(void**)p1 = new QPointF(pThis->bottomRight());
		break;
	}
	case 112113: {
		*(void**)p1 = new QPointF(pThis->center());
		break;
	}
	case 112114: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPointF*)(p1));
		break;
	}
	case 112115: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QRectF*)(p1));
		break;
	}
	case 112116: {
		*(bool*)p3 = pThis->contains(*(double*)p1,*(double*)p2);
		break;
	}
	case 112117: {
		pThis->getCoords(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 112118: {
		pThis->getRect(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 112119: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 112120: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->intersected(*(QRectF*)(p1)));
		break;
	}
	case 112121: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QRectF*)(p1));
		break;
	}
	case 112122: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 112123: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 112124: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 112125: {
		*(double*)p1 = pThis->left();
		break;
	}
	case 112126: {
		pThis->moveBottom(*(double*)p1);
		break;
	}
	case 112127: {
		if(p1==0)return -2;
		pThis->moveBottomLeft(*(QPointF*)(p1));
		break;
	}
	case 112128: {
		if(p1==0)return -2;
		pThis->moveBottomRight(*(QPointF*)(p1));
		break;
	}
	case 112129: {
		if(p1==0)return -2;
		pThis->moveCenter(*(QPointF*)(p1));
		break;
	}
	case 112130: {
		pThis->moveLeft(*(double*)p1);
		break;
	}
	case 112131: {
		pThis->moveRight(*(double*)p1);
		break;
	}
	case 112132: {
		if(p1==0)return -2;
		pThis->moveTo(*(QPointF*)(p1));
		break;
	}
	case 112133: {
		pThis->moveTo(*(double*)p1,*(double*)p2);
		break;
	}
	case 112134: {
		pThis->moveTop(*(double*)p1);
		break;
	}
	case 112135: {
		if(p1==0)return -2;
		pThis->moveTopLeft(*(QPointF*)(p1));
		break;
	}
	case 112136: {
		if(p1==0)return -2;
		pThis->moveTopRight(*(QPointF*)(p1));
		break;
	}
	case 112137: {
		*(void**)p1 = new QRectF(pThis->normalized());
		break;
	}
	case 112138: {
		*(double*)p1 = pThis->right();
		break;
	}
	case 112139: {
		pThis->setBottom(*(double*)p1);
		break;
	}
	case 112140: {
		if(p1==0)return -2;
		pThis->setBottomLeft(*(QPointF*)(p1));
		break;
	}
	case 112141: {
		if(p1==0)return -2;
		pThis->setBottomRight(*(QPointF*)(p1));
		break;
	}
	case 112142: {
		pThis->setCoords(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 112143: {
		pThis->setHeight(*(double*)p1);
		break;
	}
	case 112144: {
		pThis->setLeft(*(double*)p1);
		break;
	}
	case 112145: {
		pThis->setRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 112146: {
		pThis->setRight(*(double*)p1);
		break;
	}
	case 112147: {
		if(p1==0)return -2;
		pThis->setSize(*(QSizeF*)(p1));
		break;
	}
	case 112148: {
		pThis->setTop(*(double*)p1);
		break;
	}
	case 112149: {
		if(p1==0)return -2;
		pThis->setTopLeft(*(QPointF*)(p1));
		break;
	}
	case 112150: {
		if(p1==0)return -2;
		pThis->setTopRight(*(QPointF*)(p1));
		break;
	}
	case 112151: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 112152: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 112153: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 112154: {
		*(void**)p1 = new QSizeF(pThis->size());
		break;
	}
	case 112155: {
		*(void**)p1 = new QRect(pThis->toAlignedRect());
		break;
	}
	case 112156: {
		*(void**)p1 = new QRect(pThis->toRect());
		break;
	}
	case 112157: {
		*(double*)p1 = pThis->top();
		break;
	}
	case 112158: {
		*(void**)p1 = new QPointF(pThis->topLeft());
		break;
	}
	case 112159: {
		*(void**)p1 = new QPointF(pThis->topRight());
		break;
	}
	case 112160: {
		if(p1==0)return -2;
		pThis->translate(*(QPointF*)(p1));
		break;
	}
	case 112161: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 112162: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->translated(*(QPointF*)(p1)));
		break;
	}
	case 112163: {
		*(void**)p3 = new QRectF(pThis->translated(*(double*)p1,*(double*)p2));
		break;
	}
	case 112164: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->united(*(QRectF*)(p1)));
		break;
	}
	case 112165: {
		*(double*)p1 = pThis->width();
		break;
	}
	case 112166: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 112167: {
		*(double*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QRegExp
int drv_QRegExp(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QRegExp *pThis = (QRegExp*)_p;
	switch (funcid) {
	case 113000+1: {
		delete pThis;
		break;
	}
	case 113102: {
		*(void**)_p = new QRegExp();
		break;
	}
	case 113103: {
		if(p1==0)return -2;
		*(void**)_p = new QRegExp(*(QRegExp*)(p1));
		break;
	}
	case 113104: {
		*(void**)_p = new QRegExp(drvGetStringHead(p1),*(Qt::CaseSensitivity*)p2,*(QRegExp::PatternSyntax*)p3);
		break;
	}
	case 113105: {
		drvSetString(p1,pThis->cap());
		break;
	}
	case 113106: {
		drvSetString(p2,pThis->cap(*(int*)p1));
		break;
	}
	case 113107: {
		*(int*)p1 = pThis->captureCount();
		break;
	}
	case 113108: {
		drvSetStringArray(p1,pThis->capturedTexts());
		break;
	}
	case 113109: {
		*(Qt::CaseSensitivity*)p1 = pThis->caseSensitivity();
		break;
	}
	case 113110: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 113111: {
		drvSetString(p2,QRegExp::escape(drvGetStringHead(p1)));
		break;
	}
	case 113112: {
		*(bool*)p2 = pThis->exactMatch(drvGetStringHead(p1));
		break;
	}
	case 113113: {
		*(int*)p2 = pThis->indexIn(drvGetStringHead(p1));
		break;
	}
	case 113114: {
		*(int*)p4 = pThis->indexIn(drvGetStringHead(p1),*(int*)p2,*(QRegExp::CaretMode*)p3);
		break;
	}
	case 113115: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 113116: {
		*(bool*)p1 = pThis->isMinimal();
		break;
	}
	case 113117: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 113118: {
		*(int*)p2 = pThis->lastIndexIn(drvGetStringHead(p1));
		break;
	}
	case 113119: {
		*(int*)p4 = pThis->lastIndexIn(drvGetStringHead(p1),*(int*)p2,*(QRegExp::CaretMode*)p3);
		break;
	}
	case 113120: {
		*(int*)p1 = pThis->matchedLength();
		break;
	}
	case 113121: {
		drvSetString(p1,pThis->pattern());
		break;
	}
	case 113122: {
		*(QRegExp::PatternSyntax*)p1 = pThis->patternSyntax();
		break;
	}
	case 113123: {
		*(int*)p1 = pThis->pos();
		break;
	}
	case 113124: {
		*(int*)p2 = pThis->pos(*(int*)p1);
		break;
	}
	case 113125: {
		pThis->setCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 113126: {
		pThis->setMinimal(*(bool*)p1);
		break;
	}
	case 113127: {
		pThis->setPattern(drvGetStringHead(p1));
		break;
	}
	case 113128: {
		pThis->setPatternSyntax(*(QRegExp::PatternSyntax*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QRegion
int drv_QRegion(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QRegion *pThis = (QRegion*)_p;
	switch (funcid) {
	case 114000+1: {
		delete pThis;
		break;
	}
	case 114102: {
		*(void**)_p = new QRegion();
		break;
	}
	case 114103: {
		if(p1==0)return -2;
		*(void**)_p = new QRegion(*(QBitmap*)(p1));
		break;
	}
	case 114104: {
		if(p1==0)return -2;
		*(void**)_p = new QRegion(*(QRegion*)(p1));
		break;
	}
	case 114105: {
		if(p1==0)return -2;
		*(void**)_p = new QRegion(*(QPolygon*)(p1),*(Qt::FillRule*)p2);
		break;
	}
	case 114106: {
		if(p1==0)return -2;
		*(void**)_p = new QRegion(*(QRect*)(p1),*(QRegion::RegionType*)p2);
		break;
	}
	case 114107: {
		*(void**)_p = new QRegion(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(QRegion::RegionType*)p5);
		break;
	}
	case 114108: {
		*(void**)p1 = new QRect(pThis->boundingRect());
		break;
	}
	case 114109: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPoint*)(p1));
		break;
	}
	case 114110: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QRect*)(p1));
		break;
	}
	case 114111: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->intersected(*(QRect*)(p1)));
		break;
	}
	case 114112: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->intersected(*(QRegion*)(p1)));
		break;
	}
	case 114113: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QRect*)(p1));
		break;
	}
	case 114114: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->intersects(*(QRegion*)(p1));
		break;
	}
	case 114115: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 114116: {
		*(int*)p1 = pThis->rectCount();
		break;
	}
	case 114117: {
		drvSetVectorPtr<QRect>(p1,111000,pThis->rects());
		break;
	}
	case 114118: {
		QVector<QRect> ar = drvGetVectorPtr<QRect>(p1);
		pThis->setRects(&ar[0],ar.size());
		break;
	}
	case 114119: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->subtracted(*(QRegion*)(p1)));
		break;
	}
	case 114120: {
		if(p1==0)return -2;
		pThis->translate(*(QPoint*)(p1));
		break;
	}
	case 114121: {
		pThis->translate(*(int*)p1,*(int*)p2);
		break;
	}
	case 114122: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->translated(*(QPoint*)(p1)));
		break;
	}
	case 114123: {
		*(void**)p3 = new QRegion(pThis->translated(*(int*)p1,*(int*)p2));
		break;
	}
	case 114124: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->united(*(QRect*)(p1)));
		break;
	}
	case 114125: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->united(*(QRegion*)(p1)));
		break;
	}
	case 114126: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->xored(*(QRegion*)(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QResHelp
int drv_QResHelp(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QResHelp *pThis = (QResHelp*)_p;
	switch (funcid) {
	case 115102: {
		*(bool*)p5 = QResHelp::registerResourceData(*(int*)p1,*(uchar const**)p2,*(uchar const**)p3,*(uchar const**)p4);
		break;
	}
	case 115103: {
		*(bool*)p5 = QResHelp::unregisterResourceData(*(int*)p1,*(uchar const**)p2,*(uchar const**)p3,*(uchar const**)p4);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QResizeEvent
int drv_QResizeEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QResizeEvent *pThis = (QResizeEvent*)_p;
	switch (funcid) {
	case 116000+1: {
		delete pThis;
		break;
	}
	case 116102: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QResizeEvent(*(QSize*)(p1),*(QSize*)(p2));
		break;
	}
	case 116103: {
		*(const void**)p1 = new QSize(pThis->oldSize());
		break;
	}
	case 116104: {
		*(const void**)p1 = new QSize(pThis->size());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QResource
int drv_QResource(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QResource *pThis = (QResource*)_p;
	switch (funcid) {
	case 117000+1: {
		delete pThis;
		break;
	}
	case 117102: {
		*(void**)_p = new QResource();
		break;
	}
	case 117103: {
		*(void**)_p = new QResource(drvGetStringHead(p1),p2==0?QLocale():*(QLocale*)(p2));
		break;
	}
	case 117104: {
		drvSetString(p1,pThis->absoluteFilePath());
		break;
	}
	case 117105: {
		QResource::addSearchPath(drvGetStringHead(p1));
		break;
	}
	case 117106: {
		*(unsigned char const**)p1 = pThis->data();
		break;
	}
	case 117107: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 117108: {
		*(bool*)p1 = pThis->isCompressed();
		break;
	}
	case 117109: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 117110: {
		*(void**)p1 = new QLocale(pThis->locale());
		break;
	}
	case 117111: {
		*(bool*)p2 = QResource::registerResource(drvGetStringHead(p1));
		break;
	}
	case 117112: {
		*(bool*)p2 = QResource::registerResource(*(unsigned char const**)p1);
		break;
	}
	case 117113: {
		*(bool*)p3 = QResource::registerResource(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 117114: {
		*(bool*)p3 = QResource::registerResource(*(unsigned char const**)p1,drvGetStringHead(p2));
		break;
	}
	case 117115: {
		drvSetStringArray(p1,QResource::searchPaths());
		break;
	}
	case 117116: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 117117: {
		if(p1==0)return -2;
		pThis->setLocale(*(QLocale*)(p1));
		break;
	}
	case 117118: {
		*(qint64*)p1 = pThis->size();
		break;
	}
	case 117119: {
		*(bool*)p2 = QResource::unregisterResource(drvGetStringHead(p1));
		break;
	}
	case 117120: {
		*(bool*)p2 = QResource::unregisterResource(*(unsigned char const**)p1);
		break;
	}
	case 117121: {
		*(bool*)p3 = QResource::unregisterResource(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 117122: {
		*(bool*)p3 = QResource::unregisterResource(*(unsigned char const**)p1,drvGetStringHead(p2));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QShortcutEvent
int drv_QShortcutEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QShortcutEvent *pThis = (QShortcutEvent*)_p;
	switch (funcid) {
	case 118000+1: {
		delete pThis;
		break;
	}
	case 118102: {
		if(p1==0)return -2;
		*(void**)_p = new QShortcutEvent(*(QKeySequence*)(p1),*(int*)p2,*(bool*)p3);
		break;
	}
	case 118103: {
		*(bool*)p1 = pThis->isAmbiguous();
		break;
	}
	case 118104: {
		*(const void**)p1 = new QKeySequence(pThis->key());
		break;
	}
	case 118105: {
		*(int*)p1 = pThis->shortcutId();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QShowEvent
int drv_QShowEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QShowEvent *pThis = (QShowEvent*)_p;
	switch (funcid) {
	case 119000+1: {
		delete pThis;
		break;
	}
	case 119102: {
		*(void**)_p = new QShowEvent();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSize
int drv_QSize(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QSize *pThis = (QSize*)_p;
	switch (funcid) {
	case 120000+1: {
		delete pThis;
		break;
	}
	case 120102: {
		*(void**)_p = new QSize();
		break;
	}
	case 120103: {
		if(p1==0)return -2;
		*(void**)_p = new QSize(*(QSize*)(p1));
		break;
	}
	case 120104: {
		*(void**)_p = new QSize(*(int*)p1,*(int*)p2);
		break;
	}
	case 120105: {
		if(p1==0)return -2;
		*(void**)p2 = new QSize(pThis->boundedTo(*(QSize*)(p1)));
		break;
	}
	case 120106: {
		if(p1==0)return -2;
		*(void**)p2 = new QSize(pThis->expandedTo(*(QSize*)(p1)));
		break;
	}
	case 120107: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 120108: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 120109: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 120110: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 120111: {
		*(int**)p1 = &pThis->rheight();
		break;
	}
	case 120112: {
		*(int**)p1 = &pThis->rwidth();
		break;
	}
	case 120113: {
		if(p1==0)return -2;
		pThis->scale(*(QSize*)(p1),*(Qt::AspectRatioMode*)p2);
		break;
	}
	case 120114: {
		pThis->scale(*(int*)p1,*(int*)p2,*(Qt::AspectRatioMode*)p3);
		break;
	}
	case 120115: {
		pThis->setHeight(*(int*)p1);
		break;
	}
	case 120116: {
		pThis->setWidth(*(int*)p1);
		break;
	}
	case 120117: {
		pThis->transpose();
		break;
	}
	case 120118: {
		*(int*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QSizeF
int drv_QSizeF(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QSizeF *pThis = (QSizeF*)_p;
	switch (funcid) {
	case 121000+1: {
		delete pThis;
		break;
	}
	case 121102: {
		*(void**)_p = new QSizeF();
		break;
	}
	case 121103: {
		if(p1==0)return -2;
		*(void**)_p = new QSizeF(*(QSize*)(p1));
		break;
	}
	case 121104: {
		if(p1==0)return -2;
		*(void**)_p = new QSizeF(*(QSizeF*)(p1));
		break;
	}
	case 121105: {
		*(void**)_p = new QSizeF(*(double*)p1,*(double*)p2);
		break;
	}
	case 121106: {
		if(p1==0)return -2;
		*(void**)p2 = new QSizeF(pThis->boundedTo(*(QSizeF*)(p1)));
		break;
	}
	case 121107: {
		if(p1==0)return -2;
		*(void**)p2 = new QSizeF(pThis->expandedTo(*(QSizeF*)(p1)));
		break;
	}
	case 121108: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 121109: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 121110: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 121111: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 121112: {
		*(double**)p1 = &pThis->rheight();
		break;
	}
	case 121113: {
		*(double**)p1 = &pThis->rwidth();
		break;
	}
	case 121114: {
		if(p1==0)return -2;
		pThis->scale(*(QSizeF*)(p1),*(Qt::AspectRatioMode*)p2);
		break;
	}
	case 121115: {
		pThis->scale(*(double*)p1,*(double*)p2,*(Qt::AspectRatioMode*)p3);
		break;
	}
	case 121116: {
		pThis->setHeight(*(double*)p1);
		break;
	}
	case 121117: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 121118: {
		*(void**)p1 = new QSize(pThis->toSize());
		break;
	}
	case 121119: {
		pThis->transpose();
		break;
	}
	case 121120: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QSizePolicy
int drv_QSizePolicy(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QSizePolicy *pThis = (QSizePolicy*)_p;
	switch (funcid) {
	case 122000+1: {
		delete pThis;
		break;
	}
	case 122102: {
		*(void**)_p = new QSizePolicy();
		break;
	}
	case 122103: {
		if(p1==0)return -2;
		*(void**)_p = new QSizePolicy(*(QSizePolicy*)(p1));
		break;
	}
	case 122104: {
		*(void**)_p = new QSizePolicy(*(QSizePolicy::Policy*)p1,*(QSizePolicy::Policy*)p2);
		break;
	}
	case 122105: {
		*(void**)_p = new QSizePolicy(*(QSizePolicy::Policy*)p1,*(QSizePolicy::Policy*)p2,*(QSizePolicy::ControlType*)p3);
		break;
	}
	case 122106: {
		*(QSizePolicy::ControlType*)p1 = pThis->controlType();
		break;
	}
	case 122107: {
		*(QFlags<Qt::Orientation>*)p1 = pThis->expandingDirections();
		break;
	}
	case 122108: {
		*(bool*)p1 = pThis->hasHeightForWidth();
		break;
	}
	case 122109: {
		*(QSizePolicy::Policy*)p1 = pThis->horizontalPolicy();
		break;
	}
	case 122110: {
		*(int*)p1 = pThis->horizontalStretch();
		break;
	}
	case 122111: {
		pThis->setControlType(*(QSizePolicy::ControlType*)p1);
		break;
	}
	case 122112: {
		pThis->setHeightForWidth(*(bool*)p1);
		break;
	}
	case 122113: {
		pThis->setHorizontalPolicy(*(QSizePolicy::Policy*)p1);
		break;
	}
	case 122114: {
		pThis->setHorizontalStretch(*(unsigned char*)p1);
		break;
	}
	case 122115: {
		pThis->setVerticalPolicy(*(QSizePolicy::Policy*)p1);
		break;
	}
	case 122116: {
		pThis->setVerticalStretch(*(unsigned char*)p1);
		break;
	}
	case 122117: {
		pThis->transpose();
		break;
	}
	case 122118: {
		*(QSizePolicy::Policy*)p1 = pThis->verticalPolicy();
		break;
	}
	case 122119: {
		*(int*)p1 = pThis->verticalStretch();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QSpacerItem
int drv_QSpacerItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSpacerItem *pThis = (QSpacerItem*)_p;
	switch (funcid) {
	case 123000+1: {
		delete pThis;
		break;
	}
	case 123102: {
		*(void**)_p = new QSpacerItem(*(int*)p1,*(int*)p2,*(QSizePolicy::Policy*)p3,*(QSizePolicy::Policy*)p4);
		break;
	}
	case 123103: {
		pThis->changeSize(*(int*)p1,*(int*)p2,*(QSizePolicy::Policy*)p3,*(QSizePolicy::Policy*)p4);
		break;
	}
	default:
		return drv_QLayoutItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStandardItem
int drv_QStandardItem(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStandardItem *pThis = (QStandardItem*)_p;
	switch (funcid) {
	case 124000+1: {
		delete pThis;
		break;
	}
	case 124102: {
		*(void**)_p = new QStandardItem();
		break;
	}
	case 124103: {
		*(void**)_p = new QStandardItem(drvGetStringHead(p1));
		break;
	}
	case 124104: {
		if(p1==0)return -2;
		*(void**)_p = new QStandardItem(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 124105: {
		*(void**)_p = new QStandardItem(*(int*)p1,*(int*)p2);
		break;
	}
	case 124106: {
		drvSetString(p1,pThis->accessibleDescription());
		break;
	}
	case 124107: {
		drvSetString(p1,pThis->accessibleText());
		break;
	}
	case 124108: {
		pThis->appendColumn(drvGetObjectArrayHeadT<QStandardItem*>(p1));
		break;
	}
	case 124109: {
		pThis->appendRow(drvGetObjectArrayHeadT<QStandardItem*>(p1));
		break;
	}
	case 124110: {
		pThis->appendRow((QStandardItem*)(p1));
		break;
	}
	case 124111: {
		pThis->appendRows(drvGetObjectArrayHeadT<QStandardItem*>(p1));
		break;
	}
	case 124112: {
		*(void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 124113: {
		*(Qt::CheckState*)p1 = pThis->checkState();
		break;
	}
	case 124114: {
		*(void**)p2 = pThis->child(*(int*)p1);
		break;
	}
	case 124115: {
		*(void**)p3 = pThis->child(*(int*)p1,*(int*)p2);
		break;
	}
	case 124116: {
		*(void**)p1 = pThis->clone();
		break;
	}
	case 124117: {
		*(int*)p1 = pThis->column();
		break;
	}
	case 124118: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 124119: {
		*(void**)p1 = new QVariant(pThis->data());
		break;
	}
	case 124120: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 124121: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 124122: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 124123: {
		*(void**)p1 = new QBrush(pThis->foreground());
		break;
	}
	case 124124: {
		*(bool*)p1 = pThis->hasChildren();
		break;
	}
	case 124125: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 124126: {
		*(void**)p1 = new QModelIndex(pThis->index());
		break;
	}
	case 124127: {
		pThis->insertColumn(*(int*)p1,drvGetObjectArrayHeadT<QStandardItem*>(p2));
		break;
	}
	case 124128: {
		pThis->insertColumns(*(int*)p1,*(int*)p2);
		break;
	}
	case 124129: {
		pThis->insertRow(*(int*)p1,drvGetObjectArrayHeadT<QStandardItem*>(p2));
		break;
	}
	case 124130: {
		pThis->insertRow(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 124131: {
		pThis->insertRows(*(int*)p1,drvGetObjectArrayHeadT<QStandardItem*>(p2));
		break;
	}
	case 124132: {
		pThis->insertRows(*(int*)p1,*(int*)p2);
		break;
	}
	case 124133: {
		*(bool*)p1 = pThis->isCheckable();
		break;
	}
	case 124134: {
		*(bool*)p1 = pThis->isDragEnabled();
		break;
	}
	case 124135: {
		*(bool*)p1 = pThis->isDropEnabled();
		break;
	}
	case 124136: {
		*(bool*)p1 = pThis->isEditable();
		break;
	}
	case 124137: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 124138: {
		*(bool*)p1 = pThis->isSelectable();
		break;
	}
	case 124139: {
		*(bool*)p1 = pThis->isTristate();
		break;
	}
	case 124140: {
		*(void**)p1 = pThis->model();
		break;
	}
	case 124141: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 124142: {
		pThis->removeColumn(*(int*)p1);
		break;
	}
	case 124143: {
		pThis->removeColumns(*(int*)p1,*(int*)p2);
		break;
	}
	case 124144: {
		pThis->removeRow(*(int*)p1);
		break;
	}
	case 124145: {
		pThis->removeRows(*(int*)p1,*(int*)p2);
		break;
	}
	case 124146: {
		*(int*)p1 = pThis->row();
		break;
	}
	case 124147: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 124148: {
		pThis->setAccessibleDescription(drvGetStringHead(p1));
		break;
	}
	case 124149: {
		pThis->setAccessibleText(drvGetStringHead(p1));
		break;
	}
	case 124150: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 124151: {
		pThis->setCheckState(*(Qt::CheckState*)p1);
		break;
	}
	case 124152: {
		pThis->setCheckable(*(bool*)p1);
		break;
	}
	case 124153: {
		pThis->setChild(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 124154: {
		pThis->setChild(*(int*)p1,*(int*)p2,(QStandardItem*)(p3));
		break;
	}
	case 124155: {
		pThis->setColumnCount(*(int*)p1);
		break;
	}
	case 124156: {
		if(p1==0)return -2;
		pThis->setData(*(QVariant*)(p1));
		break;
	}
	case 124157: {
		if(p1==0)return -2;
		pThis->setData(*(QVariant*)(p1),*(int*)p2);
		break;
	}
	case 124158: {
		pThis->setDragEnabled(*(bool*)p1);
		break;
	}
	case 124159: {
		pThis->setDropEnabled(*(bool*)p1);
		break;
	}
	case 124160: {
		pThis->setEditable(*(bool*)p1);
		break;
	}
	case 124161: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 124162: {
		pThis->setFlags(*(QFlags<Qt::ItemFlag>*)p1);
		break;
	}
	case 124163: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 124164: {
		if(p1==0)return -2;
		pThis->setForeground(*(QBrush*)(p1));
		break;
	}
	case 124165: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 124166: {
		pThis->setRowCount(*(int*)p1);
		break;
	}
	case 124167: {
		pThis->setSelectable(*(bool*)p1);
		break;
	}
	case 124168: {
		if(p1==0)return -2;
		pThis->setSizeHint(*(QSize*)(p1));
		break;
	}
	case 124169: {
		pThis->setStatusTip(drvGetStringHead(p1));
		break;
	}
	case 124170: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 124171: {
		pThis->setTextAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 124172: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 124173: {
		pThis->setTristate(*(bool*)p1);
		break;
	}
	case 124174: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 124175: {
		*(void**)p1 = new QSize(pThis->sizeHint());
		break;
	}
	case 124176: {
		pThis->sortChildren(*(int*)p1);
		break;
	}
	case 124177: {
		pThis->sortChildren(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 124178: {
		drvSetString(p1,pThis->statusTip());
		break;
	}
	case 124179: {
		*(void**)p2 = pThis->takeChild(*(int*)p1);
		break;
	}
	case 124180: {
		*(void**)p3 = pThis->takeChild(*(int*)p1,*(int*)p2);
		break;
	}
	case 124181: {
		drvSetListObj<QStandardItem*>(p2,124000,pThis->takeColumn(*(int*)p1));
		break;
	}
	case 124182: {
		drvSetListObj<QStandardItem*>(p2,124000,pThis->takeRow(*(int*)p1));
		break;
	}
	case 124183: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 124184: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->textAlignment();
		break;
	}
	case 124185: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 124186: {
		*(int*)p1 = pThis->type();
		break;
	}
	case 124187: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStateMachine_SignalEvent
int drv_QStateMachine_SignalEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStateMachine::SignalEvent *pThis = (QStateMachine::SignalEvent*)_p;
	switch (funcid) {
	case 125000+1: {
		delete pThis;
		break;
	}
	case 125102: {
		*(void**)_p = new QStateMachine::SignalEvent((QObject*)(p1),*(int*)p2,drvGetNoObjectArrayHeadT<QVariant>(p3));
		break;
	}
	case 125103: {
		drvSetListPtr<QVariant>(p1,184000,pThis->arguments());
		break;
	}
	case 125104: {
		*(void**)p1 = pThis->sender();
		break;
	}
	case 125105: {
		*(int*)p1 = pThis->signalIndex();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStateMachine_WrappedEvent
int drv_QStateMachine_WrappedEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStateMachine::WrappedEvent *pThis = (QStateMachine::WrappedEvent*)_p;
	switch (funcid) {
	case 126000+1: {
		delete pThis;
		break;
	}
	case 126102: {
		*(void**)_p = new QStateMachine::WrappedEvent((QObject*)(p1),(QEvent*)(p2));
		break;
	}
	case 126103: {
		*(void**)p1 = pThis->event();
		break;
	}
	case 126104: {
		*(void**)p1 = pThis->object();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStaticText
int drv_QStaticText(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStaticText *pThis = (QStaticText*)_p;
	switch (funcid) {
	case 127000+1: {
		delete pThis;
		break;
	}
	case 127102: {
		*(void**)_p = new QStaticText();
		break;
	}
	case 127103: {
		if(p1==0)return -2;
		*(void**)_p = new QStaticText(*(QStaticText*)(p1));
		break;
	}
	case 127104: {
		*(void**)_p = new QStaticText(drvGetStringHead(p1));
		break;
	}
	case 127105: {
		*(QStaticText::PerformanceHint*)p1 = pThis->performanceHint();
		break;
	}
	case 127106: {
		pThis->prepare();
		break;
	}
	case 127107: {
		pThis->prepare(p1==0?QTransform():*(QTransform*)(p1),p2==0?QFont():*(QFont*)(p2));
		break;
	}
	case 127108: {
		pThis->setPerformanceHint(*(QStaticText::PerformanceHint*)p1);
		break;
	}
	case 127109: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 127110: {
		pThis->setTextFormat(*(Qt::TextFormat*)p1);
		break;
	}
	case 127111: {
		if(p1==0)return -2;
		pThis->setTextOption(*(QTextOption*)(p1));
		break;
	}
	case 127112: {
		pThis->setTextWidth(*(double*)p1);
		break;
	}
	case 127113: {
		*(void**)p1 = new QSizeF(pThis->size());
		break;
	}
	case 127114: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 127115: {
		*(Qt::TextFormat*)p1 = pThis->textFormat();
		break;
	}
	case 127116: {
		*(void**)p1 = new QTextOption(pThis->textOption());
		break;
	}
	case 127117: {
		*(double*)p1 = pThis->textWidth();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStatusTipEvent
int drv_QStatusTipEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStatusTipEvent *pThis = (QStatusTipEvent*)_p;
	switch (funcid) {
	case 128000+1: {
		delete pThis;
		break;
	}
	case 128102: {
		*(void**)_p = new QStatusTipEvent(drvGetStringHead(p1));
		break;
	}
	case 128103: {
		drvSetString(p1,pThis->tip());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStringMatcher
int drv_QStringMatcher(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStringMatcher *pThis = (QStringMatcher*)_p;
	switch (funcid) {
	case 129000+1: {
		delete pThis;
		break;
	}
	case 129102: {
		*(void**)_p = new QStringMatcher();
		break;
	}
	case 129103: {
		if(p1==0)return -2;
		*(void**)_p = new QStringMatcher(*(QStringMatcher*)(p1));
		break;
	}
	case 129104: {
		*(void**)_p = new QStringMatcher(drvGetStringHead(p1),*(Qt::CaseSensitivity*)p2);
		break;
	}
	case 129105: {
		*(void**)_p = new QStringMatcher(*(QChar const**)p1,*(int*)p2,*(Qt::CaseSensitivity*)p3);
		break;
	}
	case 129106: {
		*(Qt::CaseSensitivity*)p1 = pThis->caseSensitivity();
		break;
	}
	case 129107: {
		*(int*)p2 = pThis->indexIn(drvGetStringHead(p1));
		break;
	}
	case 129108: {
		*(int*)p3 = pThis->indexIn(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 129109: {
		*(int*)p4 = pThis->indexIn(*(QChar const**)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 129110: {
		drvSetString(p1,pThis->pattern());
		break;
	}
	case 129111: {
		pThis->setCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 129112: {
		pThis->setPattern(drvGetStringHead(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStringVariantMap
int drv_QStringVariantMap(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStringVariantMap *pThis = (QStringVariantMap*)_p;
	switch (funcid) {
	case 130000+1: {
		delete pThis;
		break;
	}
	case 130102: {
		*(void**)_p = new QStringVariantMap();
		break;
	}
	case 130103: {
		if(p2==0)return -2;
		pThis->insert(drvGetStringHead(p1),*(QVariant*)(p2));
		break;
	}
	case 130104: {
		drvSetStringArray(p1,pThis->keys());
		break;
	}
	case 130105: {
		*(void**)p2 = new QVariant(pThis->value(drvGetStringHead(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStyleFactory
int drv_QStyleFactory(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStyleFactory *pThis = (QStyleFactory*)_p;
	switch (funcid) {
	case 131000+1: {
		delete pThis;
		break;
	}
	case 131102: {
		*(void**)_p = new QStyleFactory();
		break;
	}
	case 131103: {
		*(void**)p2 = QStyleFactory::create(drvGetStringHead(p1));
		break;
	}
	case 131104: {
		drvSetStringArray(p1,QStyleFactory::keys());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStyleHintReturn
int drv_QStyleHintReturn(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QStyleHintReturn *pThis = (QStyleHintReturn*)_p;
	switch (funcid) {
	case 132000+1: {
		delete pThis;
		break;
	}
	case 132102: {
		*(void**)_p = new QStyleHintReturn();
		break;
	}
	case 132103: {
		*(void**)_p = new QStyleHintReturn(*(int*)p1,*(int*)p2);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QStyleHintReturnMask
int drv_QStyleHintReturnMask(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStyleHintReturnMask *pThis = (QStyleHintReturnMask*)_p;
	switch (funcid) {
	case 133000+1: {
		delete pThis;
		break;
	}
	case 133102: {
		*(void**)_p = new QStyleHintReturnMask();
		break;
	}
	default:
		return drv_QStyleHintReturn(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStyleHintReturnVariant
int drv_QStyleHintReturnVariant(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStyleHintReturnVariant *pThis = (QStyleHintReturnVariant*)_p;
	switch (funcid) {
	case 134000+1: {
		delete pThis;
		break;
	}
	case 134102: {
		*(void**)_p = new QStyleHintReturnVariant();
		break;
	}
	default:
		return drv_QStyleHintReturn(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStylePainter
int drv_QStylePainter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStylePainter *pThis = (QStylePainter*)_p;
	switch (funcid) {
	case 135000+1: {
		delete pThis;
		break;
	}
	case 135102: {
		*(void**)_p = new QStylePainter();
		break;
	}
	case 135103: {
		*(void**)_p = new QStylePainter((QWidget*)(p1));
		break;
	}
	case 135104: {
		*(void**)_p = new QStylePainter(drvGetPaintDevice(p1),(QWidget*)(p2));
		break;
	}
	case 135105: {
		*(bool*)p2 = pThis->begin((QWidget*)(p1));
		break;
	}
	case 135106: {
		*(bool*)p3 = pThis->begin(drvGetPaintDevice(p1),(QWidget*)(p2));
		break;
	}
	case 135107: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		pThis->drawItemPixmap(*(QRect*)(p1),*(int*)p2,*(QPixmap*)(p3));
		break;
	}
	case 135108: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		pThis->drawItemText(*(QRect*)(p1),*(int*)p2,*(QPalette*)(p3),*(bool*)p4,drvGetStringHead(p5),*(QPalette::ColorRole*)p6);
		break;
	}
	case 135109: {
		*(void**)p1 = pThis->style();
		break;
	}
	default:
		return drv_QPainter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTableWidgetItem
int drv_QTableWidgetItem(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTableWidgetItem *pThis = (QTableWidgetItem*)_p;
	switch (funcid) {
	case 136000+1: {
		delete pThis;
		break;
	}
	case 136102: {
		*(void**)_p = new QTableWidgetItem();
		break;
	}
	case 136103: {
		if(p1==0)return -2;
		*(void**)_p = new QTableWidgetItem(*(QTableWidgetItem*)(p1));
		break;
	}
	case 136104: {
		*(void**)_p = new QTableWidgetItem(*(int*)p1);
		break;
	}
	case 136105: {
		*(void**)_p = new QTableWidgetItem(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 136106: {
		if(p1==0)return -2;
		*(void**)_p = new QTableWidgetItem(*(QIcon*)(p1),drvGetStringHead(p2),*(int*)p3);
		break;
	}
	case 136107: {
		*(void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 136108: {
		*(void**)p1 = new QColor(pThis->backgroundColor());
		break;
	}
	case 136109: {
		*(Qt::CheckState*)p1 = pThis->checkState();
		break;
	}
	case 136110: {
		*(void**)p1 = pThis->clone();
		break;
	}
	case 136111: {
		*(int*)p1 = pThis->column();
		break;
	}
	case 136112: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 136113: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 136114: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 136115: {
		*(void**)p1 = new QBrush(pThis->foreground());
		break;
	}
	case 136116: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 136117: {
		*(bool*)p1 = pThis->isSelected();
		break;
	}
	case 136118: {
		*(int*)p1 = pThis->row();
		break;
	}
	case 136119: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 136120: {
		if(p1==0)return -2;
		pThis->setBackgroundColor(*(QColor*)(p1));
		break;
	}
	case 136121: {
		pThis->setCheckState(*(Qt::CheckState*)p1);
		break;
	}
	case 136122: {
		if(p2==0)return -2;
		pThis->setData(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 136123: {
		pThis->setFlags(*(QFlags<Qt::ItemFlag>*)p1);
		break;
	}
	case 136124: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 136125: {
		if(p1==0)return -2;
		pThis->setForeground(*(QBrush*)(p1));
		break;
	}
	case 136126: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 136127: {
		pThis->setSelected(*(bool*)p1);
		break;
	}
	case 136128: {
		if(p1==0)return -2;
		pThis->setSizeHint(*(QSize*)(p1));
		break;
	}
	case 136129: {
		pThis->setStatusTip(drvGetStringHead(p1));
		break;
	}
	case 136130: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 136131: {
		pThis->setTextAlignment(*(int*)p1);
		break;
	}
	case 136132: {
		if(p1==0)return -2;
		pThis->setTextColor(*(QColor*)(p1));
		break;
	}
	case 136133: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 136134: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 136135: {
		*(void**)p1 = new QSize(pThis->sizeHint());
		break;
	}
	case 136136: {
		drvSetString(p1,pThis->statusTip());
		break;
	}
	case 136137: {
		*(void**)p1 = pThis->tableWidget();
		break;
	}
	case 136138: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 136139: {
		*(int*)p1 = pThis->textAlignment();
		break;
	}
	case 136140: {
		*(void**)p1 = new QColor(pThis->textColor());
		break;
	}
	case 136141: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 136142: {
		*(int*)p1 = pThis->type();
		break;
	}
	case 136143: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTableWidgetSelectionRange
int drv_QTableWidgetSelectionRange(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTableWidgetSelectionRange *pThis = (QTableWidgetSelectionRange*)_p;
	switch (funcid) {
	case 137000+1: {
		delete pThis;
		break;
	}
	case 137102: {
		*(void**)_p = new QTableWidgetSelectionRange();
		break;
	}
	case 137103: {
		if(p1==0)return -2;
		*(void**)_p = new QTableWidgetSelectionRange(*(QTableWidgetSelectionRange*)(p1));
		break;
	}
	case 137104: {
		*(void**)_p = new QTableWidgetSelectionRange(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 137105: {
		*(int*)p1 = pThis->bottomRow();
		break;
	}
	case 137106: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 137107: {
		*(int*)p1 = pThis->leftColumn();
		break;
	}
	case 137108: {
		*(int*)p1 = pThis->rightColumn();
		break;
	}
	case 137109: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 137110: {
		*(int*)p1 = pThis->topRow();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTabletEvent
int drv_QTabletEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTabletEvent *pThis = (QTabletEvent*)_p;
	switch (funcid) {
	case 138000+1: {
		delete pThis;
		break;
	}
	case 138102: {
		*(QTabletEvent::TabletDevice*)p1 = pThis->device();
		break;
	}
	case 138103: {
		*(const void**)p1 = new QPoint(pThis->globalPos());
		break;
	}
	case 138104: {
		*(int*)p1 = pThis->globalX();
		break;
	}
	case 138105: {
		*(int*)p1 = pThis->globalY();
		break;
	}
	case 138106: {
		*(double*)p1 = pThis->hiResGlobalX();
		break;
	}
	case 138107: {
		*(double*)p1 = pThis->hiResGlobalY();
		break;
	}
	case 138108: {
		*(QTabletEvent::PointerType*)p1 = pThis->pointerType();
		break;
	}
	case 138109: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 138110: {
		*(double*)p1 = pThis->pressure();
		break;
	}
	case 138111: {
		*(double*)p1 = pThis->rotation();
		break;
	}
	case 138112: {
		*(double*)p1 = pThis->tangentialPressure();
		break;
	}
	case 138113: {
		*(qint64*)p1 = pThis->uniqueId();
		break;
	}
	case 138114: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 138115: {
		*(int*)p1 = pThis->xTilt();
		break;
	}
	case 138116: {
		*(int*)p1 = pThis->y();
		break;
	}
	case 138117: {
		*(int*)p1 = pThis->yTilt();
		break;
	}
	case 138118: {
		*(int*)p1 = pThis->z();
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextBlock
int drv_QTextBlock(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextBlock *pThis = (QTextBlock*)_p;
	switch (funcid) {
	case 139000+1: {
		delete pThis;
		break;
	}
	case 139102: {
		*(void**)_p = new QTextBlock();
		break;
	}
	case 139103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextBlock(*(QTextBlock*)(p1));
		break;
	}
	case 139104: {
		*(void**)p1 = new QTextBlock::iterator(pThis->begin());
		break;
	}
	case 139105: {
		*(void**)p1 = new QTextBlockFormat(pThis->blockFormat());
		break;
	}
	case 139106: {
		*(int*)p1 = pThis->blockFormatIndex();
		break;
	}
	case 139107: {
		*(int*)p1 = pThis->blockNumber();
		break;
	}
	case 139108: {
		*(void**)p1 = new QTextCharFormat(pThis->charFormat());
		break;
	}
	case 139109: {
		*(int*)p1 = pThis->charFormatIndex();
		break;
	}
	case 139110: {
		pThis->clearLayout();
		break;
	}
	case 139111: {
		*(bool*)p2 = pThis->contains(*(int*)p1);
		break;
	}
	case 139112: {
		*(const void**)p1 = pThis->document();
		break;
	}
	case 139113: {
		*(void**)p1 = new QTextBlock::iterator(pThis->end());
		break;
	}
	case 139114: {
		*(int*)p1 = pThis->firstLineNumber();
		break;
	}
	case 139115: {
		*(int*)p1 = pThis->fragmentIndex();
		break;
	}
	case 139116: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 139117: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 139118: {
		*(void**)p1 = pThis->layout();
		break;
	}
	case 139119: {
		*(int*)p1 = pThis->length();
		break;
	}
	case 139120: {
		*(int*)p1 = pThis->lineCount();
		break;
	}
	case 139121: {
		*(void**)p1 = new QTextBlock(pThis->next());
		break;
	}
	case 139122: {
		*(int*)p1 = pThis->position();
		break;
	}
	case 139123: {
		*(void**)p1 = new QTextBlock(pThis->previous());
		break;
	}
	case 139124: {
		*(int*)p1 = pThis->revision();
		break;
	}
	case 139125: {
		pThis->setLineCount(*(int*)p1);
		break;
	}
	case 139126: {
		pThis->setRevision(*(int*)p1);
		break;
	}
	case 139127: {
		pThis->setUserData((QTextBlockUserData*)(p1));
		break;
	}
	case 139128: {
		pThis->setUserState(*(int*)p1);
		break;
	}
	case 139129: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	case 139130: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 139131: {
		*(Qt::LayoutDirection*)p1 = pThis->textDirection();
		break;
	}
	case 139132: {
		*(void**)p1 = pThis->textList();
		break;
	}
	case 139133: {
		*(void**)p1 = pThis->userData();
		break;
	}
	case 139134: {
		*(int*)p1 = pThis->userState();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextBlock_iterator
int drv_QTextBlock_iterator(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextBlock::iterator *pThis = (QTextBlock::iterator*)_p;
	switch (funcid) {
	case 140000+1: {
		delete pThis;
		break;
	}
	case 140102: {
		*(bool*)p1 = pThis->atEnd();
		break;
	}
	case 140103: {
		*(void**)p1 = new QTextFragment(pThis->fragment());
		break;
	}
	case 140104: {
		*(void**)_p = new QTextBlock::iterator();
		break;
	}
	case 140105: {
		if(p1==0)return -2;
		*(void**)_p = new QTextBlock::iterator(*(QTextBlock::iterator*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextBlockFormat
int drv_QTextBlockFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextBlockFormat *pThis = (QTextBlockFormat*)_p;
	switch (funcid) {
	case 141000+1: {
		delete pThis;
		break;
	}
	case 141102: {
		*(void**)_p = new QTextBlockFormat();
		break;
	}
	case 141103: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 141104: {
		*(double*)p1 = pThis->bottomMargin();
		break;
	}
	case 141105: {
		*(int*)p1 = pThis->indent();
		break;
	}
	case 141106: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 141107: {
		*(double*)p1 = pThis->leftMargin();
		break;
	}
	case 141108: {
		*(bool*)p1 = pThis->nonBreakableLines();
		break;
	}
	case 141109: {
		*(QFlags<QTextFormat::PageBreakFlag>*)p1 = pThis->pageBreakPolicy();
		break;
	}
	case 141110: {
		*(double*)p1 = pThis->rightMargin();
		break;
	}
	case 141111: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 141112: {
		pThis->setBottomMargin(*(double*)p1);
		break;
	}
	case 141113: {
		pThis->setIndent(*(int*)p1);
		break;
	}
	case 141114: {
		pThis->setLeftMargin(*(double*)p1);
		break;
	}
	case 141115: {
		pThis->setNonBreakableLines(*(bool*)p1);
		break;
	}
	case 141116: {
		pThis->setPageBreakPolicy(*(QFlags<QTextFormat::PageBreakFlag>*)p1);
		break;
	}
	case 141117: {
		pThis->setRightMargin(*(double*)p1);
		break;
	}
	case 141118: {
		pThis->setTabPositions(drvGetNoObjectArrayHeadT<QTextOption::Tab>(p1));
		break;
	}
	case 141119: {
		pThis->setTextIndent(*(double*)p1);
		break;
	}
	case 141120: {
		pThis->setTopMargin(*(double*)p1);
		break;
	}
	case 141121: {
		drvSetListPtr<QTextOption::Tab>(p1,167000,pThis->tabPositions());
		break;
	}
	case 141122: {
		*(double*)p1 = pThis->textIndent();
		break;
	}
	case 141123: {
		*(double*)p1 = pThis->topMargin();
		break;
	}
	default:
		return drv_QTextFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextBlockUserData
int drv_QTextBlockUserData(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextBlockUserData *pThis = (QTextBlockUserData*)_p;
	switch (funcid) {
	case 142000+1: {
		delete pThis;
		break;
	}
	case 142102: {
		*(void**)_p = new QTextBlockUserData();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextBoundaryFinder
int drv_QTextBoundaryFinder(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QTextBoundaryFinder *pThis = (QTextBoundaryFinder*)_p;
	switch (funcid) {
	case 143000+1: {
		delete pThis;
		break;
	}
	case 143102: {
		*(void**)_p = new QTextBoundaryFinder();
		break;
	}
	case 143103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextBoundaryFinder(*(QTextBoundaryFinder*)(p1));
		break;
	}
	case 143104: {
		*(void**)_p = new QTextBoundaryFinder(*(QTextBoundaryFinder::BoundaryType*)p1,drvGetStringHead(p2));
		break;
	}
	case 143105: {
		*(void**)_p = new QTextBoundaryFinder(*(QTextBoundaryFinder::BoundaryType*)p1,*(QChar const**)p2,*(int*)p3,*(unsigned char**)p4,*(int*)p5);
		break;
	}
	case 143106: {
		*(QFlags<QTextBoundaryFinder::BoundaryReason>*)p1 = pThis->boundaryReasons();
		break;
	}
	case 143107: {
		*(bool*)p1 = pThis->isAtBoundary();
		break;
	}
	case 143108: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 143109: {
		*(int*)p1 = pThis->position();
		break;
	}
	case 143110: {
		pThis->setPosition(*(int*)p1);
		break;
	}
	case 143111: {
		drvSetString(p1,pThis->string());
		break;
	}
	case 143112: {
		pThis->toEnd();
		break;
	}
	case 143113: {
		*(int*)p1 = pThis->toNextBoundary();
		break;
	}
	case 143114: {
		*(int*)p1 = pThis->toPreviousBoundary();
		break;
	}
	case 143115: {
		pThis->toStart();
		break;
	}
	case 143116: {
		*(QTextBoundaryFinder::BoundaryType*)p1 = pThis->type();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextCharFormat
int drv_QTextCharFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextCharFormat *pThis = (QTextCharFormat*)_p;
	switch (funcid) {
	case 144000+1: {
		delete pThis;
		break;
	}
	case 144102: {
		*(void**)_p = new QTextCharFormat();
		break;
	}
	case 144103: {
		drvSetString(p1,pThis->anchorHref());
		break;
	}
	case 144104: {
		drvSetString(p1,pThis->anchorName());
		break;
	}
	case 144105: {
		drvSetStringArray(p1,pThis->anchorNames());
		break;
	}
	case 144106: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 144107: {
		*(QFont::Capitalization*)p1 = pThis->fontCapitalization();
		break;
	}
	case 144108: {
		drvSetString(p1,pThis->fontFamily());
		break;
	}
	case 144109: {
		*(bool*)p1 = pThis->fontFixedPitch();
		break;
	}
	case 144110: {
		*(bool*)p1 = pThis->fontItalic();
		break;
	}
	case 144111: {
		*(bool*)p1 = pThis->fontKerning();
		break;
	}
	case 144112: {
		*(double*)p1 = pThis->fontLetterSpacing();
		break;
	}
	case 144113: {
		*(bool*)p1 = pThis->fontOverline();
		break;
	}
	case 144114: {
		*(double*)p1 = pThis->fontPointSize();
		break;
	}
	case 144115: {
		*(bool*)p1 = pThis->fontStrikeOut();
		break;
	}
	case 144116: {
		*(QFont::StyleHint*)p1 = pThis->fontStyleHint();
		break;
	}
	case 144117: {
		*(QFont::StyleStrategy*)p1 = pThis->fontStyleStrategy();
		break;
	}
	case 144118: {
		*(bool*)p1 = pThis->fontUnderline();
		break;
	}
	case 144119: {
		*(int*)p1 = pThis->fontWeight();
		break;
	}
	case 144120: {
		*(double*)p1 = pThis->fontWordSpacing();
		break;
	}
	case 144121: {
		*(bool*)p1 = pThis->isAnchor();
		break;
	}
	case 144122: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 144123: {
		pThis->setAnchor(*(bool*)p1);
		break;
	}
	case 144124: {
		pThis->setAnchorHref(drvGetStringHead(p1));
		break;
	}
	case 144125: {
		pThis->setAnchorName(drvGetStringHead(p1));
		break;
	}
	case 144126: {
		pThis->setAnchorNames(drvGetStringArray(p1));
		break;
	}
	case 144127: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 144128: {
		pThis->setFontCapitalization(*(QFont::Capitalization*)p1);
		break;
	}
	case 144129: {
		pThis->setFontFamily(drvGetStringHead(p1));
		break;
	}
	case 144130: {
		pThis->setFontFixedPitch(*(bool*)p1);
		break;
	}
	case 144131: {
		pThis->setFontItalic(*(bool*)p1);
		break;
	}
	case 144132: {
		pThis->setFontKerning(*(bool*)p1);
		break;
	}
	case 144133: {
		pThis->setFontLetterSpacing(*(double*)p1);
		break;
	}
	case 144134: {
		pThis->setFontOverline(*(bool*)p1);
		break;
	}
	case 144135: {
		pThis->setFontPointSize(*(double*)p1);
		break;
	}
	case 144136: {
		pThis->setFontStrikeOut(*(bool*)p1);
		break;
	}
	case 144137: {
		pThis->setFontStyleHint(*(QFont::StyleHint*)p1);
		break;
	}
	case 144138: {
		pThis->setFontStyleHint(*(QFont::StyleHint*)p1,*(QFont::StyleStrategy*)p2);
		break;
	}
	case 144139: {
		pThis->setFontStyleStrategy(*(QFont::StyleStrategy*)p1);
		break;
	}
	case 144140: {
		pThis->setFontUnderline(*(bool*)p1);
		break;
	}
	case 144141: {
		pThis->setFontWeight(*(int*)p1);
		break;
	}
	case 144142: {
		pThis->setFontWordSpacing(*(double*)p1);
		break;
	}
	case 144143: {
		pThis->setTableCellColumnSpan(*(int*)p1);
		break;
	}
	case 144144: {
		pThis->setTableCellRowSpan(*(int*)p1);
		break;
	}
	case 144145: {
		if(p1==0)return -2;
		pThis->setTextOutline(*(QPen*)(p1));
		break;
	}
	case 144146: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 144147: {
		if(p1==0)return -2;
		pThis->setUnderlineColor(*(QColor*)(p1));
		break;
	}
	case 144148: {
		pThis->setUnderlineStyle(*(QTextCharFormat::UnderlineStyle*)p1);
		break;
	}
	case 144149: {
		pThis->setVerticalAlignment(*(QTextCharFormat::VerticalAlignment*)p1);
		break;
	}
	case 144150: {
		*(int*)p1 = pThis->tableCellColumnSpan();
		break;
	}
	case 144151: {
		*(int*)p1 = pThis->tableCellRowSpan();
		break;
	}
	case 144152: {
		*(void**)p1 = new QPen(pThis->textOutline());
		break;
	}
	case 144153: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 144154: {
		*(void**)p1 = new QColor(pThis->underlineColor());
		break;
	}
	case 144155: {
		*(QTextCharFormat::UnderlineStyle*)p1 = pThis->underlineStyle();
		break;
	}
	case 144156: {
		*(QTextCharFormat::VerticalAlignment*)p1 = pThis->verticalAlignment();
		break;
	}
	default:
		return drv_QTextFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextCodec
int drv_QTextCodec(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextCodec *pThis = (QTextCodec*)_p;
	switch (funcid) {
	case 145102: {
		drvSetBytesArray(p1,pThis->aliases());
		break;
	}
	case 145103: {
		drvSetBytesArray(p1,QTextCodec::availableCodecs());
		break;
	}
	case 145104: {
		drvSetList<int>(p1,QTextCodec::availableMibs());
		break;
	}
	case 145105: {
		*(bool*)p2 = pThis->canEncode(*(QChar*)p1);
		break;
	}
	case 145106: {
		*(bool*)p2 = pThis->canEncode(drvGetStringHead(p1));
		break;
	}
	case 145107: {
		*(void**)p2 = QTextCodec::codecForHtml(drvGetByteArrayHead(p1));
		break;
	}
	case 145108: {
		*(void**)p3 = QTextCodec::codecForHtml(drvGetByteArrayHead(p1),(QTextCodec*)(p2));
		break;
	}
	case 145109: {
		*(void**)p1 = QTextCodec::codecForLocale();
		break;
	}
	case 145110: {
		*(void**)p2 = QTextCodec::codecForMib(*(int*)p1);
		break;
	}
	case 145111: {
		*(void**)p2 = QTextCodec::codecForName(drvGetByteArrayHead(p1));
		break;
	}
	case 145112: {
		*(void**)p2 = QTextCodec::codecForName(drvGet_const_char(p1));
		break;
	}
	case 145113: {
		*(void**)p2 = QTextCodec::codecForUtfText(drvGetByteArrayHead(p1));
		break;
	}
	case 145114: {
		*(void**)p3 = QTextCodec::codecForUtfText(drvGetByteArrayHead(p1),(QTextCodec*)(p2));
		break;
	}
	case 145115: {
		drvSetByteArray(p2,pThis->fromUnicode(drvGetStringHead(p1)));
		break;
	}
	case 145116: {
		drvSetByteArray(p4,pThis->fromUnicode(*(QChar const**)p1,*(int*)p2,(QTextCodec::ConverterState*)(p3)));
		break;
	}
	case 145117: {
		*(void**)p1 = pThis->makeDecoder();
		break;
	}
	case 145118: {
		*(void**)p2 = pThis->makeDecoder(*(QFlags<QTextCodec::ConversionFlag>*)p1);
		break;
	}
	case 145119: {
		*(void**)p1 = pThis->makeEncoder();
		break;
	}
	case 145120: {
		*(void**)p2 = pThis->makeEncoder(*(QFlags<QTextCodec::ConversionFlag>*)p1);
		break;
	}
	case 145121: {
		*(int*)p1 = pThis->mibEnum();
		break;
	}
	case 145122: {
		drvSetByteArray(p1,pThis->name());
		break;
	}
	case 145123: {
		QTextCodec::setCodecForLocale((QTextCodec*)(p1));
		break;
	}
	case 145124: {
		drvSetString(p2,pThis->toUnicode(drvGetByteArrayHead(p1)));
		break;
	}
	case 145125: {
		drvSetString(p2,pThis->toUnicode(drvGet_const_char(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextCodec_ConverterState
int drv_QTextCodec_ConverterState(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextCodec::ConverterState *pThis = (QTextCodec::ConverterState*)_p;
	switch (funcid) {
	case 146000+1: {
		delete pThis;
		break;
	}
	case 146102: {
		*(void**)_p = new QTextCodec::ConverterState();
		break;
	}
	case 146103: {
		*(void**)_p = new QTextCodec::ConverterState(*(QFlags<QTextCodec::ConversionFlag>*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextCursor
int drv_QTextCursor(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextCursor *pThis = (QTextCursor*)_p;
	switch (funcid) {
	case 147000+1: {
		delete pThis;
		break;
	}
	case 147102: {
		*(void**)_p = new QTextCursor();
		break;
	}
	case 147103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextCursor(*(QTextBlock*)(p1));
		break;
	}
	case 147104: {
		if(p1==0)return -2;
		*(void**)_p = new QTextCursor(*(QTextCursor*)(p1));
		break;
	}
	case 147105: {
		*(void**)_p = new QTextCursor((QTextDocument*)(p1));
		break;
	}
	case 147106: {
		*(void**)_p = new QTextCursor((QTextFrame*)(p1));
		break;
	}
	case 147107: {
		*(int*)p1 = pThis->anchor();
		break;
	}
	case 147108: {
		*(bool*)p1 = pThis->atBlockEnd();
		break;
	}
	case 147109: {
		*(bool*)p1 = pThis->atBlockStart();
		break;
	}
	case 147110: {
		*(bool*)p1 = pThis->atEnd();
		break;
	}
	case 147111: {
		*(bool*)p1 = pThis->atStart();
		break;
	}
	case 147112: {
		pThis->beginEditBlock();
		break;
	}
	case 147113: {
		*(void**)p1 = new QTextBlock(pThis->block());
		break;
	}
	case 147114: {
		*(void**)p1 = new QTextCharFormat(pThis->blockCharFormat());
		break;
	}
	case 147115: {
		*(void**)p1 = new QTextBlockFormat(pThis->blockFormat());
		break;
	}
	case 147116: {
		*(int*)p1 = pThis->blockNumber();
		break;
	}
	case 147117: {
		*(void**)p1 = new QTextCharFormat(pThis->charFormat());
		break;
	}
	case 147118: {
		pThis->clearSelection();
		break;
	}
	case 147119: {
		*(int*)p1 = pThis->columnNumber();
		break;
	}
	case 147120: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->createList(*(QTextListFormat*)(p1));
		break;
	}
	case 147121: {
		*(void**)p2 = pThis->createList(*(QTextListFormat::Style*)p1);
		break;
	}
	case 147122: {
		*(void**)p1 = pThis->currentFrame();
		break;
	}
	case 147123: {
		*(void**)p1 = pThis->currentList();
		break;
	}
	case 147124: {
		*(void**)p1 = pThis->currentTable();
		break;
	}
	case 147125: {
		pThis->deleteChar();
		break;
	}
	case 147126: {
		pThis->deletePreviousChar();
		break;
	}
	case 147127: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 147128: {
		pThis->endEditBlock();
		break;
	}
	case 147129: {
		*(bool*)p1 = pThis->hasComplexSelection();
		break;
	}
	case 147130: {
		*(bool*)p1 = pThis->hasSelection();
		break;
	}
	case 147131: {
		pThis->insertBlock();
		break;
	}
	case 147132: {
		if(p1==0)return -2;
		pThis->insertBlock(*(QTextBlockFormat*)(p1));
		break;
	}
	case 147133: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->insertBlock(*(QTextBlockFormat*)(p1),*(QTextCharFormat*)(p2));
		break;
	}
	case 147134: {
		if(p1==0)return -2;
		pThis->insertFragment(*(QTextDocumentFragment*)(p1));
		break;
	}
	case 147135: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->insertFrame(*(QTextFrameFormat*)(p1));
		break;
	}
	case 147136: {
		pThis->insertHtml(drvGetStringHead(p1));
		break;
	}
	case 147137: {
		if(p1==0)return -2;
		pThis->insertImage(*(QImage*)(p1));
		break;
	}
	case 147138: {
		pThis->insertImage(drvGetStringHead(p1));
		break;
	}
	case 147139: {
		if(p1==0)return -2;
		pThis->insertImage(*(QTextImageFormat*)(p1));
		break;
	}
	case 147140: {
		if(p1==0)return -2;
		pThis->insertImage(*(QImage*)(p1),drvGetStringHead(p2));
		break;
	}
	case 147141: {
		if(p1==0)return -2;
		pThis->insertImage(*(QTextImageFormat*)(p1),*(QTextFrameFormat::Position*)p2);
		break;
	}
	case 147142: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->insertList(*(QTextListFormat*)(p1));
		break;
	}
	case 147143: {
		*(void**)p2 = pThis->insertList(*(QTextListFormat::Style*)p1);
		break;
	}
	case 147144: {
		*(void**)p3 = pThis->insertTable(*(int*)p1,*(int*)p2);
		break;
	}
	case 147145: {
		if(p3==0)return -2;
		*(void**)p4 = pThis->insertTable(*(int*)p1,*(int*)p2,*(QTextTableFormat*)(p3));
		break;
	}
	case 147146: {
		pThis->insertText(drvGetStringHead(p1));
		break;
	}
	case 147147: {
		if(p2==0)return -2;
		pThis->insertText(drvGetStringHead(p1),*(QTextCharFormat*)(p2));
		break;
	}
	case 147148: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isCopyOf(*(QTextCursor*)(p1));
		break;
	}
	case 147149: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 147150: {
		pThis->joinPreviousEditBlock();
		break;
	}
	case 147151: {
		*(bool*)p1 = pThis->keepPositionOnInsert();
		break;
	}
	case 147152: {
		if(p1==0)return -2;
		pThis->mergeBlockCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 147153: {
		if(p1==0)return -2;
		pThis->mergeBlockFormat(*(QTextBlockFormat*)(p1));
		break;
	}
	case 147154: {
		if(p1==0)return -2;
		pThis->mergeCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 147155: {
		*(bool*)p2 = pThis->movePosition(*(QTextCursor::MoveOperation*)p1);
		break;
	}
	case 147156: {
		*(bool*)p4 = pThis->movePosition(*(QTextCursor::MoveOperation*)p1,*(QTextCursor::MoveMode*)p2,*(int*)p3);
		break;
	}
	case 147157: {
		*(int*)p1 = pThis->position();
		break;
	}
	case 147158: {
		*(int*)p1 = pThis->positionInBlock();
		break;
	}
	case 147159: {
		pThis->removeSelectedText();
		break;
	}
	case 147160: {
		pThis->select(*(QTextCursor::SelectionType*)p1);
		break;
	}
	case 147161: {
		pThis->selectedTableCells(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 147162: {
		drvSetString(p1,pThis->selectedText());
		break;
	}
	case 147163: {
		*(void**)p1 = new QTextDocumentFragment(pThis->selection());
		break;
	}
	case 147164: {
		*(int*)p1 = pThis->selectionEnd();
		break;
	}
	case 147165: {
		*(int*)p1 = pThis->selectionStart();
		break;
	}
	case 147166: {
		if(p1==0)return -2;
		pThis->setBlockCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 147167: {
		if(p1==0)return -2;
		pThis->setBlockFormat(*(QTextBlockFormat*)(p1));
		break;
	}
	case 147168: {
		if(p1==0)return -2;
		pThis->setCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 147169: {
		pThis->setKeepPositionOnInsert(*(bool*)p1);
		break;
	}
	case 147170: {
		pThis->setPosition(*(int*)p1);
		break;
	}
	case 147171: {
		pThis->setPosition(*(int*)p1,*(QTextCursor::MoveMode*)p2);
		break;
	}
	case 147172: {
		pThis->setVerticalMovementX(*(int*)p1);
		break;
	}
	case 147173: {
		pThis->setVisualNavigation(*(bool*)p1);
		break;
	}
	case 147174: {
		*(int*)p1 = pThis->verticalMovementX();
		break;
	}
	case 147175: {
		*(bool*)p1 = pThis->visualNavigation();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextDecoder
int drv_QTextDecoder(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextDecoder *pThis = (QTextDecoder*)_p;
	switch (funcid) {
	case 148000+1: {
		delete pThis;
		break;
	}
	case 148102: {
		*(void**)_p = new QTextDecoder((QTextCodec*)(p1));
		break;
	}
	case 148103: {
		*(void**)_p = new QTextDecoder((QTextCodec*)(p1),*(QFlags<QTextCodec::ConversionFlag>*)p2);
		break;
	}
	case 148104: {
		*(bool*)p1 = pThis->hasFailure();
		break;
	}
	case 148105: {
		drvSetString(p2,pThis->toUnicode(drvGetByteArrayHead(p1)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextDocumentFragment
int drv_QTextDocumentFragment(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextDocumentFragment *pThis = (QTextDocumentFragment*)_p;
	switch (funcid) {
	case 149000+1: {
		delete pThis;
		break;
	}
	case 149102: {
		*(void**)_p = new QTextDocumentFragment();
		break;
	}
	case 149103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextDocumentFragment(*(QTextCursor*)(p1));
		break;
	}
	case 149104: {
		*(void**)_p = new QTextDocumentFragment((QTextDocument*)(p1));
		break;
	}
	case 149105: {
		if(p1==0)return -2;
		*(void**)_p = new QTextDocumentFragment(*(QTextDocumentFragment*)(p1));
		break;
	}
	case 149106: {
		*(void**)p2 = new QTextDocumentFragment(QTextDocumentFragment::fromHtml(drvGetStringHead(p1)));
		break;
	}
	case 149107: {
		*(void**)p3 = new QTextDocumentFragment(QTextDocumentFragment::fromHtml(drvGetStringHead(p1),(QTextDocument*)(p2)));
		break;
	}
	case 149108: {
		*(void**)p2 = new QTextDocumentFragment(QTextDocumentFragment::fromPlainText(drvGetStringHead(p1)));
		break;
	}
	case 149109: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 149110: {
		drvSetString(p1,pThis->toHtml());
		break;
	}
	case 149111: {
		drvSetString(p2,pThis->toHtml(drvGetByteArrayHead(p1)));
		break;
	}
	case 149112: {
		drvSetString(p1,pThis->toPlainText());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextDocumentWriter
int drv_QTextDocumentWriter(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextDocumentWriter *pThis = (QTextDocumentWriter*)_p;
	switch (funcid) {
	case 150000+1: {
		delete pThis;
		break;
	}
	case 150102: {
		*(void**)_p = new QTextDocumentWriter();
		break;
	}
	case 150103: {
		*(void**)_p = new QTextDocumentWriter((QIODevice*)(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 150104: {
		*(void**)_p = new QTextDocumentWriter(drvGetStringHead(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 150105: {
		*(void**)p1 = pThis->codec();
		break;
	}
	case 150106: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 150107: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 150108: {
		drvSetByteArray(p1,pThis->format());
		break;
	}
	case 150109: {
		pThis->setCodec((QTextCodec*)(p1));
		break;
	}
	case 150110: {
		pThis->setDevice((QIODevice*)(p1));
		break;
	}
	case 150111: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 150112: {
		pThis->setFormat(drvGetByteArrayHead(p1));
		break;
	}
	case 150113: {
		drvSetBytesArray(p1,QTextDocumentWriter::supportedDocumentFormats());
		break;
	}
	case 150114: {
		*(bool*)p2 = pThis->write((QTextDocument*)(p1));
		break;
	}
	case 150115: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->write(*(QTextDocumentFragment*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextEdit_ExtraSelection
int drv_QTextEdit_ExtraSelection(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextEdit::ExtraSelection *pThis = (QTextEdit::ExtraSelection*)_p;
	switch (funcid) {
	case 151000+1: {
		delete pThis;
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextEncoder
int drv_QTextEncoder(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextEncoder *pThis = (QTextEncoder*)_p;
	switch (funcid) {
	case 152000+1: {
		delete pThis;
		break;
	}
	case 152102: {
		*(void**)_p = new QTextEncoder((QTextCodec*)(p1));
		break;
	}
	case 152103: {
		*(void**)_p = new QTextEncoder((QTextCodec*)(p1),*(QFlags<QTextCodec::ConversionFlag>*)p2);
		break;
	}
	case 152104: {
		drvSetByteArray(p2,pThis->fromUnicode(drvGetStringHead(p1)));
		break;
	}
	case 152105: {
		drvSetByteArray(p3,pThis->fromUnicode(*(QChar const**)p1,*(int*)p2));
		break;
	}
	case 152106: {
		*(bool*)p1 = pThis->hasFailure();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextFormat
int drv_QTextFormat(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextFormat *pThis = (QTextFormat*)_p;
	switch (funcid) {
	case 153000+1: {
		delete pThis;
		break;
	}
	case 153102: {
		*(void**)_p = new QTextFormat();
		break;
	}
	case 153103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextFormat(*(QTextFormat*)(p1));
		break;
	}
	case 153104: {
		*(void**)_p = new QTextFormat(*(int*)p1);
		break;
	}
	case 153105: {
		*(void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 153106: {
		*(bool*)p2 = pThis->boolProperty(*(int*)p1);
		break;
	}
	case 153107: {
		*(void**)p2 = new QBrush(pThis->brushProperty(*(int*)p1));
		break;
	}
	case 153108: {
		pThis->clearBackground();
		break;
	}
	case 153109: {
		pThis->clearForeground();
		break;
	}
	case 153110: {
		pThis->clearProperty(*(int*)p1);
		break;
	}
	case 153111: {
		*(void**)p2 = new QColor(pThis->colorProperty(*(int*)p1));
		break;
	}
	case 153112: {
		*(double*)p2 = pThis->doubleProperty(*(int*)p1);
		break;
	}
	case 153113: {
		*(void**)p1 = new QBrush(pThis->foreground());
		break;
	}
	case 153114: {
		*(bool*)p2 = pThis->hasProperty(*(int*)p1);
		break;
	}
	case 153115: {
		*(int*)p2 = pThis->intProperty(*(int*)p1);
		break;
	}
	case 153116: {
		*(bool*)p1 = pThis->isBlockFormat();
		break;
	}
	case 153117: {
		*(bool*)p1 = pThis->isCharFormat();
		break;
	}
	case 153118: {
		*(bool*)p1 = pThis->isFrameFormat();
		break;
	}
	case 153119: {
		*(bool*)p1 = pThis->isImageFormat();
		break;
	}
	case 153120: {
		*(bool*)p1 = pThis->isListFormat();
		break;
	}
	case 153121: {
		*(bool*)p1 = pThis->isTableCellFormat();
		break;
	}
	case 153122: {
		*(bool*)p1 = pThis->isTableFormat();
		break;
	}
	case 153123: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 153124: {
		*(Qt::LayoutDirection*)p1 = pThis->layoutDirection();
		break;
	}
	case 153125: {
		*(void**)p2 = new QTextLength(pThis->lengthProperty(*(int*)p1));
		break;
	}
	case 153126: {
		drvSetVectorPtr<QTextLength>(p2,162000,pThis->lengthVectorProperty(*(int*)p1));
		break;
	}
	case 153127: {
		if(p1==0)return -2;
		pThis->merge(*(QTextFormat*)(p1));
		break;
	}
	case 153128: {
		*(int*)p1 = pThis->objectIndex();
		break;
	}
	case 153129: {
		*(int*)p1 = pThis->objectType();
		break;
	}
	case 153130: {
		*(void**)p2 = new QPen(pThis->penProperty(*(int*)p1));
		break;
	}
	case 153131: {
		*(void**)p1 = new QIntVariantMap(pThis->properties());
		break;
	}
	case 153132: {
		*(void**)p2 = new QVariant(pThis->property(*(int*)p1));
		break;
	}
	case 153133: {
		*(int*)p1 = pThis->propertyCount();
		break;
	}
	case 153134: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 153135: {
		if(p1==0)return -2;
		pThis->setForeground(*(QBrush*)(p1));
		break;
	}
	case 153136: {
		pThis->setLayoutDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 153137: {
		pThis->setObjectIndex(*(int*)p1);
		break;
	}
	case 153138: {
		pThis->setObjectType(*(int*)p1);
		break;
	}
	case 153139: {
		if(p2==0)return -2;
		pThis->setProperty(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 153140: {
		pThis->setProperty(*(int*)p1,drvGetVectorPtr<QTextLength>(p2));
		break;
	}
	case 153141: {
		drvSetString(p2,pThis->stringProperty(*(int*)p1));
		break;
	}
	case 153142: {
		*(void**)p1 = new QTextBlockFormat(pThis->toBlockFormat());
		break;
	}
	case 153143: {
		*(void**)p1 = new QTextCharFormat(pThis->toCharFormat());
		break;
	}
	case 153144: {
		*(void**)p1 = new QTextFrameFormat(pThis->toFrameFormat());
		break;
	}
	case 153145: {
		*(void**)p1 = new QTextImageFormat(pThis->toImageFormat());
		break;
	}
	case 153146: {
		*(void**)p1 = new QTextListFormat(pThis->toListFormat());
		break;
	}
	case 153147: {
		*(void**)p1 = new QTextTableCellFormat(pThis->toTableCellFormat());
		break;
	}
	case 153148: {
		*(void**)p1 = new QTextTableFormat(pThis->toTableFormat());
		break;
	}
	case 153149: {
		*(int*)p1 = pThis->type();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextFragment
int drv_QTextFragment(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextFragment *pThis = (QTextFragment*)_p;
	switch (funcid) {
	case 154000+1: {
		delete pThis;
		break;
	}
	case 154102: {
		*(void**)_p = new QTextFragment();
		break;
	}
	case 154103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextFragment(*(QTextFragment*)(p1));
		break;
	}
	case 154104: {
		*(void**)p1 = new QTextCharFormat(pThis->charFormat());
		break;
	}
	case 154105: {
		*(int*)p1 = pThis->charFormatIndex();
		break;
	}
	case 154106: {
		*(bool*)p2 = pThis->contains(*(int*)p1);
		break;
	}
	case 154107: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 154108: {
		*(int*)p1 = pThis->length();
		break;
	}
	case 154109: {
		*(int*)p1 = pThis->position();
		break;
	}
	case 154110: {
		drvSetString(p1,pThis->text());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextFrame_iterator
int drv_QTextFrame_iterator(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextFrame::iterator *pThis = (QTextFrame::iterator*)_p;
	switch (funcid) {
	case 155000+1: {
		delete pThis;
		break;
	}
	case 155102: {
		*(bool*)p1 = pThis->atEnd();
		break;
	}
	case 155103: {
		*(void**)p1 = new QTextBlock(pThis->currentBlock());
		break;
	}
	case 155104: {
		*(void**)p1 = pThis->currentFrame();
		break;
	}
	case 155105: {
		*(void**)_p = new QTextFrame::iterator();
		break;
	}
	case 155106: {
		if(p1==0)return -2;
		*(void**)_p = new QTextFrame::iterator(*(QTextFrame::iterator*)(p1));
		break;
	}
	case 155107: {
		*(void**)p1 = pThis->parentFrame();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextFrameFormat
int drv_QTextFrameFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextFrameFormat *pThis = (QTextFrameFormat*)_p;
	switch (funcid) {
	case 156000+1: {
		delete pThis;
		break;
	}
	case 156102: {
		*(void**)_p = new QTextFrameFormat();
		break;
	}
	case 156103: {
		*(double*)p1 = pThis->border();
		break;
	}
	case 156104: {
		*(void**)p1 = new QBrush(pThis->borderBrush());
		break;
	}
	case 156105: {
		*(QTextFrameFormat::BorderStyle*)p1 = pThis->borderStyle();
		break;
	}
	case 156106: {
		*(double*)p1 = pThis->bottomMargin();
		break;
	}
	case 156107: {
		*(void**)p1 = new QTextLength(pThis->height());
		break;
	}
	case 156108: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 156109: {
		*(double*)p1 = pThis->leftMargin();
		break;
	}
	case 156110: {
		*(double*)p1 = pThis->margin();
		break;
	}
	case 156111: {
		*(double*)p1 = pThis->padding();
		break;
	}
	case 156112: {
		*(QFlags<QTextFormat::PageBreakFlag>*)p1 = pThis->pageBreakPolicy();
		break;
	}
	case 156113: {
		*(QTextFrameFormat::Position*)p1 = pThis->position();
		break;
	}
	case 156114: {
		*(double*)p1 = pThis->rightMargin();
		break;
	}
	case 156115: {
		pThis->setBorder(*(double*)p1);
		break;
	}
	case 156116: {
		if(p1==0)return -2;
		pThis->setBorderBrush(*(QBrush*)(p1));
		break;
	}
	case 156117: {
		pThis->setBorderStyle(*(QTextFrameFormat::BorderStyle*)p1);
		break;
	}
	case 156118: {
		pThis->setBottomMargin(*(double*)p1);
		break;
	}
	case 156119: {
		if(p1==0)return -2;
		pThis->setHeight(*(QTextLength*)(p1));
		break;
	}
	case 156120: {
		pThis->setHeight(*(double*)p1);
		break;
	}
	case 156121: {
		pThis->setLeftMargin(*(double*)p1);
		break;
	}
	case 156122: {
		pThis->setMargin(*(double*)p1);
		break;
	}
	case 156123: {
		pThis->setPadding(*(double*)p1);
		break;
	}
	case 156124: {
		pThis->setPageBreakPolicy(*(QFlags<QTextFormat::PageBreakFlag>*)p1);
		break;
	}
	case 156125: {
		pThis->setPosition(*(QTextFrameFormat::Position*)p1);
		break;
	}
	case 156126: {
		pThis->setRightMargin(*(double*)p1);
		break;
	}
	case 156127: {
		pThis->setTopMargin(*(double*)p1);
		break;
	}
	case 156128: {
		if(p1==0)return -2;
		pThis->setWidth(*(QTextLength*)(p1));
		break;
	}
	case 156129: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 156130: {
		*(double*)p1 = pThis->topMargin();
		break;
	}
	case 156131: {
		*(void**)p1 = new QTextLength(pThis->width());
		break;
	}
	default:
		return drv_QTextFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextImageFormat
int drv_QTextImageFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextImageFormat *pThis = (QTextImageFormat*)_p;
	switch (funcid) {
	case 157000+1: {
		delete pThis;
		break;
	}
	case 157102: {
		*(void**)_p = new QTextImageFormat();
		break;
	}
	case 157103: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 157104: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 157105: {
		drvSetString(p1,pThis->name());
		break;
	}
	case 157106: {
		pThis->setHeight(*(double*)p1);
		break;
	}
	case 157107: {
		pThis->setName(drvGetStringHead(p1));
		break;
	}
	case 157108: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 157109: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return drv_QTextCharFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextInlineObject
int drv_QTextInlineObject(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextInlineObject *pThis = (QTextInlineObject*)_p;
	switch (funcid) {
	case 158000+1: {
		delete pThis;
		break;
	}
	case 158102: {
		*(void**)_p = new QTextInlineObject();
		break;
	}
	case 158103: {
		*(double*)p1 = pThis->ascent();
		break;
	}
	case 158104: {
		*(double*)p1 = pThis->descent();
		break;
	}
	case 158105: {
		*(void**)p1 = new QTextFormat(pThis->format());
		break;
	}
	case 158106: {
		*(int*)p1 = pThis->formatIndex();
		break;
	}
	case 158107: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 158108: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 158109: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 158110: {
		pThis->setAscent(*(double*)p1);
		break;
	}
	case 158111: {
		pThis->setDescent(*(double*)p1);
		break;
	}
	case 158112: {
		pThis->setWidth(*(double*)p1);
		break;
	}
	case 158113: {
		*(Qt::LayoutDirection*)p1 = pThis->textDirection();
		break;
	}
	case 158114: {
		*(int*)p1 = pThis->textPosition();
		break;
	}
	case 158115: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextItem
int drv_QTextItem(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextItem *pThis = (QTextItem*)_p;
	switch (funcid) {
	case 159000+1: {
		delete pThis;
		break;
	}
	case 159102: {
		*(void**)_p = new QTextItem();
		break;
	}
	case 159103: {
		*(double*)p1 = pThis->ascent();
		break;
	}
	case 159104: {
		*(double*)p1 = pThis->descent();
		break;
	}
	case 159105: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 159106: {
		*(QFlags<QTextItem::RenderFlag>*)p1 = pThis->renderFlags();
		break;
	}
	case 159107: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 159108: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextLayout
int drv_QTextLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextLayout *pThis = (QTextLayout*)_p;
	switch (funcid) {
	case 160000+1: {
		delete pThis;
		break;
	}
	case 160102: {
		*(void**)_p = new QTextLayout();
		break;
	}
	case 160103: {
		*(void**)_p = new QTextLayout(drvGetStringHead(p1));
		break;
	}
	case 160104: {
		if(p1==0)return -2;
		*(void**)_p = new QTextLayout(*(QTextBlock*)(p1));
		break;
	}
	case 160105: {
		if(p2==0)return -2;
		*(void**)_p = new QTextLayout(drvGetStringHead(p1),*(QFont*)(p2),drvGetPaintDevice(p3));
		break;
	}
	case 160106: {
		drvSetListPtr<QTextLayout::FormatRange>(p1,161000,pThis->additionalFormats());
		break;
	}
	case 160107: {
		pThis->beginLayout();
		break;
	}
	case 160108: {
		*(void**)p1 = new QRectF(pThis->boundingRect());
		break;
	}
	case 160109: {
		*(bool*)p1 = pThis->cacheEnabled();
		break;
	}
	case 160110: {
		pThis->clearAdditionalFormats();
		break;
	}
	case 160111: {
		pThis->clearLayout();
		break;
	}
	case 160112: {
		*(void**)p1 = new QTextLine(pThis->createLine());
		break;
	}
	case 160113: {
		if(p2==0)return -2;
		pThis->draw((QPainter*)(p1),*(QPointF*)(p2),drvGetNoObjectVectorHeadT<QTextLayout::FormatRange>(p3),p4==0?QRectF():*(QRectF*)(p4));
		break;
	}
	case 160114: {
		if(p2==0)return -2;
		pThis->drawCursor((QPainter*)(p1),*(QPointF*)(p2),*(int*)p3);
		break;
	}
	case 160115: {
		if(p2==0)return -2;
		pThis->drawCursor((QPainter*)(p1),*(QPointF*)(p2),*(int*)p3,*(int*)p4);
		break;
	}
	case 160116: {
		pThis->endLayout();
		break;
	}
	case 160117: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 160118: {
		*(bool*)p2 = pThis->isValidCursorPosition(*(int*)p1);
		break;
	}
	case 160119: {
		*(void**)p2 = new QTextLine(pThis->lineAt(*(int*)p1));
		break;
	}
	case 160120: {
		*(int*)p1 = pThis->lineCount();
		break;
	}
	case 160121: {
		*(void**)p2 = new QTextLine(pThis->lineForTextPosition(*(int*)p1));
		break;
	}
	case 160122: {
		*(double*)p1 = pThis->maximumWidth();
		break;
	}
	case 160123: {
		*(double*)p1 = pThis->minimumWidth();
		break;
	}
	case 160124: {
		*(int*)p2 = pThis->nextCursorPosition(*(int*)p1);
		break;
	}
	case 160125: {
		*(int*)p3 = pThis->nextCursorPosition(*(int*)p1,*(QTextLayout::CursorMode*)p2);
		break;
	}
	case 160126: {
		*(void**)p1 = new QPointF(pThis->position());
		break;
	}
	case 160127: {
		*(int*)p1 = pThis->preeditAreaPosition();
		break;
	}
	case 160128: {
		drvSetString(p1,pThis->preeditAreaText());
		break;
	}
	case 160129: {
		*(int*)p2 = pThis->previousCursorPosition(*(int*)p1);
		break;
	}
	case 160130: {
		*(int*)p3 = pThis->previousCursorPosition(*(int*)p1,*(QTextLayout::CursorMode*)p2);
		break;
	}
	case 160131: {
		pThis->setAdditionalFormats(drvGetNoObjectArrayHeadT<QTextLayout::FormatRange>(p1));
		break;
	}
	case 160132: {
		pThis->setCacheEnabled(*(bool*)p1);
		break;
	}
	case 160133: {
		pThis->setFlags(*(int*)p1);
		break;
	}
	case 160134: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 160135: {
		if(p1==0)return -2;
		pThis->setPosition(*(QPointF*)(p1));
		break;
	}
	case 160136: {
		pThis->setPreeditArea(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 160137: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 160138: {
		if(p1==0)return -2;
		pThis->setTextOption(*(QTextOption*)(p1));
		break;
	}
	case 160139: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 160140: {
		*(void**)p1 = new QTextOption(pThis->textOption());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextLayout_FormatRange
int drv_QTextLayout_FormatRange(void *_p, int funcid, void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextLayout::FormatRange *pThis = (QTextLayout::FormatRange*)_p;
	switch (funcid) {
	case 161000+1: {
		delete pThis;
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextLength
int drv_QTextLength(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextLength *pThis = (QTextLength*)_p;
	switch (funcid) {
	case 162000+1: {
		delete pThis;
		break;
	}
	case 162102: {
		*(void**)_p = new QTextLength();
		break;
	}
	case 162103: {
		*(void**)_p = new QTextLength(*(QTextLength::Type*)p1,*(double*)p2);
		break;
	}
	case 162104: {
		*(double*)p1 = pThis->rawValue();
		break;
	}
	case 162105: {
		*(QTextLength::Type*)p1 = pThis->type();
		break;
	}
	case 162106: {
		*(double*)p2 = pThis->value(*(double*)p1);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextLine
int drv_QTextLine(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextLine *pThis = (QTextLine*)_p;
	switch (funcid) {
	case 163000+1: {
		delete pThis;
		break;
	}
	case 163102: {
		*(void**)_p = new QTextLine();
		break;
	}
	case 163103: {
		*(double*)p1 = pThis->ascent();
		break;
	}
	case 163104: {
		*(double*)p2 = pThis->cursorToX(*(int*)p1);
		break;
	}
	case 163105: {
		*(double*)p2 = pThis->cursorToX(*(int**)p1);
		break;
	}
	case 163106: {
		*(double*)p3 = pThis->cursorToX(*(int**)p1,*(QTextLine::Edge*)p2);
		break;
	}
	case 163107: {
		*(double*)p3 = pThis->cursorToX(*(int*)p1,*(QTextLine::Edge*)p2);
		break;
	}
	case 163108: {
		*(double*)p1 = pThis->descent();
		break;
	}
	case 163109: {
		if(p2==0)return -2;
		pThis->draw((QPainter*)(p1),*(QPointF*)(p2),(QTextLayout::FormatRange*)(p3));
		break;
	}
	case 163110: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 163111: {
		*(double*)p1 = pThis->horizontalAdvance();
		break;
	}
	case 163112: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 163113: {
		*(double*)p1 = pThis->leading();
		break;
	}
	case 163114: {
		*(bool*)p1 = pThis->leadingIncluded();
		break;
	}
	case 163115: {
		*(int*)p1 = pThis->lineNumber();
		break;
	}
	case 163116: {
		*(void**)p1 = new QRectF(pThis->naturalTextRect());
		break;
	}
	case 163117: {
		*(double*)p1 = pThis->naturalTextWidth();
		break;
	}
	case 163118: {
		*(void**)p1 = new QPointF(pThis->position());
		break;
	}
	case 163119: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 163120: {
		pThis->setLeadingIncluded(*(bool*)p1);
		break;
	}
	case 163121: {
		pThis->setLineWidth(*(double*)p1);
		break;
	}
	case 163122: {
		pThis->setNumColumns(*(int*)p1);
		break;
	}
	case 163123: {
		pThis->setNumColumns(*(int*)p1,*(double*)p2);
		break;
	}
	case 163124: {
		if(p1==0)return -2;
		pThis->setPosition(*(QPointF*)(p1));
		break;
	}
	case 163125: {
		*(int*)p1 = pThis->textLength();
		break;
	}
	case 163126: {
		*(int*)p1 = pThis->textStart();
		break;
	}
	case 163127: {
		*(double*)p1 = pThis->width();
		break;
	}
	case 163128: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 163129: {
		*(int*)p2 = pThis->xToCursor(*(double*)p1);
		break;
	}
	case 163130: {
		*(int*)p3 = pThis->xToCursor(*(double*)p1,*(QTextLine::CursorPosition*)p2);
		break;
	}
	case 163131: {
		*(double*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextListFormat
int drv_QTextListFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextListFormat *pThis = (QTextListFormat*)_p;
	switch (funcid) {
	case 164000+1: {
		delete pThis;
		break;
	}
	case 164102: {
		*(void**)_p = new QTextListFormat();
		break;
	}
	case 164103: {
		*(int*)p1 = pThis->indent();
		break;
	}
	case 164104: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 164105: {
		pThis->setIndent(*(int*)p1);
		break;
	}
	case 164106: {
		pThis->setStyle(*(QTextListFormat::Style*)p1);
		break;
	}
	case 164107: {
		*(QTextListFormat::Style*)p1 = pThis->style();
		break;
	}
	default:
		return drv_QTextFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextObjectInterface
int drv_QTextObjectInterface(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QTextObjectInterface *pThis = (QTextObjectInterface*)_p;
	switch (funcid) {
	case 165000+1: {
		delete pThis;
		break;
	}
	case 165102: {
		if(p2==0)return -2;
	if(p5==0)return -2;
		pThis->drawObject((QPainter*)(p1),*(QRectF*)(p2),(QTextDocument*)(p3),*(int*)p4,*(QTextFormat*)(p5));
		break;
	}
	case 165103: {
		if(p3==0)return -2;
		*(void**)p4 = new QSizeF(pThis->intrinsicSize((QTextDocument*)(p1),*(int*)p2,*(QTextFormat*)(p3)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextOption
int drv_QTextOption(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextOption *pThis = (QTextOption*)_p;
	switch (funcid) {
	case 166000+1: {
		delete pThis;
		break;
	}
	case 166102: {
		*(void**)_p = new QTextOption();
		break;
	}
	case 166103: {
		*(void**)_p = new QTextOption(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 166104: {
		if(p1==0)return -2;
		*(void**)_p = new QTextOption(*(QTextOption*)(p1));
		break;
	}
	case 166105: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 166106: {
		*(QFlags<QTextOption::Flag>*)p1 = pThis->flags();
		break;
	}
	case 166107: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 166108: {
		pThis->setFlags(*(QFlags<QTextOption::Flag>*)p1);
		break;
	}
	case 166109: {
		pThis->setTabArray(drvGetDoubleArrayHead(p1));
		break;
	}
	case 166110: {
		pThis->setTabStop(*(double*)p1);
		break;
	}
	case 166111: {
		pThis->setTabs(drvGetNoObjectArrayHeadT<QTextOption::Tab>(p1));
		break;
	}
	case 166112: {
		pThis->setTextDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 166113: {
		pThis->setUseDesignMetrics(*(bool*)p1);
		break;
	}
	case 166114: {
		pThis->setWrapMode(*(QTextOption::WrapMode*)p1);
		break;
	}
	case 166115: {
		drvSetList<qreal>(p1,pThis->tabArray());
		break;
	}
	case 166116: {
		*(double*)p1 = pThis->tabStop();
		break;
	}
	case 166117: {
		drvSetListPtr<QTextOption::Tab>(p1,167000,pThis->tabs());
		break;
	}
	case 166118: {
		*(Qt::LayoutDirection*)p1 = pThis->textDirection();
		break;
	}
	case 166119: {
		*(bool*)p1 = pThis->useDesignMetrics();
		break;
	}
	case 166120: {
		*(QTextOption::WrapMode*)p1 = pThis->wrapMode();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextOption_Tab
int drv_QTextOption_Tab(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextOption::Tab *pThis = (QTextOption::Tab*)_p;
	switch (funcid) {
	case 167000+1: {
		delete pThis;
		break;
	}
	case 167102: {
		*(void**)_p = new QTextOption::Tab();
		break;
	}
	case 167103: {
		*(void**)_p = new QTextOption::Tab(*(double*)p1,*(QTextOption::TabType*)p2,*(QChar*)p3);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextTableCell
int drv_QTextTableCell(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTextTableCell *pThis = (QTextTableCell*)_p;
	switch (funcid) {
	case 168000+1: {
		delete pThis;
		break;
	}
	case 168102: {
		*(void**)_p = new QTextTableCell();
		break;
	}
	case 168103: {
		if(p1==0)return -2;
		*(void**)_p = new QTextTableCell(*(QTextTableCell*)(p1));
		break;
	}
	case 168104: {
		*(void**)p1 = new QTextFrame::iterator(pThis->begin());
		break;
	}
	case 168105: {
		*(int*)p1 = pThis->column();
		break;
	}
	case 168106: {
		*(int*)p1 = pThis->columnSpan();
		break;
	}
	case 168107: {
		*(void**)p1 = new QTextFrame::iterator(pThis->end());
		break;
	}
	case 168108: {
		*(void**)p1 = new QTextCursor(pThis->firstCursorPosition());
		break;
	}
	case 168109: {
		*(int*)p1 = pThis->firstPosition();
		break;
	}
	case 168110: {
		*(void**)p1 = new QTextCharFormat(pThis->format());
		break;
	}
	case 168111: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 168112: {
		*(void**)p1 = new QTextCursor(pThis->lastCursorPosition());
		break;
	}
	case 168113: {
		*(int*)p1 = pThis->lastPosition();
		break;
	}
	case 168114: {
		*(int*)p1 = pThis->row();
		break;
	}
	case 168115: {
		*(int*)p1 = pThis->rowSpan();
		break;
	}
	case 168116: {
		if(p1==0)return -2;
		pThis->setFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 168117: {
		*(int*)p1 = pThis->tableCellFormatIndex();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTextTableCellFormat
int drv_QTextTableCellFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextTableCellFormat *pThis = (QTextTableCellFormat*)_p;
	switch (funcid) {
	case 169000+1: {
		delete pThis;
		break;
	}
	case 169102: {
		*(void**)_p = new QTextTableCellFormat();
		break;
	}
	case 169103: {
		*(double*)p1 = pThis->bottomPadding();
		break;
	}
	case 169104: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 169105: {
		*(double*)p1 = pThis->leftPadding();
		break;
	}
	case 169106: {
		*(double*)p1 = pThis->rightPadding();
		break;
	}
	case 169107: {
		pThis->setBottomPadding(*(double*)p1);
		break;
	}
	case 169108: {
		pThis->setLeftPadding(*(double*)p1);
		break;
	}
	case 169109: {
		pThis->setPadding(*(double*)p1);
		break;
	}
	case 169110: {
		pThis->setRightPadding(*(double*)p1);
		break;
	}
	case 169111: {
		pThis->setTopPadding(*(double*)p1);
		break;
	}
	case 169112: {
		*(double*)p1 = pThis->topPadding();
		break;
	}
	default:
		return drv_QTextCharFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextTableFormat
int drv_QTextTableFormat(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextTableFormat *pThis = (QTextTableFormat*)_p;
	switch (funcid) {
	case 170000+1: {
		delete pThis;
		break;
	}
	case 170102: {
		*(void**)_p = new QTextTableFormat();
		break;
	}
	case 170103: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 170104: {
		*(double*)p1 = pThis->cellPadding();
		break;
	}
	case 170105: {
		*(double*)p1 = pThis->cellSpacing();
		break;
	}
	case 170106: {
		pThis->clearColumnWidthConstraints();
		break;
	}
	case 170107: {
		drvSetVectorPtr<QTextLength>(p1,162000,pThis->columnWidthConstraints());
		break;
	}
	case 170108: {
		*(int*)p1 = pThis->columns();
		break;
	}
	case 170109: {
		*(int*)p1 = pThis->headerRowCount();
		break;
	}
	case 170110: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 170111: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 170112: {
		pThis->setCellPadding(*(double*)p1);
		break;
	}
	case 170113: {
		pThis->setCellSpacing(*(double*)p1);
		break;
	}
	case 170114: {
		pThis->setColumnWidthConstraints(drvGetVectorPtr<QTextLength>(p1));
		break;
	}
	case 170115: {
		pThis->setColumns(*(int*)p1);
		break;
	}
	case 170116: {
		pThis->setHeaderRowCount(*(int*)p1);
		break;
	}
	default:
		return drv_QTextFrameFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTileRules
int drv_QTileRules(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTileRules *pThis = (QTileRules*)_p;
	switch (funcid) {
	case 171000+1: {
		delete pThis;
		break;
	}
	case 171102: {
		*(void**)_p = new QTileRules();
		break;
	}
	case 171103: {
		*(void**)_p = new QTileRules(*(Qt::TileRule*)p1);
		break;
	}
	case 171104: {
		*(void**)_p = new QTileRules(*(Qt::TileRule*)p1,*(Qt::TileRule*)p2);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTime
int drv_QTime(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void*,void*,void*,void*,void*,void*,void*)
{
	QTime *pThis = (QTime*)_p;
	switch (funcid) {
	case 172000+1: {
		delete pThis;
		break;
	}
	case 172102: {
		*(void**)_p = new QTime();
		break;
	}
	case 172103: {
		if(p1==0)return -2;
		*(void**)_p = new QTime(*(QTime*)(p1));
		break;
	}
	case 172104: {
		*(void**)_p = new QTime(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 172105: {
		*(void**)p2 = new QTime(pThis->addMSecs(*(int*)p1));
		break;
	}
	case 172106: {
		*(void**)p2 = new QTime(pThis->addSecs(*(int*)p1));
		break;
	}
	case 172107: {
		*(void**)p1 = new QTime(QTime::currentTime());
		break;
	}
	case 172108: {
		*(int*)p1 = pThis->elapsed();
		break;
	}
	case 172109: {
		*(void**)p2 = new QTime(QTime::fromString(drvGetStringHead(p1)));
		break;
	}
	case 172110: {
		*(void**)p3 = new QTime(QTime::fromString(drvGetStringHead(p1),drvGetStringHead(p2)));
		break;
	}
	case 172111: {
		*(void**)p3 = new QTime(QTime::fromString(drvGetStringHead(p1),*(Qt::DateFormat*)p2));
		break;
	}
	case 172112: {
		*(int*)p1 = pThis->hour();
		break;
	}
	case 172113: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 172114: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 172115: {
		*(bool*)p5 = QTime::isValid(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 172116: {
		*(int*)p1 = pThis->minute();
		break;
	}
	case 172117: {
		*(int*)p1 = pThis->msec();
		break;
	}
	case 172118: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->msecsTo(*(QTime*)(p1));
		break;
	}
	case 172119: {
		*(int*)p1 = pThis->restart();
		break;
	}
	case 172120: {
		*(int*)p1 = pThis->second();
		break;
	}
	case 172121: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->secsTo(*(QTime*)(p1));
		break;
	}
	case 172122: {
		*(bool*)p5 = pThis->setHMS(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 172123: {
		pThis->start();
		break;
	}
	case 172124: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 172125: {
		drvSetString(p2,pThis->toString(drvGetStringHead(p1)));
		break;
	}
	case 172126: {
		drvSetString(p2,pThis->toString(*(Qt::DateFormat*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTimerEvent
int drv_QTimerEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTimerEvent *pThis = (QTimerEvent*)_p;
	switch (funcid) {
	case 173000+1: {
		delete pThis;
		break;
	}
	case 173102: {
		*(void**)_p = new QTimerEvent(*(int*)p1);
		break;
	}
	case 173103: {
		*(int*)p1 = pThis->timerId();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QToolBarChangeEvent
int drv_QToolBarChangeEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QToolBarChangeEvent *pThis = (QToolBarChangeEvent*)_p;
	switch (funcid) {
	case 174000+1: {
		delete pThis;
		break;
	}
	case 174102: {
		*(void**)_p = new QToolBarChangeEvent(*(bool*)p1);
		break;
	}
	case 174103: {
		*(bool*)p1 = pThis->toggle();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QToolTip
int drv_QToolTip(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QToolTip *pThis = (QToolTip*)_p;
	switch (funcid) {
	case 175000+1: {
		delete pThis;
		break;
	}
	case 175102: {
		*(void**)p1 = new QFont(QToolTip::font());
		break;
	}
	case 175103: {
		QToolTip::hideText();
		break;
	}
	case 175104: {
		*(bool*)p1 = QToolTip::isVisible();
		break;
	}
	case 175105: {
		*(void**)p1 = new QPalette(QToolTip::palette());
		break;
	}
	case 175106: {
		if(p1==0)return -2;
		QToolTip::setFont(*(QFont*)(p1));
		break;
	}
	case 175107: {
		if(p1==0)return -2;
		QToolTip::setPalette(*(QPalette*)(p1));
		break;
	}
	case 175108: {
		if(p1==0)return -2;
		QToolTip::showText(*(QPoint*)(p1),drvGetStringHead(p2),(QWidget*)(p3));
		break;
	}
	case 175109: {
		if(p1==0)return -2;
	if(p4==0)return -2;
		QToolTip::showText(*(QPoint*)(p1),drvGetStringHead(p2),(QWidget*)(p3),*(QRect*)(p4));
		break;
	}
	case 175110: {
		drvSetString(p1,QToolTip::text());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTouchEvent
int drv_QTouchEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTouchEvent *pThis = (QTouchEvent*)_p;
	switch (funcid) {
	case 176000+1: {
		delete pThis;
		break;
	}
	case 176102: {
		pThis->setTouchPointStates(*(QFlags<Qt::TouchPointState>*)p1);
		break;
	}
	case 176103: {
		pThis->setTouchPoints(drvGetNoObjectArrayHeadT<QTouchEvent::TouchPoint>(p1));
		break;
	}
	case 176104: {
		*(QFlags<Qt::TouchPointState>*)p1 = pThis->touchPointStates();
		break;
	}
	case 176105: {
		drvSetListPtr<QTouchEvent::TouchPoint>(p1,177000,pThis->touchPoints());
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTouchEvent_TouchPoint
int drv_QTouchEvent_TouchPoint(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTouchEvent::TouchPoint *pThis = (QTouchEvent::TouchPoint*)_p;
	switch (funcid) {
	case 177000+1: {
		delete pThis;
		break;
	}
	case 177102: {
		*(void**)_p = new QTouchEvent::TouchPoint();
		break;
	}
	case 177103: {
		if(p1==0)return -2;
		*(void**)_p = new QTouchEvent::TouchPoint(*(QTouchEvent::TouchPoint*)(p1));
		break;
	}
	case 177104: {
		*(void**)_p = new QTouchEvent::TouchPoint(*(int*)p1);
		break;
	}
	case 177105: {
		*(int*)p1 = pThis->id();
		break;
	}
	case 177106: {
		*(void**)p1 = new QPointF(pThis->lastNormalizedPos());
		break;
	}
	case 177107: {
		*(void**)p1 = new QPointF(pThis->lastPos());
		break;
	}
	case 177108: {
		*(void**)p1 = new QPointF(pThis->lastScenePos());
		break;
	}
	case 177109: {
		*(void**)p1 = new QPointF(pThis->lastScreenPos());
		break;
	}
	case 177110: {
		*(void**)p1 = new QPointF(pThis->normalizedPos());
		break;
	}
	case 177111: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 177112: {
		*(double*)p1 = pThis->pressure();
		break;
	}
	case 177113: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 177114: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 177115: {
		*(void**)p1 = new QRectF(pThis->sceneRect());
		break;
	}
	case 177116: {
		*(void**)p1 = new QPointF(pThis->screenPos());
		break;
	}
	case 177117: {
		*(void**)p1 = new QRectF(pThis->screenRect());
		break;
	}
	case 177118: {
		pThis->setId(*(int*)p1);
		break;
	}
	case 177119: {
		if(p1==0)return -2;
		pThis->setLastNormalizedPos(*(QPointF*)(p1));
		break;
	}
	case 177120: {
		if(p1==0)return -2;
		pThis->setLastPos(*(QPointF*)(p1));
		break;
	}
	case 177121: {
		if(p1==0)return -2;
		pThis->setLastScenePos(*(QPointF*)(p1));
		break;
	}
	case 177122: {
		if(p1==0)return -2;
		pThis->setLastScreenPos(*(QPointF*)(p1));
		break;
	}
	case 177123: {
		if(p1==0)return -2;
		pThis->setNormalizedPos(*(QPointF*)(p1));
		break;
	}
	case 177124: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 177125: {
		pThis->setPressure(*(double*)p1);
		break;
	}
	case 177126: {
		if(p1==0)return -2;
		pThis->setRect(*(QRectF*)(p1));
		break;
	}
	case 177127: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 177128: {
		if(p1==0)return -2;
		pThis->setSceneRect(*(QRectF*)(p1));
		break;
	}
	case 177129: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPointF*)(p1));
		break;
	}
	case 177130: {
		if(p1==0)return -2;
		pThis->setScreenRect(*(QRectF*)(p1));
		break;
	}
	case 177131: {
		if(p1==0)return -2;
		pThis->setStartNormalizedPos(*(QPointF*)(p1));
		break;
	}
	case 177132: {
		if(p1==0)return -2;
		pThis->setStartPos(*(QPointF*)(p1));
		break;
	}
	case 177133: {
		if(p1==0)return -2;
		pThis->setStartScenePos(*(QPointF*)(p1));
		break;
	}
	case 177134: {
		if(p1==0)return -2;
		pThis->setStartScreenPos(*(QPointF*)(p1));
		break;
	}
	case 177135: {
		pThis->setState(*(QFlags<Qt::TouchPointState>*)p1);
		break;
	}
	case 177136: {
		*(void**)p1 = new QPointF(pThis->startNormalizedPos());
		break;
	}
	case 177137: {
		*(void**)p1 = new QPointF(pThis->startPos());
		break;
	}
	case 177138: {
		*(void**)p1 = new QPointF(pThis->startScenePos());
		break;
	}
	case 177139: {
		*(void**)p1 = new QPointF(pThis->startScreenPos());
		break;
	}
	case 177140: {
		*(Qt::TouchPointState*)p1 = pThis->state();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTransform
int drv_QTransform(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void*,void*,void*)
{
	QTransform *pThis = (QTransform*)_p;
	switch (funcid) {
	case 178000+1: {
		delete pThis;
		break;
	}
	case 178102: {
		*(void**)_p = new QTransform();
		break;
	}
	case 178103: {
		if(p1==0)return -2;
		*(void**)_p = new QTransform(*(QMatrix*)(p1));
		break;
	}
	case 178104: {
		*(void**)_p = new QTransform(*(Qt::Initialization*)p1);
		break;
	}
	case 178105: {
		*(void**)_p = new QTransform(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6);
		break;
	}
	case 178106: {
		*(void**)_p = new QTransform(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6,*(double*)p7,*(double*)p8,*(double*)p9);
		break;
	}
	case 178107: {
		*(void**)p1 = new QTransform(pThis->adjoint());
		break;
	}
	case 178108: {
		*(double*)p1 = pThis->determinant();
		break;
	}
	case 178109: {
		*(double*)p1 = pThis->dx();
		break;
	}
	case 178110: {
		*(double*)p1 = pThis->dy();
		break;
	}
	case 178111: {
		*(void**)p3 = new QTransform(QTransform::fromScale(*(double*)p1,*(double*)p2));
		break;
	}
	case 178112: {
		*(void**)p3 = new QTransform(QTransform::fromTranslate(*(double*)p1,*(double*)p2));
		break;
	}
	case 178113: {
		*(void**)p2 = new QTransform(pThis->inverted(*(bool**)p1));
		break;
	}
	case 178114: {
		*(bool*)p1 = pThis->isAffine();
		break;
	}
	case 178115: {
		*(bool*)p1 = pThis->isIdentity();
		break;
	}
	case 178116: {
		*(bool*)p1 = pThis->isInvertible();
		break;
	}
	case 178117: {
		*(bool*)p1 = pThis->isRotating();
		break;
	}
	case 178118: {
		*(bool*)p1 = pThis->isScaling();
		break;
	}
	case 178119: {
		*(bool*)p1 = pThis->isTranslating();
		break;
	}
	case 178120: {
		*(double*)p1 = pThis->m11();
		break;
	}
	case 178121: {
		*(double*)p1 = pThis->m12();
		break;
	}
	case 178122: {
		*(double*)p1 = pThis->m13();
		break;
	}
	case 178123: {
		*(double*)p1 = pThis->m21();
		break;
	}
	case 178124: {
		*(double*)p1 = pThis->m22();
		break;
	}
	case 178125: {
		*(double*)p1 = pThis->m23();
		break;
	}
	case 178126: {
		*(double*)p1 = pThis->m31();
		break;
	}
	case 178127: {
		*(double*)p1 = pThis->m32();
		break;
	}
	case 178128: {
		*(double*)p1 = pThis->m33();
		break;
	}
	case 178129: {
		if(p1==0)return -2;
		*(void**)p2 = new QLine(pThis->map(*(QLine*)(p1)));
		break;
	}
	case 178130: {
		if(p1==0)return -2;
		*(void**)p2 = new QLineF(pThis->map(*(QLineF*)(p1)));
		break;
	}
	case 178131: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->map(*(QPainterPath*)(p1)));
		break;
	}
	case 178132: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->map(*(QPoint*)(p1)));
		break;
	}
	case 178133: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->map(*(QPointF*)(p1)));
		break;
	}
	case 178134: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->map(*(QPolygon*)(p1)));
		break;
	}
	case 178135: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->map(*(QPolygonF*)(p1)));
		break;
	}
	case 178136: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->map(*(QRegion*)(p1)));
		break;
	}
	case 178137: {
		pThis->map(*(double*)p1,*(double*)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 178138: {
		pThis->map(*(int*)p1,*(int*)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 178139: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->mapRect(*(QRect*)(p1)));
		break;
	}
	case 178140: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRect(*(QRectF*)(p1)));
		break;
	}
	case 178141: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->mapToPolygon(*(QRect*)(p1)));
		break;
	}
	case 178142: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		*(bool*)p4 = QTransform::quadToQuad(*(QPolygonF*)(p1),*(QPolygonF*)(p2),*(QTransform*)(p3));
		break;
	}
	case 178143: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(bool*)p3 = QTransform::quadToSquare(*(QPolygonF*)(p1),*(QTransform*)(p2));
		break;
	}
	case 178144: {
		pThis->reset();
		break;
	}
	case 178145: {
		*(void**)p2 = new QTransform(pThis->rotate(*(double*)p1));
		break;
	}
	case 178146: {
		*(void**)p3 = new QTransform(pThis->rotate(*(double*)p1,*(Qt::Axis*)p2));
		break;
	}
	case 178147: {
		*(void**)p2 = new QTransform(pThis->rotateRadians(*(double*)p1));
		break;
	}
	case 178148: {
		*(void**)p3 = new QTransform(pThis->rotateRadians(*(double*)p1,*(Qt::Axis*)p2));
		break;
	}
	case 178149: {
		*(void**)p3 = new QTransform(pThis->scale(*(double*)p1,*(double*)p2));
		break;
	}
	case 178150: {
		pThis->setMatrix(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5,*(double*)p6,*(double*)p7,*(double*)p8,*(double*)p9);
		break;
	}
	case 178151: {
		*(void**)p3 = new QTransform(pThis->shear(*(double*)p1,*(double*)p2));
		break;
	}
	case 178152: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(bool*)p3 = QTransform::squareToQuad(*(QPolygonF*)(p1),*(QTransform*)(p2));
		break;
	}
	case 178153: {
		*(const void**)p1 = new QMatrix(pThis->toAffine());
		break;
	}
	case 178154: {
		*(void**)p3 = new QTransform(pThis->translate(*(double*)p1,*(double*)p2));
		break;
	}
	case 178155: {
		*(void**)p1 = new QTransform(pThis->transposed());
		break;
	}
	case 178156: {
		*(QTransform::TransformationType*)p1 = pThis->type();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTreeWidgetItem
int drv_QTreeWidgetItem(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTreeWidgetItem *pThis = (QTreeWidgetItem*)_p;
	switch (funcid) {
	case 179000+1: {
		delete pThis;
		break;
	}
	case 179102: {
		*(void**)_p = new QTreeWidgetItem();
		break;
	}
	case 179103: {
		if(p1==0)return -2;
		*(void**)_p = new QTreeWidgetItem(*(QTreeWidgetItem*)(p1));
		break;
	}
	case 179104: {
		*(void**)_p = new QTreeWidgetItem(*(int*)p1);
		break;
	}
	case 179105: {
		*(void**)_p = new QTreeWidgetItem(drvGetStringArray(p1),*(int*)p2);
		break;
	}
	case 179106: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidget*)(p1),*(int*)p2);
		break;
	}
	case 179107: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 179108: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidget*)(p1),drvGetStringArray(p2),*(int*)p3);
		break;
	}
	case 179109: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidget*)(p1),(QTreeWidgetItem*)(p2),*(int*)p3);
		break;
	}
	case 179110: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidgetItem*)(p1),drvGetStringArray(p2),*(int*)p3);
		break;
	}
	case 179111: {
		*(void**)_p = new QTreeWidgetItem((QTreeWidgetItem*)(p1),(QTreeWidgetItem*)(p2),*(int*)p3);
		break;
	}
	case 179112: {
		pThis->addChild((QTreeWidgetItem*)(p1));
		break;
	}
	case 179113: {
		pThis->addChildren(drvGetObjectArrayHeadT<QTreeWidgetItem*>(p1));
		break;
	}
	case 179114: {
		*(void**)p2 = new QBrush(pThis->background(*(int*)p1));
		break;
	}
	case 179115: {
		*(void**)p2 = new QColor(pThis->backgroundColor(*(int*)p1));
		break;
	}
	case 179116: {
		*(Qt::CheckState*)p2 = pThis->checkState(*(int*)p1);
		break;
	}
	case 179117: {
		*(void**)p2 = pThis->child(*(int*)p1);
		break;
	}
	case 179118: {
		*(int*)p1 = pThis->childCount();
		break;
	}
	case 179119: {
		*(QTreeWidgetItem::ChildIndicatorPolicy*)p1 = pThis->childIndicatorPolicy();
		break;
	}
	case 179120: {
		*(void**)p1 = pThis->clone();
		break;
	}
	case 179121: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 179122: {
		*(void**)p3 = new QVariant(pThis->data(*(int*)p1,*(int*)p2));
		break;
	}
	case 179123: {
		*(QFlags<Qt::ItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 179124: {
		*(void**)p2 = new QFont(pThis->font(*(int*)p1));
		break;
	}
	case 179125: {
		*(void**)p2 = new QBrush(pThis->foreground(*(int*)p1));
		break;
	}
	case 179126: {
		*(void**)p2 = new QIcon(pThis->icon(*(int*)p1));
		break;
	}
	case 179127: {
		*(int*)p2 = pThis->indexOfChild((QTreeWidgetItem*)(p1));
		break;
	}
	case 179128: {
		pThis->insertChild(*(int*)p1,(QTreeWidgetItem*)(p2));
		break;
	}
	case 179129: {
		pThis->insertChildren(*(int*)p1,drvGetObjectArrayHeadT<QTreeWidgetItem*>(p2));
		break;
	}
	case 179130: {
		*(bool*)p1 = pThis->isDisabled();
		break;
	}
	case 179131: {
		*(bool*)p1 = pThis->isExpanded();
		break;
	}
	case 179132: {
		*(bool*)p1 = pThis->isFirstColumnSpanned();
		break;
	}
	case 179133: {
		*(bool*)p1 = pThis->isHidden();
		break;
	}
	case 179134: {
		*(bool*)p1 = pThis->isSelected();
		break;
	}
	case 179135: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 179136: {
		pThis->removeChild((QTreeWidgetItem*)(p1));
		break;
	}
	case 179137: {
		if(p2==0)return -2;
		pThis->setBackground(*(int*)p1,*(QBrush*)(p2));
		break;
	}
	case 179138: {
		if(p2==0)return -2;
		pThis->setBackgroundColor(*(int*)p1,*(QColor*)(p2));
		break;
	}
	case 179139: {
		pThis->setCheckState(*(int*)p1,*(Qt::CheckState*)p2);
		break;
	}
	case 179140: {
		pThis->setChildIndicatorPolicy(*(QTreeWidgetItem::ChildIndicatorPolicy*)p1);
		break;
	}
	case 179141: {
		if(p3==0)return -2;
		pThis->setData(*(int*)p1,*(int*)p2,*(QVariant*)(p3));
		break;
	}
	case 179142: {
		pThis->setDisabled(*(bool*)p1);
		break;
	}
	case 179143: {
		pThis->setExpanded(*(bool*)p1);
		break;
	}
	case 179144: {
		pThis->setFirstColumnSpanned(*(bool*)p1);
		break;
	}
	case 179145: {
		pThis->setFlags(*(QFlags<Qt::ItemFlag>*)p1);
		break;
	}
	case 179146: {
		if(p2==0)return -2;
		pThis->setFont(*(int*)p1,*(QFont*)(p2));
		break;
	}
	case 179147: {
		if(p2==0)return -2;
		pThis->setForeground(*(int*)p1,*(QBrush*)(p2));
		break;
	}
	case 179148: {
		pThis->setHidden(*(bool*)p1);
		break;
	}
	case 179149: {
		if(p2==0)return -2;
		pThis->setIcon(*(int*)p1,*(QIcon*)(p2));
		break;
	}
	case 179150: {
		pThis->setSelected(*(bool*)p1);
		break;
	}
	case 179151: {
		if(p2==0)return -2;
		pThis->setSizeHint(*(int*)p1,*(QSize*)(p2));
		break;
	}
	case 179152: {
		pThis->setStatusTip(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 179153: {
		pThis->setText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 179154: {
		pThis->setTextAlignment(*(int*)p1,*(int*)p2);
		break;
	}
	case 179155: {
		if(p2==0)return -2;
		pThis->setTextColor(*(int*)p1,*(QColor*)(p2));
		break;
	}
	case 179156: {
		pThis->setToolTip(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 179157: {
		pThis->setWhatsThis(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 179158: {
		*(void**)p2 = new QSize(pThis->sizeHint(*(int*)p1));
		break;
	}
	case 179159: {
		pThis->sortChildren(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 179160: {
		drvSetString(p2,pThis->statusTip(*(int*)p1));
		break;
	}
	case 179161: {
		*(void**)p2 = pThis->takeChild(*(int*)p1);
		break;
	}
	case 179162: {
		drvSetListObj<QTreeWidgetItem*>(p1,179000,pThis->takeChildren());
		break;
	}
	case 179163: {
		drvSetString(p2,pThis->text(*(int*)p1));
		break;
	}
	case 179164: {
		*(int*)p2 = pThis->textAlignment(*(int*)p1);
		break;
	}
	case 179165: {
		*(void**)p2 = new QColor(pThis->textColor(*(int*)p1));
		break;
	}
	case 179166: {
		drvSetString(p2,pThis->toolTip(*(int*)p1));
		break;
	}
	case 179167: {
		*(void**)p1 = pThis->treeWidget();
		break;
	}
	case 179168: {
		*(int*)p1 = pThis->type();
		break;
	}
	case 179169: {
		drvSetString(p2,pThis->whatsThis(*(int*)p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QTreeWidgetItemIterator
int drv_QTreeWidgetItemIterator(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QTreeWidgetItemIterator *pThis = (QTreeWidgetItemIterator*)_p;
	switch (funcid) {
	case 180000+1: {
		delete pThis;
		break;
	}
	case 180102: {
		if(p1==0)return -2;
		*(void**)_p = new QTreeWidgetItemIterator(*(QTreeWidgetItemIterator*)(p1));
		break;
	}
	case 180103: {
		*(void**)_p = new QTreeWidgetItemIterator((QTreeWidget*)(p1),*(QFlags<QTreeWidgetItemIterator::IteratorFlag>*)p2);
		break;
	}
	case 180104: {
		*(void**)_p = new QTreeWidgetItemIterator((QTreeWidgetItem*)(p1),*(QFlags<QTreeWidgetItemIterator::IteratorFlag>*)p2);
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QUndoCommand
int drv_QUndoCommand(void *_p, int funcid, void* p1,void* p2,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QUndoCommand *pThis = (QUndoCommand*)_p;
	switch (funcid) {
	case 181000+1: {
		delete pThis;
		break;
	}
	case 181102: {
		*(void**)_p = new QUndoCommand();
		break;
	}
	case 181103: {
		*(void**)_p = new QUndoCommand((QUndoCommand*)(p1));
		break;
	}
	case 181104: {
		*(void**)_p = new QUndoCommand(drvGetStringHead(p1),(QUndoCommand*)(p2));
		break;
	}
	case 181105: {
		*(const void**)p2 = pThis->child(*(int*)p1);
		break;
	}
	case 181106: {
		*(int*)p1 = pThis->childCount();
		break;
	}
	case 181107: {
		*(int*)p1 = pThis->id();
		break;
	}
	case 181108: {
		*(bool*)p2 = pThis->mergeWith((QUndoCommand*)(p1));
		break;
	}
	case 181109: {
		pThis->redo();
		break;
	}
	case 181110: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 181111: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 181112: {
		pThis->undo();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QUrl
int drv_QUrl(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QUrl *pThis = (QUrl*)_p;
	switch (funcid) {
	case 182000+1: {
		delete pThis;
		break;
	}
	case 182102: {
		*(void**)_p = new QUrl();
		break;
	}
	case 182103: {
		*(void**)_p = new QUrl(drvGetStringHead(p1));
		break;
	}
	case 182104: {
		if(p1==0)return -2;
		*(void**)_p = new QUrl(*(QUrl*)(p1));
		break;
	}
	case 182105: {
		*(void**)_p = new QUrl(drvGetStringHead(p1),*(QUrl::ParsingMode*)p2);
		break;
	}
	case 182106: {
		drvSetString(p1,pThis->authority());
		break;
	}
	case 182107: {
		pThis->clear();
		break;
	}
	case 182108: {
		pThis->detach();
		break;
	}
	case 182109: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 182110: {
		drvSetString(p1,pThis->fragment());
		break;
	}
	case 182111: {
		drvSetString(p2,QUrl::fromAce(drvGetByteArrayHead(p1)));
		break;
	}
	case 182112: {
		*(void**)p2 = new QUrl(QUrl::fromEncoded(drvGetByteArrayHead(p1)));
		break;
	}
	case 182113: {
		*(void**)p3 = new QUrl(QUrl::fromEncoded(drvGetByteArrayHead(p1),*(QUrl::ParsingMode*)p2));
		break;
	}
	case 182114: {
		*(void**)p2 = new QUrl(QUrl::fromLocalFile(drvGetStringHead(p1)));
		break;
	}
	case 182115: {
		drvSetString(p2,QUrl::fromPercentEncoding(drvGetByteArrayHead(p1)));
		break;
	}
	case 182116: {
		*(void**)p2 = new QUrl(QUrl::fromUserInput(drvGetStringHead(p1)));
		break;
	}
	case 182117: {
		*(bool*)p1 = pThis->hasFragment();
		break;
	}
	case 182118: {
		*(bool*)p1 = pThis->hasQuery();
		break;
	}
	case 182119: {
		drvSetString(p1,pThis->host());
		break;
	}
	case 182120: {
		drvSetStringArray(p1,QUrl::idnWhitelist());
		break;
	}
	case 182121: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 182122: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 182123: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isParentOf(*(QUrl*)(p1));
		break;
	}
	case 182124: {
		*(bool*)p1 = pThis->isRelative();
		break;
	}
	case 182125: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 182126: {
		drvSetString(p1,pThis->password());
		break;
	}
	case 182127: {
		drvSetString(p1,pThis->path());
		break;
	}
	case 182128: {
		*(int*)p1 = pThis->port();
		break;
	}
	case 182129: {
		*(int*)p2 = pThis->port(*(int*)p1);
		break;
	}
	case 182130: {
#ifdef QTDRV_QT5
		drvSetString(p2,pThis->query());
#else
		drvSetString(p2,fromEncodedComponent_helper(pThis->encodedQuery()));
#endif
		break;
	}
	case 182131: {
#ifdef QTDRV_QT5
		drvSetString(p2,pThis->query(*(QUrl::ComponentFormattingOption*)p1));
#else
		drvSetString(p2,fromEncodedComponent_helper(pThis->encodedQuery()));
#endif
		break;
	}
	case 182132: {
		if(p1==0)return -2;
		*(void**)p2 = new QUrl(pThis->resolved(*(QUrl*)(p1)));
		break;
	}
	case 182133: {
		drvSetString(p1,pThis->scheme());
		break;
	}
	case 182134: {
		pThis->setAuthority(drvGetStringHead(p1));
		break;
	}
	case 182135: {
		pThis->setFragment(drvGetStringHead(p1));
		break;
	}
	case 182136: {
		pThis->setHost(drvGetStringHead(p1));
		break;
	}
	case 182137: {
		QUrl::setIdnWhitelist(drvGetStringArray(p1));
		break;
	}
	case 182138: {
		pThis->setPassword(drvGetStringHead(p1));
		break;
	}
	case 182139: {
		pThis->setPath(drvGetStringHead(p1));
		break;
	}
	case 182140: {
		pThis->setPort(*(int*)p1);
		break;
	}
	case 182141: {
#ifdef QTDRV_QT5
		pThis->setQuery(drvGetStringHead(p1));
#else
		pThis->setEncodedQuery(toLatin1_helper(drvGetStringHead(p1)));
#endif
		break;
	}
	case 182142: {
		if(p1==0)return -2;
#ifdef QTDRV_QT5
		pThis->setQuery(*(QUrlQuery*)(p1));
#else
		pThis->setEncodedQuery(toLatin1_helper((*(QUrlQuery*)(p1)).toString()));
#endif
		break;
	}
	case 182143: {
#ifdef QTDRV_QT5
		pThis->setQuery(drvGetStringHead(p1),*(QUrl::ParsingMode*)p2);
#else
		pThis->setEncodedQuery(toLatin1_helper(drvGetStringHead(p1)));
#endif
		break;
	}
	case 182144: {
		pThis->setScheme(drvGetStringHead(p1));
		break;
	}
	case 182145: {
		pThis->setUrl(drvGetStringHead(p1));
		break;
	}
	case 182146: {
		pThis->setUrl(drvGetStringHead(p1),*(QUrl::ParsingMode*)p2);
		break;
	}
	case 182147: {
		pThis->setUserInfo(drvGetStringHead(p1));
		break;
	}
	case 182148: {
		pThis->setUserName(drvGetStringHead(p1));
		break;
	}
	case 182149: {
		drvSetByteArray(p2,QUrl::toAce(drvGetStringHead(p1)));
		break;
	}
	case 182150: {
#ifdef QTDRV_QT5
		drvSetByteArray(p2,pThis->toEncoded(*(QFlags<QUrl::UrlFormattingOption>*)p1));
#else
		drvSetByteArray(p2,pThis->toEncoded(*(QFlags<QUrl::FormattingOption>*)p1));
#endif
		break;
	}
	case 182151: {
#ifdef QTDRV_QT5
		drvSetByteArray(p2,pThis->toEncoded(*(QFlags<QUrl::UrlFormattingOption>*)p1));
#else
		drvSetByteArray(p2,pThis->toEncoded(*(QFlags<QUrl::FormattingOption>*)p1));
#endif
		break;
	}
	case 182152: {
		drvSetString(p1,pThis->toLocalFile());
		break;
	}
	case 182153: {
		drvSetByteArray(p2,QUrl::toPercentEncoding(drvGetStringHead(p1)));
		break;
	}
	case 182154: {
		drvSetByteArray(p4,QUrl::toPercentEncoding(drvGetStringHead(p1),drvGetByteArrayHead(p2),drvGetByteArrayHead(p3)));
		break;
	}
	case 182155: {
#ifdef QTDRV_QT5
		drvSetString(p2,pThis->toString(*(QFlags<QUrl::UrlFormattingOption>*)p1));
#else
		drvSetString(p2,pThis->toString(*(QFlags<QUrl::FormattingOption>*)p1));
#endif
		break;
	}
	case 182156: {
#ifdef QTDRV_QT5
		drvSetString(p2,pThis->toString(*(QFlags<QUrl::UrlFormattingOption>*)p1));
#else
		drvSetString(p2,pThis->toString(*(QFlags<QUrl::FormattingOption>*)p1));
#endif
		break;
	}
	case 182157: {
		drvSetString(p1,pThis->userInfo());
		break;
	}
	case 182158: {
		drvSetString(p1,pThis->userName());
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QUuid
int drv_QUuid(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void*)
{
	QUuid *pThis = (QUuid*)_p;
	switch (funcid) {
	case 183000+1: {
		delete pThis;
		break;
	}
	case 183102: {
		*(void**)_p = new QUuid();
		break;
	}
	case 183103: {
		*(void**)_p = new QUuid(drvGetStringHead(p1));
		break;
	}
	case 183104: {
		*(void**)_p = new QUuid(*(unsigned int*)p1,*(unsigned short*)p2,*(unsigned short*)p3,*(unsigned char*)p4,*(unsigned char*)p5,*(unsigned char*)p6,*(unsigned char*)p7,*(unsigned char*)p8,*(unsigned char*)p9,*(unsigned char*)p10,*(unsigned char*)p11);
		break;
	}
	case 183105: {
		*(void**)p1 = new QUuid(QUuid::createUuid());
		break;
	}
	case 183106: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 183107: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 183108: {
		*(QUuid::Variant*)p1 = pThis->variant();
		break;
	}
	case 183109: {
		*(QUuid::Version*)p1 = pThis->version();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QVariant
int drv_QVariant(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QVariant *pThis = (QVariant*)_p;
	switch (funcid) {
	case 184000+1: {
		delete pThis;
		break;
	}
	case 184102: {
		*(void**)_p = new QVariant();
		break;
	}
	case 184103: {
		*(void**)_p = new QVariant(drvGetBoolArrayHead(p1));
		break;
	}
	case 184104: {
		*(void**)_p = new QVariant(drvGetByteArrayHead(p1));
		break;
	}
	case 184105: {
		*(void**)_p = new QVariant(*(QChar*)p1);
		break;
	}
	case 184106: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QDate*)(p1));
		break;
	}
	case 184107: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QDateTime*)(p1));
		break;
	}
	case 184108: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QEasingCurve*)(p1));
		break;
	}
	case 184109: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QLine*)(p1));
		break;
	}
	case 184110: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QLineF*)(p1));
		break;
	}
	case 184111: {
		*(void**)_p = new QVariant(drvGetNoObjectArrayHeadT<QVariant>(p1));
		break;
	}
	case 184112: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QLocale*)(p1));
		break;
	}
	case 184113: {
		*(void**)_p = new QVariant(*(QStringVariantMap*)(p1));
		break;
	}
	case 184114: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QPoint*)(p1));
		break;
	}
	case 184115: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QPointF*)(p1));
		break;
	}
	case 184116: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QRect*)(p1));
		break;
	}
	case 184117: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QRectF*)(p1));
		break;
	}
	case 184118: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QRegExp*)(p1));
		break;
	}
	case 184119: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QSize*)(p1));
		break;
	}
	case 184120: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QSizeF*)(p1));
		break;
	}
	case 184121: {
		*(void**)_p = new QVariant(drvGetStringHead(p1));
		break;
	}
	case 184122: {
		*(void**)_p = new QVariant(drvGetStringArray(p1));
		break;
	}
	case 184123: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QTime*)(p1));
		break;
	}
	case 184124: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QUrl*)(p1));
		break;
	}
	case 184125: {
		if(p1==0)return -2;
		*(void**)_p = new QVariant(*(QVariant*)(p1));
		break;
	}
	case 184126: {
		*(void**)_p = new QVariant(*(QVariant::Type*)p1);
		break;
	}
	case 184127: {
		*(void**)_p = new QVariant(*(bool*)p1);
		break;
	}
	case 184128: {
		*(void**)_p = new QVariant(*(double*)p1);
		break;
	}
	case 184129: {
		*(void**)_p = new QVariant(*(float*)p1);
		break;
	}
	case 184130: {
		*(void**)_p = new QVariant(*(int*)p1);
		break;
	}
	case 184131: {
		*(void**)_p = new QVariant(*(qint64*)p1);
		break;
	}
	case 184132: {
		*(void**)_p = new QVariant(*(unsigned int*)p1);
		break;
	}
	case 184133: {
		*(void**)_p = new QVariant(*(int*)p1,*(void const**)p2);
		break;
	}
	case 184134: {
		*(void**)_p = new QVariant(*(int*)p1,*(void const**)p2,*(unsigned int*)p3);
		break;
	}
	case 184135: {
		*(bool*)p2 = pThis->canConvert(*(QVariant::Type*)p1);
		break;
	}
	case 184136: {
		pThis->clear();
		break;
	}
	case 184137: {
		*(void const**)p1 = pThis->constData();
		break;
	}
	case 184138: {
		*(bool*)p2 = pThis->convert(*(QVariant::Type*)p1);
		break;
	}
	case 184139: {
		*(void**)p1 = pThis->data();
		break;
	}
	case 184140: {
		pThis->detach();
		break;
	}
	case 184141: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 184142: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 184143: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 184144: {
		*(QVariant::Type*)p2 = QVariant::nameToType(drvGet_const_char(p1));
		break;
	}
	case 184145: {
		drvSetBitArray(p1,pThis->toBitArray());
		break;
	}
	case 184146: {
		*(bool*)p1 = pThis->toBool();
		break;
	}
	case 184147: {
		drvSetByteArray(p1,pThis->toByteArray());
		break;
	}
	case 184148: {
		*(QChar*)p1 = pThis->toChar();
		break;
	}
	case 184149: {
		*(void**)p1 = new QDate(pThis->toDate());
		break;
	}
	case 184150: {
		*(void**)p1 = new QDateTime(pThis->toDateTime());
		break;
	}
	case 184151: {
		*(double*)p2 = pThis->toDouble(*(bool**)p1);
		break;
	}
	case 184152: {
		*(void**)p1 = new QEasingCurve(pThis->toEasingCurve());
		break;
	}
	case 184153: {
		*(float*)p2 = pThis->toFloat(*(bool**)p1);
		break;
	}
	case 184154: {
		*(int*)p2 = pThis->toInt(*(bool**)p1);
		break;
	}
	case 184155: {
		*(void**)p1 = new QLine(pThis->toLine());
		break;
	}
	case 184156: {
		*(void**)p1 = new QLineF(pThis->toLineF());
		break;
	}
	case 184157: {
		drvSetListPtr<QVariant>(p1,184000,pThis->toList());
		break;
	}
	case 184158: {
		*(void**)p1 = new QLocale(pThis->toLocale());
		break;
	}
	case 184159: {
		*(qint64*)p2 = pThis->toLongLong(*(bool**)p1);
		break;
	}
	case 184160: {
		*(void**)p1 = new QStringVariantMap(pThis->toMap());
		break;
	}
	case 184161: {
		*(void**)p1 = new QPoint(pThis->toPoint());
		break;
	}
	case 184162: {
		*(void**)p1 = new QPointF(pThis->toPointF());
		break;
	}
	case 184163: {
		*(double*)p2 = pThis->toReal(*(bool**)p1);
		break;
	}
	case 184164: {
		*(void**)p1 = new QRect(pThis->toRect());
		break;
	}
	case 184165: {
		*(void**)p1 = new QRectF(pThis->toRectF());
		break;
	}
	case 184166: {
		*(void**)p1 = new QRegExp(pThis->toRegExp());
		break;
	}
	case 184167: {
		*(void**)p1 = new QSize(pThis->toSize());
		break;
	}
	case 184168: {
		*(void**)p1 = new QSizeF(pThis->toSizeF());
		break;
	}
	case 184169: {
		drvSetString(p1,pThis->toString());
		break;
	}
	case 184170: {
		drvSetStringArray(p1,pThis->toStringList());
		break;
	}
	case 184171: {
		*(void**)p1 = new QTime(pThis->toTime());
		break;
	}
	case 184172: {
		*(unsigned int*)p2 = pThis->toUInt(*(bool**)p1);
		break;
	}
	case 184173: {
		*(quint64*)p2 = pThis->toULongLong(*(bool**)p1);
		break;
	}
	case 184174: {
		*(void**)p1 = new QUrl(pThis->toUrl());
		break;
	}
	case 184175: {
		*(QVariant::Type*)p1 = pThis->type();
		break;
	}
	case 184176: {
		drvSetString(p1,pThis->typeName());
		break;
	}
	case 184177: {
		drvSetString(p2,QVariant::typeToName(*(QVariant::Type*)p1));
		break;
	}
	case 184178: {
		*(int*)p1 = pThis->userType();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QVariantComparisonHelper
int drv_QVariantComparisonHelper(void *_p, int funcid, void* p1,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QVariantComparisonHelper *pThis = (QVariantComparisonHelper*)_p;
	switch (funcid) {
	case 185000+1: {
		delete pThis;
		break;
	}
	case 185102: {
		if(p1==0)return -2;
		*(void**)_p = new QVariantComparisonHelper(*(QVariant*)(p1));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QVector2D
int drv_QVector2D(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QVector2D *pThis = (QVector2D*)_p;
	switch (funcid) {
	case 186000+1: {
		delete pThis;
		break;
	}
	case 186102: {
		*(void**)_p = new QVector2D();
		break;
	}
	case 186103: {
		if(p1==0)return -2;
		*(void**)_p = new QVector2D(*(QPoint*)(p1));
		break;
	}
	case 186104: {
		if(p1==0)return -2;
		*(void**)_p = new QVector2D(*(QPointF*)(p1));
		break;
	}
	case 186105: {
		if(p1==0)return -2;
		*(void**)_p = new QVector2D(*(QVector3D*)(p1));
		break;
	}
	case 186106: {
		if(p1==0)return -2;
		*(void**)_p = new QVector2D(*(QVector4D*)(p1));
		break;
	}
	case 186107: {
		*(void**)_p = new QVector2D(*(double*)p1,*(double*)p2);
		break;
	}
	case 186108: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(double*)p3 = QVector2D::dotProduct(*(QVector2D*)(p1),*(QVector2D*)(p2));
		break;
	}
	case 186109: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 186110: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 186111: {
		*(double*)p1 = pThis->lengthSquared();
		break;
	}
	case 186112: {
		pThis->normalize();
		break;
	}
	case 186113: {
		*(void**)p1 = new QVector2D(pThis->normalized());
		break;
	}
	case 186114: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 186115: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 186116: {
		*(void**)p1 = new QPoint(pThis->toPoint());
		break;
	}
	case 186117: {
		*(void**)p1 = new QPointF(pThis->toPointF());
		break;
	}
	case 186118: {
		*(void**)p1 = new QVector3D(pThis->toVector3D());
		break;
	}
	case 186119: {
		*(void**)p1 = new QVector4D(pThis->toVector4D());
		break;
	}
	case 186120: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 186121: {
		*(double*)p1 = pThis->y();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QVector3D
int drv_QVector3D(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QVector3D *pThis = (QVector3D*)_p;
	switch (funcid) {
	case 187000+1: {
		delete pThis;
		break;
	}
	case 187102: {
		*(void**)_p = new QVector3D();
		break;
	}
	case 187103: {
		if(p1==0)return -2;
		*(void**)_p = new QVector3D(*(QPoint*)(p1));
		break;
	}
	case 187104: {
		if(p1==0)return -2;
		*(void**)_p = new QVector3D(*(QPointF*)(p1));
		break;
	}
	case 187105: {
		if(p1==0)return -2;
		*(void**)_p = new QVector3D(*(QVector2D*)(p1));
		break;
	}
	case 187106: {
		if(p1==0)return -2;
		*(void**)_p = new QVector3D(*(QVector4D*)(p1));
		break;
	}
	case 187107: {
		if(p1==0)return -2;
		*(void**)_p = new QVector3D(*(QVector2D*)(p1),*(double*)p2);
		break;
	}
	case 187108: {
		*(void**)_p = new QVector3D(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 187109: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p3 = new QVector3D(QVector3D::crossProduct(*(QVector3D*)(p1),*(QVector3D*)(p2)));
		break;
	}
	case 187110: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(double*)p3 = pThis->distanceToLine(*(QVector3D*)(p1),*(QVector3D*)(p2));
		break;
	}
	case 187111: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(double*)p3 = pThis->distanceToPlane(*(QVector3D*)(p1),*(QVector3D*)(p2));
		break;
	}
	case 187112: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		*(double*)p4 = pThis->distanceToPlane(*(QVector3D*)(p1),*(QVector3D*)(p2),*(QVector3D*)(p3));
		break;
	}
	case 187113: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(double*)p3 = QVector3D::dotProduct(*(QVector3D*)(p1),*(QVector3D*)(p2));
		break;
	}
	case 187114: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 187115: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 187116: {
		*(double*)p1 = pThis->lengthSquared();
		break;
	}
	case 187117: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p3 = new QVector3D(QVector3D::normal(*(QVector3D*)(p1),*(QVector3D*)(p2)));
		break;
	}
	case 187118: {
		if(p1==0)return -2;
	if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)p4 = new QVector3D(QVector3D::normal(*(QVector3D*)(p1),*(QVector3D*)(p2),*(QVector3D*)(p3)));
		break;
	}
	case 187119: {
		pThis->normalize();
		break;
	}
	case 187120: {
		*(void**)p1 = new QVector3D(pThis->normalized());
		break;
	}
	case 187121: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 187122: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 187123: {
		pThis->setZ(*(double*)p1);
		break;
	}
	case 187124: {
		*(void**)p1 = new QPoint(pThis->toPoint());
		break;
	}
	case 187125: {
		*(void**)p1 = new QPointF(pThis->toPointF());
		break;
	}
	case 187126: {
		*(void**)p1 = new QVector2D(pThis->toVector2D());
		break;
	}
	case 187127: {
		*(void**)p1 = new QVector4D(pThis->toVector4D());
		break;
	}
	case 187128: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 187129: {
		*(double*)p1 = pThis->y();
		break;
	}
	case 187130: {
		*(double*)p1 = pThis->z();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QVector4D
int drv_QVector4D(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QVector4D *pThis = (QVector4D*)_p;
	switch (funcid) {
	case 188000+1: {
		delete pThis;
		break;
	}
	case 188102: {
		*(void**)_p = new QVector4D();
		break;
	}
	case 188103: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QPoint*)(p1));
		break;
	}
	case 188104: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QPointF*)(p1));
		break;
	}
	case 188105: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QVector2D*)(p1));
		break;
	}
	case 188106: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QVector3D*)(p1));
		break;
	}
	case 188107: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QVector3D*)(p1),*(double*)p2);
		break;
	}
	case 188108: {
		if(p1==0)return -2;
		*(void**)_p = new QVector4D(*(QVector2D*)(p1),*(double*)p2,*(double*)p3);
		break;
	}
	case 188109: {
		*(void**)_p = new QVector4D(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 188110: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(double*)p3 = QVector4D::dotProduct(*(QVector4D*)(p1),*(QVector4D*)(p2));
		break;
	}
	case 188111: {
		*(bool*)p1 = pThis->isNull();
		break;
	}
	case 188112: {
		*(double*)p1 = pThis->length();
		break;
	}
	case 188113: {
		*(double*)p1 = pThis->lengthSquared();
		break;
	}
	case 188114: {
		pThis->normalize();
		break;
	}
	case 188115: {
		*(void**)p1 = new QVector4D(pThis->normalized());
		break;
	}
	case 188116: {
		pThis->setW(*(double*)p1);
		break;
	}
	case 188117: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 188118: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 188119: {
		pThis->setZ(*(double*)p1);
		break;
	}
	case 188120: {
		*(void**)p1 = new QPoint(pThis->toPoint());
		break;
	}
	case 188121: {
		*(void**)p1 = new QPointF(pThis->toPointF());
		break;
	}
	case 188122: {
		*(void**)p1 = new QVector2D(pThis->toVector2D());
		break;
	}
	case 188123: {
		*(void**)p1 = new QVector2D(pThis->toVector2DAffine());
		break;
	}
	case 188124: {
		*(void**)p1 = new QVector3D(pThis->toVector3D());
		break;
	}
	case 188125: {
		*(void**)p1 = new QVector3D(pThis->toVector3DAffine());
		break;
	}
	case 188126: {
		*(double*)p1 = pThis->w();
		break;
	}
	case 188127: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 188128: {
		*(double*)p1 = pThis->y();
		break;
	}
	case 188129: {
		*(double*)p1 = pThis->z();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QWhatsThis
int drv_QWhatsThis(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QWhatsThis *pThis = (QWhatsThis*)_p;
	switch (funcid) {
	case 189000+1: {
		delete pThis;
		break;
	}
	case 189102: {
		*(void**)p1 = QWhatsThis::createAction();
		break;
	}
	case 189103: {
		*(void**)p2 = QWhatsThis::createAction((QObject*)(p1));
		break;
	}
	case 189104: {
		QWhatsThis::enterWhatsThisMode();
		break;
	}
	case 189105: {
		QWhatsThis::hideText();
		break;
	}
	case 189106: {
		*(bool*)p1 = QWhatsThis::inWhatsThisMode();
		break;
	}
	case 189107: {
		QWhatsThis::leaveWhatsThisMode();
		break;
	}
	case 189108: {
		if(p1==0)return -2;
		QWhatsThis::showText(*(QPoint*)(p1),drvGetStringHead(p2),(QWidget*)(p3));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QWhatsThisClickedEvent
int drv_QWhatsThisClickedEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWhatsThisClickedEvent *pThis = (QWhatsThisClickedEvent*)_p;
	switch (funcid) {
	case 190000+1: {
		delete pThis;
		break;
	}
	case 190102: {
		*(void**)_p = new QWhatsThisClickedEvent(drvGetStringHead(p1));
		break;
	}
	case 190103: {
		drvSetString(p1,pThis->href());
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWheelEvent
int drv_QWheelEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWheelEvent *pThis = (QWheelEvent*)_p;
	switch (funcid) {
	case 191000+1: {
		delete pThis;
		break;
	}
	case 191102: {
		if(p1==0)return -2;
		*(void**)_p = new QWheelEvent(*(QPoint*)(p1),*(int*)p2,*(QFlags<Qt::MouseButton>*)p3,*(QFlags<Qt::KeyboardModifier>*)p4,*(Qt::Orientation*)p5);
		break;
	}
	case 191103: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)_p = new QWheelEvent(*(QPoint*)(p1),*(QPoint*)(p2),*(int*)p3,*(QFlags<Qt::MouseButton>*)p4,*(QFlags<Qt::KeyboardModifier>*)p5,*(Qt::Orientation*)p6);
		break;
	}
	case 191104: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->buttons();
		break;
	}
	case 191105: {
		*(int*)p1 = pThis->delta();
		break;
	}
	case 191106: {
		*(const void**)p1 = new QPoint(pThis->globalPos());
		break;
	}
	case 191107: {
		*(int*)p1 = pThis->globalX();
		break;
	}
	case 191108: {
		*(int*)p1 = pThis->globalY();
		break;
	}
	case 191109: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 191110: {
		*(const void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 191111: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 191112: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWidgetItem
int drv_QWidgetItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWidgetItem *pThis = (QWidgetItem*)_p;
	switch (funcid) {
	case 192000+1: {
		delete pThis;
		break;
	}
	case 192102: {
		*(void**)_p = new QWidgetItem((QWidget*)(p1));
		break;
	}
	default:
		return drv_QLayoutItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWindowStateChangeEvent
int drv_QWindowStateChangeEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWindowStateChangeEvent *pThis = (QWindowStateChangeEvent*)_p;
	switch (funcid) {
	case 193000+1: {
		delete pThis;
		break;
	}
	case 193102: {
		*(void**)_p = new QWindowStateChangeEvent(*(QFlags<Qt::WindowState>*)p1);
		break;
	}
	case 193103: {
		*(void**)_p = new QWindowStateChangeEvent(*(QFlags<Qt::WindowState>*)p1,*(bool*)p2);
		break;
	}
	case 193104: {
		*(bool*)p1 = pThis->isOverride();
		break;
	}
	case 193105: {
		*(QFlags<Qt::WindowState>*)p1 = pThis->oldState();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractAnimation
int drv_QAbstractAnimation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractAnimation *pThis = (QAbstractAnimation*)_p;
	switch (funcid) {
	case 194000+1: {
		delete pThis;
		break;
	}
	case 194102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(finished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 194103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentLoopChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 194104: {
		UISignal4 *uis = new UISignal4(pThis);
		if (QObject::connect(pThis,SIGNAL(stateChanged(QAbstractAnimation::State,QAbstractAnimation::State)),uis,SLOT(call(QAbstractAnimation::State,QAbstractAnimation::State)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 194105: {
		UISignal3 *uis = new UISignal3(pThis);
		if (QObject::connect(pThis,SIGNAL(directionChanged(QAbstractAnimation::Direction)),uis,SLOT(call(QAbstractAnimation::Direction)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 194106: {
		*(int*)p1 = pThis->currentLoop();
		break;
	}
	case 194107: {
		*(int*)p1 = pThis->currentLoopTime();
		break;
	}
	case 194108: {
		*(int*)p1 = pThis->currentTime();
		break;
	}
	case 194109: {
		*(QAbstractAnimation::Direction*)p1 = pThis->direction();
		break;
	}
	case 194110: {
		*(int*)p1 = pThis->duration();
		break;
	}
	case 194111: {
		*(void**)p1 = pThis->group();
		break;
	}
	case 194112: {
		*(int*)p1 = pThis->loopCount();
		break;
	}
	case 194113: {
		pThis->pause();
		break;
	}
	case 194114: {
		pThis->resume();
		break;
	}
	case 194115: {
		pThis->setCurrentTime(*(int*)p1);
		break;
	}
	case 194116: {
		pThis->setDirection(*(QAbstractAnimation::Direction*)p1);
		break;
	}
	case 194117: {
		pThis->setLoopCount(*(int*)p1);
		break;
	}
	case 194118: {
		pThis->setPaused(*(bool*)p1);
		break;
	}
	case 194119: {
		pThis->start();
		break;
	}
	case 194120: {
		pThis->start(*(QAbstractAnimation::DeletionPolicy*)p1);
		break;
	}
	case 194121: {
		*(QAbstractAnimation::State*)p1 = pThis->state();
		break;
	}
	case 194122: {
		pThis->stop();
		break;
	}
	case 194123: {
		*(int*)p1 = pThis->totalDuration();
		break;
	}
	case 194124: {
		pThis->updateCurrentTime(*(int*)p1);
		break;
	}
	case 194125: {
		pThis->updateDirection(*(QAbstractAnimation::Direction*)p1);
		break;
	}
	case 194126: {
		pThis->updateState(*(QAbstractAnimation::State*)p1,*(QAbstractAnimation::State*)p2);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractButton
int drv_QAbstractButton(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractButton *pThis = (QAbstractButton*)_p;
	switch (funcid) {
	case 195000+1: {
		delete pThis;
		break;
	}
	case 195102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 195103: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 195104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(pressed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 195105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(released()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 195106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(toggled(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 195107: {
		pThis->animateClick();
		break;
	}
	case 195108: {
		pThis->animateClick(*(int*)p1);
		break;
	}
	case 195109: {
		*(bool*)p1 = pThis->autoExclusive();
		break;
	}
	case 195110: {
		*(bool*)p1 = pThis->autoRepeat();
		break;
	}
	case 195111: {
		*(int*)p1 = pThis->autoRepeatDelay();
		break;
	}
	case 195112: {
		*(int*)p1 = pThis->autoRepeatInterval();
		break;
	}
	case 195113: {
		pThis->checkStateSet();
		break;
	}
	case 195114: {
		pThis->click();
		break;
	}
	case 195115: {
		*(void**)p1 = pThis->group();
		break;
	}
	case 195116: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->hitButton(*(QPoint*)(p1));
		break;
	}
	case 195117: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 195118: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 195119: {
		*(bool*)p1 = pThis->isCheckable();
		break;
	}
	case 195120: {
		*(bool*)p1 = pThis->isChecked();
		break;
	}
	case 195121: {
		*(bool*)p1 = pThis->isDown();
		break;
	}
	case 195122: {
		pThis->nextCheckState();
		break;
	}
	case 195123: {
		pThis->setAutoExclusive(*(bool*)p1);
		break;
	}
	case 195124: {
		pThis->setAutoRepeat(*(bool*)p1);
		break;
	}
	case 195125: {
		pThis->setAutoRepeatDelay(*(int*)p1);
		break;
	}
	case 195126: {
		pThis->setAutoRepeatInterval(*(int*)p1);
		break;
	}
	case 195127: {
		pThis->setCheckable(*(bool*)p1);
		break;
	}
	case 195128: {
		pThis->setChecked(*(bool*)p1);
		break;
	}
	case 195129: {
		pThis->setDown(*(bool*)p1);
		break;
	}
	case 195130: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 195131: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 195132: {
		if(p1==0)return -2;
		pThis->setShortcut(*(QKeySequence*)(p1));
		break;
	}
	case 195133: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 195134: {
		*(void**)p1 = new QKeySequence(pThis->shortcut());
		break;
	}
	case 195135: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 195136: {
		pThis->toggle();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractItemDelegate
int drv_QAbstractItemDelegate(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractItemDelegate *pThis = (QAbstractItemDelegate*)_p;
	switch (funcid) {
	case 196000+1: {
		delete pThis;
		break;
	}
	case 196102: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(sizeHintChanged(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 196103: {
		UISignal58 *uis = new UISignal58(pThis);
		if (QObject::connect(pThis,SIGNAL(commitData(QWidget*)),uis,SLOT(call(QWidget*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 196104: {
		UISignal59 *uis = new UISignal59(pThis);
		if (QObject::connect(pThis,SIGNAL(closeEditor(QWidget*,QAbstractItemDelegate::EndEditHint)),uis,SLOT(call(QWidget*,QAbstractItemDelegate::EndEditHint)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 196105: {
		if(p1==0)return -2;
		drvSetString(p5,QAbstractItemDelegate::elidedText(*(QFontMetrics*)(p1),*(int*)p2,*(Qt::TextElideMode*)p3,drvGetStringHead(p4)));
		break;
	}
	case 196106: {
		if(p2==0)return -2;
		pThis->setEditorData((QWidget*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 196107: {
		if(p3==0)return -2;
		pThis->setModelData((QWidget*)(p1),(QAbstractItemModel*)(p2),*(QModelIndex*)(p3));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractItemModel
int drv_QAbstractItemModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractItemModel *pThis = (QAbstractItemModel*)_p;
	switch (funcid) {
	case 197000+1: {
		delete pThis;
		break;
	}
	case 197102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(layoutChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 197103: {
		UISignal64 *uis = new UISignal64(pThis);
		if (QObject::connect(pThis,SIGNAL(headerDataChanged(Qt::Orientation,int,int)),uis,SLOT(call(Qt::Orientation,int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 197104: {
		UISignal26 *uis = new UISignal26(pThis);
		if (QObject::connect(pThis,SIGNAL(dataChanged(QModelIndex const&,QModelIndex const&)),uis,SLOT(call(QModelIndex const&,QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 197105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(layoutAboutToBeChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 197106: {
		if(p1==0)return -2;
		pThis->beginInsertColumns(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 197107: {
		if(p1==0)return -2;
		pThis->beginInsertRows(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 197108: {
		if(p1==0)return -2;
	if(p4==0)return -2;
		*(bool*)p6 = pThis->beginMoveColumns(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3,*(QModelIndex*)(p4),*(int*)p5);
		break;
	}
	case 197109: {
		if(p1==0)return -2;
	if(p4==0)return -2;
		*(bool*)p6 = pThis->beginMoveRows(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3,*(QModelIndex*)(p4),*(int*)p5);
		break;
	}
	case 197110: {
		if(p1==0)return -2;
		pThis->beginRemoveColumns(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 197111: {
		if(p1==0)return -2;
		pThis->beginRemoveRows(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 197112: {
		pThis->beginResetModel();
		break;
	}
	case 197113: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->buddy(*(QModelIndex*)(p1)));
		break;
	}
	case 197114: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->canFetchMore(*(QModelIndex*)(p1));
		break;
	}
	case 197115: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->changePersistentIndex(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 197116: {
		pThis->changePersistentIndexList(drvGetNoObjectArrayHeadT<QModelIndex>(p1),drvGetNoObjectArrayHeadT<QModelIndex>(p2));
		break;
	}
	case 197117: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 197118: {
		*(int*)p2 = pThis->columnCount(p1==0?QModelIndex():*(QModelIndex*)(p1));
		break;
	}
	case 197119: {
		*(void**)p4 = new QModelIndex(pThis->createIndex(*(int*)p1,*(int*)p2,*(int*)p3));
		break;
	}
	case 197120: {
		*(void**)p4 = new QModelIndex(pThis->createIndex(*(int*)p1,*(int*)p2,*(unsigned int*)p3));
		break;
	}
	case 197121: {
		*(void**)p4 = new QModelIndex(pThis->createIndex(*(int*)p1,*(int*)p2,*(void**)p3));
		break;
	}
	case 197122: {
		if(p1==0)return -2;
		*(void**)p2 = new QVariant(pThis->data(*(QModelIndex*)(p1)));
		break;
	}
	case 197123: {
		if(p1==0)return -2;
		*(void**)p3 = new QVariant(pThis->data(*(QModelIndex*)(p1),*(int*)p2));
		break;
	}
	case 197124: {
		if(p5==0)return -2;
		*(bool*)p6 = pThis->dropMimeData((QMimeData*)(p1),*(Qt::DropAction*)p2,*(int*)p3,*(int*)p4,*(QModelIndex*)(p5));
		break;
	}
	case 197125: {
		pThis->endInsertColumns();
		break;
	}
	case 197126: {
		pThis->endInsertRows();
		break;
	}
	case 197127: {
		pThis->endMoveColumns();
		break;
	}
	case 197128: {
		pThis->endMoveRows();
		break;
	}
	case 197129: {
		pThis->endRemoveColumns();
		break;
	}
	case 197130: {
		pThis->endRemoveRows();
		break;
	}
	case 197131: {
		pThis->endResetModel();
		break;
	}
	case 197132: {
		if(p1==0)return -2;
		pThis->fetchMore(*(QModelIndex*)(p1));
		break;
	}
	case 197133: {
		if(p1==0)return -2;
		*(QFlags<Qt::ItemFlag>*)p2 = pThis->flags(*(QModelIndex*)(p1));
		break;
	}
	case 197134: {
		*(bool*)p1 = pThis->hasChildren();
		break;
	}
	case 197135: {
		*(bool*)p2 = pThis->hasChildren(p1==0?QModelIndex():*(QModelIndex*)(p1));
		break;
	}
	case 197136: {
		*(bool*)p4 = pThis->hasIndex(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3));
		break;
	}
	case 197137: {
		*(void**)p4 = new QVariant(pThis->headerData(*(int*)p1,*(Qt::Orientation*)p2,*(int*)p3));
		break;
	}
	case 197138: {
		*(void**)p4 = new QModelIndex(pThis->index(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3)));
		break;
	}
	case 197139: {
		*(bool*)p2 = pThis->insertColumn(*(int*)p1);
		break;
	}
	case 197140: {
		*(bool*)p3 = pThis->insertColumn(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 197141: {
		*(bool*)p4 = pThis->insertColumns(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3));
		break;
	}
	case 197142: {
		*(bool*)p2 = pThis->insertRow(*(int*)p1);
		break;
	}
	case 197143: {
		*(bool*)p3 = pThis->insertRow(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 197144: {
		*(bool*)p4 = pThis->insertRows(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3));
		break;
	}
	case 197145: {
		if(p1==0)return -2;
		*(void**)p2 = new QIntVariantMap(pThis->itemData(*(QModelIndex*)(p1)));
		break;
	}
	case 197146: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		drvSetListPtr<QModelIndex>(p6,80000,pThis->match(*(QModelIndex*)(p1),*(int*)p2,*(QVariant*)(p3),*(int*)p4,*(QFlags<Qt::MatchFlag>*)p5));
		break;
	}
	case 197147: {
		*(void**)p2 = pThis->mimeData(drvGetNoObjectArrayHeadT<QModelIndex>(p1));
		break;
	}
	case 197148: {
		drvSetStringArray(p1,pThis->mimeTypes());
		break;
	}
	case 197149: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 197150: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->parent(*(QModelIndex*)(p1)));
		break;
	}
	case 197151: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->persistentIndexList());
		break;
	}
	case 197152: {
		*(bool*)p2 = pThis->removeColumn(*(int*)p1);
		break;
	}
	case 197153: {
		*(bool*)p3 = pThis->removeColumn(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 197154: {
		*(bool*)p4 = pThis->removeColumns(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3));
		break;
	}
	case 197155: {
		*(bool*)p2 = pThis->removeRow(*(int*)p1);
		break;
	}
	case 197156: {
		*(bool*)p3 = pThis->removeRow(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 197157: {
		*(bool*)p4 = pThis->removeRows(*(int*)p1,*(int*)p2,p3==0?QModelIndex():*(QModelIndex*)(p3));
		break;
	}
	case 197158: {
		pThis->revert();
		break;
	}
	case 197159: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 197160: {
		*(int*)p2 = pThis->rowCount(p1==0?QModelIndex():*(QModelIndex*)(p1));
		break;
	}
	case 197161: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(bool*)p4 = pThis->setData(*(QModelIndex*)(p1),*(QVariant*)(p2),*(int*)p3);
		break;
	}
	case 197162: {
		if(p3==0)return -2;
		*(bool*)p5 = pThis->setHeaderData(*(int*)p1,*(Qt::Orientation*)p2,*(QVariant*)(p3),*(int*)p4);
		break;
	}
	case 197163: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->setItemData(*(QModelIndex*)(p1),*(QIntVariantMap*)(p2));
		break;
	}
	case 197164: {
		if(p3==0)return -2;
		*(void**)p4 = new QModelIndex(pThis->sibling(*(int*)p1,*(int*)p2,*(QModelIndex*)(p3)));
		break;
	}
	case 197165: {
		pThis->sort(*(int*)p1);
		break;
	}
	case 197166: {
		pThis->sort(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 197167: {
		if(p1==0)return -2;
		*(void**)p2 = new QSize(pThis->span(*(QModelIndex*)(p1)));
		break;
	}
	case 197168: {
		*(bool*)p1 = pThis->submit();
		break;
	}
	case 197169: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->supportedDragActions();
		break;
	}
	case 197170: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->supportedDropActions();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractItemView
int drv_QAbstractItemView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractItemView *pThis = (QAbstractItemView*)_p;
	switch (funcid) {
	case 198000+1: {
		delete pThis;
		break;
	}
	case 198102: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(pressed(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198103: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(doubleClicked(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198104: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198105: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198106: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(entered(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198107: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(viewportEntered()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 198108: {
		*(bool*)p1 = pThis->alternatingRowColors();
		break;
	}
	case 198109: {
		*(int*)p1 = pThis->autoScrollMargin();
		break;
	}
	case 198110: {
		pThis->clearSelection();
		break;
	}
	case 198111: {
		pThis->closeEditor((QWidget*)(p1),*(QAbstractItemDelegate::EndEditHint*)p2);
		break;
	}
	case 198112: {
		if(p1==0)return -2;
		pThis->closePersistentEditor(*(QModelIndex*)(p1));
		break;
	}
	case 198113: {
		pThis->commitData((QWidget*)(p1));
		break;
	}
	case 198114: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->currentChanged(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 198115: {
		*(void**)p1 = new QModelIndex(pThis->currentIndex());
		break;
	}
	case 198116: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->dataChanged(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 198117: {
		*(Qt::DropAction*)p1 = pThis->defaultDropAction();
		break;
	}
	case 198118: {
		*(void**)p1 = new QPoint(pThis->dirtyRegionOffset());
		break;
	}
	case 198119: {
		pThis->doAutoScroll();
		break;
	}
	case 198120: {
		pThis->doItemsLayout();
		break;
	}
	case 198121: {
		*(QAbstractItemView::DragDropMode*)p1 = pThis->dragDropMode();
		break;
	}
	case 198122: {
		*(bool*)p1 = pThis->dragDropOverwriteMode();
		break;
	}
	case 198123: {
		*(bool*)p1 = pThis->dragEnabled();
		break;
	}
	case 198124: {
		*(QAbstractItemView::DropIndicatorPosition*)p1 = pThis->dropIndicatorPosition();
		break;
	}
	case 198125: {
		if(p1==0)return -2;
		pThis->edit(*(QModelIndex*)(p1));
		break;
	}
	case 198126: {
		if(p1==0)return -2;
		*(bool*)p4 = pThis->edit(*(QModelIndex*)(p1),*(QAbstractItemView::EditTrigger*)p2,(QEvent*)(p3));
		break;
	}
	case 198127: {
		*(QFlags<QAbstractItemView::EditTrigger>*)p1 = pThis->editTriggers();
		break;
	}
	case 198128: {
		pThis->editorDestroyed((QObject*)(p1));
		break;
	}
	case 198129: {
		pThis->executeDelayedItemsLayout();
		break;
	}
	case 198130: {
		*(bool*)p1 = pThis->hasAutoScroll();
		break;
	}
	case 198131: {
		*(int*)p1 = pThis->horizontalOffset();
		break;
	}
	case 198132: {
		*(QAbstractItemView::ScrollMode*)p1 = pThis->horizontalScrollMode();
		break;
	}
	case 198133: {
		pThis->horizontalScrollbarAction(*(int*)p1);
		break;
	}
	case 198134: {
		pThis->horizontalScrollbarValueChanged(*(int*)p1);
		break;
	}
	case 198135: {
		*(int*)p1 = pThis->horizontalStepsPerItem();
		break;
	}
	case 198136: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 198137: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->indexAt(*(QPoint*)(p1)));
		break;
	}
	case 198138: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->indexWidget(*(QModelIndex*)(p1));
		break;
	}
	case 198139: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isIndexHidden(*(QModelIndex*)(p1));
		break;
	}
	case 198140: {
		*(void**)p1 = pThis->itemDelegate();
		break;
	}
	case 198141: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemDelegate(*(QModelIndex*)(p1));
		break;
	}
	case 198142: {
		*(void**)p2 = pThis->itemDelegateForColumn(*(int*)p1);
		break;
	}
	case 198143: {
		*(void**)p2 = pThis->itemDelegateForRow(*(int*)p1);
		break;
	}
	case 198144: {
		pThis->keyboardSearch(drvGetStringHead(p1));
		break;
	}
	case 198145: {
		*(void**)p1 = pThis->model();
		break;
	}
	case 198146: {
		*(void**)p3 = new QModelIndex(pThis->moveCursor(*(QAbstractItemView::CursorAction*)p1,*(QFlags<Qt::KeyboardModifier>*)p2));
		break;
	}
	case 198147: {
		if(p1==0)return -2;
		pThis->openPersistentEditor(*(QModelIndex*)(p1));
		break;
	}
	case 198148: {
		pThis->reset();
		break;
	}
	case 198149: {
		*(void**)p1 = new QModelIndex(pThis->rootIndex());
		break;
	}
	case 198150: {
		if(p1==0)return -2;
		pThis->rowsAboutToBeRemoved(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 198151: {
		if(p1==0)return -2;
		pThis->rowsInserted(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 198152: {
		pThis->scheduleDelayedItemsLayout();
		break;
	}
	case 198153: {
		pThis->scrollDirtyRegion(*(int*)p1,*(int*)p2);
		break;
	}
	case 198154: {
		if(p1==0)return -2;
		pThis->scrollTo(*(QModelIndex*)(p1));
		break;
	}
	case 198155: {
		if(p1==0)return -2;
		pThis->scrollTo(*(QModelIndex*)(p1),*(QAbstractItemView::ScrollHint*)p2);
		break;
	}
	case 198156: {
		pThis->scrollToBottom();
		break;
	}
	case 198157: {
		pThis->scrollToTop();
		break;
	}
	case 198158: {
		pThis->selectAll();
		break;
	}
	case 198159: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->selectedIndexes());
		break;
	}
	case 198160: {
		*(QAbstractItemView::SelectionBehavior*)p1 = pThis->selectionBehavior();
		break;
	}
	case 198161: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->selectionChanged(*(QItemSelection*)(p1),*(QItemSelection*)(p2));
		break;
	}
	case 198162: {
		if(p1==0)return -2;
		*(QFlags<QItemSelectionModel::SelectionFlag>*)p3 = pThis->selectionCommand(*(QModelIndex*)(p1),(QEvent*)(p2));
		break;
	}
	case 198163: {
		*(QAbstractItemView::SelectionMode*)p1 = pThis->selectionMode();
		break;
	}
	case 198164: {
		*(void**)p1 = pThis->selectionModel();
		break;
	}
	case 198165: {
		pThis->setAlternatingRowColors(*(bool*)p1);
		break;
	}
	case 198166: {
		pThis->setAutoScroll(*(bool*)p1);
		break;
	}
	case 198167: {
		pThis->setAutoScrollMargin(*(int*)p1);
		break;
	}
	case 198168: {
		if(p1==0)return -2;
		pThis->setCurrentIndex(*(QModelIndex*)(p1));
		break;
	}
	case 198169: {
		pThis->setDefaultDropAction(*(Qt::DropAction*)p1);
		break;
	}
	case 198170: {
		if(p1==0)return -2;
		pThis->setDirtyRegion(*(QRegion*)(p1));
		break;
	}
	case 198171: {
		pThis->setDragDropMode(*(QAbstractItemView::DragDropMode*)p1);
		break;
	}
	case 198172: {
		pThis->setDragDropOverwriteMode(*(bool*)p1);
		break;
	}
	case 198173: {
		pThis->setDragEnabled(*(bool*)p1);
		break;
	}
	case 198174: {
		pThis->setDropIndicatorShown(*(bool*)p1);
		break;
	}
	case 198175: {
		pThis->setEditTriggers(*(QFlags<QAbstractItemView::EditTrigger>*)p1);
		break;
	}
	case 198176: {
		pThis->setHorizontalScrollMode(*(QAbstractItemView::ScrollMode*)p1);
		break;
	}
	case 198177: {
		pThis->setHorizontalStepsPerItem(*(int*)p1);
		break;
	}
	case 198178: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 198179: {
		if(p1==0)return -2;
		pThis->setIndexWidget(*(QModelIndex*)(p1),(QWidget*)(p2));
		break;
	}
	case 198180: {
		pThis->setItemDelegate((QAbstractItemDelegate*)(p1));
		break;
	}
	case 198181: {
		pThis->setItemDelegateForColumn(*(int*)p1,(QAbstractItemDelegate*)(p2));
		break;
	}
	case 198182: {
		pThis->setItemDelegateForRow(*(int*)p1,(QAbstractItemDelegate*)(p2));
		break;
	}
	case 198183: {
		pThis->setModel((QAbstractItemModel*)(p1));
		break;
	}
	case 198184: {
		if(p1==0)return -2;
		pThis->setRootIndex(*(QModelIndex*)(p1));
		break;
	}
	case 198185: {
		if(p1==0)return -2;
		pThis->setSelection(*(QRect*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 198186: {
		pThis->setSelectionBehavior(*(QAbstractItemView::SelectionBehavior*)p1);
		break;
	}
	case 198187: {
		pThis->setSelectionMode(*(QAbstractItemView::SelectionMode*)p1);
		break;
	}
	case 198188: {
		pThis->setSelectionModel((QItemSelectionModel*)(p1));
		break;
	}
	case 198189: {
		pThis->setState(*(QAbstractItemView::State*)p1);
		break;
	}
	case 198190: {
		pThis->setTabKeyNavigation(*(bool*)p1);
		break;
	}
	case 198191: {
		pThis->setTextElideMode(*(Qt::TextElideMode*)p1);
		break;
	}
	case 198192: {
		pThis->setVerticalScrollMode(*(QAbstractItemView::ScrollMode*)p1);
		break;
	}
	case 198193: {
		pThis->setVerticalStepsPerItem(*(int*)p1);
		break;
	}
	case 198194: {
		*(bool*)p1 = pThis->showDropIndicator();
		break;
	}
	case 198195: {
		*(int*)p2 = pThis->sizeHintForColumn(*(int*)p1);
		break;
	}
	case 198196: {
		if(p1==0)return -2;
		*(void**)p2 = new QSize(pThis->sizeHintForIndex(*(QModelIndex*)(p1)));
		break;
	}
	case 198197: {
		*(int*)p2 = pThis->sizeHintForRow(*(int*)p1);
		break;
	}
	case 198198: {
		pThis->startAutoScroll();
		break;
	}
	case 198199: {
		pThis->startDrag(*(QFlags<Qt::DropAction>*)p1);
		break;
	}
	case 198200: {
		*(QAbstractItemView::State*)p1 = pThis->state();
		break;
	}
	case 198201: {
		pThis->stopAutoScroll();
		break;
	}
	case 198202: {
		*(bool*)p1 = pThis->tabKeyNavigation();
		break;
	}
	case 198203: {
		*(Qt::TextElideMode*)p1 = pThis->textElideMode();
		break;
	}
	case 198204: {
		pThis->update();
		break;
	}
	case 198205: {
		if(p1==0)return -2;
		pThis->update(*(QModelIndex*)(p1));
		break;
	}
	case 198206: {
		pThis->updateEditorData();
		break;
	}
	case 198207: {
		pThis->updateEditorGeometries();
		break;
	}
	case 198208: {
		pThis->updateGeometries();
		break;
	}
	case 198209: {
		*(int*)p1 = pThis->verticalOffset();
		break;
	}
	case 198210: {
		*(QAbstractItemView::ScrollMode*)p1 = pThis->verticalScrollMode();
		break;
	}
	case 198211: {
		pThis->verticalScrollbarAction(*(int*)p1);
		break;
	}
	case 198212: {
		pThis->verticalScrollbarValueChanged(*(int*)p1);
		break;
	}
	case 198213: {
		*(int*)p1 = pThis->verticalStepsPerItem();
		break;
	}
	case 198214: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->visualRect(*(QModelIndex*)(p1)));
		break;
	}
	case 198215: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->visualRegionForSelection(*(QItemSelection*)(p1)));
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractListModel
int drv_QAbstractListModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractListModel *pThis = (QAbstractListModel*)_p;
	switch (funcid) {
	case 199000+1: {
		delete pThis;
		break;
	}
	case 199102: {
		*(void**)p2 = new QModelIndex(pThis->index(*(int*)p1));
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractPrintDialog
int drv_QAbstractPrintDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractPrintDialog *pThis = (QAbstractPrintDialog*)_p;
	switch (funcid) {
	case 200000+1: {
		delete pThis;
		break;
	}
	case 200102: {
		pThis->addEnabledOption(*(QAbstractPrintDialog::PrintDialogOption*)p1);
		break;
	}
	case 200103: {
		*(QFlags<QAbstractPrintDialog::PrintDialogOption>*)p1 = pThis->enabledOptions();
		break;
	}
	case 200104: {
		*(int*)p1 = pThis->exec();
		break;
	}
	case 200105: {
		*(int*)p1 = pThis->fromPage();
		break;
	}
	case 200106: {
		*(bool*)p2 = pThis->isOptionEnabled(*(QAbstractPrintDialog::PrintDialogOption*)p1);
		break;
	}
	case 200107: {
		*(int*)p1 = pThis->maxPage();
		break;
	}
	case 200108: {
		*(int*)p1 = pThis->minPage();
		break;
	}
	case 200109: {
		*(QAbstractPrintDialog::PrintRange*)p1 = pThis->printRange();
		break;
	}
	case 200110: {
		*(void**)p1 = pThis->printer();
		break;
	}
	case 200111: {
		pThis->setEnabledOptions(*(QFlags<QAbstractPrintDialog::PrintDialogOption>*)p1);
		break;
	}
	case 200112: {
		pThis->setFromTo(*(int*)p1,*(int*)p2);
		break;
	}
	case 200113: {
		pThis->setMinMax(*(int*)p1,*(int*)p2);
		break;
	}
	case 200114: {
		pThis->setOptionTabs(drvGetObjectArrayHeadT<QWidget*>(p1));
		break;
	}
	case 200115: {
		pThis->setPrintRange(*(QAbstractPrintDialog::PrintRange*)p1);
		break;
	}
	case 200116: {
		*(int*)p1 = pThis->toPage();
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractProxyModel
int drv_QAbstractProxyModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractProxyModel *pThis = (QAbstractProxyModel*)_p;
	switch (funcid) {
	case 201000+1: {
		delete pThis;
		break;
	}
	case 201102: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->mapFromSource(*(QModelIndex*)(p1)));
		break;
	}
	case 201103: {
		if(p1==0)return -2;
		*(void**)p2 = new QItemSelection(pThis->mapSelectionFromSource(*(QItemSelection*)(p1)));
		break;
	}
	case 201104: {
		if(p1==0)return -2;
		*(void**)p2 = new QItemSelection(pThis->mapSelectionToSource(*(QItemSelection*)(p1)));
		break;
	}
	case 201105: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->mapToSource(*(QModelIndex*)(p1)));
		break;
	}
	case 201106: {
		pThis->setSourceModel((QAbstractItemModel*)(p1));
		break;
	}
	case 201107: {
		*(void**)p1 = pThis->sourceModel();
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractScrollArea
int drv_QAbstractScrollArea(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractScrollArea *pThis = (QAbstractScrollArea*)_p;
	switch (funcid) {
	case 202000+1: {
		delete pThis;
		break;
	}
	case 202102: {
		*(void**)_p = new QAbstractScrollArea();
		break;
	}
	case 202103: {
		*(void**)_p = new QAbstractScrollArea((QWidget*)(p1));
		break;
	}
	case 202104: {
		pThis->addScrollBarWidget((QWidget*)(p1),*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 202105: {
		*(void**)p1 = pThis->cornerWidget();
		break;
	}
	case 202106: {
		*(void**)p1 = pThis->horizontalScrollBar();
		break;
	}
	case 202107: {
		*(Qt::ScrollBarPolicy*)p1 = pThis->horizontalScrollBarPolicy();
		break;
	}
	case 202108: {
		*(void**)p1 = new QSize(pThis->maximumViewportSize());
		break;
	}
	case 202109: {
		drvSetListObj<QWidget*>(p2,397000,pThis->scrollBarWidgets(*(QFlags<Qt::AlignmentFlag>*)p1));
		break;
	}
	case 202110: {
		pThis->scrollContentsBy(*(int*)p1,*(int*)p2);
		break;
	}
	case 202111: {
		pThis->setCornerWidget((QWidget*)(p1));
		break;
	}
	case 202112: {
		pThis->setHorizontalScrollBar((QScrollBar*)(p1));
		break;
	}
	case 202113: {
		pThis->setHorizontalScrollBarPolicy(*(Qt::ScrollBarPolicy*)p1);
		break;
	}
	case 202114: {
		pThis->setVerticalScrollBar((QScrollBar*)(p1));
		break;
	}
	case 202115: {
		pThis->setVerticalScrollBarPolicy(*(Qt::ScrollBarPolicy*)p1);
		break;
	}
	case 202116: {
		pThis->setViewport((QWidget*)(p1));
		break;
	}
	case 202117: {
		if(p1==0)return -2;
		pThis->setViewportMargins(*(QMargins*)(p1));
		break;
	}
	case 202118: {
		pThis->setViewportMargins(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 202119: {
		pThis->setupViewport((QWidget*)(p1));
		break;
	}
	case 202120: {
		*(void**)p1 = pThis->verticalScrollBar();
		break;
	}
	case 202121: {
		*(Qt::ScrollBarPolicy*)p1 = pThis->verticalScrollBarPolicy();
		break;
	}
	case 202122: {
		*(void**)p1 = pThis->viewport();
		break;
	}
	case 202123: {
		*(bool*)p2 = pThis->viewportEvent((QEvent*)(p1));
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractSlider
int drv_QAbstractSlider(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractSlider *pThis = (QAbstractSlider*)_p;
	switch (funcid) {
	case 203000+1: {
		delete pThis;
		break;
	}
	case 203102: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(rangeChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sliderMoved(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(actionTriggered(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(sliderReleased()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(sliderPressed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203107: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 203108: {
		*(void**)_p = new QAbstractSlider();
		break;
	}
	case 203109: {
		*(void**)_p = new QAbstractSlider((QWidget*)(p1));
		break;
	}
	case 203110: {
		*(bool*)p1 = pThis->hasTracking();
		break;
	}
	case 203111: {
		*(bool*)p1 = pThis->invertedAppearance();
		break;
	}
	case 203112: {
		*(bool*)p1 = pThis->invertedControls();
		break;
	}
	case 203113: {
		*(bool*)p1 = pThis->isSliderDown();
		break;
	}
	case 203114: {
		*(int*)p1 = pThis->maximum();
		break;
	}
	case 203115: {
		*(int*)p1 = pThis->minimum();
		break;
	}
	case 203116: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 203117: {
		*(int*)p1 = pThis->pageStep();
		break;
	}
	case 203118: {
		*(QAbstractSlider::SliderAction*)p1 = pThis->repeatAction();
		break;
	}
	case 203119: {
		pThis->setInvertedAppearance(*(bool*)p1);
		break;
	}
	case 203120: {
		pThis->setInvertedControls(*(bool*)p1);
		break;
	}
	case 203121: {
		pThis->setMaximum(*(int*)p1);
		break;
	}
	case 203122: {
		pThis->setMinimum(*(int*)p1);
		break;
	}
	case 203123: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 203124: {
		pThis->setPageStep(*(int*)p1);
		break;
	}
	case 203125: {
		pThis->setRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 203126: {
		pThis->setRepeatAction(*(QAbstractSlider::SliderAction*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 203127: {
		pThis->setSingleStep(*(int*)p1);
		break;
	}
	case 203128: {
		pThis->setSliderDown(*(bool*)p1);
		break;
	}
	case 203129: {
		pThis->setSliderPosition(*(int*)p1);
		break;
	}
	case 203130: {
		pThis->setTracking(*(bool*)p1);
		break;
	}
	case 203131: {
		pThis->setValue(*(int*)p1);
		break;
	}
	case 203132: {
		*(int*)p1 = pThis->singleStep();
		break;
	}
	case 203133: {
		pThis->sliderChange(*(QAbstractSlider::SliderChange*)p1);
		break;
	}
	case 203134: {
		*(int*)p1 = pThis->sliderPosition();
		break;
	}
	case 203135: {
		pThis->triggerAction(*(QAbstractSlider::SliderAction*)p1);
		break;
	}
	case 203136: {
		*(int*)p1 = pThis->value();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractSpinBox
int drv_QAbstractSpinBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractSpinBox *pThis = (QAbstractSpinBox*)_p;
	switch (funcid) {
	case 204000+1: {
		delete pThis;
		break;
	}
	case 204102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(editingFinished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 204103: {
		*(void**)_p = new QAbstractSpinBox();
		break;
	}
	case 204104: {
		*(void**)_p = new QAbstractSpinBox((QWidget*)(p1));
		break;
	}
	case 204105: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 204106: {
		*(QAbstractSpinBox::ButtonSymbols*)p1 = pThis->buttonSymbols();
		break;
	}
	case 204107: {
		pThis->clear();
		break;
	}
	case 204108: {
		*(QAbstractSpinBox::CorrectionMode*)p1 = pThis->correctionMode();
		break;
	}
	case 204109: {
		QString _p1=drvGetStringRef(p1);
		pThis->fixup(_p1);
		drvSetStringRef(p1,_p1);
		break;
	}
	case 204110: {
		*(bool*)p1 = pThis->hasAcceptableInput();
		break;
	}
	case 204111: {
		*(bool*)p1 = pThis->hasFrame();
		break;
	}
	case 204112: {
		pThis->interpretText();
		break;
	}
	case 204113: {
		*(bool*)p1 = pThis->isAccelerated();
		break;
	}
	case 204114: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 204115: {
		*(bool*)p1 = pThis->keyboardTracking();
		break;
	}
	case 204116: {
		*(void**)p1 = pThis->lineEdit();
		break;
	}
	case 204117: {
		pThis->selectAll();
		break;
	}
	case 204118: {
		pThis->setAccelerated(*(bool*)p1);
		break;
	}
	case 204119: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 204120: {
		pThis->setButtonSymbols(*(QAbstractSpinBox::ButtonSymbols*)p1);
		break;
	}
	case 204121: {
		pThis->setCorrectionMode(*(QAbstractSpinBox::CorrectionMode*)p1);
		break;
	}
	case 204122: {
		pThis->setFrame(*(bool*)p1);
		break;
	}
	case 204123: {
		pThis->setKeyboardTracking(*(bool*)p1);
		break;
	}
	case 204124: {
		pThis->setLineEdit((QLineEdit*)(p1));
		break;
	}
	case 204125: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 204126: {
		pThis->setSpecialValueText(drvGetStringHead(p1));
		break;
	}
	case 204127: {
		pThis->setWrapping(*(bool*)p1);
		break;
	}
	case 204128: {
		drvSetString(p1,pThis->specialValueText());
		break;
	}
	case 204129: {
		pThis->stepBy(*(int*)p1);
		break;
	}
	case 204130: {
		pThis->stepDown();
		break;
	}
	case 204131: {
		*(QFlags<QAbstractSpinBox::StepEnabledFlag>*)p1 = pThis->stepEnabled();
		break;
	}
	case 204132: {
		pThis->stepUp();
		break;
	}
	case 204133: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 204134: {
		QString _p1=drvGetStringRef(p1);
		*(QValidator::State*)p3 = pThis->validate(_p1,*(int*)p2);
		drvSetStringRef(p1,_p1);
		break;
	}
	case 204135: {
		*(bool*)p1 = pThis->wrapping();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractState
int drv_QAbstractState(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractState *pThis = (QAbstractState*)_p;
	switch (funcid) {
	case 205000+1: {
		delete pThis;
		break;
	}
	case 205102: {
		*(void**)p1 = pThis->machine();
		break;
	}
	case 205103: {
		pThis->onEntry((QEvent*)(p1));
		break;
	}
	case 205104: {
		pThis->onExit((QEvent*)(p1));
		break;
	}
	case 205105: {
		*(void**)p1 = pThis->parentState();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractTableModel
int drv_QAbstractTableModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractTableModel *pThis = (QAbstractTableModel*)_p;
	switch (funcid) {
	case 206000+1: {
		delete pThis;
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractTextDocumentLayout
int drv_QAbstractTextDocumentLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractTextDocumentLayout *pThis = (QAbstractTextDocumentLayout*)_p;
	switch (funcid) {
	case 207000+1: {
		delete pThis;
		break;
	}
	case 207102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(pageCountChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 207103: {
		UISignal47 *uis = new UISignal47(pThis);
		if (QObject::connect(pThis,SIGNAL(updateBlock(QTextBlock const&)),uis,SLOT(call(QTextBlock const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 207104: {
		UISignal39 *uis = new UISignal39(pThis);
		if (QObject::connect(pThis,SIGNAL(documentSizeChanged(QSizeF const&)),uis,SLOT(call(QSizeF const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 207105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(update()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 207106: {
		UISignal36 *uis = new UISignal36(pThis);
		if (QObject::connect(pThis,SIGNAL(update(QRectF const&)),uis,SLOT(call(QRectF const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 207107: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->anchorAt(*(QPointF*)(p1)));
		break;
	}
	case 207108: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->blockBoundingRect(*(QTextBlock*)(p1)));
		break;
	}
	case 207109: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 207110: {
		pThis->documentChanged(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 207111: {
		*(void**)p1 = new QSizeF(pThis->documentSize());
		break;
	}
	case 207112: {
		if(p2==0)return -2;
		pThis->draw((QPainter*)(p1),*(QAbstractTextDocumentLayout::PaintContext*)(p2));
		break;
	}
	case 207113: {
		if(p2==0)return -2;
	if(p3==0)return -2;
	if(p5==0)return -2;
		pThis->drawInlineObject((QPainter*)(p1),*(QRectF*)(p2),*(QTextInlineObject*)(p3),*(int*)p4,*(QTextFormat*)(p5));
		break;
	}
	case 207114: {
		*(void**)p2 = new QTextCharFormat(pThis->format(*(int*)p1));
		break;
	}
	case 207115: {
		*(int*)p2 = pThis->formatIndex(*(int*)p1);
		break;
	}
	case 207116: {
		*(void**)p2 = new QRectF(pThis->frameBoundingRect((QTextFrame*)(p1)));
		break;
	}
	case 207117: {
		*(void**)p2 = pThis->handlerForObject(*(int*)p1);
		break;
	}
	case 207118: {
		if(p1==0)return -2;
		*(int*)p3 = pThis->hitTest(*(QPointF*)(p1),*(Qt::HitTestAccuracy*)p2);
		break;
	}
	case 207119: {
		*(int*)p1 = pThis->pageCount();
		break;
	}
	case 207120: {
		*(void**)p1 = pThis->paintDevice();
		break;
	}
	case 207121: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		pThis->positionInlineObject(*(QTextInlineObject*)(p1),*(int*)p2,*(QTextFormat*)(p3));
		break;
	}
	case 207122: {
		pThis->registerHandler(*(int*)p1,(QObject*)(p2));
		break;
	}
	case 207123: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		pThis->resizeInlineObject(*(QTextInlineObject*)(p1),*(int*)p2,*(QTextFormat*)(p3));
		break;
	}
	case 207124: {
		pThis->setPaintDevice(drvGetPaintDevice(p1));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAbstractTransition
int drv_QAbstractTransition(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAbstractTransition *pThis = (QAbstractTransition*)_p;
	switch (funcid) {
	case 208000+1: {
		delete pThis;
		break;
	}
	case 208102: {
		pThis->addAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 208103: {
		drvSetListObj<QAbstractAnimation*>(p1,194000,pThis->animations());
		break;
	}
	case 208104: {
		*(bool*)p2 = pThis->eventTest((QEvent*)(p1));
		break;
	}
	case 208105: {
		*(void**)p1 = pThis->machine();
		break;
	}
	case 208106: {
		pThis->onTransition((QEvent*)(p1));
		break;
	}
	case 208107: {
		pThis->removeAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 208108: {
		pThis->setTargetState((QAbstractState*)(p1));
		break;
	}
	case 208109: {
		pThis->setTargetStates(drvGetObjectArrayHeadT<QAbstractState*>(p1));
		break;
	}
	case 208110: {
		*(void**)p1 = pThis->sourceState();
		break;
	}
	case 208111: {
		*(void**)p1 = pThis->targetState();
		break;
	}
	case 208112: {
		drvSetListObj<QAbstractState*>(p1,205000,pThis->targetStates());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAction
int drv_QAction(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAction *pThis = (QAction*)_p;
	switch (funcid) {
	case 209000+1: {
		delete pThis;
		break;
	}
	case 209102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(changed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 209103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 209104: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 209105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(hovered()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 209106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(toggled(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 209107: {
		*(void**)_p = new QAction((QObject*)(p1));
		break;
	}
	case 209108: {
		*(void**)_p = new QAction(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 209109: {
		if(p1==0)return -2;
		*(void**)_p = new QAction(*(QIcon*)(p1),drvGetStringHead(p2),(QObject*)(p3));
		break;
	}
	case 209110: {
		*(void**)p1 = pThis->actionGroup();
		break;
	}
	case 209111: {
		pThis->activate(*(QAction::ActionEvent*)p1);
		break;
	}
	case 209112: {
		drvSetListObj<QGraphicsWidget*>(p1,288000,pThis->associatedGraphicsWidgets());
		break;
	}
	case 209113: {
		drvSetListObj<QWidget*>(p1,397000,pThis->associatedWidgets());
		break;
	}
	case 209114: {
		*(bool*)p1 = pThis->autoRepeat();
		break;
	}
	case 209115: {
		*(void**)p1 = new QVariant(pThis->data());
		break;
	}
	case 209116: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 209117: {
		pThis->hover();
		break;
	}
	case 209118: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 209119: {
		drvSetString(p1,pThis->iconText());
		break;
	}
	case 209120: {
		*(bool*)p1 = pThis->isCheckable();
		break;
	}
	case 209121: {
		*(bool*)p1 = pThis->isChecked();
		break;
	}
	case 209122: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 209123: {
		*(bool*)p1 = pThis->isIconVisibleInMenu();
		break;
	}
	case 209124: {
		*(bool*)p1 = pThis->isSeparator();
		break;
	}
	case 209125: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 209126: {
		*(void**)p1 = pThis->menu();
		break;
	}
	case 209127: {
		*(QAction::MenuRole*)p1 = pThis->menuRole();
		break;
	}
	case 209128: {
		*(void**)p1 = pThis->parentWidget();
		break;
	}
	case 209129: {
		*(QAction::Priority*)p1 = pThis->priority();
		break;
	}
	case 209130: {
		pThis->setActionGroup((QActionGroup*)(p1));
		break;
	}
	case 209131: {
		pThis->setAutoRepeat(*(bool*)p1);
		break;
	}
	case 209132: {
		pThis->setCheckable(*(bool*)p1);
		break;
	}
	case 209133: {
		pThis->setChecked(*(bool*)p1);
		break;
	}
	case 209134: {
		if(p1==0)return -2;
		pThis->setData(*(QVariant*)(p1));
		break;
	}
	case 209135: {
		pThis->setDisabled(*(bool*)p1);
		break;
	}
	case 209136: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 209137: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 209138: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 209139: {
		pThis->setIconText(drvGetStringHead(p1));
		break;
	}
	case 209140: {
		pThis->setIconVisibleInMenu(*(bool*)p1);
		break;
	}
	case 209141: {
		pThis->setMenu((QMenu*)(p1));
		break;
	}
	case 209142: {
		pThis->setMenuRole(*(QAction::MenuRole*)p1);
		break;
	}
	case 209143: {
		pThis->setPriority(*(QAction::Priority*)p1);
		break;
	}
	case 209144: {
		pThis->setSeparator(*(bool*)p1);
		break;
	}
	case 209145: {
		if(p1==0)return -2;
		pThis->setShortcut(*(QKeySequence*)(p1));
		break;
	}
	case 209146: {
		pThis->setShortcutContext(*(Qt::ShortcutContext*)p1);
		break;
	}
	case 209147: {
		pThis->setShortcuts(*(QKeySequence::StandardKey*)p1);
		break;
	}
	case 209148: {
		pThis->setShortcuts(drvGetNoObjectArrayHeadT<QKeySequence>(p1));
		break;
	}
	case 209149: {
		pThis->setStatusTip(drvGetStringHead(p1));
		break;
	}
	case 209150: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 209151: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 209152: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	case 209153: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 209154: {
		*(void**)p1 = new QKeySequence(pThis->shortcut());
		break;
	}
	case 209155: {
		*(Qt::ShortcutContext*)p1 = pThis->shortcutContext();
		break;
	}
	case 209156: {
		drvSetListPtr<QKeySequence>(p1,66000,pThis->shortcuts());
		break;
	}
	case 209157: {
		*(bool*)p1 = pThis->showStatusText();
		break;
	}
	case 209158: {
		*(bool*)p2 = pThis->showStatusText((QWidget*)(p1));
		break;
	}
	case 209159: {
		drvSetString(p1,pThis->statusTip());
		break;
	}
	case 209160: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 209161: {
		pThis->toggle();
		break;
	}
	case 209162: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 209163: {
		pThis->trigger();
		break;
	}
	case 209164: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QActionGroup
int drv_QActionGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QActionGroup *pThis = (QActionGroup*)_p;
	switch (funcid) {
	case 210000+1: {
		delete pThis;
		break;
	}
	case 210102: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(hovered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 210103: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(selected(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 210104: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 210105: {
		*(void**)_p = new QActionGroup((QObject*)(p1));
		break;
	}
	case 210106: {
		drvSetListObj<QAction*>(p1,209000,pThis->actions());
		break;
	}
	case 210107: {
		*(void**)p2 = pThis->addAction((QAction*)(p1));
		break;
	}
	case 210108: {
		*(void**)p2 = pThis->addAction(drvGetStringHead(p1));
		break;
	}
	case 210109: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addAction(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 210110: {
		*(void**)p1 = pThis->checkedAction();
		break;
	}
	case 210111: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 210112: {
		*(bool*)p1 = pThis->isExclusive();
		break;
	}
	case 210113: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 210114: {
		pThis->removeAction((QAction*)(p1));
		break;
	}
	case 210115: {
		pThis->setDisabled(*(bool*)p1);
		break;
	}
	case 210116: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 210117: {
		pThis->setExclusive(*(bool*)p1);
		break;
	}
	case 210118: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QAnimationGroup
int drv_QAnimationGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QAnimationGroup *pThis = (QAnimationGroup*)_p;
	switch (funcid) {
	case 211000+1: {
		delete pThis;
		break;
	}
	case 211102: {
		pThis->addAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 211103: {
		*(void**)p2 = pThis->animationAt(*(int*)p1);
		break;
	}
	case 211104: {
		*(int*)p1 = pThis->animationCount();
		break;
	}
	case 211105: {
		pThis->clear();
		break;
	}
	case 211106: {
		*(int*)p2 = pThis->indexOfAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 211107: {
		pThis->insertAnimation(*(int*)p1,(QAbstractAnimation*)(p2));
		break;
	}
	case 211108: {
		pThis->removeAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 211109: {
		*(void**)p2 = pThis->takeAnimation(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QBoxLayout
int drv_QBoxLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QBoxLayout *pThis = (QBoxLayout*)_p;
	switch (funcid) {
	case 212000+1: {
		delete pThis;
		break;
	}
	case 212102: {
		*(void**)_p = new QBoxLayout(*(QBoxLayout::Direction*)p1,(QWidget*)(p2));
		break;
	}
	case 212103: {
		pThis->addLayout((QLayout*)(p1));
		break;
	}
	case 212104: {
		pThis->addLayout((QLayout*)(p1),*(int*)p2);
		break;
	}
	case 212105: {
		pThis->addSpacerItem((QSpacerItem*)(p1));
		break;
	}
	case 212106: {
		pThis->addSpacing(*(int*)p1);
		break;
	}
	case 212107: {
		pThis->addStretch();
		break;
	}
	case 212108: {
		pThis->addStretch(*(int*)p1);
		break;
	}
	case 212109: {
		pThis->addStrut(*(int*)p1);
		break;
	}
	case 212110: {
		pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 212111: {
		pThis->addWidget((QWidget*)(p1),*(int*)p2,*(QFlags<Qt::AlignmentFlag>*)p3);
		break;
	}
	case 212112: {
		*(QBoxLayout::Direction*)p1 = pThis->direction();
		break;
	}
	case 212113: {
		pThis->insertItem(*(int*)p1,(QLayoutItem*)(p2));
		break;
	}
	case 212114: {
		pThis->insertLayout(*(int*)p1,(QLayout*)(p2),*(int*)p3);
		break;
	}
	case 212115: {
		pThis->insertSpacerItem(*(int*)p1,(QSpacerItem*)(p2));
		break;
	}
	case 212116: {
		pThis->insertSpacing(*(int*)p1,*(int*)p2);
		break;
	}
	case 212117: {
		pThis->insertStretch(*(int*)p1);
		break;
	}
	case 212118: {
		pThis->insertStretch(*(int*)p1,*(int*)p2);
		break;
	}
	case 212119: {
		pThis->insertWidget(*(int*)p1,(QWidget*)(p2),*(int*)p3,*(QFlags<Qt::AlignmentFlag>*)p4);
		break;
	}
	case 212120: {
		pThis->setDirection(*(QBoxLayout::Direction*)p1);
		break;
	}
	case 212121: {
		pThis->setSpacing(*(int*)p1);
		break;
	}
	case 212122: {
		pThis->setStretch(*(int*)p1,*(int*)p2);
		break;
	}
	case 212123: {
		*(bool*)p3 = pThis->setStretchFactor((QLayout*)(p1),*(int*)p2);
		break;
	}
	case 212124: {
		*(bool*)p3 = pThis->setStretchFactor((QWidget*)(p1),*(int*)p2);
		break;
	}
	case 212125: {
		*(int*)p1 = pThis->spacing();
		break;
	}
	case 212126: {
		*(int*)p2 = pThis->stretch(*(int*)p1);
		break;
	}
	default:
		return drv_QLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QButtonGroup
int drv_QButtonGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QButtonGroup *pThis = (QButtonGroup*)_p;
	switch (funcid) {
	case 213000+1: {
		delete pThis;
		break;
	}
	case 213102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonClicked(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213103: {
		UISignal5 *uis = new UISignal5(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonClicked(QAbstractButton*)),uis,SLOT(call(QAbstractButton*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonPressed(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213105: {
		UISignal5 *uis = new UISignal5(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonPressed(QAbstractButton*)),uis,SLOT(call(QAbstractButton*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213106: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonReleased(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213107: {
		UISignal5 *uis = new UISignal5(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonReleased(QAbstractButton*)),uis,SLOT(call(QAbstractButton*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 213108: {
		*(void**)_p = new QButtonGroup();
		break;
	}
	case 213109: {
		*(void**)_p = new QButtonGroup((QObject*)(p1));
		break;
	}
	case 213110: {
		pThis->addButton((QAbstractButton*)(p1));
		break;
	}
	case 213111: {
		pThis->addButton((QAbstractButton*)(p1),*(int*)p2);
		break;
	}
	case 213112: {
		*(void**)p2 = pThis->button(*(int*)p1);
		break;
	}
	case 213113: {
		drvSetListObj<QAbstractButton*>(p1,195000,pThis->buttons());
		break;
	}
	case 213114: {
		*(void**)p1 = pThis->checkedButton();
		break;
	}
	case 213115: {
		*(int*)p1 = pThis->checkedId();
		break;
	}
	case 213116: {
		*(bool*)p1 = pThis->exclusive();
		break;
	}
	case 213117: {
		*(int*)p2 = pThis->id((QAbstractButton*)(p1));
		break;
	}
	case 213118: {
		pThis->removeButton((QAbstractButton*)(p1));
		break;
	}
	case 213119: {
		pThis->setExclusive(*(bool*)p1);
		break;
	}
	case 213120: {
		pThis->setId((QAbstractButton*)(p1),*(int*)p2);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCalendarWidget
int drv_QCalendarWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCalendarWidget *pThis = (QCalendarWidget*)_p;
	switch (funcid) {
	case 214000+1: {
		delete pThis;
		break;
	}
	case 214102: {
		UISignal10 *uis = new UISignal10(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked(QDate const&)),uis,SLOT(call(QDate const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 214103: {
		UISignal10 *uis = new UISignal10(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QDate const&)),uis,SLOT(call(QDate const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 214104: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(currentPageChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 214105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 214106: {
		*(void**)_p = new QCalendarWidget();
		break;
	}
	case 214107: {
		*(void**)_p = new QCalendarWidget((QWidget*)(p1));
		break;
	}
	case 214108: {
		*(int*)p1 = pThis->dateEditAcceptDelay();
		break;
	}
	case 214109: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCharFormat(pThis->dateTextFormat(*(QDate*)(p1)));
		break;
	}
	case 214110: {
		*(Qt::DayOfWeek*)p1 = pThis->firstDayOfWeek();
		break;
	}
	case 214111: {
		*(void**)p1 = new QTextCharFormat(pThis->headerTextFormat());
		break;
	}
	case 214112: {
		*(QCalendarWidget::HorizontalHeaderFormat*)p1 = pThis->horizontalHeaderFormat();
		break;
	}
	case 214113: {
		*(bool*)p1 = pThis->isDateEditEnabled();
		break;
	}
	case 214114: {
		*(bool*)p1 = pThis->isGridVisible();
		break;
	}
	case 214115: {
		*(bool*)p1 = pThis->isNavigationBarVisible();
		break;
	}
	case 214116: {
		*(void**)p1 = new QDate(pThis->maximumDate());
		break;
	}
	case 214117: {
		*(void**)p1 = new QDate(pThis->minimumDate());
		break;
	}
	case 214118: {
		*(int*)p1 = pThis->monthShown();
		break;
	}
	case 214119: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->paintCell((QPainter*)(p1),*(QRect*)(p2),*(QDate*)(p3));
		break;
	}
	case 214120: {
		*(void**)p1 = new QDate(pThis->selectedDate());
		break;
	}
	case 214121: {
		*(QCalendarWidget::SelectionMode*)p1 = pThis->selectionMode();
		break;
	}
	case 214122: {
		pThis->setCurrentPage(*(int*)p1,*(int*)p2);
		break;
	}
	case 214123: {
		pThis->setDateEditAcceptDelay(*(int*)p1);
		break;
	}
	case 214124: {
		pThis->setDateEditEnabled(*(bool*)p1);
		break;
	}
	case 214125: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setDateRange(*(QDate*)(p1),*(QDate*)(p2));
		break;
	}
	case 214126: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setDateTextFormat(*(QDate*)(p1),*(QTextCharFormat*)(p2));
		break;
	}
	case 214127: {
		pThis->setFirstDayOfWeek(*(Qt::DayOfWeek*)p1);
		break;
	}
	case 214128: {
		pThis->setGridVisible(*(bool*)p1);
		break;
	}
	case 214129: {
		if(p1==0)return -2;
		pThis->setHeaderTextFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 214130: {
		pThis->setHorizontalHeaderFormat(*(QCalendarWidget::HorizontalHeaderFormat*)p1);
		break;
	}
	case 214131: {
		if(p1==0)return -2;
		pThis->setMaximumDate(*(QDate*)(p1));
		break;
	}
	case 214132: {
		if(p1==0)return -2;
		pThis->setMinimumDate(*(QDate*)(p1));
		break;
	}
	case 214133: {
		pThis->setNavigationBarVisible(*(bool*)p1);
		break;
	}
	case 214134: {
		if(p1==0)return -2;
		pThis->setSelectedDate(*(QDate*)(p1));
		break;
	}
	case 214135: {
		pThis->setSelectionMode(*(QCalendarWidget::SelectionMode*)p1);
		break;
	}
	case 214136: {
		pThis->setVerticalHeaderFormat(*(QCalendarWidget::VerticalHeaderFormat*)p1);
		break;
	}
	case 214137: {
		if(p2==0)return -2;
		pThis->setWeekdayTextFormat(*(Qt::DayOfWeek*)p1,*(QTextCharFormat*)(p2));
		break;
	}
	case 214138: {
		pThis->showNextMonth();
		break;
	}
	case 214139: {
		pThis->showNextYear();
		break;
	}
	case 214140: {
		pThis->showPreviousMonth();
		break;
	}
	case 214141: {
		pThis->showPreviousYear();
		break;
	}
	case 214142: {
		pThis->showSelectedDate();
		break;
	}
	case 214143: {
		pThis->showToday();
		break;
	}
	case 214144: {
		if(p1==0)return -2;
		pThis->updateCell(*(QDate*)(p1));
		break;
	}
	case 214145: {
		pThis->updateCells();
		break;
	}
	case 214146: {
		*(QCalendarWidget::VerticalHeaderFormat*)p1 = pThis->verticalHeaderFormat();
		break;
	}
	case 214147: {
		*(void**)p2 = new QTextCharFormat(pThis->weekdayTextFormat(*(Qt::DayOfWeek*)p1));
		break;
	}
	case 214148: {
		*(int*)p1 = pThis->yearShown();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCheckBox
int drv_QCheckBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCheckBox *pThis = (QCheckBox*)_p;
	switch (funcid) {
	case 215000+1: {
		delete pThis;
		break;
	}
	case 215102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(stateChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 215103: {
		*(void**)_p = new QCheckBox();
		break;
	}
	case 215104: {
		*(void**)_p = new QCheckBox((QWidget*)(p1));
		break;
	}
	case 215105: {
		*(void**)_p = new QCheckBox(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 215106: {
		*(Qt::CheckState*)p1 = pThis->checkState();
		break;
	}
	case 215107: {
		*(bool*)p1 = pThis->isTristate();
		break;
	}
	case 215108: {
		pThis->setCheckState(*(Qt::CheckState*)p1);
		break;
	}
	case 215109: {
		pThis->setTristate(*(bool*)p1);
		break;
	}
	default:
		return drv_QAbstractButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QClipboard
int drv_QClipboard(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QClipboard *pThis = (QClipboard*)_p;
	switch (funcid) {
	case 216102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(findBufferChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 216103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 216104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(dataChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 216105: {
		UISignal8 *uis = new UISignal8(pThis);
		if (QObject::connect(pThis,SIGNAL(changed(QClipboard::Mode)),uis,SLOT(call(QClipboard::Mode)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 216106: {
		pThis->clear();
		break;
	}
	case 216107: {
		pThis->clear(*(QClipboard::Mode*)p1);
		break;
	}
	case 216108: {
		*(void**)p1 = new QImage(pThis->image());
		break;
	}
	case 216109: {
		*(void**)p2 = new QImage(pThis->image(*(QClipboard::Mode*)p1));
		break;
	}
	case 216110: {
		*(const void**)p1 = pThis->mimeData();
		break;
	}
	case 216111: {
		*(const void**)p2 = pThis->mimeData(*(QClipboard::Mode*)p1);
		break;
	}
	case 216112: {
		*(bool*)p1 = pThis->ownsClipboard();
		break;
	}
	case 216113: {
		*(bool*)p1 = pThis->ownsFindBuffer();
		break;
	}
	case 216114: {
		*(bool*)p1 = pThis->ownsSelection();
		break;
	}
	case 216115: {
		*(void**)p1 = new QPixmap(pThis->pixmap());
		break;
	}
	case 216116: {
		*(void**)p2 = new QPixmap(pThis->pixmap(*(QClipboard::Mode*)p1));
		break;
	}
	case 216117: {
		if(p1==0)return -2;
		pThis->setImage(*(QImage*)(p1));
		break;
	}
	case 216118: {
		if(p1==0)return -2;
		pThis->setImage(*(QImage*)(p1),*(QClipboard::Mode*)p2);
		break;
	}
	case 216119: {
		pThis->setMimeData((QMimeData*)(p1));
		break;
	}
	case 216120: {
		pThis->setMimeData((QMimeData*)(p1),*(QClipboard::Mode*)p2);
		break;
	}
	case 216121: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1));
		break;
	}
	case 216122: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1),*(QClipboard::Mode*)p2);
		break;
	}
	case 216123: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 216124: {
		pThis->setText(drvGetStringHead(p1),*(QClipboard::Mode*)p2);
		break;
	}
	case 216125: {
		*(bool*)p1 = pThis->supportsFindBuffer();
		break;
	}
	case 216126: {
		*(bool*)p1 = pThis->supportsSelection();
		break;
	}
	case 216127: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 216128: {
		drvSetString(p2,pThis->text(*(QClipboard::Mode*)p1));
		break;
	}
	case 216129: {
		QString _p1=drvGetStringRef(p1);
		drvSetString(p2,pThis->text(_p1));
		drvSetStringRef(p1,_p1);
		break;
	}
	case 216130: {
		QString _p1=drvGetStringRef(p1);
		drvSetString(p3,pThis->text(_p1,*(QClipboard::Mode*)p2));
		drvSetStringRef(p1,_p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QColorDialog
int drv_QColorDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QColorDialog *pThis = (QColorDialog*)_p;
	switch (funcid) {
	case 217000+1: {
		delete pThis;
		break;
	}
	case 217102: {
		UISignal9 *uis = new UISignal9(pThis);
		if (QObject::connect(pThis,SIGNAL(currentColorChanged(QColor const&)),uis,SLOT(call(QColor const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 217103: {
		UISignal9 *uis = new UISignal9(pThis);
		if (QObject::connect(pThis,SIGNAL(colorSelected(QColor const&)),uis,SLOT(call(QColor const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 217104: {
		*(void**)_p = new QColorDialog();
		break;
	}
	case 217105: {
		*(void**)_p = new QColorDialog((QWidget*)(p1));
		break;
	}
	case 217106: {
		if(p1==0)return -2;
		*(void**)_p = new QColorDialog(*(QColor*)(p1),(QWidget*)(p2));
		break;
	}
	case 217107: {
		*(void**)p1 = new QColor(pThis->currentColor());
		break;
	}
	case 217108: {
		*(void**)p2 = new QColor(QColorDialog::customColor(*(int*)p1));
		break;
	}
	case 217109: {
		*(int*)p1 = QColorDialog::customCount();
		break;
	}
	case 217110: {
		*(void**)p1 = new QColor(QColorDialog::getColor());
		break;
	}
	case 217111: {
		*(void**)p3 = new QColor(QColorDialog::getColor(p1==0?QColor():*(QColor*)(p1),(QWidget*)(p2)));
		break;
	}
	case 217112: {
		if(p1==0)return -2;
		*(void**)p5 = new QColor(QColorDialog::getColor(*(QColor*)(p1),(QWidget*)(p2),drvGetStringHead(p3),*(QFlags<QColorDialog::ColorDialogOption>*)p4));
		break;
	}
	case 217113: {
		*(unsigned int*)p1 = QColorDialog::getRgba();
		break;
	}
	case 217114: {
		*(unsigned int*)p4 = QColorDialog::getRgba(*(unsigned int*)p1,*(bool**)p2,(QWidget*)(p3));
		break;
	}
	case 217115: {
		pThis->open();
		break;
	}
	case 217116: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 217117: {
		*(QFlags<QColorDialog::ColorDialogOption>*)p1 = pThis->options();
		break;
	}
	case 217118: {
		*(void**)p1 = new QColor(pThis->selectedColor());
		break;
	}
	case 217119: {
		if(p1==0)return -2;
		pThis->setCurrentColor(*(QColor*)(p1));
		break;
	}
	case 217120: {
		if(p2==0)return -2;
#ifdef QTDRV_QT5
		QColorDialog::setCustomColor(*(int*)p1,(*(QColor*)(p2)));
#else
		QColorDialog::setCustomColor(*(int*)p1,(*(QColor*)(p2)).rgb());
#endif
		break;
	}
	case 217121: {
		pThis->setOption(*(QColorDialog::ColorDialogOption*)p1);
		break;
	}
	case 217122: {
		pThis->setOption(*(QColorDialog::ColorDialogOption*)p1,*(bool*)p2);
		break;
	}
	case 217123: {
		pThis->setOptions(*(QFlags<QColorDialog::ColorDialogOption>*)p1);
		break;
	}
	case 217124: {
		if(p2==0)return -2;
#ifdef QTDRV_QT5
		QColorDialog::setStandardColor(*(int*)p1,(*(QColor*)(p2)));
#else
		QColorDialog::setStandardColor(*(int*)p1,(*(QColor*)(p2)).rgb());
#endif
		break;
	}
	case 217125: {
		*(bool*)p2 = pThis->testOption(*(QColorDialog::ColorDialogOption*)p1);
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QColumnView
int drv_QColumnView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QColumnView *pThis = (QColumnView*)_p;
	switch (funcid) {
	case 218000+1: {
		delete pThis;
		break;
	}
	case 218102: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(updatePreviewWidget(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 218103: {
		*(void**)_p = new QColumnView();
		break;
	}
	case 218104: {
		*(void**)_p = new QColumnView((QWidget*)(p1));
		break;
	}
	case 218105: {
		drvSetList<int>(p1,pThis->columnWidths());
		break;
	}
	case 218106: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->createColumn(*(QModelIndex*)(p1));
		break;
	}
	case 218107: {
		pThis->initializeColumn((QAbstractItemView*)(p1));
		break;
	}
	case 218108: {
		*(void**)p1 = pThis->previewWidget();
		break;
	}
	case 218109: {
		*(bool*)p1 = pThis->resizeGripsVisible();
		break;
	}
	case 218110: {
		pThis->setColumnWidths(drvGetIntArrayHead(p1));
		break;
	}
	case 218111: {
		pThis->setPreviewWidget((QWidget*)(p1));
		break;
	}
	case 218112: {
		pThis->setResizeGripsVisible(*(bool*)p1);
		break;
	}
	default:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QComboBox
int drv_QComboBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QComboBox *pThis = (QComboBox*)_p;
	switch (funcid) {
	case 219000+1: {
		delete pThis;
		break;
	}
	case 219102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(editTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219105: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219106: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219107: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(currentIndexChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219108: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentIndexChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 219109: {
		*(void**)_p = new QComboBox();
		break;
	}
	case 219110: {
		*(void**)_p = new QComboBox((QWidget*)(p1));
		break;
	}
	case 219111: {
		pThis->addItem(drvGetStringHead(p1));
		break;
	}
	case 219112: {
		pThis->addItem(drvGetStringHead(p1),p2==0?QVariant():*(QVariant*)(p2));
		break;
	}
	case 219113: {
		if(p1==0)return -2;
		pThis->addItem(*(QIcon*)(p1),drvGetStringHead(p2),p3==0?QVariant():*(QVariant*)(p3));
		break;
	}
	case 219114: {
		pThis->addItems(drvGetStringArray(p1));
		break;
	}
	case 219115: {
		*(bool*)p1 = pThis->autoCompletion();
		break;
	}
	case 219116: {
		*(Qt::CaseSensitivity*)p1 = pThis->autoCompletionCaseSensitivity();
		break;
	}
	case 219117: {
		pThis->clear();
		break;
	}
	case 219118: {
		pThis->clearEditText();
		break;
	}
	case 219119: {
		*(void**)p1 = pThis->completer();
		break;
	}
	case 219120: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 219121: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 219122: {
		drvSetString(p1,pThis->currentText());
		break;
	}
	case 219123: {
		*(bool*)p1 = pThis->duplicatesEnabled();
		break;
	}
	case 219124: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->findData(*(QVariant*)(p1));
		break;
	}
	case 219125: {
		if(p1==0)return -2;
		*(int*)p4 = pThis->findData(*(QVariant*)(p1),*(int*)p2,*(QFlags<Qt::MatchFlag>*)p3);
		break;
	}
	case 219126: {
		*(int*)p2 = pThis->findText(drvGetStringHead(p1));
		break;
	}
	case 219127: {
		*(int*)p3 = pThis->findText(drvGetStringHead(p1),*(QFlags<Qt::MatchFlag>*)p2);
		break;
	}
	case 219128: {
		*(bool*)p1 = pThis->hasFrame();
		break;
	}
	case 219129: {
		pThis->hidePopup();
		break;
	}
	case 219130: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 219131: {
		pThis->insertItem(*(int*)p1,drvGetStringHead(p2),p3==0?QVariant():*(QVariant*)(p3));
		break;
	}
	case 219132: {
		if(p2==0)return -2;
		pThis->insertItem(*(int*)p1,*(QIcon*)(p2),drvGetStringHead(p3),p4==0?QVariant():*(QVariant*)(p4));
		break;
	}
	case 219133: {
		pThis->insertItems(*(int*)p1,drvGetStringArray(p2));
		break;
	}
	case 219134: {
		*(QComboBox::InsertPolicy*)p1 = pThis->insertPolicy();
		break;
	}
	case 219135: {
		pThis->insertSeparator(*(int*)p1);
		break;
	}
	case 219136: {
		*(bool*)p1 = pThis->isEditable();
		break;
	}
	case 219137: {
		*(void**)p2 = new QVariant(pThis->itemData(*(int*)p1));
		break;
	}
	case 219138: {
		*(void**)p3 = new QVariant(pThis->itemData(*(int*)p1,*(int*)p2));
		break;
	}
	case 219139: {
		*(void**)p1 = pThis->itemDelegate();
		break;
	}
	case 219140: {
		*(void**)p2 = new QIcon(pThis->itemIcon(*(int*)p1));
		break;
	}
	case 219141: {
		drvSetString(p2,pThis->itemText(*(int*)p1));
		break;
	}
	case 219142: {
		*(void**)p1 = pThis->lineEdit();
		break;
	}
	case 219143: {
		*(int*)p1 = pThis->maxCount();
		break;
	}
	case 219144: {
		*(int*)p1 = pThis->maxVisibleItems();
		break;
	}
	case 219145: {
		*(int*)p1 = pThis->minimumContentsLength();
		break;
	}
	case 219146: {
		*(void**)p1 = pThis->model();
		break;
	}
	case 219147: {
		*(int*)p1 = pThis->modelColumn();
		break;
	}
	case 219148: {
		pThis->removeItem(*(int*)p1);
		break;
	}
	case 219149: {
		*(void**)p1 = new QModelIndex(pThis->rootModelIndex());
		break;
	}
	case 219150: {
		pThis->setAutoCompletion(*(bool*)p1);
		break;
	}
	case 219151: {
		pThis->setAutoCompletionCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 219152: {
		pThis->setCompleter((QCompleter*)(p1));
		break;
	}
	case 219153: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 219154: {
		pThis->setDuplicatesEnabled(*(bool*)p1);
		break;
	}
	case 219155: {
		pThis->setEditText(drvGetStringHead(p1));
		break;
	}
	case 219156: {
		pThis->setEditable(*(bool*)p1);
		break;
	}
	case 219157: {
		pThis->setFrame(*(bool*)p1);
		break;
	}
	case 219158: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 219159: {
		pThis->setInsertPolicy(*(QComboBox::InsertPolicy*)p1);
		break;
	}
	case 219160: {
		if(p2==0)return -2;
		pThis->setItemData(*(int*)p1,*(QVariant*)(p2),*(int*)p3);
		break;
	}
	case 219161: {
		pThis->setItemDelegate((QAbstractItemDelegate*)(p1));
		break;
	}
	case 219162: {
		if(p2==0)return -2;
		pThis->setItemIcon(*(int*)p1,*(QIcon*)(p2));
		break;
	}
	case 219163: {
		pThis->setItemText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 219164: {
		pThis->setLineEdit((QLineEdit*)(p1));
		break;
	}
	case 219165: {
		pThis->setMaxCount(*(int*)p1);
		break;
	}
	case 219166: {
		pThis->setMaxVisibleItems(*(int*)p1);
		break;
	}
	case 219167: {
		pThis->setMinimumContentsLength(*(int*)p1);
		break;
	}
	case 219168: {
		pThis->setModel((QAbstractItemModel*)(p1));
		break;
	}
	case 219169: {
		pThis->setModelColumn(*(int*)p1);
		break;
	}
	case 219170: {
		if(p1==0)return -2;
		pThis->setRootModelIndex(*(QModelIndex*)(p1));
		break;
	}
	case 219171: {
		pThis->setSizeAdjustPolicy(*(QComboBox::SizeAdjustPolicy*)p1);
		break;
	}
	case 219172: {
		pThis->setValidator((QValidator*)(p1));
		break;
	}
	case 219173: {
		pThis->setView((QAbstractItemView*)(p1));
		break;
	}
	case 219174: {
		pThis->showPopup();
		break;
	}
	case 219175: {
		*(QComboBox::SizeAdjustPolicy*)p1 = pThis->sizeAdjustPolicy();
		break;
	}
	case 219176: {
		*(const void**)p1 = pThis->validator();
		break;
	}
	case 219177: {
		*(void**)p1 = pThis->view();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCommandLinkButton
int drv_QCommandLinkButton(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCommandLinkButton *pThis = (QCommandLinkButton*)_p;
	switch (funcid) {
	case 220000+1: {
		delete pThis;
		break;
	}
	case 220102: {
		*(void**)_p = new QCommandLinkButton();
		break;
	}
	case 220103: {
		*(void**)_p = new QCommandLinkButton((QWidget*)(p1));
		break;
	}
	case 220104: {
		*(void**)_p = new QCommandLinkButton(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 220105: {
		*(void**)_p = new QCommandLinkButton(drvGetStringHead(p1),drvGetStringHead(p2),(QWidget*)(p3));
		break;
	}
	case 220106: {
		drvSetString(p1,pThis->description());
		break;
	}
	case 220107: {
		pThis->setDescription(drvGetStringHead(p1));
		break;
	}
	default:
		return drv_QPushButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCommonStyle
int drv_QCommonStyle(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCommonStyle *pThis = (QCommonStyle*)_p;
	switch (funcid) {
	case 221000+1: {
		delete pThis;
		break;
	}
	case 221102: {
		*(void**)_p = new QCommonStyle();
		break;
	}
	default:
		return drv_QStyle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QCompleter
int drv_QCompleter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QCompleter *pThis = (QCompleter*)_p;
	switch (funcid) {
	case 222000+1: {
		delete pThis;
		break;
	}
	case 222102: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 222103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 222104: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 222105: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 222106: {
		*(void**)_p = new QCompleter();
		break;
	}
	case 222107: {
		*(void**)_p = new QCompleter((QObject*)(p1));
		break;
	}
	case 222108: {
		*(void**)_p = new QCompleter((QAbstractItemModel*)(p1),(QObject*)(p2));
		break;
	}
	case 222109: {
		*(void**)_p = new QCompleter(drvGetStringArray(p1),(QObject*)(p2));
		break;
	}
	case 222110: {
		*(Qt::CaseSensitivity*)p1 = pThis->caseSensitivity();
		break;
	}
	case 222111: {
		pThis->complete();
		break;
	}
	case 222112: {
		pThis->complete(p1==0?QRect():*(QRect*)(p1));
		break;
	}
	case 222113: {
		*(int*)p1 = pThis->completionColumn();
		break;
	}
	case 222114: {
		*(int*)p1 = pThis->completionCount();
		break;
	}
	case 222115: {
		*(QCompleter::CompletionMode*)p1 = pThis->completionMode();
		break;
	}
	case 222116: {
		*(void**)p1 = pThis->completionModel();
		break;
	}
	case 222117: {
		drvSetString(p1,pThis->completionPrefix());
		break;
	}
	case 222118: {
		*(int*)p1 = pThis->completionRole();
		break;
	}
	case 222119: {
		drvSetString(p1,pThis->currentCompletion());
		break;
	}
	case 222120: {
		*(void**)p1 = new QModelIndex(pThis->currentIndex());
		break;
	}
	case 222121: {
		*(int*)p1 = pThis->currentRow();
		break;
	}
	case 222122: {
		*(int*)p1 = pThis->maxVisibleItems();
		break;
	}
	case 222123: {
		*(void**)p1 = pThis->model();
		break;
	}
	case 222124: {
		*(QCompleter::ModelSorting*)p1 = pThis->modelSorting();
		break;
	}
	case 222125: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->pathFromIndex(*(QModelIndex*)(p1)));
		break;
	}
	case 222126: {
		*(void**)p1 = pThis->popup();
		break;
	}
	case 222127: {
		pThis->setCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 222128: {
		pThis->setCompletionColumn(*(int*)p1);
		break;
	}
	case 222129: {
		pThis->setCompletionMode(*(QCompleter::CompletionMode*)p1);
		break;
	}
	case 222130: {
		pThis->setCompletionPrefix(drvGetStringHead(p1));
		break;
	}
	case 222131: {
		pThis->setCompletionRole(*(int*)p1);
		break;
	}
	case 222132: {
		*(bool*)p2 = pThis->setCurrentRow(*(int*)p1);
		break;
	}
	case 222133: {
		pThis->setMaxVisibleItems(*(int*)p1);
		break;
	}
	case 222134: {
		pThis->setModel((QAbstractItemModel*)(p1));
		break;
	}
	case 222135: {
		pThis->setModelSorting(*(QCompleter::ModelSorting*)p1);
		break;
	}
	case 222136: {
		pThis->setPopup((QAbstractItemView*)(p1));
		break;
	}
	case 222137: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 222138: {
		pThis->setWrapAround(*(bool*)p1);
		break;
	}
	case 222139: {
		drvSetStringArray(p2,pThis->splitPath(drvGetStringHead(p1)));
		break;
	}
	case 222140: {
		*(void**)p1 = pThis->widget();
		break;
	}
	case 222141: {
		*(bool*)p1 = pThis->wrapAround();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDataWidgetMapper
int drv_QDataWidgetMapper(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDataWidgetMapper *pThis = (QDataWidgetMapper*)_p;
	switch (funcid) {
	case 223000+1: {
		delete pThis;
		break;
	}
	case 223102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentIndexChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 223103: {
		*(void**)_p = new QDataWidgetMapper();
		break;
	}
	case 223104: {
		*(void**)_p = new QDataWidgetMapper((QObject*)(p1));
		break;
	}
	case 223105: {
		pThis->addMapping((QWidget*)(p1),*(int*)p2);
		break;
	}
	case 223106: {
		pThis->addMapping((QWidget*)(p1),*(int*)p2,drvGetByteArrayHead(p3));
		break;
	}
	case 223107: {
		pThis->clearMapping();
		break;
	}
	case 223108: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 223109: {
		*(void**)p1 = pThis->itemDelegate();
		break;
	}
	case 223110: {
		drvSetByteArray(p2,pThis->mappedPropertyName((QWidget*)(p1)));
		break;
	}
	case 223111: {
		*(int*)p2 = pThis->mappedSection((QWidget*)(p1));
		break;
	}
	case 223112: {
		*(void**)p2 = pThis->mappedWidgetAt(*(int*)p1);
		break;
	}
	case 223113: {
		*(void**)p1 = pThis->model();
		break;
	}
	case 223114: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 223115: {
		pThis->removeMapping((QWidget*)(p1));
		break;
	}
	case 223116: {
		pThis->revert();
		break;
	}
	case 223117: {
		*(void**)p1 = new QModelIndex(pThis->rootIndex());
		break;
	}
	case 223118: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 223119: {
		if(p1==0)return -2;
		pThis->setCurrentModelIndex(*(QModelIndex*)(p1));
		break;
	}
	case 223120: {
		pThis->setItemDelegate((QAbstractItemDelegate*)(p1));
		break;
	}
	case 223121: {
		pThis->setModel((QAbstractItemModel*)(p1));
		break;
	}
	case 223122: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 223123: {
		if(p1==0)return -2;
		pThis->setRootIndex(*(QModelIndex*)(p1));
		break;
	}
	case 223124: {
		pThis->setSubmitPolicy(*(QDataWidgetMapper::SubmitPolicy*)p1);
		break;
	}
	case 223125: {
		*(bool*)p1 = pThis->submit();
		break;
	}
	case 223126: {
		*(QDataWidgetMapper::SubmitPolicy*)p1 = pThis->submitPolicy();
		break;
	}
	case 223127: {
		pThis->toFirst();
		break;
	}
	case 223128: {
		pThis->toLast();
		break;
	}
	case 223129: {
		pThis->toNext();
		break;
	}
	case 223130: {
		pThis->toPrevious();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDateEdit
int drv_QDateEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDateEdit *pThis = (QDateEdit*)_p;
	switch (funcid) {
	case 224000+1: {
		delete pThis;
		break;
	}
	case 224102: {
		*(void**)_p = new QDateEdit();
		break;
	}
	case 224103: {
		*(void**)_p = new QDateEdit((QWidget*)(p1));
		break;
	}
	case 224104: {
		if(p1==0)return -2;
		*(void**)_p = new QDateEdit(*(QDate*)(p1),(QWidget*)(p2));
		break;
	}
	default:
		return drv_QDateTimeEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDateTimeEdit
int drv_QDateTimeEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDateTimeEdit *pThis = (QDateTimeEdit*)_p;
	switch (funcid) {
	case 225000+1: {
		delete pThis;
		break;
	}
	case 225102: {
		UISignal11 *uis = new UISignal11(pThis);
		if (QObject::connect(pThis,SIGNAL(dateTimeChanged(QDateTime const&)),uis,SLOT(call(QDateTime const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 225103: {
		UISignal10 *uis = new UISignal10(pThis);
		if (QObject::connect(pThis,SIGNAL(dateChanged(QDate const&)),uis,SLOT(call(QDate const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 225104: {
		UISignal50 *uis = new UISignal50(pThis);
		if (QObject::connect(pThis,SIGNAL(timeChanged(QTime const&)),uis,SLOT(call(QTime const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 225105: {
		*(void**)_p = new QDateTimeEdit();
		break;
	}
	case 225106: {
		*(void**)_p = new QDateTimeEdit((QWidget*)(p1));
		break;
	}
	case 225107: {
		if(p1==0)return -2;
		*(void**)_p = new QDateTimeEdit(*(QDate*)(p1),(QWidget*)(p2));
		break;
	}
	case 225108: {
		if(p1==0)return -2;
		*(void**)_p = new QDateTimeEdit(*(QDateTime*)(p1),(QWidget*)(p2));
		break;
	}
	case 225109: {
		if(p1==0)return -2;
		*(void**)_p = new QDateTimeEdit(*(QTime*)(p1),(QWidget*)(p2));
		break;
	}
	case 225110: {
		*(bool*)p1 = pThis->calendarPopup();
		break;
	}
	case 225111: {
		*(void**)p1 = pThis->calendarWidget();
		break;
	}
	case 225112: {
		pThis->clearMaximumDate();
		break;
	}
	case 225113: {
		pThis->clearMaximumDateTime();
		break;
	}
	case 225114: {
		pThis->clearMaximumTime();
		break;
	}
	case 225115: {
		pThis->clearMinimumDate();
		break;
	}
	case 225116: {
		pThis->clearMinimumDateTime();
		break;
	}
	case 225117: {
		pThis->clearMinimumTime();
		break;
	}
	case 225118: {
		*(QDateTimeEdit::Section*)p1 = pThis->currentSection();
		break;
	}
	case 225119: {
		*(int*)p1 = pThis->currentSectionIndex();
		break;
	}
	case 225120: {
		*(void**)p1 = new QDate(pThis->date());
		break;
	}
	case 225121: {
		*(void**)p1 = new QDateTime(pThis->dateTime());
		break;
	}
	case 225122: {
		*(void**)p2 = new QDateTime(pThis->dateTimeFromText(drvGetStringHead(p1)));
		break;
	}
	case 225123: {
		drvSetString(p1,pThis->displayFormat());
		break;
	}
	case 225124: {
		*(QFlags<QDateTimeEdit::Section>*)p1 = pThis->displayedSections();
		break;
	}
	case 225125: {
		*(void**)p1 = new QDate(pThis->maximumDate());
		break;
	}
	case 225126: {
		*(void**)p1 = new QDateTime(pThis->maximumDateTime());
		break;
	}
	case 225127: {
		*(void**)p1 = new QTime(pThis->maximumTime());
		break;
	}
	case 225128: {
		*(void**)p1 = new QDate(pThis->minimumDate());
		break;
	}
	case 225129: {
		*(void**)p1 = new QDateTime(pThis->minimumDateTime());
		break;
	}
	case 225130: {
		*(void**)p1 = new QTime(pThis->minimumTime());
		break;
	}
	case 225131: {
		*(QDateTimeEdit::Section*)p2 = pThis->sectionAt(*(int*)p1);
		break;
	}
	case 225132: {
		*(int*)p1 = pThis->sectionCount();
		break;
	}
	case 225133: {
		drvSetString(p2,pThis->sectionText(*(QDateTimeEdit::Section*)p1));
		break;
	}
	case 225134: {
		pThis->setCalendarPopup(*(bool*)p1);
		break;
	}
	case 225135: {
		pThis->setCalendarWidget((QCalendarWidget*)(p1));
		break;
	}
	case 225136: {
		pThis->setCurrentSection(*(QDateTimeEdit::Section*)p1);
		break;
	}
	case 225137: {
		pThis->setCurrentSectionIndex(*(int*)p1);
		break;
	}
	case 225138: {
		if(p1==0)return -2;
		pThis->setDate(*(QDate*)(p1));
		break;
	}
	case 225139: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setDateRange(*(QDate*)(p1),*(QDate*)(p2));
		break;
	}
	case 225140: {
		if(p1==0)return -2;
		pThis->setDateTime(*(QDateTime*)(p1));
		break;
	}
	case 225141: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setDateTimeRange(*(QDateTime*)(p1),*(QDateTime*)(p2));
		break;
	}
	case 225142: {
		pThis->setDisplayFormat(drvGetStringHead(p1));
		break;
	}
	case 225143: {
		if(p1==0)return -2;
		pThis->setMaximumDate(*(QDate*)(p1));
		break;
	}
	case 225144: {
		if(p1==0)return -2;
		pThis->setMaximumDateTime(*(QDateTime*)(p1));
		break;
	}
	case 225145: {
		if(p1==0)return -2;
		pThis->setMaximumTime(*(QTime*)(p1));
		break;
	}
	case 225146: {
		if(p1==0)return -2;
		pThis->setMinimumDate(*(QDate*)(p1));
		break;
	}
	case 225147: {
		if(p1==0)return -2;
		pThis->setMinimumDateTime(*(QDateTime*)(p1));
		break;
	}
	case 225148: {
		if(p1==0)return -2;
		pThis->setMinimumTime(*(QTime*)(p1));
		break;
	}
	case 225149: {
		pThis->setSelectedSection(*(QDateTimeEdit::Section*)p1);
		break;
	}
	case 225150: {
		if(p1==0)return -2;
		pThis->setTime(*(QTime*)(p1));
		break;
	}
	case 225151: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setTimeRange(*(QTime*)(p1),*(QTime*)(p2));
		break;
	}
	case 225152: {
		pThis->setTimeSpec(*(Qt::TimeSpec*)p1);
		break;
	}
	case 225153: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->textFromDateTime(*(QDateTime*)(p1)));
		break;
	}
	case 225154: {
		*(void**)p1 = new QTime(pThis->time());
		break;
	}
	case 225155: {
		*(Qt::TimeSpec*)p1 = pThis->timeSpec();
		break;
	}
	default:
		return drv_QAbstractSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDesktopWidget
int drv_QDesktopWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDesktopWidget *pThis = (QDesktopWidget*)_p;
	switch (funcid) {
	case 226000+1: {
		delete pThis;
		break;
	}
	case 226102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(resized(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 226103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(workAreaResized(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 226104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(screenCountChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 226105: {
		*(void**)_p = new QDesktopWidget();
		break;
	}
	case 226106: {
		*(const void**)p1 = new QRect(pThis->availableGeometry());
		break;
	}
	case 226107: {
		if(p1==0)return -2;
		*(const void**)p2 = new QRect(pThis->availableGeometry(*(QPoint*)(p1)));
		break;
	}
	case 226108: {
		*(const void**)p2 = new QRect(pThis->availableGeometry((QWidget*)(p1)));
		break;
	}
	case 226109: {
		*(const void**)p2 = new QRect(pThis->availableGeometry(*(int*)p1));
		break;
	}
	case 226110: {
		*(bool*)p1 = pThis->isVirtualDesktop();
		break;
	}
	case 226111: {
		*(int*)p1 = pThis->numScreens();
		break;
	}
	case 226112: {
		*(int*)p1 = pThis->primaryScreen();
		break;
	}
	case 226113: {
		*(void**)p1 = pThis->screen();
		break;
	}
	case 226114: {
		*(void**)p2 = pThis->screen(*(int*)p1);
		break;
	}
	case 226115: {
		*(int*)p1 = pThis->screenCount();
		break;
	}
	case 226116: {
		*(const void**)p1 = new QRect(pThis->screenGeometry());
		break;
	}
	case 226117: {
		if(p1==0)return -2;
		*(const void**)p2 = new QRect(pThis->screenGeometry(*(QPoint*)(p1)));
		break;
	}
	case 226118: {
		*(const void**)p2 = new QRect(pThis->screenGeometry((QWidget*)(p1)));
		break;
	}
	case 226119: {
		*(const void**)p2 = new QRect(pThis->screenGeometry(*(int*)p1));
		break;
	}
	case 226120: {
		*(int*)p1 = pThis->screenNumber();
		break;
	}
	case 226121: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->screenNumber(*(QPoint*)(p1));
		break;
	}
	case 226122: {
		*(int*)p2 = pThis->screenNumber((QWidget*)(p1));
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDial
int drv_QDial(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDial *pThis = (QDial*)_p;
	switch (funcid) {
	case 227000+1: {
		delete pThis;
		break;
	}
	case 227102: {
		*(void**)_p = new QDial();
		break;
	}
	case 227103: {
		*(void**)_p = new QDial((QWidget*)(p1));
		break;
	}
	case 227104: {
		*(int*)p1 = pThis->notchSize();
		break;
	}
	case 227105: {
		*(double*)p1 = pThis->notchTarget();
		break;
	}
	case 227106: {
		*(bool*)p1 = pThis->notchesVisible();
		break;
	}
	case 227107: {
		pThis->setNotchTarget(*(double*)p1);
		break;
	}
	case 227108: {
		pThis->setNotchesVisible(*(bool*)p1);
		break;
	}
	case 227109: {
		pThis->setWrapping(*(bool*)p1);
		break;
	}
	case 227110: {
		*(bool*)p1 = pThis->wrapping();
		break;
	}
	default:
		return drv_QAbstractSlider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDialog
int drv_QDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDialog *pThis = (QDialog*)_p;
	switch (funcid) {
	case 228000+1: {
		delete pThis;
		break;
	}
	case 228102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(finished(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 228103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(accepted()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 228104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(rejected()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 228105: {
		*(void**)_p = new QDialog();
		break;
	}
	case 228106: {
		*(void**)_p = new QDialog((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 228107: {
		pThis->accept();
		break;
	}
	case 228108: {
		pThis->adjustPosition((QWidget*)(p1));
		break;
	}
	case 228109: {
		pThis->done(*(int*)p1);
		break;
	}
	case 228110: {
		*(int*)p1 = pThis->exec();
		break;
	}
	case 228111: {
		*(void**)p1 = pThis->extension();
		break;
	}
	case 228112: {
		*(bool*)p1 = pThis->isSizeGripEnabled();
		break;
	}
	case 228113: {
		pThis->open();
		break;
	}
	case 228114: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 228115: {
		pThis->reject();
		break;
	}
	case 228116: {
		*(int*)p1 = pThis->result();
		break;
	}
	case 228117: {
		pThis->setExtension((QWidget*)(p1));
		break;
	}
	case 228118: {
		pThis->setModal(*(bool*)p1);
		break;
	}
	case 228119: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 228120: {
		pThis->setResult(*(int*)p1);
		break;
	}
	case 228121: {
		pThis->setSizeGripEnabled(*(bool*)p1);
		break;
	}
	case 228122: {
		pThis->showExtension(*(bool*)p1);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDialogButtonBox
int drv_QDialogButtonBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDialogButtonBox *pThis = (QDialogButtonBox*)_p;
	switch (funcid) {
	case 229000+1: {
		delete pThis;
		break;
	}
	case 229102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(accepted()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 229103: {
		UISignal5 *uis = new UISignal5(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked(QAbstractButton*)),uis,SLOT(call(QAbstractButton*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 229104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(helpRequested()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 229105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(rejected()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 229106: {
		*(void**)_p = new QDialogButtonBox();
		break;
	}
	case 229107: {
		*(void**)_p = new QDialogButtonBox((QWidget*)(p1));
		break;
	}
	case 229108: {
		*(void**)_p = new QDialogButtonBox(*(Qt::Orientation*)p1,(QWidget*)(p2));
		break;
	}
	case 229109: {
		*(void**)_p = new QDialogButtonBox(*(QFlags<QDialogButtonBox::StandardButton>*)p1,*(Qt::Orientation*)p2,(QWidget*)(p3));
		break;
	}
	case 229110: {
		*(void**)p2 = pThis->addButton(*(QDialogButtonBox::StandardButton*)p1);
		break;
	}
	case 229111: {
		pThis->addButton((QAbstractButton*)(p1),*(QDialogButtonBox::ButtonRole*)p2);
		break;
	}
	case 229112: {
		*(void**)p3 = pThis->addButton(drvGetStringHead(p1),*(QDialogButtonBox::ButtonRole*)p2);
		break;
	}
	case 229113: {
		*(void**)p2 = pThis->button(*(QDialogButtonBox::StandardButton*)p1);
		break;
	}
	case 229114: {
		*(QDialogButtonBox::ButtonRole*)p2 = pThis->buttonRole((QAbstractButton*)(p1));
		break;
	}
	case 229115: {
		drvSetListObj<QAbstractButton*>(p1,195000,pThis->buttons());
		break;
	}
	case 229116: {
		*(bool*)p1 = pThis->centerButtons();
		break;
	}
	case 229117: {
		pThis->clear();
		break;
	}
	case 229118: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 229119: {
		pThis->removeButton((QAbstractButton*)(p1));
		break;
	}
	case 229120: {
		pThis->setCenterButtons(*(bool*)p1);
		break;
	}
	case 229121: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 229122: {
		pThis->setStandardButtons(*(QFlags<QDialogButtonBox::StandardButton>*)p1);
		break;
	}
	case 229123: {
		*(QDialogButtonBox::StandardButton*)p2 = pThis->standardButton((QAbstractButton*)(p1));
		break;
	}
	case 229124: {
		*(QFlags<QDialogButtonBox::StandardButton>*)p1 = pThis->standardButtons();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDirModel
int drv_QDirModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDirModel *pThis = (QDirModel*)_p;
	switch (funcid) {
	case 230000+1: {
		delete pThis;
		break;
	}
	case 230102: {
		*(void**)_p = new QDirModel();
		break;
	}
	case 230103: {
		*(void**)_p = new QDirModel((QObject*)(p1));
		break;
	}
	case 230104: {
		*(void**)_p = new QDirModel(drvGetStringArray(p1),*(QFlags<QDir::Filter>*)p2,*(QFlags<QDir::SortFlag>*)p3,(QObject*)(p4));
		break;
	}
	case 230105: {
		if(p1==0)return -2;
		*(void**)p2 = new QIcon(pThis->fileIcon(*(QModelIndex*)(p1)));
		break;
	}
	case 230106: {
		if(p1==0)return -2;
		*(void**)p2 = new QFileInfo(pThis->fileInfo(*(QModelIndex*)(p1)));
		break;
	}
	case 230107: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->fileName(*(QModelIndex*)(p1)));
		break;
	}
	case 230108: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->filePath(*(QModelIndex*)(p1)));
		break;
	}
	case 230109: {
		*(QFlags<QDir::Filter>*)p1 = pThis->filter();
		break;
	}
	case 230110: {
		*(void**)p1 = pThis->iconProvider();
		break;
	}
	case 230111: {
		*(void**)p2 = new QModelIndex(pThis->index(drvGetStringHead(p1)));
		break;
	}
	case 230112: {
		*(void**)p3 = new QModelIndex(pThis->index(drvGetStringHead(p1),*(int*)p2));
		break;
	}
	case 230113: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isDir(*(QModelIndex*)(p1));
		break;
	}
	case 230114: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 230115: {
		*(bool*)p1 = pThis->lazyChildCount();
		break;
	}
	case 230116: {
		if(p1==0)return -2;
		*(void**)p3 = new QModelIndex(pThis->mkdir(*(QModelIndex*)(p1),drvGetStringHead(p2)));
		break;
	}
	case 230117: {
		drvSetStringArray(p1,pThis->nameFilters());
		break;
	}
	case 230118: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 230119: {
		pThis->refresh();
		break;
	}
	case 230120: {
		pThis->refresh(p1==0?QModelIndex():*(QModelIndex*)(p1));
		break;
	}
	case 230121: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->remove(*(QModelIndex*)(p1));
		break;
	}
	case 230122: {
		*(bool*)p1 = pThis->resolveSymlinks();
		break;
	}
	case 230123: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->rmdir(*(QModelIndex*)(p1));
		break;
	}
	case 230124: {
		pThis->setFilter(*(QFlags<QDir::Filter>*)p1);
		break;
	}
	case 230125: {
		pThis->setIconProvider((QFileIconProvider*)(p1));
		break;
	}
	case 230126: {
		pThis->setLazyChildCount(*(bool*)p1);
		break;
	}
	case 230127: {
		pThis->setNameFilters(drvGetStringArray(p1));
		break;
	}
	case 230128: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 230129: {
		pThis->setResolveSymlinks(*(bool*)p1);
		break;
	}
	case 230130: {
		pThis->setSorting(*(QFlags<QDir::SortFlag>*)p1);
		break;
	}
	case 230131: {
		*(QFlags<QDir::SortFlag>*)p1 = pThis->sorting();
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDockWidget
int drv_QDockWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDockWidget *pThis = (QDockWidget*)_p;
	switch (funcid) {
	case 231000+1: {
		delete pThis;
		break;
	}
	case 231102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(topLevelChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 231103: {
		UISignal12 *uis = new UISignal12(pThis);
		if (QObject::connect(pThis,SIGNAL(featuresChanged(QFlags<QDockWidget::DockWidgetFeature>)),uis,SLOT(call(QFlags<QDockWidget::DockWidgetFeature>)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 231104: {
		UISignal14 *uis = new UISignal14(pThis);
		if (QObject::connect(pThis,SIGNAL(allowedAreasChanged(QFlags<Qt::DockWidgetArea>)),uis,SLOT(call(QFlags<Qt::DockWidgetArea>)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 231105: {
		UISignal61 *uis = new UISignal61(pThis);
		if (QObject::connect(pThis,SIGNAL(dockLocationChanged(Qt::DockWidgetArea)),uis,SLOT(call(Qt::DockWidgetArea)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 231106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(visibilityChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 231107: {
		*(void**)_p = new QDockWidget();
		break;
	}
	case 231108: {
		*(void**)_p = new QDockWidget((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 231109: {
		*(void**)_p = new QDockWidget(drvGetStringHead(p1),(QWidget*)(p2),*(QFlags<Qt::WindowType>*)p3);
		break;
	}
	case 231110: {
		*(QFlags<Qt::DockWidgetArea>*)p1 = pThis->allowedAreas();
		break;
	}
	case 231111: {
		*(QFlags<QDockWidget::DockWidgetFeature>*)p1 = pThis->features();
		break;
	}
	case 231112: {
		*(bool*)p2 = pThis->isAreaAllowed(*(Qt::DockWidgetArea*)p1);
		break;
	}
	case 231113: {
		*(bool*)p1 = pThis->isFloating();
		break;
	}
	case 231114: {
		pThis->setAllowedAreas(*(QFlags<Qt::DockWidgetArea>*)p1);
		break;
	}
	case 231115: {
		pThis->setFeatures(*(QFlags<QDockWidget::DockWidgetFeature>*)p1);
		break;
	}
	case 231116: {
		pThis->setFloating(*(bool*)p1);
		break;
	}
	case 231117: {
		pThis->setTitleBarWidget((QWidget*)(p1));
		break;
	}
	case 231118: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 231119: {
		*(void**)p1 = pThis->titleBarWidget();
		break;
	}
	case 231120: {
		*(void**)p1 = pThis->toggleViewAction();
		break;
	}
	case 231121: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDoubleSpinBox
int drv_QDoubleSpinBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDoubleSpinBox *pThis = (QDoubleSpinBox*)_p;
	switch (funcid) {
	case 232000+1: {
		delete pThis;
		break;
	}
	case 232102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 232103: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 232104: {
		*(void**)_p = new QDoubleSpinBox();
		break;
	}
	case 232105: {
		*(void**)_p = new QDoubleSpinBox((QWidget*)(p1));
		break;
	}
	case 232106: {
		drvSetString(p1,pThis->cleanText());
		break;
	}
	case 232107: {
		*(int*)p1 = pThis->decimals();
		break;
	}
	case 232108: {
		*(double*)p1 = pThis->maximum();
		break;
	}
	case 232109: {
		*(double*)p1 = pThis->minimum();
		break;
	}
	case 232110: {
		drvSetString(p1,pThis->prefix());
		break;
	}
	case 232111: {
		pThis->setDecimals(*(int*)p1);
		break;
	}
	case 232112: {
		pThis->setMaximum(*(double*)p1);
		break;
	}
	case 232113: {
		pThis->setMinimum(*(double*)p1);
		break;
	}
	case 232114: {
		pThis->setPrefix(drvGetStringHead(p1));
		break;
	}
	case 232115: {
		pThis->setRange(*(double*)p1,*(double*)p2);
		break;
	}
	case 232116: {
		pThis->setSingleStep(*(double*)p1);
		break;
	}
	case 232117: {
		pThis->setSuffix(drvGetStringHead(p1));
		break;
	}
	case 232118: {
		pThis->setValue(*(double*)p1);
		break;
	}
	case 232119: {
		*(double*)p1 = pThis->singleStep();
		break;
	}
	case 232120: {
		drvSetString(p1,pThis->suffix());
		break;
	}
	case 232121: {
		drvSetString(p2,pThis->textFromValue(*(double*)p1));
		break;
	}
	case 232122: {
		*(double*)p1 = pThis->value();
		break;
	}
	case 232123: {
		*(double*)p2 = pThis->valueFromText(drvGetStringHead(p1));
		break;
	}
	default:
		return drv_QAbstractSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDoubleValidator
int drv_QDoubleValidator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDoubleValidator *pThis = (QDoubleValidator*)_p;
	switch (funcid) {
	case 233000+1: {
		delete pThis;
		break;
	}
	case 233102: {
		*(void**)_p = new QDoubleValidator();
		break;
	}
	case 233103: {
		*(void**)_p = new QDoubleValidator((QObject*)(p1));
		break;
	}
	case 233104: {
		*(void**)_p = new QDoubleValidator(*(double*)p1,*(double*)p2,*(int*)p3,(QObject*)(p4));
		break;
	}
	case 233105: {
		*(double*)p1 = pThis->bottom();
		break;
	}
	case 233106: {
		*(int*)p1 = pThis->decimals();
		break;
	}
	case 233107: {
		*(QDoubleValidator::Notation*)p1 = pThis->notation();
		break;
	}
	case 233108: {
		pThis->setBottom(*(double*)p1);
		break;
	}
	case 233109: {
		pThis->setDecimals(*(int*)p1);
		break;
	}
	case 233110: {
		pThis->setNotation(*(QDoubleValidator::Notation*)p1);
		break;
	}
	case 233111: {
		pThis->setRange(*(double*)p1,*(double*)p2,*(int*)p3);
		break;
	}
	case 233112: {
		pThis->setTop(*(double*)p1);
		break;
	}
	case 233113: {
		*(double*)p1 = pThis->top();
		break;
	}
	default:
		return drv_QValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QDrag
int drv_QDrag(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QDrag *pThis = (QDrag*)_p;
	switch (funcid) {
	case 234000+1: {
		delete pThis;
		break;
	}
	case 234102: {
		UISignal58 *uis = new UISignal58(pThis);
		if (QObject::connect(pThis,SIGNAL(targetChanged(QWidget*)),uis,SLOT(call(QWidget*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 234103: {
		UISignal62 *uis = new UISignal62(pThis);
		if (QObject::connect(pThis,SIGNAL(actionChanged(Qt::DropAction)),uis,SLOT(call(Qt::DropAction)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 234104: {
		*(void**)_p = new QDrag((QWidget*)(p1));
		break;
	}
	case 234105: {
		*(Qt::DropAction*)p1 = pThis->exec();
		break;
	}
	case 234106: {
		*(Qt::DropAction*)p2 = pThis->exec(*(QFlags<Qt::DropAction>*)p1);
		break;
	}
	case 234107: {
		*(Qt::DropAction*)p3 = pThis->exec(*(QFlags<Qt::DropAction>*)p1,*(Qt::DropAction*)p2);
		break;
	}
	case 234108: {
		*(void**)p1 = new QPoint(pThis->hotSpot());
		break;
	}
	case 234109: {
		*(void**)p1 = pThis->mimeData();
		break;
	}
	case 234110: {
		*(void**)p1 = new QPixmap(pThis->pixmap());
		break;
	}
	case 234111: {
		if(p1==0)return -2;
		pThis->setDragCursor(*(QPixmap*)(p1),*(Qt::DropAction*)p2);
		break;
	}
	case 234112: {
		if(p1==0)return -2;
		pThis->setHotSpot(*(QPoint*)(p1));
		break;
	}
	case 234113: {
		pThis->setMimeData((QMimeData*)(p1));
		break;
	}
	case 234114: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1));
		break;
	}
	case 234115: {
		*(void**)p1 = pThis->source();
		break;
	}
	case 234116: {
		*(Qt::DropAction*)p1 = pThis->start();
		break;
	}
	case 234117: {
		*(Qt::DropAction*)p2 = pThis->start(*(QFlags<Qt::DropAction>*)p1);
		break;
	}
	case 234118: {
		*(void**)p1 = pThis->target();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QErrorMessage
int drv_QErrorMessage(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QErrorMessage *pThis = (QErrorMessage*)_p;
	switch (funcid) {
	case 235000+1: {
		delete pThis;
		break;
	}
	case 235102: {
		*(void**)_p = new QErrorMessage();
		break;
	}
	case 235103: {
		*(void**)_p = new QErrorMessage((QWidget*)(p1));
		break;
	}
	case 235104: {
		*(void**)p1 = QErrorMessage::qtHandler();
		break;
	}
	case 235105: {
		pThis->showMessage(drvGetStringHead(p1));
		break;
	}
	case 235106: {
		pThis->showMessage(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QEventLoop
int drv_QEventLoop(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QEventLoop *pThis = (QEventLoop*)_p;
	switch (funcid) {
	case 236000+1: {
		delete pThis;
		break;
	}
	case 236102: {
		*(void**)_p = new QEventLoop();
		break;
	}
	case 236103: {
		*(void**)_p = new QEventLoop((QObject*)(p1));
		break;
	}
	case 236104: {
		*(int*)p1 = pThis->exec();
		break;
	}
	case 236105: {
		*(int*)p2 = pThis->exec(*(QFlags<QEventLoop::ProcessEventsFlag>*)p1);
		break;
	}
	case 236106: {
		pThis->exit();
		break;
	}
	case 236107: {
		pThis->exit(*(int*)p1);
		break;
	}
	case 236108: {
		*(bool*)p1 = pThis->isRunning();
		break;
	}
	case 236109: {
		*(bool*)p1 = pThis->processEvents();
		break;
	}
	case 236110: {
		*(bool*)p2 = pThis->processEvents(*(QFlags<QEventLoop::ProcessEventsFlag>*)p1);
		break;
	}
	case 236111: {
		pThis->processEvents(*(QFlags<QEventLoop::ProcessEventsFlag>*)p1,*(int*)p2);
		break;
	}
	case 236112: {
		pThis->quit();
		break;
	}
	case 236113: {
		pThis->wakeUp();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QEventTransition
int drv_QEventTransition(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QEventTransition *pThis = (QEventTransition*)_p;
	switch (funcid) {
	case 237000+1: {
		delete pThis;
		break;
	}
	case 237102: {
		*(void**)_p = new QEventTransition();
		break;
	}
	case 237103: {
		*(void**)_p = new QEventTransition((QState*)(p1));
		break;
	}
	case 237104: {
		*(void**)_p = new QEventTransition((QObject*)(p1),*(QEvent::Type*)p2,(QState*)(p3));
		break;
	}
	case 237105: {
		*(void**)p1 = pThis->eventSource();
		break;
	}
	case 237106: {
		*(QEvent::Type*)p1 = pThis->eventType();
		break;
	}
	case 237107: {
		pThis->setEventSource((QObject*)(p1));
		break;
	}
	case 237108: {
		pThis->setEventType(*(QEvent::Type*)p1);
		break;
	}
	default:
		return drv_QAbstractTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFile
int drv_QFile(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFile *pThis = (QFile*)_p;
	switch (funcid) {
	case 238000+1: {
		delete pThis;
		break;
	}
	case 238102: {
		*(void**)_p = new QFile();
		break;
	}
	case 238103: {
		*(void**)_p = new QFile((QObject*)(p1));
		break;
	}
	case 238104: {
		*(void**)_p = new QFile(drvGetStringHead(p1));
		break;
	}
	case 238105: {
		*(void**)_p = new QFile(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 238106: {
		*(bool*)p2 = pThis->copy(drvGetStringHead(p1));
		break;
	}
	case 238107: {
		*(bool*)p3 = QFile::copy(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 238108: {
		drvSetString(p2,QFile::decodeName(drvGetByteArrayHead(p1)));
		break;
	}
	case 238109: {
		drvSetByteArray(p2,QFile::encodeName(drvGetStringHead(p1)));
		break;
	}
	case 238110: {
		*(QFile::FileError*)p1 = pThis->error();
		break;
	}
	case 238111: {
		*(bool*)p1 = pThis->exists();
		break;
	}
	case 238112: {
		*(bool*)p2 = QFile::exists(drvGetStringHead(p1));
		break;
	}
	case 238113: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 238114: {
		*(bool*)p1 = pThis->flush();
		break;
	}
	case 238115: {
		*(int*)p1 = pThis->handle();
		break;
	}
	case 238116: {
		*(bool*)p2 = pThis->link(drvGetStringHead(p1));
		break;
	}
	case 238117: {
		*(bool*)p3 = QFile::link(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 238118: {
		*(unsigned char**)p4 = pThis->map(*(qint64*)p1,*(qint64*)p2,*(QFile::MemoryMapFlags*)p3);
		break;
	}
	case 238119: {
		*(bool*)p3 = pThis->open(*(FILE**)p1,*(QFlags<QIODevice::OpenModeFlag>*)p2);
		break;
	}
	case 238120: {
		*(bool*)p3 = pThis->open(*(int*)p1,*(QFlags<QIODevice::OpenModeFlag>*)p2);
		break;
	}
	case 238121: {
		*(QFlags<QFile::Permission>*)p1 = pThis->permissions();
		break;
	}
	case 238122: {
		*(QFlags<QFile::Permission>*)p2 = QFile::permissions(drvGetStringHead(p1));
		break;
	}
	case 238123: {
		drvSetString(p1,pThis->readLink());
		break;
	}
	case 238124: {
		drvSetString(p2,QFile::readLink(drvGetStringHead(p1)));
		break;
	}
	case 238125: {
		*(bool*)p1 = pThis->remove();
		break;
	}
	case 238126: {
		*(bool*)p2 = QFile::remove(drvGetStringHead(p1));
		break;
	}
	case 238127: {
		*(bool*)p2 = pThis->rename(drvGetStringHead(p1));
		break;
	}
	case 238128: {
		*(bool*)p3 = QFile::rename(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 238129: {
		*(bool*)p2 = pThis->resize(*(qint64*)p1);
		break;
	}
	case 238130: {
		*(bool*)p3 = QFile::resize(drvGetStringHead(p1),*(qint64*)p2);
		break;
	}
	case 238131: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 238132: {
		*(bool*)p2 = pThis->setPermissions(*(QFlags<QFile::Permission>*)p1);
		break;
	}
	case 238133: {
		*(bool*)p3 = QFile::setPermissions(drvGetStringHead(p1),*(QFlags<QFile::Permission>*)p2);
		break;
	}
	case 238134: {
		drvSetString(p1,pThis->symLinkTarget());
		break;
	}
	case 238135: {
		drvSetString(p2,QFile::symLinkTarget(drvGetStringHead(p1)));
		break;
	}
	case 238136: {
		*(bool*)p2 = pThis->unmap(*(unsigned char**)p1);
		break;
	}
	case 238137: {
		pThis->unsetError();
		break;
	}
	default:
		return drv_QIODevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFileDialog
int drv_QFileDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFileDialog *pThis = (QFileDialog*)_p;
	switch (funcid) {
	case 239000+1: {
		delete pThis;
		break;
	}
	case 239102: {
		UISignal43 *uis = new UISignal43(pThis);
		if (QObject::connect(pThis,SIGNAL(filesSelected(QStringList const&)),uis,SLOT(call(QStringList const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 239103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 239104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(directoryEntered(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 239105: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(fileSelected(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 239106: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(filterSelected(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 239107: {
		*(void**)_p = new QFileDialog();
		break;
	}
	case 239108: {
		*(void**)_p = new QFileDialog((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 239109: {
		*(void**)_p = new QFileDialog((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4));
		break;
	}
	case 239110: {
		*(QFileDialog::AcceptMode*)p1 = pThis->acceptMode();
		break;
	}
	case 239111: {
		*(bool*)p1 = pThis->confirmOverwrite();
		break;
	}
	case 239112: {
		drvSetString(p1,pThis->defaultSuffix());
		break;
	}
	case 239113: {
		*(void**)p1 = new QDir(pThis->directory());
		break;
	}
	case 239114: {
		*(QFileDialog::FileMode*)p1 = pThis->fileMode();
		break;
	}
	case 239115: {
		*(QFlags<QDir::Filter>*)p1 = pThis->filter();
		break;
	}
	case 239116: {
		drvSetString(p1,QFileDialog::getExistingDirectory());
		break;
	}
	case 239117: {
		drvSetString(p5,QFileDialog::getExistingDirectory((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QFileDialog::Option>*)p4));
		break;
	}
	case 239118: {
		drvSetString(p1,QFileDialog::getOpenFileName());
		break;
	}
	case 239119: {
		QString _p5=drvGetStringRef(p5);
		drvSetString(p7,QFileDialog::getOpenFileName((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),&_p5,*(QFlags<QFileDialog::Option>*)p6));
		drvSetStringRef(p5,_p5);
		break;
	}
	case 239120: {
		drvSetStringArray(p1,QFileDialog::getOpenFileNames());
		break;
	}
	case 239121: {
		QString _p5=drvGetStringRef(p5);
		drvSetStringArray(p7,QFileDialog::getOpenFileNames((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),&_p5,*(QFlags<QFileDialog::Option>*)p6));
		drvSetStringRef(p5,_p5);
		break;
	}
	case 239122: {
		drvSetString(p1,QFileDialog::getSaveFileName());
		break;
	}
	case 239123: {
		QString _p5=drvGetStringRef(p5);
		drvSetString(p7,QFileDialog::getSaveFileName((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),&_p5,*(QFlags<QFileDialog::Option>*)p6));
		drvSetStringRef(p5,_p5);
		break;
	}
	case 239124: {
		drvSetStringArray(p1,pThis->history());
		break;
	}
	case 239125: {
		*(void**)p1 = pThis->iconProvider();
		break;
	}
	case 239126: {
		*(bool*)p1 = pThis->isNameFilterDetailsVisible();
		break;
	}
	case 239127: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 239128: {
		*(void**)p1 = pThis->itemDelegate();
		break;
	}
	case 239129: {
		drvSetString(p2,pThis->labelText(*(QFileDialog::DialogLabel*)p1));
		break;
	}
	case 239130: {
		drvSetStringArray(p1,pThis->nameFilters());
		break;
	}
	case 239131: {
		pThis->open();
		break;
	}
	case 239132: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 239133: {
		*(QFlags<QFileDialog::Option>*)p1 = pThis->options();
		break;
	}
	case 239134: {
		*(void**)p1 = pThis->proxyModel();
		break;
	}
	case 239135: {
		*(bool*)p1 = pThis->resolveSymlinks();
		break;
	}
	case 239136: {
		*(bool*)p2 = pThis->restoreState(drvGetByteArrayHead(p1));
		break;
	}
	case 239137: {
		drvSetByteArray(p1,pThis->saveState());
		break;
	}
	case 239138: {
		pThis->selectFile(drvGetStringHead(p1));
		break;
	}
	case 239139: {
		pThis->selectNameFilter(drvGetStringHead(p1));
		break;
	}
	case 239140: {
		drvSetStringArray(p1,pThis->selectedFiles());
		break;
	}
	case 239141: {
		drvSetString(p1,pThis->selectedNameFilter());
		break;
	}
	case 239142: {
		pThis->setAcceptMode(*(QFileDialog::AcceptMode*)p1);
		break;
	}
	case 239143: {
		pThis->setConfirmOverwrite(*(bool*)p1);
		break;
	}
	case 239144: {
		pThis->setDefaultSuffix(drvGetStringHead(p1));
		break;
	}
	case 239145: {
		if(p1==0)return -2;
		pThis->setDirectory(*(QDir*)(p1));
		break;
	}
	case 239146: {
		pThis->setDirectory(drvGetStringHead(p1));
		break;
	}
	case 239147: {
		pThis->setFileMode(*(QFileDialog::FileMode*)p1);
		break;
	}
	case 239148: {
		pThis->setFilter(*(QFlags<QDir::Filter>*)p1);
		break;
	}
	case 239149: {
		pThis->setHistory(drvGetStringArray(p1));
		break;
	}
	case 239150: {
		pThis->setIconProvider((QFileIconProvider*)(p1));
		break;
	}
	case 239151: {
		pThis->setItemDelegate((QAbstractItemDelegate*)(p1));
		break;
	}
	case 239152: {
		pThis->setLabelText(*(QFileDialog::DialogLabel*)p1,drvGetStringHead(p2));
		break;
	}
	case 239153: {
		pThis->setNameFilter(drvGetStringHead(p1));
		break;
	}
	case 239154: {
		pThis->setNameFilterDetailsVisible(*(bool*)p1);
		break;
	}
	case 239155: {
		pThis->setNameFilters(drvGetStringArray(p1));
		break;
	}
	case 239156: {
		pThis->setOption(*(QFileDialog::Option*)p1);
		break;
	}
	case 239157: {
		pThis->setOption(*(QFileDialog::Option*)p1,*(bool*)p2);
		break;
	}
	case 239158: {
		pThis->setOptions(*(QFlags<QFileDialog::Option>*)p1);
		break;
	}
	case 239159: {
		pThis->setProxyModel((QAbstractProxyModel*)(p1));
		break;
	}
	case 239160: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 239161: {
		pThis->setResolveSymlinks(*(bool*)p1);
		break;
	}
	case 239162: {
		pThis->setSidebarUrls(drvGetNoObjectArrayHeadT<QUrl>(p1));
		break;
	}
	case 239163: {
		pThis->setViewMode(*(QFileDialog::ViewMode*)p1);
		break;
	}
	case 239164: {
		drvSetListPtr<QUrl>(p1,182000,pThis->sidebarUrls());
		break;
	}
	case 239165: {
		*(bool*)p2 = pThis->testOption(*(QFileDialog::Option*)p1);
		break;
	}
	case 239166: {
		*(QFileDialog::ViewMode*)p1 = pThis->viewMode();
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFileSystemModel
int drv_QFileSystemModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFileSystemModel *pThis = (QFileSystemModel*)_p;
	switch (funcid) {
	case 240000+1: {
		delete pThis;
		break;
	}
	case 240102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(directoryLoaded(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 240103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(rootPathChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 240104: {
		UISignal42 *uis = new UISignal42(pThis);
		if (QObject::connect(pThis,SIGNAL(fileRenamed(QString const&,QString const&,QString const&)),uis,SLOT(call(QString const&,QString const&,QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 240105: {
		*(void**)_p = new QFileSystemModel();
		break;
	}
	case 240106: {
		*(void**)_p = new QFileSystemModel((QObject*)(p1));
		break;
	}
	case 240107: {
		if(p1==0)return -2;
		*(void**)p2 = new QIcon(pThis->fileIcon(*(QModelIndex*)(p1)));
		break;
	}
	case 240108: {
		if(p1==0)return -2;
		*(void**)p2 = new QFileInfo(pThis->fileInfo(*(QModelIndex*)(p1)));
		break;
	}
	case 240109: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->fileName(*(QModelIndex*)(p1)));
		break;
	}
	case 240110: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->filePath(*(QModelIndex*)(p1)));
		break;
	}
	case 240111: {
		*(QFlags<QDir::Filter>*)p1 = pThis->filter();
		break;
	}
	case 240112: {
		*(void**)p1 = pThis->iconProvider();
		break;
	}
	case 240113: {
		*(void**)p2 = new QModelIndex(pThis->index(drvGetStringHead(p1)));
		break;
	}
	case 240114: {
		*(void**)p3 = new QModelIndex(pThis->index(drvGetStringHead(p1),*(int*)p2));
		break;
	}
	case 240115: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isDir(*(QModelIndex*)(p1));
		break;
	}
	case 240116: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 240117: {
		if(p1==0)return -2;
		*(void**)p2 = new QDateTime(pThis->lastModified(*(QModelIndex*)(p1)));
		break;
	}
	case 240118: {
		if(p1==0)return -2;
		*(void**)p3 = new QModelIndex(pThis->mkdir(*(QModelIndex*)(p1),drvGetStringHead(p2)));
		break;
	}
	case 240119: {
		*(void**)p1 = new QVariant(pThis->myComputer());
		break;
	}
	case 240120: {
		*(void**)p2 = new QVariant(pThis->myComputer(*(int*)p1));
		break;
	}
	case 240121: {
		*(bool*)p1 = pThis->nameFilterDisables();
		break;
	}
	case 240122: {
		drvSetStringArray(p1,pThis->nameFilters());
		break;
	}
	case 240123: {
		if(p1==0)return -2;
		*(QFlags<QFile::Permission>*)p2 = pThis->permissions(*(QModelIndex*)(p1));
		break;
	}
	case 240124: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->remove(*(QModelIndex*)(p1));
		break;
	}
	case 240125: {
		*(bool*)p1 = pThis->resolveSymlinks();
		break;
	}
	case 240126: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->rmdir(*(QModelIndex*)(p1));
		break;
	}
	case 240127: {
		*(void**)p1 = new QDir(pThis->rootDirectory());
		break;
	}
	case 240128: {
		drvSetString(p1,pThis->rootPath());
		break;
	}
	case 240129: {
		pThis->setFilter(*(QFlags<QDir::Filter>*)p1);
		break;
	}
	case 240130: {
		pThis->setIconProvider((QFileIconProvider*)(p1));
		break;
	}
	case 240131: {
		pThis->setNameFilterDisables(*(bool*)p1);
		break;
	}
	case 240132: {
		pThis->setNameFilters(drvGetStringArray(p1));
		break;
	}
	case 240133: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 240134: {
		pThis->setResolveSymlinks(*(bool*)p1);
		break;
	}
	case 240135: {
		*(void**)p2 = new QModelIndex(pThis->setRootPath(drvGetStringHead(p1)));
		break;
	}
	case 240136: {
		if(p1==0)return -2;
		*(qint64*)p2 = pThis->size(*(QModelIndex*)(p1));
		break;
	}
	case 240137: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->type(*(QModelIndex*)(p1)));
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFileSystemWatcher
int drv_QFileSystemWatcher(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFileSystemWatcher *pThis = (QFileSystemWatcher*)_p;
	switch (funcid) {
	case 241000+1: {
		delete pThis;
		break;
	}
	case 241102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(fileChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 241103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(directoryChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 241104: {
		*(void**)_p = new QFileSystemWatcher();
		break;
	}
	case 241105: {
		*(void**)_p = new QFileSystemWatcher((QObject*)(p1));
		break;
	}
	case 241106: {
		*(void**)_p = new QFileSystemWatcher(drvGetStringArray(p1),(QObject*)(p2));
		break;
	}
	case 241107: {
		pThis->addPath(drvGetStringHead(p1));
		break;
	}
	case 241108: {
		pThis->addPaths(drvGetStringArray(p1));
		break;
	}
	case 241109: {
		drvSetStringArray(p1,pThis->directories());
		break;
	}
	case 241110: {
		drvSetStringArray(p1,pThis->files());
		break;
	}
	case 241111: {
		pThis->removePath(drvGetStringHead(p1));
		break;
	}
	case 241112: {
		pThis->removePaths(drvGetStringArray(p1));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFinalState
int drv_QFinalState(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFinalState *pThis = (QFinalState*)_p;
	switch (funcid) {
	case 242000+1: {
		delete pThis;
		break;
	}
	case 242102: {
		*(void**)_p = new QFinalState();
		break;
	}
	case 242103: {
		*(void**)_p = new QFinalState((QState*)(p1));
		break;
	}
	default:
		return drv_QAbstractState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFocusFrame
int drv_QFocusFrame(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFocusFrame *pThis = (QFocusFrame*)_p;
	switch (funcid) {
	case 243000+1: {
		delete pThis;
		break;
	}
	case 243102: {
		*(void**)_p = new QFocusFrame();
		break;
	}
	case 243103: {
		*(void**)_p = new QFocusFrame((QWidget*)(p1));
		break;
	}
	case 243104: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 243105: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFontComboBox
int drv_QFontComboBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFontComboBox *pThis = (QFontComboBox*)_p;
	switch (funcid) {
	case 244000+1: {
		delete pThis;
		break;
	}
	case 244102: {
		UISignal17 *uis = new UISignal17(pThis);
		if (QObject::connect(pThis,SIGNAL(currentFontChanged(QFont const&)),uis,SLOT(call(QFont const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 244103: {
		*(void**)_p = new QFontComboBox();
		break;
	}
	case 244104: {
		*(void**)_p = new QFontComboBox((QWidget*)(p1));
		break;
	}
	case 244105: {
		*(void**)p1 = new QFont(pThis->currentFont());
		break;
	}
	case 244106: {
		*(QFlags<QFontComboBox::FontFilter>*)p1 = pThis->fontFilters();
		break;
	}
	case 244107: {
		if(p1==0)return -2;
		pThis->setCurrentFont(*(QFont*)(p1));
		break;
	}
	case 244108: {
		pThis->setFontFilters(*(QFlags<QFontComboBox::FontFilter>*)p1);
		break;
	}
	case 244109: {
		pThis->setWritingSystem(*(QFontDatabase::WritingSystem*)p1);
		break;
	}
	case 244110: {
		*(QFontDatabase::WritingSystem*)p1 = pThis->writingSystem();
		break;
	}
	default:
		return drv_QComboBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFontDialog
int drv_QFontDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFontDialog *pThis = (QFontDialog*)_p;
	switch (funcid) {
	case 245000+1: {
		delete pThis;
		break;
	}
	case 245102: {
		UISignal17 *uis = new UISignal17(pThis);
		if (QObject::connect(pThis,SIGNAL(fontSelected(QFont const&)),uis,SLOT(call(QFont const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 245103: {
		UISignal17 *uis = new UISignal17(pThis);
		if (QObject::connect(pThis,SIGNAL(currentFontChanged(QFont const&)),uis,SLOT(call(QFont const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 245104: {
		*(void**)_p = new QFontDialog();
		break;
	}
	case 245105: {
		*(void**)_p = new QFontDialog((QWidget*)(p1));
		break;
	}
	case 245106: {
		if(p1==0)return -2;
		*(void**)_p = new QFontDialog(*(QFont*)(p1),(QWidget*)(p2));
		break;
	}
	case 245107: {
		*(void**)p1 = new QFont(pThis->currentFont());
		break;
	}
	case 245108: {
		*(void**)p2 = new QFont(QFontDialog::getFont(*(bool**)p1));
		break;
	}
	case 245109: {
		*(void**)p3 = new QFont(QFontDialog::getFont(*(bool**)p1,(QWidget*)(p2)));
		break;
	}
	case 245110: {
		if(p2==0)return -2;
		*(void**)p4 = new QFont(QFontDialog::getFont(*(bool**)p1,*(QFont*)(p2),(QWidget*)(p3)));
		break;
	}
	case 245111: {
		if(p2==0)return -2;
		*(void**)p5 = new QFont(QFontDialog::getFont(*(bool**)p1,*(QFont*)(p2),(QWidget*)(p3),drvGetStringHead(p4)));
		break;
	}
	case 245112: {
		if(p2==0)return -2;
		*(void**)p6 = new QFont(QFontDialog::getFont(*(bool**)p1,*(QFont*)(p2),(QWidget*)(p3),drvGetStringHead(p4),*(QFlags<QFontDialog::FontDialogOption>*)p5));
		break;
	}
	case 245113: {
		pThis->open();
		break;
	}
	case 245114: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 245115: {
		*(QFlags<QFontDialog::FontDialogOption>*)p1 = pThis->options();
		break;
	}
	case 245116: {
		*(void**)p1 = new QFont(pThis->selectedFont());
		break;
	}
	case 245117: {
		if(p1==0)return -2;
		pThis->setCurrentFont(*(QFont*)(p1));
		break;
	}
	case 245118: {
		pThis->setOption(*(QFontDialog::FontDialogOption*)p1);
		break;
	}
	case 245119: {
		pThis->setOption(*(QFontDialog::FontDialogOption*)p1,*(bool*)p2);
		break;
	}
	case 245120: {
		pThis->setOptions(*(QFlags<QFontDialog::FontDialogOption>*)p1);
		break;
	}
	case 245121: {
		*(bool*)p2 = pThis->testOption(*(QFontDialog::FontDialogOption*)p1);
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFormLayout
int drv_QFormLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFormLayout *pThis = (QFormLayout*)_p;
	switch (funcid) {
	case 246000+1: {
		delete pThis;
		break;
	}
	case 246102: {
		*(void**)_p = new QFormLayout();
		break;
	}
	case 246103: {
		*(void**)_p = new QFormLayout((QWidget*)(p1));
		break;
	}
	case 246104: {
		pThis->addRow((QLayout*)(p1));
		break;
	}
	case 246105: {
		pThis->addRow((QWidget*)(p1));
		break;
	}
	case 246106: {
		pThis->addRow(drvGetStringHead(p1),(QLayout*)(p2));
		break;
	}
	case 246107: {
		pThis->addRow(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 246108: {
		pThis->addRow((QWidget*)(p1),(QLayout*)(p2));
		break;
	}
	case 246109: {
		pThis->addRow((QWidget*)(p1),(QWidget*)(p2));
		break;
	}
	case 246110: {
		*(QFormLayout::FieldGrowthPolicy*)p1 = pThis->fieldGrowthPolicy();
		break;
	}
	case 246111: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->formAlignment();
		break;
	}
	case 246112: {
		pThis->getItemPosition(*(int*)p1,*(int**)p2,*(QFormLayout::ItemRole**)p3);
		break;
	}
	case 246113: {
		pThis->getLayoutPosition((QLayout*)(p1),*(int**)p2,*(QFormLayout::ItemRole**)p3);
		break;
	}
	case 246114: {
		pThis->getWidgetPosition((QWidget*)(p1),*(int**)p2,*(QFormLayout::ItemRole**)p3);
		break;
	}
	case 246115: {
		*(int*)p1 = pThis->horizontalSpacing();
		break;
	}
	case 246116: {
		pThis->insertRow(*(int*)p1,(QLayout*)(p2));
		break;
	}
	case 246117: {
		pThis->insertRow(*(int*)p1,(QWidget*)(p2));
		break;
	}
	case 246118: {
		pThis->insertRow(*(int*)p1,drvGetStringHead(p2),(QLayout*)(p3));
		break;
	}
	case 246119: {
		pThis->insertRow(*(int*)p1,drvGetStringHead(p2),(QWidget*)(p3));
		break;
	}
	case 246120: {
		pThis->insertRow(*(int*)p1,(QWidget*)(p2),(QLayout*)(p3));
		break;
	}
	case 246121: {
		pThis->insertRow(*(int*)p1,(QWidget*)(p2),(QWidget*)(p3));
		break;
	}
	case 246122: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(QFormLayout::ItemRole*)p2);
		break;
	}
	case 246123: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->labelAlignment();
		break;
	}
	case 246124: {
		*(void**)p2 = pThis->labelForField((QLayout*)(p1));
		break;
	}
	case 246125: {
		*(void**)p2 = pThis->labelForField((QWidget*)(p1));
		break;
	}
	case 246126: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 246127: {
		*(QFormLayout::RowWrapPolicy*)p1 = pThis->rowWrapPolicy();
		break;
	}
	case 246128: {
		pThis->setFieldGrowthPolicy(*(QFormLayout::FieldGrowthPolicy*)p1);
		break;
	}
	case 246129: {
		pThis->setFormAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 246130: {
		pThis->setHorizontalSpacing(*(int*)p1);
		break;
	}
	case 246131: {
		pThis->setItem(*(int*)p1,*(QFormLayout::ItemRole*)p2,(QLayoutItem*)(p3));
		break;
	}
	case 246132: {
		pThis->setLabelAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 246133: {
		pThis->setLayout(*(int*)p1,*(QFormLayout::ItemRole*)p2,(QLayout*)(p3));
		break;
	}
	case 246134: {
		pThis->setRowWrapPolicy(*(QFormLayout::RowWrapPolicy*)p1);
		break;
	}
	case 246135: {
		pThis->setSpacing(*(int*)p1);
		break;
	}
	case 246136: {
		pThis->setVerticalSpacing(*(int*)p1);
		break;
	}
	case 246137: {
		pThis->setWidget(*(int*)p1,*(QFormLayout::ItemRole*)p2,(QWidget*)(p3));
		break;
	}
	case 246138: {
		*(int*)p1 = pThis->spacing();
		break;
	}
	case 246139: {
		*(int*)p1 = pThis->verticalSpacing();
		break;
	}
	default:
		return drv_QLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFrame
int drv_QFrame(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFrame *pThis = (QFrame*)_p;
	switch (funcid) {
	case 247000+1: {
		delete pThis;
		break;
	}
	case 247102: {
		*(void**)_p = new QFrame();
		break;
	}
	case 247103: {
		*(void**)_p = new QFrame((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 247104: {
		pThis->drawFrame((QPainter*)(p1));
		break;
	}
	case 247105: {
		*(void**)p1 = new QRect(pThis->frameRect());
		break;
	}
	case 247106: {
		*(QFrame::Shadow*)p1 = pThis->frameShadow();
		break;
	}
	case 247107: {
		*(QFrame::Shape*)p1 = pThis->frameShape();
		break;
	}
	case 247108: {
		*(int*)p1 = pThis->frameStyle();
		break;
	}
	case 247109: {
		*(int*)p1 = pThis->frameWidth();
		break;
	}
	case 247110: {
		*(int*)p1 = pThis->lineWidth();
		break;
	}
	case 247111: {
		*(int*)p1 = pThis->midLineWidth();
		break;
	}
	case 247112: {
		if(p1==0)return -2;
		pThis->setFrameRect(*(QRect*)(p1));
		break;
	}
	case 247113: {
		pThis->setFrameShadow(*(QFrame::Shadow*)p1);
		break;
	}
	case 247114: {
		pThis->setFrameShape(*(QFrame::Shape*)p1);
		break;
	}
	case 247115: {
		pThis->setFrameStyle(*(int*)p1);
		break;
	}
	case 247116: {
		pThis->setLineWidth(*(int*)p1);
		break;
	}
	case 247117: {
		pThis->setMidLineWidth(*(int*)p1);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QFutureWatcherBase
int drv_QFutureWatcherBase(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QFutureWatcherBase *pThis = (QFutureWatcherBase*)_p;
	switch (funcid) {
	case 248000+1: {
		delete pThis;
		break;
	}
	case 248102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(finished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(progressTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(canceled()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248105: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(progressValueChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(started()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248107: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(progressRangeChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248108: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(resultsReadyAt(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248109: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(paused()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248110: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(resumed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248111: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(resultReadyAt(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 248112: {
		pThis->cancel();
		break;
	}
	case 248113: {
		pThis->connectOutputInterface();
		break;
	}
	case 248114: {
		pThis->disconnectOutputInterface(*(bool*)p1);
		break;
	}
	case 248115: {
		*(bool*)p1 = pThis->isCanceled();
		break;
	}
	case 248116: {
		*(bool*)p1 = pThis->isFinished();
		break;
	}
	case 248117: {
		*(bool*)p1 = pThis->isPaused();
		break;
	}
	case 248118: {
		*(bool*)p1 = pThis->isRunning();
		break;
	}
	case 248119: {
		*(bool*)p1 = pThis->isStarted();
		break;
	}
	case 248120: {
		pThis->pause();
		break;
	}
	case 248121: {
		*(int*)p1 = pThis->progressMaximum();
		break;
	}
	case 248122: {
		*(int*)p1 = pThis->progressMinimum();
		break;
	}
	case 248123: {
		drvSetString(p1,pThis->progressText());
		break;
	}
	case 248124: {
		*(int*)p1 = pThis->progressValue();
		break;
	}
	case 248125: {
		pThis->resume();
		break;
	}
	case 248126: {
		pThis->setPaused(*(bool*)p1);
		break;
	}
	case 248127: {
		pThis->setPendingResultsLimit(*(int*)p1);
		break;
	}
	case 248128: {
		pThis->togglePaused();
		break;
	}
	case 248129: {
		pThis->waitForFinished();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGesture
int drv_QGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGesture *pThis = (QGesture*)_p;
	switch (funcid) {
	case 249000+1: {
		delete pThis;
		break;
	}
	case 249102: {
		*(void**)_p = new QGesture();
		break;
	}
	case 249103: {
		*(void**)_p = new QGesture((QObject*)(p1));
		break;
	}
	case 249104: {
		*(QGesture::GestureCancelPolicy*)p1 = pThis->gestureCancelPolicy();
		break;
	}
	case 249105: {
		*(Qt::GestureType*)p1 = pThis->gestureType();
		break;
	}
	case 249106: {
		*(bool*)p1 = pThis->hasHotSpot();
		break;
	}
	case 249107: {
		*(void**)p1 = new QPointF(pThis->hotSpot());
		break;
	}
	case 249108: {
		pThis->setGestureCancelPolicy(*(QGesture::GestureCancelPolicy*)p1);
		break;
	}
	case 249109: {
		if(p1==0)return -2;
		pThis->setHotSpot(*(QPointF*)(p1));
		break;
	}
	case 249110: {
		*(Qt::GestureState*)p1 = pThis->state();
		break;
	}
	case 249111: {
		pThis->unsetHotSpot();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsAnchor
int drv_QGraphicsAnchor(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsAnchor *pThis = (QGraphicsAnchor*)_p;
	switch (funcid) {
	case 250000+1: {
		delete pThis;
		break;
	}
	case 250102: {
		pThis->setSizePolicy(*(QSizePolicy::Policy*)p1);
		break;
	}
	case 250103: {
		pThis->setSpacing(*(double*)p1);
		break;
	}
	case 250104: {
		*(QSizePolicy::Policy*)p1 = pThis->sizePolicy();
		break;
	}
	case 250105: {
		*(double*)p1 = pThis->spacing();
		break;
	}
	case 250106: {
		pThis->unsetSpacing();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsAnchorLayout
int drv_QGraphicsAnchorLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsAnchorLayout *pThis = (QGraphicsAnchorLayout*)_p;
	switch (funcid) {
	case 251000+1: {
		delete pThis;
		break;
	}
	case 251102: {
		*(void**)_p = new QGraphicsAnchorLayout();
		break;
	}
	case 251103: {
		*(void**)_p = new QGraphicsAnchorLayout((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 251104: {
		*(void**)p5 = pThis->addAnchor((QGraphicsLayoutItem*)(p1),*(Qt::AnchorPoint*)p2,(QGraphicsLayoutItem*)(p3),*(Qt::AnchorPoint*)p4);
		break;
	}
	case 251105: {
		pThis->addAnchors((QGraphicsLayoutItem*)(p1),(QGraphicsLayoutItem*)(p2),*(QFlags<Qt::Orientation>*)p3);
		break;
	}
	case 251106: {
		pThis->addCornerAnchors((QGraphicsLayoutItem*)(p1),*(Qt::Corner*)p2,(QGraphicsLayoutItem*)(p3),*(Qt::Corner*)p4);
		break;
	}
	case 251107: {
		*(void**)p5 = pThis->anchor((QGraphicsLayoutItem*)(p1),*(Qt::AnchorPoint*)p2,(QGraphicsLayoutItem*)(p3),*(Qt::AnchorPoint*)p4);
		break;
	}
	case 251108: {
		*(double*)p1 = pThis->horizontalSpacing();
		break;
	}
	case 251109: {
		pThis->setHorizontalSpacing(*(double*)p1);
		break;
	}
	case 251110: {
		pThis->setSpacing(*(double*)p1);
		break;
	}
	case 251111: {
		pThis->setVerticalSpacing(*(double*)p1);
		break;
	}
	case 251112: {
		*(double*)p1 = pThis->verticalSpacing();
		break;
	}
	default:
		return drv_QGraphicsLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsBlurEffect
int drv_QGraphicsBlurEffect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsBlurEffect *pThis = (QGraphicsBlurEffect*)_p;
	switch (funcid) {
	case 252000+1: {
		delete pThis;
		break;
	}
	case 252102: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(blurRadiusChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 252103: {
		UISignal13 *uis = new UISignal13(pThis);
		if (QObject::connect(pThis,SIGNAL(blurHintsChanged(QFlags<QGraphicsBlurEffect::BlurHint>)),uis,SLOT(call(QFlags<QGraphicsBlurEffect::BlurHint>)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 252104: {
		*(void**)_p = new QGraphicsBlurEffect();
		break;
	}
	case 252105: {
		*(void**)_p = new QGraphicsBlurEffect((QObject*)(p1));
		break;
	}
	case 252106: {
		*(QFlags<QGraphicsBlurEffect::BlurHint>*)p1 = pThis->blurHints();
		break;
	}
	case 252107: {
		*(double*)p1 = pThis->blurRadius();
		break;
	}
	case 252108: {
		pThis->setBlurHints(*(QFlags<QGraphicsBlurEffect::BlurHint>*)p1);
		break;
	}
	case 252109: {
		pThis->setBlurRadius(*(double*)p1);
		break;
	}
	default:
		return drv_QGraphicsEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsColorizeEffect
int drv_QGraphicsColorizeEffect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsColorizeEffect *pThis = (QGraphicsColorizeEffect*)_p;
	switch (funcid) {
	case 253000+1: {
		delete pThis;
		break;
	}
	case 253102: {
		UISignal9 *uis = new UISignal9(pThis);
		if (QObject::connect(pThis,SIGNAL(colorChanged(QColor const&)),uis,SLOT(call(QColor const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 253103: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(strengthChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 253104: {
		*(void**)_p = new QGraphicsColorizeEffect();
		break;
	}
	case 253105: {
		*(void**)_p = new QGraphicsColorizeEffect((QObject*)(p1));
		break;
	}
	case 253106: {
		*(void**)p1 = new QColor(pThis->color());
		break;
	}
	case 253107: {
		if(p1==0)return -2;
		pThis->setColor(*(QColor*)(p1));
		break;
	}
	case 253108: {
		pThis->setStrength(*(double*)p1);
		break;
	}
	case 253109: {
		*(double*)p1 = pThis->strength();
		break;
	}
	default:
		return drv_QGraphicsEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsDropShadowEffect
int drv_QGraphicsDropShadowEffect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsDropShadowEffect *pThis = (QGraphicsDropShadowEffect*)_p;
	switch (funcid) {
	case 254000+1: {
		delete pThis;
		break;
	}
	case 254102: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(blurRadiusChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 254103: {
		UISignal30 *uis = new UISignal30(pThis);
		if (QObject::connect(pThis,SIGNAL(offsetChanged(QPointF const&)),uis,SLOT(call(QPointF const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 254104: {
		UISignal9 *uis = new UISignal9(pThis);
		if (QObject::connect(pThis,SIGNAL(colorChanged(QColor const&)),uis,SLOT(call(QColor const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 254105: {
		*(void**)_p = new QGraphicsDropShadowEffect();
		break;
	}
	case 254106: {
		*(void**)_p = new QGraphicsDropShadowEffect((QObject*)(p1));
		break;
	}
	case 254107: {
		*(double*)p1 = pThis->blurRadius();
		break;
	}
	case 254108: {
		*(void**)p1 = new QColor(pThis->color());
		break;
	}
	case 254109: {
		*(void**)p1 = new QPointF(pThis->offset());
		break;
	}
	case 254110: {
		pThis->setBlurRadius(*(double*)p1);
		break;
	}
	case 254111: {
		if(p1==0)return -2;
		pThis->setColor(*(QColor*)(p1));
		break;
	}
	case 254112: {
		if(p1==0)return -2;
		pThis->setOffset(*(QPointF*)(p1));
		break;
	}
	case 254113: {
		pThis->setOffset(*(double*)p1);
		break;
	}
	case 254114: {
		pThis->setOffset(*(double*)p1,*(double*)p2);
		break;
	}
	case 254115: {
		pThis->setXOffset(*(double*)p1);
		break;
	}
	case 254116: {
		pThis->setYOffset(*(double*)p1);
		break;
	}
	case 254117: {
		*(double*)p1 = pThis->xOffset();
		break;
	}
	case 254118: {
		*(double*)p1 = pThis->yOffset();
		break;
	}
	default:
		return drv_QGraphicsEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsEffect
int drv_QGraphicsEffect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsEffect *pThis = (QGraphicsEffect*)_p;
	switch (funcid) {
	case 255000+1: {
		delete pThis;
		break;
	}
	case 255102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(enabledChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 255103: {
		*(void**)p1 = new QRectF(pThis->boundingRect());
		break;
	}
	case 255104: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->boundingRectFor(*(QRectF*)(p1)));
		break;
	}
	case 255105: {
		pThis->draw((QPainter*)(p1));
		break;
	}
	case 255106: {
		pThis->drawSource((QPainter*)(p1));
		break;
	}
	case 255107: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 255108: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 255109: {
		*(void**)p2 = new QRectF(pThis->sourceBoundingRect(*(Qt::CoordinateSystem*)p1));
		break;
	}
	case 255110: {
		pThis->sourceChanged(*(QFlags<QGraphicsEffect::ChangeFlag>*)p1);
		break;
	}
	case 255111: {
		*(bool*)p1 = pThis->sourceIsPixmap();
		break;
	}
	case 255112: {
		*(void**)p4 = new QPixmap(pThis->sourcePixmap(*(Qt::CoordinateSystem*)p1,(QPoint*)(p2),*(QGraphicsEffect::PixmapPadMode*)p3));
		break;
	}
	case 255113: {
		pThis->update();
		break;
	}
	case 255114: {
		pThis->updateBoundingRect();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsEllipseItem
int drv_QGraphicsEllipseItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsEllipseItem *pThis = (QGraphicsEllipseItem*)_p;
	switch (funcid) {
	case 256000+1: {
		delete pThis;
		break;
	}
	case 256102: {
		*(void**)_p = new QGraphicsEllipseItem();
		break;
	}
	case 256103: {
		*(void**)_p = new QGraphicsEllipseItem((QGraphicsItem*)(p1));
		break;
	}
	case 256104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsEllipseItem(*(QRectF*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 256105: {
		*(void**)_p = new QGraphicsEllipseItem(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,(QGraphicsItem*)(p5));
		break;
	}
	case 256106: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 256107: {
		if(p1==0)return -2;
		pThis->setRect(*(QRectF*)(p1));
		break;
	}
	case 256108: {
		pThis->setRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 256109: {
		pThis->setSpanAngle(*(int*)p1);
		break;
	}
	case 256110: {
		pThis->setStartAngle(*(int*)p1);
		break;
	}
	case 256111: {
		*(int*)p1 = pThis->spanAngle();
		break;
	}
	case 256112: {
		*(int*)p1 = pThis->startAngle();
		break;
	}
	default:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsGridLayout
int drv_QGraphicsGridLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsGridLayout *pThis = (QGraphicsGridLayout*)_p;
	switch (funcid) {
	case 257000+1: {
		delete pThis;
		break;
	}
	case 257102: {
		*(void**)_p = new QGraphicsGridLayout();
		break;
	}
	case 257103: {
		*(void**)_p = new QGraphicsGridLayout((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 257104: {
		pThis->addItem((QGraphicsLayoutItem*)(p1),*(int*)p2,*(int*)p3,*(QFlags<Qt::AlignmentFlag>*)p4);
		break;
	}
	case 257105: {
		pThis->addItem((QGraphicsLayoutItem*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(QFlags<Qt::AlignmentFlag>*)p6);
		break;
	}
	case 257106: {
		*(QFlags<Qt::AlignmentFlag>*)p2 = pThis->alignment((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 257107: {
		*(QFlags<Qt::AlignmentFlag>*)p2 = pThis->columnAlignment(*(int*)p1);
		break;
	}
	case 257108: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 257109: {
		*(double*)p2 = pThis->columnMaximumWidth(*(int*)p1);
		break;
	}
	case 257110: {
		*(double*)p2 = pThis->columnMinimumWidth(*(int*)p1);
		break;
	}
	case 257111: {
		*(double*)p2 = pThis->columnPreferredWidth(*(int*)p1);
		break;
	}
	case 257112: {
		*(double*)p2 = pThis->columnSpacing(*(int*)p1);
		break;
	}
	case 257113: {
		*(int*)p2 = pThis->columnStretchFactor(*(int*)p1);
		break;
	}
	case 257114: {
		*(double*)p1 = pThis->horizontalSpacing();
		break;
	}
	case 257115: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 257116: {
		*(QFlags<Qt::AlignmentFlag>*)p2 = pThis->rowAlignment(*(int*)p1);
		break;
	}
	case 257117: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 257118: {
		*(double*)p2 = pThis->rowMaximumHeight(*(int*)p1);
		break;
	}
	case 257119: {
		*(double*)p2 = pThis->rowMinimumHeight(*(int*)p1);
		break;
	}
	case 257120: {
		*(double*)p2 = pThis->rowPreferredHeight(*(int*)p1);
		break;
	}
	case 257121: {
		*(double*)p2 = pThis->rowSpacing(*(int*)p1);
		break;
	}
	case 257122: {
		*(int*)p2 = pThis->rowStretchFactor(*(int*)p1);
		break;
	}
	case 257123: {
		pThis->setAlignment((QGraphicsLayoutItem*)(p1),*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 257124: {
		pThis->setColumnAlignment(*(int*)p1,*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 257125: {
		pThis->setColumnFixedWidth(*(int*)p1,*(double*)p2);
		break;
	}
	case 257126: {
		pThis->setColumnMaximumWidth(*(int*)p1,*(double*)p2);
		break;
	}
	case 257127: {
		pThis->setColumnMinimumWidth(*(int*)p1,*(double*)p2);
		break;
	}
	case 257128: {
		pThis->setColumnPreferredWidth(*(int*)p1,*(double*)p2);
		break;
	}
	case 257129: {
		pThis->setColumnSpacing(*(int*)p1,*(double*)p2);
		break;
	}
	case 257130: {
		pThis->setColumnStretchFactor(*(int*)p1,*(int*)p2);
		break;
	}
	case 257131: {
		pThis->setHorizontalSpacing(*(double*)p1);
		break;
	}
	case 257132: {
		pThis->setRowAlignment(*(int*)p1,*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 257133: {
		pThis->setRowFixedHeight(*(int*)p1,*(double*)p2);
		break;
	}
	case 257134: {
		pThis->setRowMaximumHeight(*(int*)p1,*(double*)p2);
		break;
	}
	case 257135: {
		pThis->setRowMinimumHeight(*(int*)p1,*(double*)p2);
		break;
	}
	case 257136: {
		pThis->setRowPreferredHeight(*(int*)p1,*(double*)p2);
		break;
	}
	case 257137: {
		pThis->setRowSpacing(*(int*)p1,*(double*)p2);
		break;
	}
	case 257138: {
		pThis->setRowStretchFactor(*(int*)p1,*(int*)p2);
		break;
	}
	case 257139: {
		pThis->setSpacing(*(double*)p1);
		break;
	}
	case 257140: {
		pThis->setVerticalSpacing(*(double*)p1);
		break;
	}
	case 257141: {
		*(void**)p2 = new QSizeF(pThis->sizeHint(*(Qt::SizeHint*)p1));
		break;
	}
	case 257142: {
		*(double*)p1 = pThis->verticalSpacing();
		break;
	}
	default:
		return drv_QGraphicsLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsItem
int drv_QGraphicsItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void*,void*,void*,void*,void*,void*)
{
	QGraphicsItem *pThis = (QGraphicsItem*)_p;
	switch (funcid) {
	case 258000+1: {
		delete pThis;
		break;
	}
	case 258102: {
		*(bool*)p1 = pThis->acceptDrops();
		break;
	}
	case 258103: {
		*(bool*)p1 = pThis->acceptHoverEvents();
		break;
	}
	case 258104: {
		*(bool*)p1 = pThis->acceptTouchEvents();
		break;
	}
	case 258105: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->acceptedMouseButtons();
		break;
	}
	case 258106: {
		pThis->advance(*(int*)p1);
		break;
	}
	case 258107: {
		*(void**)p1 = new QRectF(pThis->boundingRect());
		break;
	}
	case 258108: {
		if(p1==0)return -2;
		*(void**)p2 = new QRegion(pThis->boundingRegion(*(QTransform*)(p1)));
		break;
	}
	case 258109: {
		*(double*)p1 = pThis->boundingRegionGranularity();
		break;
	}
	case 258110: {
		*(QGraphicsItem::CacheMode*)p1 = pThis->cacheMode();
		break;
	}
	case 258111: {
		drvSetListObj<QGraphicsItem*>(p1,258000,pThis->childItems());
		break;
	}
	case 258112: {
		*(void**)p1 = new QRectF(pThis->childrenBoundingRect());
		break;
	}
	case 258113: {
		pThis->clearFocus();
		break;
	}
	case 258114: {
		*(void**)p1 = new QPainterPath(pThis->clipPath());
		break;
	}
	case 258115: {
		*(bool*)p2 = pThis->collidesWithItem((QGraphicsItem*)(p1));
		break;
	}
	case 258116: {
		*(bool*)p3 = pThis->collidesWithItem((QGraphicsItem*)(p1),*(Qt::ItemSelectionMode*)p2);
		break;
	}
	case 258117: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->collidesWithPath(*(QPainterPath*)(p1));
		break;
	}
	case 258118: {
		if(p1==0)return -2;
		*(bool*)p3 = pThis->collidesWithPath(*(QPainterPath*)(p1),*(Qt::ItemSelectionMode*)p2);
		break;
	}
	case 258119: {
		drvSetListObj<QGraphicsItem*>(p1,258000,pThis->collidingItems());
		break;
	}
	case 258120: {
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->collidingItems(*(Qt::ItemSelectionMode*)p1));
		break;
	}
	case 258121: {
		*(void**)p2 = pThis->commonAncestorItem((QGraphicsItem*)(p1));
		break;
	}
	case 258122: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->contains(*(QPointF*)(p1));
		break;
	}
	case 258123: {
		*(void**)p1 = new QCursor(pThis->cursor());
		break;
	}
	case 258124: {
		*(void**)p2 = new QVariant(pThis->data(*(int*)p1));
		break;
	}
	case 258125: {
		if(p1==0)return -2;
		*(void**)p2 = new QTransform(pThis->deviceTransform(*(QTransform*)(p1)));
		break;
	}
	case 258126: {
		*(double*)p1 = pThis->effectiveOpacity();
		break;
	}
	case 258127: {
		pThis->ensureVisible();
		break;
	}
	case 258128: {
		pThis->ensureVisible(p1==0?QRectF():*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 258129: {
		pThis->ensureVisible(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 258130: {
		*(bool*)p1 = pThis->filtersChildEvents();
		break;
	}
	case 258131: {
		*(QFlags<QGraphicsItem::GraphicsItemFlag>*)p1 = pThis->flags();
		break;
	}
	case 258132: {
		*(void**)p1 = pThis->focusItem();
		break;
	}
	case 258133: {
		*(void**)p1 = pThis->focusProxy();
		break;
	}
	case 258134: {
		*(void**)p1 = pThis->focusScopeItem();
		break;
	}
	case 258135: {
		pThis->grabKeyboard();
		break;
	}
	case 258136: {
		pThis->grabMouse();
		break;
	}
	case 258137: {
		*(void**)p1 = pThis->graphicsEffect();
		break;
	}
	case 258138: {
		*(void**)p1 = pThis->group();
		break;
	}
	case 258139: {
		*(bool*)p1 = pThis->handlesChildEvents();
		break;
	}
	case 258140: {
		*(bool*)p1 = pThis->hasCursor();
		break;
	}
	case 258141: {
		*(bool*)p1 = pThis->hasFocus();
		break;
	}
	case 258142: {
		pThis->hide();
		break;
	}
	case 258143: {
		*(QFlags<Qt::InputMethodHint>*)p1 = pThis->inputMethodHints();
		break;
	}
	case 258144: {
		pThis->installSceneEventFilter((QGraphicsItem*)(p1));
		break;
	}
	case 258145: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 258146: {
		*(bool*)p2 = pThis->isAncestorOf((QGraphicsItem*)(p1));
		break;
	}
	case 258147: {
		*(bool*)p1 = pThis->isClipped();
		break;
	}
	case 258148: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 258149: {
		*(bool*)p1 = pThis->isObscured();
		break;
	}
	case 258150: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isObscured(*(QRectF*)(p1));
		break;
	}
	case 258151: {
		*(bool*)p5 = pThis->isObscured(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 258152: {
		*(bool*)p2 = pThis->isObscuredBy((QGraphicsItem*)(p1));
		break;
	}
	case 258153: {
		*(bool*)p1 = pThis->isPanel();
		break;
	}
	case 258154: {
		*(bool*)p1 = pThis->isSelected();
		break;
	}
	case 258155: {
		*(bool*)p1 = pThis->isUnderMouse();
		break;
	}
	case 258156: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 258157: {
		*(bool*)p2 = pThis->isVisibleTo((QGraphicsItem*)(p1));
		break;
	}
	case 258158: {
		*(bool*)p1 = pThis->isWidget();
		break;
	}
	case 258159: {
		*(bool*)p1 = pThis->isWindow();
		break;
	}
	case 258160: {
		*(void**)p2 = new QTransform(pThis->itemTransform((QGraphicsItem*)(p1)));
		break;
	}
	case 258161: {
		*(void**)p3 = new QTransform(pThis->itemTransform((QGraphicsItem*)(p1),*(bool**)p2));
		break;
	}
	case 258162: {
		if(p2==0)return -2;
		*(void**)p3 = new QPainterPath(pThis->mapFromItem((QGraphicsItem*)(p1),*(QPainterPath*)(p2)));
		break;
	}
	case 258163: {
		if(p2==0)return -2;
		*(void**)p3 = new QPointF(pThis->mapFromItem((QGraphicsItem*)(p1),*(QPointF*)(p2)));
		break;
	}
	case 258164: {
		if(p2==0)return -2;
		*(void**)p3 = new QPolygonF(pThis->mapFromItem((QGraphicsItem*)(p1),*(QPolygonF*)(p2)));
		break;
	}
	case 258165: {
		if(p2==0)return -2;
		*(void**)p3 = new QPolygonF(pThis->mapFromItem((QGraphicsItem*)(p1),*(QRectF*)(p2)));
		break;
	}
	case 258166: {
		*(void**)p4 = new QPointF(pThis->mapFromItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3));
		break;
	}
	case 258167: {
		*(void**)p6 = new QPolygonF(pThis->mapFromItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5));
		break;
	}
	case 258168: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapFromParent(*(QPainterPath*)(p1)));
		break;
	}
	case 258169: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapFromParent(*(QPointF*)(p1)));
		break;
	}
	case 258170: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapFromParent(*(QPolygonF*)(p1)));
		break;
	}
	case 258171: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapFromParent(*(QRectF*)(p1)));
		break;
	}
	case 258172: {
		*(void**)p3 = new QPointF(pThis->mapFromParent(*(double*)p1,*(double*)p2));
		break;
	}
	case 258173: {
		*(void**)p5 = new QPolygonF(pThis->mapFromParent(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258174: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapFromScene(*(QPainterPath*)(p1)));
		break;
	}
	case 258175: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapFromScene(*(QPointF*)(p1)));
		break;
	}
	case 258176: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapFromScene(*(QPolygonF*)(p1)));
		break;
	}
	case 258177: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapFromScene(*(QRectF*)(p1)));
		break;
	}
	case 258178: {
		*(void**)p3 = new QPointF(pThis->mapFromScene(*(double*)p1,*(double*)p2));
		break;
	}
	case 258179: {
		*(void**)p5 = new QPolygonF(pThis->mapFromScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258180: {
		if(p2==0)return -2;
		*(void**)p3 = new QRectF(pThis->mapRectFromItem((QGraphicsItem*)(p1),*(QRectF*)(p2)));
		break;
	}
	case 258181: {
		*(void**)p6 = new QRectF(pThis->mapRectFromItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5));
		break;
	}
	case 258182: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRectFromParent(*(QRectF*)(p1)));
		break;
	}
	case 258183: {
		*(void**)p5 = new QRectF(pThis->mapRectFromParent(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258184: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRectFromScene(*(QRectF*)(p1)));
		break;
	}
	case 258185: {
		*(void**)p5 = new QRectF(pThis->mapRectFromScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258186: {
		if(p2==0)return -2;
		*(void**)p3 = new QRectF(pThis->mapRectToItem((QGraphicsItem*)(p1),*(QRectF*)(p2)));
		break;
	}
	case 258187: {
		*(void**)p6 = new QRectF(pThis->mapRectToItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5));
		break;
	}
	case 258188: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRectToParent(*(QRectF*)(p1)));
		break;
	}
	case 258189: {
		*(void**)p5 = new QRectF(pThis->mapRectToParent(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258190: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->mapRectToScene(*(QRectF*)(p1)));
		break;
	}
	case 258191: {
		*(void**)p5 = new QRectF(pThis->mapRectToScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258192: {
		if(p2==0)return -2;
		*(void**)p3 = new QPainterPath(pThis->mapToItem((QGraphicsItem*)(p1),*(QPainterPath*)(p2)));
		break;
	}
	case 258193: {
		if(p2==0)return -2;
		*(void**)p3 = new QPointF(pThis->mapToItem((QGraphicsItem*)(p1),*(QPointF*)(p2)));
		break;
	}
	case 258194: {
		if(p2==0)return -2;
		*(void**)p3 = new QPolygonF(pThis->mapToItem((QGraphicsItem*)(p1),*(QPolygonF*)(p2)));
		break;
	}
	case 258195: {
		if(p2==0)return -2;
		*(void**)p3 = new QPolygonF(pThis->mapToItem((QGraphicsItem*)(p1),*(QRectF*)(p2)));
		break;
	}
	case 258196: {
		*(void**)p4 = new QPointF(pThis->mapToItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3));
		break;
	}
	case 258197: {
		*(void**)p6 = new QPolygonF(pThis->mapToItem((QGraphicsItem*)(p1),*(double*)p2,*(double*)p3,*(double*)p4,*(double*)p5));
		break;
	}
	case 258198: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapToParent(*(QPainterPath*)(p1)));
		break;
	}
	case 258199: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapToParent(*(QPointF*)(p1)));
		break;
	}
	case 258200: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToParent(*(QPolygonF*)(p1)));
		break;
	}
	case 258201: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToParent(*(QRectF*)(p1)));
		break;
	}
	case 258202: {
		*(void**)p3 = new QPointF(pThis->mapToParent(*(double*)p1,*(double*)p2));
		break;
	}
	case 258203: {
		*(void**)p5 = new QPolygonF(pThis->mapToParent(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258204: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapToScene(*(QPainterPath*)(p1)));
		break;
	}
	case 258205: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapToScene(*(QPointF*)(p1)));
		break;
	}
	case 258206: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToScene(*(QPolygonF*)(p1)));
		break;
	}
	case 258207: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToScene(*(QRectF*)(p1)));
		break;
	}
	case 258208: {
		*(void**)p3 = new QPointF(pThis->mapToScene(*(double*)p1,*(double*)p2));
		break;
	}
	case 258209: {
		*(void**)p5 = new QPolygonF(pThis->mapToScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 258210: {
		*(void**)p1 = new QMatrix(pThis->matrix());
		break;
	}
	case 258211: {
		pThis->moveBy(*(double*)p1,*(double*)p2);
		break;
	}
	case 258212: {
		*(double*)p1 = pThis->opacity();
		break;
	}
	case 258213: {
		*(void**)p1 = new QPainterPath(pThis->opaqueArea());
		break;
	}
	case 258214: {
		*(void**)p1 = pThis->panel();
		break;
	}
	case 258215: {
		*(QGraphicsItem::PanelModality*)p1 = pThis->panelModality();
		break;
	}
	case 258216: {
		*(void**)p1 = pThis->parentItem();
		break;
	}
	case 258217: {
		*(void**)p1 = pThis->parentObject();
		break;
	}
	case 258218: {
		*(void**)p1 = pThis->parentWidget();
		break;
	}
	case 258219: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 258220: {
		pThis->removeSceneEventFilter((QGraphicsItem*)(p1));
		break;
	}
	case 258221: {
		pThis->resetMatrix();
		break;
	}
	case 258222: {
		pThis->resetTransform();
		break;
	}
	case 258223: {
		*(double*)p1 = pThis->rotation();
		break;
	}
	case 258224: {
		*(void**)p1 = pThis->scene();
		break;
	}
	case 258225: {
		*(void**)p1 = new QRectF(pThis->sceneBoundingRect());
		break;
	}
	case 258226: {
		*(void**)p1 = new QMatrix(pThis->sceneMatrix());
		break;
	}
	case 258227: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 258228: {
		*(void**)p1 = new QTransform(pThis->sceneTransform());
		break;
	}
	case 258229: {
		pThis->scroll(*(double*)p1,*(double*)p2,p3==0?QRectF():*(QRectF*)(p3));
		break;
	}
	case 258230: {
		pThis->setAcceptDrops(*(bool*)p1);
		break;
	}
	case 258231: {
		pThis->setAcceptHoverEvents(*(bool*)p1);
		break;
	}
	case 258232: {
		pThis->setAcceptTouchEvents(*(bool*)p1);
		break;
	}
	case 258233: {
		pThis->setAcceptedMouseButtons(*(QFlags<Qt::MouseButton>*)p1);
		break;
	}
	case 258234: {
		pThis->setActive(*(bool*)p1);
		break;
	}
	case 258235: {
		pThis->setBoundingRegionGranularity(*(double*)p1);
		break;
	}
	case 258236: {
		pThis->setCacheMode(*(QGraphicsItem::CacheMode*)p1);
		break;
	}
	case 258237: {
		pThis->setCacheMode(*(QGraphicsItem::CacheMode*)p1,p2==0?QSize():*(QSize*)(p2));
		break;
	}
	case 258238: {
		if(p1==0)return -2;
		pThis->setCursor(*(QCursor*)(p1));
		break;
	}
	case 258239: {
		if(p2==0)return -2;
		pThis->setData(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 258240: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 258241: {
		pThis->setFiltersChildEvents(*(bool*)p1);
		break;
	}
	case 258242: {
		pThis->setFlag(*(QGraphicsItem::GraphicsItemFlag*)p1);
		break;
	}
	case 258243: {
		pThis->setFlag(*(QGraphicsItem::GraphicsItemFlag*)p1,*(bool*)p2);
		break;
	}
	case 258244: {
		pThis->setFlags(*(QFlags<QGraphicsItem::GraphicsItemFlag>*)p1);
		break;
	}
	case 258245: {
		pThis->setFocus();
		break;
	}
	case 258246: {
		pThis->setFocus(*(Qt::FocusReason*)p1);
		break;
	}
	case 258247: {
		pThis->setFocusProxy((QGraphicsItem*)(p1));
		break;
	}
	case 258248: {
		pThis->setGraphicsEffect((QGraphicsEffect*)(p1));
		break;
	}
	case 258249: {
		pThis->setGroup((QGraphicsItemGroup*)(p1));
		break;
	}
	case 258250: {
		pThis->setHandlesChildEvents(*(bool*)p1);
		break;
	}
	case 258251: {
		pThis->setInputMethodHints(*(QFlags<Qt::InputMethodHint>*)p1);
		break;
	}
	case 258252: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1));
		break;
	}
	case 258253: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1),*(bool*)p2);
		break;
	}
	case 258254: {
		pThis->setOpacity(*(double*)p1);
		break;
	}
	case 258255: {
		pThis->setPanelModality(*(QGraphicsItem::PanelModality*)p1);
		break;
	}
	case 258256: {
		pThis->setParentItem((QGraphicsItem*)(p1));
		break;
	}
	case 258257: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 258258: {
		pThis->setPos(*(double*)p1,*(double*)p2);
		break;
	}
	case 258259: {
		pThis->setRotation(*(double*)p1);
		break;
	}
	case 258260: {
		pThis->setScale(*(double*)p1);
		break;
	}
	case 258261: {
		pThis->setSelected(*(bool*)p1);
		break;
	}
	case 258262: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 258263: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1));
		break;
	}
	case 258264: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1),*(bool*)p2);
		break;
	}
	case 258265: {
		if(p1==0)return -2;
		pThis->setTransformOriginPoint(*(QPointF*)(p1));
		break;
	}
	case 258266: {
		pThis->setTransformOriginPoint(*(double*)p1,*(double*)p2);
		break;
	}
	case 258267: {
		pThis->setTransformations(drvGetObjectArrayHeadT<QGraphicsTransform*>(p1));
		break;
	}
	case 258268: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	case 258269: {
		pThis->setX(*(double*)p1);
		break;
	}
	case 258270: {
		pThis->setY(*(double*)p1);
		break;
	}
	case 258271: {
		pThis->setZValue(*(double*)p1);
		break;
	}
	case 258272: {
		*(void**)p1 = new QPainterPath(pThis->shape());
		break;
	}
	case 258273: {
		pThis->show();
		break;
	}
	case 258274: {
		pThis->stackBefore((QGraphicsItem*)(p1));
		break;
	}
	case 258275: {
		*(void**)p1 = pThis->toGraphicsObject();
		break;
	}
	case 258276: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 258277: {
		*(void**)p1 = pThis->topLevelItem();
		break;
	}
	case 258278: {
		*(void**)p1 = pThis->topLevelWidget();
		break;
	}
	case 258279: {
		*(void**)p1 = new QTransform(pThis->transform());
		break;
	}
	case 258280: {
		*(void**)p1 = new QPointF(pThis->transformOriginPoint());
		break;
	}
	case 258281: {
		drvSetListObj<QGraphicsTransform*>(p1,286000,pThis->transformations());
		break;
	}
	case 258282: {
		*(int*)p1 = pThis->type();
		break;
	}
	case 258283: {
		pThis->ungrabKeyboard();
		break;
	}
	case 258284: {
		pThis->ungrabMouse();
		break;
	}
	case 258285: {
		pThis->unsetCursor();
		break;
	}
	case 258286: {
		pThis->update();
		break;
	}
	case 258287: {
		pThis->update(p1==0?QRectF():*(QRectF*)(p1));
		break;
	}
	case 258288: {
		pThis->update(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 258289: {
		*(void**)p1 = pThis->window();
		break;
	}
	case 258290: {
		*(double*)p1 = pThis->x();
		break;
	}
	case 258291: {
		*(double*)p1 = pThis->y();
		break;
	}
	case 258292: {
		*(double*)p1 = pThis->zValue();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QGraphicsItemAnimation
int drv_QGraphicsItemAnimation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsItemAnimation *pThis = (QGraphicsItemAnimation*)_p;
	switch (funcid) {
	case 259000+1: {
		delete pThis;
		break;
	}
	case 259102: {
		*(void**)_p = new QGraphicsItemAnimation();
		break;
	}
	case 259103: {
		*(void**)_p = new QGraphicsItemAnimation((QObject*)(p1));
		break;
	}
	case 259104: {
		pThis->afterAnimationStep(*(double*)p1);
		break;
	}
	case 259105: {
		pThis->beforeAnimationStep(*(double*)p1);
		break;
	}
	case 259106: {
		pThis->clear();
		break;
	}
	case 259107: {
		*(double*)p2 = pThis->horizontalScaleAt(*(double*)p1);
		break;
	}
	case 259108: {
		*(double*)p2 = pThis->horizontalShearAt(*(double*)p1);
		break;
	}
	case 259109: {
		*(void**)p1 = pThis->item();
		break;
	}
	case 259110: {
		*(void**)p2 = new QMatrix(pThis->matrixAt(*(double*)p1));
		break;
	}
	case 259111: {
		*(void**)p2 = new QPointF(pThis->posAt(*(double*)p1));
		break;
	}
	case 259112: {
		pThis->reset();
		break;
	}
	case 259113: {
		*(double*)p2 = pThis->rotationAt(*(double*)p1);
		break;
	}
	case 259114: {
		pThis->setItem((QGraphicsItem*)(p1));
		break;
	}
	case 259115: {
		if(p2==0)return -2;
		pThis->setPosAt(*(double*)p1,*(QPointF*)(p2));
		break;
	}
	case 259116: {
		pThis->setRotationAt(*(double*)p1,*(double*)p2);
		break;
	}
	case 259117: {
		pThis->setScaleAt(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 259118: {
		pThis->setShearAt(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 259119: {
		pThis->setStep(*(double*)p1);
		break;
	}
	case 259120: {
		pThis->setTimeLine((QTimeLine*)(p1));
		break;
	}
	case 259121: {
		pThis->setTranslationAt(*(double*)p1,*(double*)p2,*(double*)p3);
		break;
	}
	case 259122: {
		*(void**)p1 = pThis->timeLine();
		break;
	}
	case 259123: {
		*(double*)p2 = pThis->verticalScaleAt(*(double*)p1);
		break;
	}
	case 259124: {
		*(double*)p2 = pThis->verticalShearAt(*(double*)p1);
		break;
	}
	case 259125: {
		*(double*)p2 = pThis->xTranslationAt(*(double*)p1);
		break;
	}
	case 259126: {
		*(double*)p2 = pThis->yTranslationAt(*(double*)p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsItemGroup
int drv_QGraphicsItemGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsItemGroup *pThis = (QGraphicsItemGroup*)_p;
	switch (funcid) {
	case 260000+1: {
		delete pThis;
		break;
	}
	case 260102: {
		*(void**)_p = new QGraphicsItemGroup();
		break;
	}
	case 260103: {
		*(void**)_p = new QGraphicsItemGroup((QGraphicsItem*)(p1));
		break;
	}
	case 260104: {
		pThis->addToGroup((QGraphicsItem*)(p1));
		break;
	}
	case 260105: {
		pThis->removeFromGroup((QGraphicsItem*)(p1));
		break;
	}
	default:
		return drv_QGraphicsItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsLayout
int drv_QGraphicsLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsLayout *pThis = (QGraphicsLayout*)_p;
	switch (funcid) {
	case 261000+1: {
		delete pThis;
		break;
	}
	case 261102: {
		pThis->activate();
		break;
	}
	case 261103: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 261104: {
		*(bool*)p1 = QGraphicsLayout::instantInvalidatePropagation();
		break;
	}
	case 261105: {
		pThis->invalidate();
		break;
	}
	case 261106: {
		*(bool*)p1 = pThis->isActivated();
		break;
	}
	case 261107: {
		*(void**)p2 = pThis->itemAt(*(int*)p1);
		break;
	}
	case 261108: {
		pThis->removeAt(*(int*)p1);
		break;
	}
	case 261109: {
		pThis->setContentsMargins(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 261110: {
		QGraphicsLayout::setInstantInvalidatePropagation(*(bool*)p1);
		break;
	}
	case 261111: {
		pThis->widgetEvent((QEvent*)(p1));
		break;
	}
	default:
		return drv_QGraphicsLayoutItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsLayoutItem
int drv_QGraphicsLayoutItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QGraphicsLayoutItem *pThis = (QGraphicsLayoutItem*)_p;
	switch (funcid) {
	case 262000+1: {
		delete pThis;
		break;
	}
	case 262102: {
		*(void**)p1 = new QRectF(pThis->contentsRect());
		break;
	}
	case 262103: {
		*(void**)p2 = new QSizeF(pThis->effectiveSizeHint(*(Qt::SizeHint*)p1));
		break;
	}
	case 262104: {
		*(void**)p3 = new QSizeF(pThis->effectiveSizeHint(*(Qt::SizeHint*)p1,p2==0?QSizeF():*(QSizeF*)(p2)));
		break;
	}
	case 262105: {
		*(void**)p1 = new QRectF(pThis->geometry());
		break;
	}
	case 262106: {
		pThis->getContentsMargins(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 262107: {
		*(void**)p1 = pThis->graphicsItem();
		break;
	}
	case 262108: {
		*(bool*)p1 = pThis->isLayout();
		break;
	}
	case 262109: {
		*(double*)p1 = pThis->maximumHeight();
		break;
	}
	case 262110: {
		*(void**)p1 = new QSizeF(pThis->maximumSize());
		break;
	}
	case 262111: {
		*(double*)p1 = pThis->maximumWidth();
		break;
	}
	case 262112: {
		*(double*)p1 = pThis->minimumHeight();
		break;
	}
	case 262113: {
		*(void**)p1 = new QSizeF(pThis->minimumSize());
		break;
	}
	case 262114: {
		*(double*)p1 = pThis->minimumWidth();
		break;
	}
	case 262115: {
		*(bool*)p1 = pThis->ownedByLayout();
		break;
	}
	case 262116: {
		*(void**)p1 = pThis->parentLayoutItem();
		break;
	}
	case 262117: {
		*(double*)p1 = pThis->preferredHeight();
		break;
	}
	case 262118: {
		*(void**)p1 = new QSizeF(pThis->preferredSize());
		break;
	}
	case 262119: {
		*(double*)p1 = pThis->preferredWidth();
		break;
	}
	case 262120: {
		if(p1==0)return -2;
		pThis->setGeometry(*(QRectF*)(p1));
		break;
	}
	case 262121: {
		pThis->setMaximumHeight(*(double*)p1);
		break;
	}
	case 262122: {
		if(p1==0)return -2;
		pThis->setMaximumSize(*(QSizeF*)(p1));
		break;
	}
	case 262123: {
		pThis->setMaximumSize(*(double*)p1,*(double*)p2);
		break;
	}
	case 262124: {
		pThis->setMaximumWidth(*(double*)p1);
		break;
	}
	case 262125: {
		pThis->setMinimumHeight(*(double*)p1);
		break;
	}
	case 262126: {
		if(p1==0)return -2;
		pThis->setMinimumSize(*(QSizeF*)(p1));
		break;
	}
	case 262127: {
		pThis->setMinimumSize(*(double*)p1,*(double*)p2);
		break;
	}
	case 262128: {
		pThis->setMinimumWidth(*(double*)p1);
		break;
	}
	case 262129: {
		pThis->setParentLayoutItem((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 262130: {
		pThis->setPreferredHeight(*(double*)p1);
		break;
	}
	case 262131: {
		if(p1==0)return -2;
		pThis->setPreferredSize(*(QSizeF*)(p1));
		break;
	}
	case 262132: {
		pThis->setPreferredSize(*(double*)p1,*(double*)p2);
		break;
	}
	case 262133: {
		pThis->setPreferredWidth(*(double*)p1);
		break;
	}
	case 262134: {
		if(p1==0)return -2;
		pThis->setSizePolicy(*(QSizePolicy*)(p1));
		break;
	}
	case 262135: {
		pThis->setSizePolicy(*(QSizePolicy::Policy*)p1,*(QSizePolicy::Policy*)p2,*(QSizePolicy::ControlType*)p3);
		break;
	}
	case 262136: {
		*(void**)p1 = new QSizePolicy(pThis->sizePolicy());
		break;
	}
	case 262137: {
		pThis->updateGeometry();
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QGraphicsLineItem
int drv_QGraphicsLineItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsLineItem *pThis = (QGraphicsLineItem*)_p;
	switch (funcid) {
	case 263000+1: {
		delete pThis;
		break;
	}
	case 263102: {
		*(void**)_p = new QGraphicsLineItem();
		break;
	}
	case 263103: {
		*(void**)_p = new QGraphicsLineItem((QGraphicsItem*)(p1));
		break;
	}
	case 263104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsLineItem(*(QLineF*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 263105: {
		*(void**)_p = new QGraphicsLineItem(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,(QGraphicsItem*)(p5));
		break;
	}
	case 263106: {
		*(void**)p1 = new QLineF(pThis->line());
		break;
	}
	case 263107: {
		*(void**)p1 = new QPen(pThis->pen());
		break;
	}
	case 263108: {
		if(p1==0)return -2;
		pThis->setLine(*(QLineF*)(p1));
		break;
	}
	case 263109: {
		pThis->setLine(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 263110: {
		if(p1==0)return -2;
		pThis->setPen(*(QPen*)(p1));
		break;
	}
	default:
		return drv_QGraphicsItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsLinearLayout
int drv_QGraphicsLinearLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsLinearLayout *pThis = (QGraphicsLinearLayout*)_p;
	switch (funcid) {
	case 264000+1: {
		delete pThis;
		break;
	}
	case 264102: {
		*(void**)_p = new QGraphicsLinearLayout();
		break;
	}
	case 264103: {
		*(void**)_p = new QGraphicsLinearLayout((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 264104: {
		*(void**)_p = new QGraphicsLinearLayout(*(Qt::Orientation*)p1,(QGraphicsLayoutItem*)(p2));
		break;
	}
	case 264105: {
		pThis->addItem((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 264106: {
		pThis->addStretch();
		break;
	}
	case 264107: {
		pThis->addStretch(*(int*)p1);
		break;
	}
	case 264108: {
		*(QFlags<Qt::AlignmentFlag>*)p2 = pThis->alignment((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 264109: {
		pThis->dump();
		break;
	}
	case 264110: {
		pThis->dump(*(int*)p1);
		break;
	}
	case 264111: {
		pThis->insertItem(*(int*)p1,(QGraphicsLayoutItem*)(p2));
		break;
	}
	case 264112: {
		pThis->insertStretch(*(int*)p1);
		break;
	}
	case 264113: {
		pThis->insertStretch(*(int*)p1,*(int*)p2);
		break;
	}
	case 264114: {
		*(double*)p2 = pThis->itemSpacing(*(int*)p1);
		break;
	}
	case 264115: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 264116: {
		pThis->removeItem((QGraphicsLayoutItem*)(p1));
		break;
	}
	case 264117: {
		pThis->setAlignment((QGraphicsLayoutItem*)(p1),*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 264118: {
		pThis->setItemSpacing(*(int*)p1,*(double*)p2);
		break;
	}
	case 264119: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 264120: {
		pThis->setSpacing(*(double*)p1);
		break;
	}
	case 264121: {
		pThis->setStretchFactor((QGraphicsLayoutItem*)(p1),*(int*)p2);
		break;
	}
	case 264122: {
		*(void**)p2 = new QSizeF(pThis->sizeHint(*(Qt::SizeHint*)p1));
		break;
	}
	case 264123: {
		*(double*)p1 = pThis->spacing();
		break;
	}
	case 264124: {
		*(int*)p2 = pThis->stretchFactor((QGraphicsLayoutItem*)(p1));
		break;
	}
	default:
		return drv_QGraphicsLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsObject
int drv_QGraphicsObject(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsObject *pThis = (QGraphicsObject*)_p;
	switch (funcid) {
	case 265000+1: {
		delete pThis;
		break;
	}
	case 265102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(rotationChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(yChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(scaleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(enabledChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(opacityChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265107: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(visibleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265108: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(widthChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265109: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(heightChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265110: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(parentChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265111: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(zChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265112: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(childrenChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265113: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(xChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 265114: {
		drvSetObjectArray(p1,316000,pThis->children());
		break;
	}
	case 265115: {
		pThis->grabGesture(*(Qt::GestureType*)p1);
		break;
	}
	case 265116: {
		pThis->grabGesture(*(Qt::GestureType*)p1,*(QFlags<Qt::GestureFlag>*)p2);
		break;
	}
	case 265117: {
		pThis->ungrabGesture(*(Qt::GestureType*)p1);
		break;
	}
	case 265118: {
		pThis->updateMicroFocus();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsOpacityEffect
int drv_QGraphicsOpacityEffect(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsOpacityEffect *pThis = (QGraphicsOpacityEffect*)_p;
	switch (funcid) {
	case 266000+1: {
		delete pThis;
		break;
	}
	case 266102: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(opacityChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 266103: {
		UISignal7 *uis = new UISignal7(pThis);
		if (QObject::connect(pThis,SIGNAL(opacityMaskChanged(QBrush const&)),uis,SLOT(call(QBrush const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 266104: {
		*(void**)_p = new QGraphicsOpacityEffect();
		break;
	}
	case 266105: {
		*(void**)_p = new QGraphicsOpacityEffect((QObject*)(p1));
		break;
	}
	case 266106: {
		*(double*)p1 = pThis->opacity();
		break;
	}
	case 266107: {
		*(void**)p1 = new QBrush(pThis->opacityMask());
		break;
	}
	case 266108: {
		pThis->setOpacity(*(double*)p1);
		break;
	}
	case 266109: {
		if(p1==0)return -2;
		pThis->setOpacityMask(*(QBrush*)(p1));
		break;
	}
	default:
		return drv_QGraphicsEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsPathItem
int drv_QGraphicsPathItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsPathItem *pThis = (QGraphicsPathItem*)_p;
	switch (funcid) {
	case 267000+1: {
		delete pThis;
		break;
	}
	case 267102: {
		*(void**)_p = new QGraphicsPathItem();
		break;
	}
	case 267103: {
		*(void**)_p = new QGraphicsPathItem((QGraphicsItem*)(p1));
		break;
	}
	case 267104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsPathItem(*(QPainterPath*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 267105: {
		*(void**)p1 = new QPainterPath(pThis->path());
		break;
	}
	case 267106: {
		if(p1==0)return -2;
		pThis->setPath(*(QPainterPath*)(p1));
		break;
	}
	default:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsPixmapItem
int drv_QGraphicsPixmapItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsPixmapItem *pThis = (QGraphicsPixmapItem*)_p;
	switch (funcid) {
	case 268000+1: {
		delete pThis;
		break;
	}
	case 268102: {
		*(void**)_p = new QGraphicsPixmapItem();
		break;
	}
	case 268103: {
		*(void**)_p = new QGraphicsPixmapItem((QGraphicsItem*)(p1));
		break;
	}
	case 268104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsPixmapItem(*(QPixmap*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 268105: {
		*(void**)p1 = new QPointF(pThis->offset());
		break;
	}
	case 268106: {
		*(void**)p1 = new QPixmap(pThis->pixmap());
		break;
	}
	case 268107: {
		if(p1==0)return -2;
		pThis->setOffset(*(QPointF*)(p1));
		break;
	}
	case 268108: {
		pThis->setOffset(*(double*)p1,*(double*)p2);
		break;
	}
	case 268109: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1));
		break;
	}
	case 268110: {
		pThis->setShapeMode(*(QGraphicsPixmapItem::ShapeMode*)p1);
		break;
	}
	case 268111: {
		pThis->setTransformationMode(*(Qt::TransformationMode*)p1);
		break;
	}
	case 268112: {
		*(QGraphicsPixmapItem::ShapeMode*)p1 = pThis->shapeMode();
		break;
	}
	case 268113: {
		*(Qt::TransformationMode*)p1 = pThis->transformationMode();
		break;
	}
	default:
		return drv_QGraphicsItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsPolygonItem
int drv_QGraphicsPolygonItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsPolygonItem *pThis = (QGraphicsPolygonItem*)_p;
	switch (funcid) {
	case 269000+1: {
		delete pThis;
		break;
	}
	case 269102: {
		*(void**)_p = new QGraphicsPolygonItem();
		break;
	}
	case 269103: {
		*(void**)_p = new QGraphicsPolygonItem((QGraphicsItem*)(p1));
		break;
	}
	case 269104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsPolygonItem(*(QPolygonF*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 269105: {
		*(Qt::FillRule*)p1 = pThis->fillRule();
		break;
	}
	case 269106: {
		*(void**)p1 = new QPolygonF(pThis->polygon());
		break;
	}
	case 269107: {
		pThis->setFillRule(*(Qt::FillRule*)p1);
		break;
	}
	case 269108: {
		if(p1==0)return -2;
		pThis->setPolygon(*(QPolygonF*)(p1));
		break;
	}
	default:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsProxyWidget
int drv_QGraphicsProxyWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsProxyWidget *pThis = (QGraphicsProxyWidget*)_p;
	switch (funcid) {
	case 270000+1: {
		delete pThis;
		break;
	}
	case 270102: {
		*(void**)_p = new QGraphicsProxyWidget();
		break;
	}
	case 270103: {
		*(void**)_p = new QGraphicsProxyWidget((QGraphicsItem*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 270104: {
		*(void**)p2 = pThis->createProxyForChildWidget((QWidget*)(p1));
		break;
	}
	case 270105: {
		*(void**)p2 = pThis->newProxyWidget((QWidget*)(p1));
		break;
	}
	case 270106: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 270107: {
		*(void**)p2 = new QRectF(pThis->subWidgetRect((QWidget*)(p1)));
		break;
	}
	case 270108: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QGraphicsWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsRectItem
int drv_QGraphicsRectItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsRectItem *pThis = (QGraphicsRectItem*)_p;
	switch (funcid) {
	case 271000+1: {
		delete pThis;
		break;
	}
	case 271102: {
		*(void**)_p = new QGraphicsRectItem();
		break;
	}
	case 271103: {
		*(void**)_p = new QGraphicsRectItem((QGraphicsItem*)(p1));
		break;
	}
	case 271104: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsRectItem(*(QRectF*)(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 271105: {
		*(void**)_p = new QGraphicsRectItem(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,(QGraphicsItem*)(p5));
		break;
	}
	case 271106: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 271107: {
		if(p1==0)return -2;
		pThis->setRect(*(QRectF*)(p1));
		break;
	}
	case 271108: {
		pThis->setRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	default:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsRotation
int drv_QGraphicsRotation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsRotation *pThis = (QGraphicsRotation*)_p;
	switch (funcid) {
	case 272000+1: {
		delete pThis;
		break;
	}
	case 272102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(axisChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 272103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(angleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 272104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(originChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 272105: {
		*(void**)_p = new QGraphicsRotation();
		break;
	}
	case 272106: {
		*(void**)_p = new QGraphicsRotation((QObject*)(p1));
		break;
	}
	case 272107: {
		*(double*)p1 = pThis->angle();
		break;
	}
	case 272108: {
		*(void**)p1 = new QVector3D(pThis->axis());
		break;
	}
	case 272109: {
		*(void**)p1 = new QVector3D(pThis->origin());
		break;
	}
	case 272110: {
		pThis->setAngle(*(double*)p1);
		break;
	}
	case 272111: {
		if(p1==0)return -2;
		pThis->setAxis(*(QVector3D*)(p1));
		break;
	}
	case 272112: {
		pThis->setAxis(*(Qt::Axis*)p1);
		break;
	}
	case 272113: {
		if(p1==0)return -2;
		pThis->setOrigin(*(QVector3D*)(p1));
		break;
	}
	default:
		return drv_QGraphicsTransform(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsScale
int drv_QGraphicsScale(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsScale *pThis = (QGraphicsScale*)_p;
	switch (funcid) {
	case 273000+1: {
		delete pThis;
		break;
	}
	case 273102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(xScaleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 273103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(scaleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 273104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(zScaleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 273105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(originChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 273106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(yScaleChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 273107: {
		*(void**)_p = new QGraphicsScale();
		break;
	}
	case 273108: {
		*(void**)_p = new QGraphicsScale((QObject*)(p1));
		break;
	}
	case 273109: {
		*(void**)p1 = new QVector3D(pThis->origin());
		break;
	}
	case 273110: {
		if(p1==0)return -2;
		pThis->setOrigin(*(QVector3D*)(p1));
		break;
	}
	case 273111: {
		pThis->setXScale(*(double*)p1);
		break;
	}
	case 273112: {
		pThis->setYScale(*(double*)p1);
		break;
	}
	case 273113: {
		pThis->setZScale(*(double*)p1);
		break;
	}
	case 273114: {
		*(double*)p1 = pThis->xScale();
		break;
	}
	case 273115: {
		*(double*)p1 = pThis->yScale();
		break;
	}
	case 273116: {
		*(double*)p1 = pThis->zScale();
		break;
	}
	default:
		return drv_QGraphicsTransform(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsScene
int drv_QGraphicsScene(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsScene *pThis = (QGraphicsScene*)_p;
	switch (funcid) {
	case 274000+1: {
		delete pThis;
		break;
	}
	case 274102: {
		UISignal36 *uis = new UISignal36(pThis);
		if (QObject::connect(pThis,SIGNAL(sceneRectChanged(QRectF const&)),uis,SLOT(call(QRectF const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 274103: {
		UISignal21 *uis = new UISignal21(pThis);
		if (QObject::connect(pThis,SIGNAL(changed(QList<QRectF> const&)),uis,SLOT(call(QList<QRectF> const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 274104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 274105: {
		*(void**)_p = new QGraphicsScene();
		break;
	}
	case 274106: {
		*(void**)_p = new QGraphicsScene((QObject*)(p1));
		break;
	}
	case 274107: {
		if(p1==0)return -2;
		*(void**)_p = new QGraphicsScene(*(QRectF*)(p1),(QObject*)(p2));
		break;
	}
	case 274108: {
		*(void**)_p = new QGraphicsScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,(QObject*)(p5));
		break;
	}
	case 274109: {
		*(void**)p1 = pThis->activePanel();
		break;
	}
	case 274110: {
		*(void**)p1 = pThis->activeWindow();
		break;
	}
	case 274111: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addEllipse(*(QRectF*)(p1));
		break;
	}
	case 274112: {
		if(p1==0)return -2;
		*(void**)p4 = pThis->addEllipse(*(QRectF*)(p1),p2==0?QPen():*(QPen*)(p2),p3==0?QBrush():*(QBrush*)(p3));
		break;
	}
	case 274113: {
		*(void**)p7 = pThis->addEllipse(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,p5==0?QPen():*(QPen*)(p5),p6==0?QBrush():*(QBrush*)(p6));
		break;
	}
	case 274114: {
		pThis->addItem((QGraphicsItem*)(p1));
		break;
	}
	case 274115: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addLine(*(QLineF*)(p1));
		break;
	}
	case 274116: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addLine(*(QLineF*)(p1),p2==0?QPen():*(QPen*)(p2));
		break;
	}
	case 274117: {
		*(void**)p6 = pThis->addLine(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,p5==0?QPen():*(QPen*)(p5));
		break;
	}
	case 274118: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addPath(*(QPainterPath*)(p1));
		break;
	}
	case 274119: {
		if(p1==0)return -2;
		*(void**)p4 = pThis->addPath(*(QPainterPath*)(p1),p2==0?QPen():*(QPen*)(p2),p3==0?QBrush():*(QBrush*)(p3));
		break;
	}
	case 274120: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addPixmap(*(QPixmap*)(p1));
		break;
	}
	case 274121: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addPolygon(*(QPolygonF*)(p1));
		break;
	}
	case 274122: {
		if(p1==0)return -2;
		*(void**)p4 = pThis->addPolygon(*(QPolygonF*)(p1),p2==0?QPen():*(QPen*)(p2),p3==0?QBrush():*(QBrush*)(p3));
		break;
	}
	case 274123: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->addRect(*(QRectF*)(p1));
		break;
	}
	case 274124: {
		if(p1==0)return -2;
		*(void**)p4 = pThis->addRect(*(QRectF*)(p1),p2==0?QPen():*(QPen*)(p2),p3==0?QBrush():*(QBrush*)(p3));
		break;
	}
	case 274125: {
		*(void**)p7 = pThis->addRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,p5==0?QPen():*(QPen*)(p5),p6==0?QBrush():*(QBrush*)(p6));
		break;
	}
	case 274126: {
		*(void**)p2 = pThis->addSimpleText(drvGetStringHead(p1));
		break;
	}
	case 274127: {
		*(void**)p3 = pThis->addSimpleText(drvGetStringHead(p1),p2==0?QFont():*(QFont*)(p2));
		break;
	}
	case 274128: {
		*(void**)p2 = pThis->addText(drvGetStringHead(p1));
		break;
	}
	case 274129: {
		*(void**)p3 = pThis->addText(drvGetStringHead(p1),p2==0?QFont():*(QFont*)(p2));
		break;
	}
	case 274130: {
		*(void**)p2 = pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 274131: {
		*(void**)p3 = pThis->addWidget((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 274132: {
		pThis->advance();
		break;
	}
	case 274133: {
		*(void**)p1 = new QBrush(pThis->backgroundBrush());
		break;
	}
	case 274134: {
		*(int*)p1 = pThis->bspTreeDepth();
		break;
	}
	case 274135: {
		pThis->clear();
		break;
	}
	case 274136: {
		pThis->clearFocus();
		break;
	}
	case 274137: {
		pThis->clearSelection();
		break;
	}
	case 274138: {
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->collidingItems((QGraphicsItem*)(p1)));
		break;
	}
	case 274139: {
		drvSetListObj<QGraphicsItem*>(p3,258000,pThis->collidingItems((QGraphicsItem*)(p1),*(Qt::ItemSelectionMode*)p2));
		break;
	}
	case 274140: {
		pThis->contextMenuEvent((QGraphicsSceneContextMenuEvent*)(p1));
		break;
	}
	case 274141: {
		*(void**)p2 = pThis->createItemGroup(drvGetObjectArrayHeadT<QGraphicsItem*>(p1));
		break;
	}
	case 274142: {
		pThis->destroyItemGroup((QGraphicsItemGroup*)(p1));
		break;
	}
	case 274143: {
		pThis->dragEnterEvent((QGraphicsSceneDragDropEvent*)(p1));
		break;
	}
	case 274144: {
		pThis->dragLeaveEvent((QGraphicsSceneDragDropEvent*)(p1));
		break;
	}
	case 274145: {
		pThis->dragMoveEvent((QGraphicsSceneDragDropEvent*)(p1));
		break;
	}
	case 274146: {
		if(p2==0)return -2;
		pThis->drawBackground((QPainter*)(p1),*(QRectF*)(p2));
		break;
	}
	case 274147: {
		if(p2==0)return -2;
		pThis->drawForeground((QPainter*)(p1),*(QRectF*)(p2));
		break;
	}
	case 274148: {
		pThis->dropEvent((QGraphicsSceneDragDropEvent*)(p1));
		break;
	}
	case 274149: {
		pThis->focusInEvent((QFocusEvent*)(p1));
		break;
	}
	case 274150: {
		*(void**)p1 = pThis->focusItem();
		break;
	}
	case 274151: {
		*(bool*)p2 = pThis->focusNextPrevChild(*(bool*)p1);
		break;
	}
	case 274152: {
		pThis->focusOutEvent((QFocusEvent*)(p1));
		break;
	}
	case 274153: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 274154: {
		*(void**)p1 = new QBrush(pThis->foregroundBrush());
		break;
	}
	case 274155: {
		*(bool*)p1 = pThis->hasFocus();
		break;
	}
	case 274156: {
		*(double*)p1 = pThis->height();
		break;
	}
	case 274157: {
		pThis->helpEvent((QGraphicsSceneHelpEvent*)(p1));
		break;
	}
	case 274158: {
		pThis->inputMethodEvent((QInputMethodEvent*)(p1));
		break;
	}
	case 274159: {
		*(void**)p2 = new QVariant(pThis->inputMethodQuery(*(Qt::InputMethodQuery*)p1));
		break;
	}
	case 274160: {
		pThis->invalidate();
		break;
	}
	case 274161: {
		pThis->invalidate(p1==0?QRectF():*(QRectF*)(p1),*(QFlags<QGraphicsScene::SceneLayer>*)p2);
		break;
	}
	case 274162: {
		pThis->invalidate(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(QFlags<QGraphicsScene::SceneLayer>*)p5);
		break;
	}
	case 274163: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 274164: {
		*(bool*)p1 = pThis->isSortCacheEnabled();
		break;
	}
	case 274165: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p3 = pThis->itemAt(*(QPointF*)(p1),*(QTransform*)(p2));
		break;
	}
	case 274166: {
		if(p3==0)return -2;
		*(void**)p4 = pThis->itemAt(*(double*)p1,*(double*)p2,*(QTransform*)(p3));
		break;
	}
	case 274167: {
		*(QGraphicsScene::ItemIndexMethod*)p1 = pThis->itemIndexMethod();
		break;
	}
	case 274168: {
		drvSetListObj<QGraphicsItem*>(p1,258000,pThis->items());
		break;
	}
	case 274169: {
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->items(*(Qt::SortOrder*)p1));
		break;
	}
	case 274170: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p5,258000,pThis->items(*(QPainterPath*)(p1),*(Qt::ItemSelectionMode*)p2,*(Qt::SortOrder*)p3,p4==0?QTransform():*(QTransform*)(p4)));
		break;
	}
	case 274171: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p5,258000,pThis->items(*(QPointF*)(p1),*(Qt::ItemSelectionMode*)p2,*(Qt::SortOrder*)p3,p4==0?QTransform():*(QTransform*)(p4)));
		break;
	}
	case 274172: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p5,258000,pThis->items(*(QPolygonF*)(p1),*(Qt::ItemSelectionMode*)p2,*(Qt::SortOrder*)p3,p4==0?QTransform():*(QTransform*)(p4)));
		break;
	}
	case 274173: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p5,258000,pThis->items(*(QRectF*)(p1),*(Qt::ItemSelectionMode*)p2,*(Qt::SortOrder*)p3,p4==0?QTransform():*(QTransform*)(p4)));
		break;
	}
	case 274174: {
		drvSetListObj<QGraphicsItem*>(p8,258000,pThis->items(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(Qt::ItemSelectionMode*)p5,*(Qt::SortOrder*)p6,p7==0?QTransform():*(QTransform*)(p7)));
		break;
	}
	case 274175: {
		*(void**)p1 = new QRectF(pThis->itemsBoundingRect());
		break;
	}
	case 274176: {
		pThis->keyPressEvent((QKeyEvent*)(p1));
		break;
	}
	case 274177: {
		pThis->keyReleaseEvent((QKeyEvent*)(p1));
		break;
	}
	case 274178: {
		pThis->mouseDoubleClickEvent((QGraphicsSceneMouseEvent*)(p1));
		break;
	}
	case 274179: {
		*(void**)p1 = pThis->mouseGrabberItem();
		break;
	}
	case 274180: {
		pThis->mouseMoveEvent((QGraphicsSceneMouseEvent*)(p1));
		break;
	}
	case 274181: {
		pThis->mousePressEvent((QGraphicsSceneMouseEvent*)(p1));
		break;
	}
	case 274182: {
		pThis->mouseReleaseEvent((QGraphicsSceneMouseEvent*)(p1));
		break;
	}
	case 274183: {
		*(void**)p1 = new QPalette(pThis->palette());
		break;
	}
	case 274184: {
		pThis->removeItem((QGraphicsItem*)(p1));
		break;
	}
	case 274185: {
		pThis->render((QPainter*)(p1));
		break;
	}
	case 274186: {
		pThis->render((QPainter*)(p1),p2==0?QRectF():*(QRectF*)(p2),p3==0?QRectF():*(QRectF*)(p3),*(Qt::AspectRatioMode*)p4);
		break;
	}
	case 274187: {
		*(void**)p1 = new QRectF(pThis->sceneRect());
		break;
	}
	case 274188: {
		drvSetListObj<QGraphicsItem*>(p1,258000,pThis->selectedItems());
		break;
	}
	case 274189: {
		*(void**)p1 = new QPainterPath(pThis->selectionArea());
		break;
	}
	case 274190: {
		*(bool*)p3 = pThis->sendEvent((QGraphicsItem*)(p1),(QEvent*)(p2));
		break;
	}
	case 274191: {
		pThis->setActivePanel((QGraphicsItem*)(p1));
		break;
	}
	case 274192: {
		pThis->setActiveWindow((QGraphicsWidget*)(p1));
		break;
	}
	case 274193: {
		if(p1==0)return -2;
		pThis->setBackgroundBrush(*(QBrush*)(p1));
		break;
	}
	case 274194: {
		pThis->setBspTreeDepth(*(int*)p1);
		break;
	}
	case 274195: {
		pThis->setFocus();
		break;
	}
	case 274196: {
		pThis->setFocus(*(Qt::FocusReason*)p1);
		break;
	}
	case 274197: {
		pThis->setFocusItem((QGraphicsItem*)(p1));
		break;
	}
	case 274198: {
		pThis->setFocusItem((QGraphicsItem*)(p1),*(Qt::FocusReason*)p2);
		break;
	}
	case 274199: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 274200: {
		if(p1==0)return -2;
		pThis->setForegroundBrush(*(QBrush*)(p1));
		break;
	}
	case 274201: {
		pThis->setItemIndexMethod(*(QGraphicsScene::ItemIndexMethod*)p1);
		break;
	}
	case 274202: {
		if(p1==0)return -2;
		pThis->setPalette(*(QPalette*)(p1));
		break;
	}
	case 274203: {
		if(p1==0)return -2;
		pThis->setSceneRect(*(QRectF*)(p1));
		break;
	}
	case 274204: {
		pThis->setSceneRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 274205: {
		if(p1==0)return -2;
		pThis->setSelectionArea(*(QPainterPath*)(p1));
		break;
	}
	case 274206: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setSelectionArea(*(QPainterPath*)(p1),*(QTransform*)(p2));
		break;
	}
	case 274207: {
		if(p1==0)return -2;
		pThis->setSelectionArea(*(QPainterPath*)(p1),*(Qt::ItemSelectionMode*)p2);
		break;
	}
	case 274208: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		pThis->setSelectionArea(*(QPainterPath*)(p1),*(Qt::ItemSelectionMode*)p2,*(QTransform*)(p3));
		break;
	}
	case 274209: {
		pThis->setSortCacheEnabled(*(bool*)p1);
		break;
	}
	case 274210: {
		pThis->setStickyFocus(*(bool*)p1);
		break;
	}
	case 274211: {
		pThis->setStyle((QStyle*)(p1));
		break;
	}
	case 274212: {
		*(bool*)p1 = pThis->stickyFocus();
		break;
	}
	case 274213: {
		*(void**)p1 = pThis->style();
		break;
	}
	case 274214: {
		pThis->update();
		break;
	}
	case 274215: {
		pThis->update(p1==0?QRectF():*(QRectF*)(p1));
		break;
	}
	case 274216: {
		pThis->update(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 274217: {
		drvSetListObj<QGraphicsView*>(p1,287000,pThis->views());
		break;
	}
	case 274218: {
		pThis->wheelEvent((QGraphicsSceneWheelEvent*)(p1));
		break;
	}
	case 274219: {
		*(double*)p1 = pThis->width();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneContextMenuEvent
int drv_QGraphicsSceneContextMenuEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneContextMenuEvent *pThis = (QGraphicsSceneContextMenuEvent*)_p;
	switch (funcid) {
	case 275000+1: {
		delete pThis;
		break;
	}
	case 275102: {
		*(void**)_p = new QGraphicsSceneContextMenuEvent();
		break;
	}
	case 275103: {
		*(void**)_p = new QGraphicsSceneContextMenuEvent(*(QEvent::Type*)p1);
		break;
	}
	case 275104: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 275105: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 275106: {
		*(QGraphicsSceneContextMenuEvent::Reason*)p1 = pThis->reason();
		break;
	}
	case 275107: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 275108: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 275109: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	case 275110: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 275111: {
		pThis->setReason(*(QGraphicsSceneContextMenuEvent::Reason*)p1);
		break;
	}
	case 275112: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 275113: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneDragDropEvent
int drv_QGraphicsSceneDragDropEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneDragDropEvent *pThis = (QGraphicsSceneDragDropEvent*)_p;
	switch (funcid) {
	case 276000+1: {
		delete pThis;
		break;
	}
	case 276102: {
		*(void**)_p = new QGraphicsSceneDragDropEvent();
		break;
	}
	case 276103: {
		*(void**)_p = new QGraphicsSceneDragDropEvent(*(QEvent::Type*)p1);
		break;
	}
	case 276104: {
		pThis->acceptProposedAction();
		break;
	}
	case 276105: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->buttons();
		break;
	}
	case 276106: {
		*(Qt::DropAction*)p1 = pThis->dropAction();
		break;
	}
	case 276107: {
		*(const void**)p1 = pThis->mimeData();
		break;
	}
	case 276108: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 276109: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 276110: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->possibleActions();
		break;
	}
	case 276111: {
		*(Qt::DropAction*)p1 = pThis->proposedAction();
		break;
	}
	case 276112: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 276113: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 276114: {
		pThis->setButtons(*(QFlags<Qt::MouseButton>*)p1);
		break;
	}
	case 276115: {
		pThis->setDropAction(*(Qt::DropAction*)p1);
		break;
	}
	case 276116: {
		pThis->setMimeData((QMimeData*)(p1));
		break;
	}
	case 276117: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	case 276118: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 276119: {
		pThis->setPossibleActions(*(QFlags<Qt::DropAction>*)p1);
		break;
	}
	case 276120: {
		pThis->setProposedAction(*(Qt::DropAction*)p1);
		break;
	}
	case 276121: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 276122: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	case 276123: {
		pThis->setSource((QWidget*)(p1));
		break;
	}
	case 276124: {
		*(void**)p1 = pThis->source();
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneEvent
int drv_QGraphicsSceneEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneEvent *pThis = (QGraphicsSceneEvent*)_p;
	switch (funcid) {
	case 277000+1: {
		delete pThis;
		break;
	}
	case 277102: {
		*(void**)_p = new QGraphicsSceneEvent(*(QEvent::Type*)p1);
		break;
	}
	case 277103: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 277104: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneHelpEvent
int drv_QGraphicsSceneHelpEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneHelpEvent *pThis = (QGraphicsSceneHelpEvent*)_p;
	switch (funcid) {
	case 278000+1: {
		delete pThis;
		break;
	}
	case 278102: {
		*(void**)_p = new QGraphicsSceneHelpEvent();
		break;
	}
	case 278103: {
		*(void**)_p = new QGraphicsSceneHelpEvent(*(QEvent::Type*)p1);
		break;
	}
	case 278104: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 278105: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 278106: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 278107: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneHoverEvent
int drv_QGraphicsSceneHoverEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneHoverEvent *pThis = (QGraphicsSceneHoverEvent*)_p;
	switch (funcid) {
	case 279000+1: {
		delete pThis;
		break;
	}
	case 279102: {
		*(void**)_p = new QGraphicsSceneHoverEvent();
		break;
	}
	case 279103: {
		*(void**)_p = new QGraphicsSceneHoverEvent(*(QEvent::Type*)p1);
		break;
	}
	case 279104: {
		*(void**)p1 = new QPointF(pThis->lastPos());
		break;
	}
	case 279105: {
		*(void**)p1 = new QPointF(pThis->lastScenePos());
		break;
	}
	case 279106: {
		*(void**)p1 = new QPoint(pThis->lastScreenPos());
		break;
	}
	case 279107: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 279108: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 279109: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 279110: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 279111: {
		if(p1==0)return -2;
		pThis->setLastPos(*(QPointF*)(p1));
		break;
	}
	case 279112: {
		if(p1==0)return -2;
		pThis->setLastScenePos(*(QPointF*)(p1));
		break;
	}
	case 279113: {
		if(p1==0)return -2;
		pThis->setLastScreenPos(*(QPoint*)(p1));
		break;
	}
	case 279114: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	case 279115: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 279116: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 279117: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneMouseEvent
int drv_QGraphicsSceneMouseEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneMouseEvent *pThis = (QGraphicsSceneMouseEvent*)_p;
	switch (funcid) {
	case 280000+1: {
		delete pThis;
		break;
	}
	case 280102: {
		*(void**)_p = new QGraphicsSceneMouseEvent();
		break;
	}
	case 280103: {
		*(void**)_p = new QGraphicsSceneMouseEvent(*(QEvent::Type*)p1);
		break;
	}
	case 280104: {
		*(Qt::MouseButton*)p1 = pThis->button();
		break;
	}
	case 280105: {
		*(void**)p2 = new QPointF(pThis->buttonDownPos(*(Qt::MouseButton*)p1));
		break;
	}
	case 280106: {
		*(void**)p2 = new QPointF(pThis->buttonDownScenePos(*(Qt::MouseButton*)p1));
		break;
	}
	case 280107: {
		*(void**)p2 = new QPoint(pThis->buttonDownScreenPos(*(Qt::MouseButton*)p1));
		break;
	}
	case 280108: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->buttons();
		break;
	}
	case 280109: {
		*(void**)p1 = new QPointF(pThis->lastPos());
		break;
	}
	case 280110: {
		*(void**)p1 = new QPointF(pThis->lastScenePos());
		break;
	}
	case 280111: {
		*(void**)p1 = new QPoint(pThis->lastScreenPos());
		break;
	}
	case 280112: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 280113: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 280114: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 280115: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 280116: {
		pThis->setButton(*(Qt::MouseButton*)p1);
		break;
	}
	case 280117: {
		if(p2==0)return -2;
		pThis->setButtonDownPos(*(Qt::MouseButton*)p1,*(QPointF*)(p2));
		break;
	}
	case 280118: {
		if(p2==0)return -2;
		pThis->setButtonDownScenePos(*(Qt::MouseButton*)p1,*(QPointF*)(p2));
		break;
	}
	case 280119: {
		if(p2==0)return -2;
		pThis->setButtonDownScreenPos(*(Qt::MouseButton*)p1,*(QPoint*)(p2));
		break;
	}
	case 280120: {
		pThis->setButtons(*(QFlags<Qt::MouseButton>*)p1);
		break;
	}
	case 280121: {
		if(p1==0)return -2;
		pThis->setLastPos(*(QPointF*)(p1));
		break;
	}
	case 280122: {
		if(p1==0)return -2;
		pThis->setLastScenePos(*(QPointF*)(p1));
		break;
	}
	case 280123: {
		if(p1==0)return -2;
		pThis->setLastScreenPos(*(QPoint*)(p1));
		break;
	}
	case 280124: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	case 280125: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 280126: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 280127: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneMoveEvent
int drv_QGraphicsSceneMoveEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneMoveEvent *pThis = (QGraphicsSceneMoveEvent*)_p;
	switch (funcid) {
	case 281000+1: {
		delete pThis;
		break;
	}
	case 281102: {
		*(void**)_p = new QGraphicsSceneMoveEvent();
		break;
	}
	case 281103: {
		*(void**)p1 = new QPointF(pThis->newPos());
		break;
	}
	case 281104: {
		*(void**)p1 = new QPointF(pThis->oldPos());
		break;
	}
	case 281105: {
		if(p1==0)return -2;
		pThis->setNewPos(*(QPointF*)(p1));
		break;
	}
	case 281106: {
		if(p1==0)return -2;
		pThis->setOldPos(*(QPointF*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneResizeEvent
int drv_QGraphicsSceneResizeEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneResizeEvent *pThis = (QGraphicsSceneResizeEvent*)_p;
	switch (funcid) {
	case 282000+1: {
		delete pThis;
		break;
	}
	case 282102: {
		*(void**)_p = new QGraphicsSceneResizeEvent();
		break;
	}
	case 282103: {
		*(void**)p1 = new QSizeF(pThis->newSize());
		break;
	}
	case 282104: {
		*(void**)p1 = new QSizeF(pThis->oldSize());
		break;
	}
	case 282105: {
		if(p1==0)return -2;
		pThis->setNewSize(*(QSizeF*)(p1));
		break;
	}
	case 282106: {
		if(p1==0)return -2;
		pThis->setOldSize(*(QSizeF*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSceneWheelEvent
int drv_QGraphicsSceneWheelEvent(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSceneWheelEvent *pThis = (QGraphicsSceneWheelEvent*)_p;
	switch (funcid) {
	case 283000+1: {
		delete pThis;
		break;
	}
	case 283102: {
		*(void**)_p = new QGraphicsSceneWheelEvent();
		break;
	}
	case 283103: {
		*(void**)_p = new QGraphicsSceneWheelEvent(*(QEvent::Type*)p1);
		break;
	}
	case 283104: {
		*(QFlags<Qt::MouseButton>*)p1 = pThis->buttons();
		break;
	}
	case 283105: {
		*(int*)p1 = pThis->delta();
		break;
	}
	case 283106: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifiers();
		break;
	}
	case 283107: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 283108: {
		*(void**)p1 = new QPointF(pThis->pos());
		break;
	}
	case 283109: {
		*(void**)p1 = new QPointF(pThis->scenePos());
		break;
	}
	case 283110: {
		*(void**)p1 = new QPoint(pThis->screenPos());
		break;
	}
	case 283111: {
		pThis->setButtons(*(QFlags<Qt::MouseButton>*)p1);
		break;
	}
	case 283112: {
		pThis->setDelta(*(int*)p1);
		break;
	}
	case 283113: {
		pThis->setModifiers(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	case 283114: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 283115: {
		if(p1==0)return -2;
		pThis->setPos(*(QPointF*)(p1));
		break;
	}
	case 283116: {
		if(p1==0)return -2;
		pThis->setScenePos(*(QPointF*)(p1));
		break;
	}
	case 283117: {
		if(p1==0)return -2;
		pThis->setScreenPos(*(QPoint*)(p1));
		break;
	}
	default:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsSimpleTextItem
int drv_QGraphicsSimpleTextItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsSimpleTextItem *pThis = (QGraphicsSimpleTextItem*)_p;
	switch (funcid) {
	case 284000+1: {
		delete pThis;
		break;
	}
	case 284102: {
		*(void**)_p = new QGraphicsSimpleTextItem();
		break;
	}
	case 284103: {
		*(void**)_p = new QGraphicsSimpleTextItem((QGraphicsItem*)(p1));
		break;
	}
	case 284104: {
		*(void**)_p = new QGraphicsSimpleTextItem(drvGetStringHead(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 284105: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 284106: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 284107: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 284108: {
		drvSetString(p1,pThis->text());
		break;
	}
	default:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsTextItem
int drv_QGraphicsTextItem(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsTextItem *pThis = (QGraphicsTextItem*)_p;
	switch (funcid) {
	case 285000+1: {
		delete pThis;
		break;
	}
	case 285102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(linkActivated(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 285103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(linkHovered(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 285104: {
		*(void**)_p = new QGraphicsTextItem();
		break;
	}
	case 285105: {
		*(void**)_p = new QGraphicsTextItem((QGraphicsItem*)(p1));
		break;
	}
	case 285106: {
		*(void**)_p = new QGraphicsTextItem(drvGetStringHead(p1),(QGraphicsItem*)(p2));
		break;
	}
	case 285107: {
		pThis->adjustSize();
		break;
	}
	case 285108: {
		*(void**)p1 = new QColor(pThis->defaultTextColor());
		break;
	}
	case 285109: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 285110: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 285111: {
		*(bool*)p1 = pThis->openExternalLinks();
		break;
	}
	case 285112: {
		if(p1==0)return -2;
		pThis->setDefaultTextColor(*(QColor*)(p1));
		break;
	}
	case 285113: {
		pThis->setDocument((QTextDocument*)(p1));
		break;
	}
	case 285114: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 285115: {
		pThis->setHtml(drvGetStringHead(p1));
		break;
	}
	case 285116: {
		pThis->setOpenExternalLinks(*(bool*)p1);
		break;
	}
	case 285117: {
		pThis->setPlainText(drvGetStringHead(p1));
		break;
	}
	case 285118: {
		pThis->setTabChangesFocus(*(bool*)p1);
		break;
	}
	case 285119: {
		if(p1==0)return -2;
		pThis->setTextCursor(*(QTextCursor*)(p1));
		break;
	}
	case 285120: {
		pThis->setTextInteractionFlags(*(QFlags<Qt::TextInteractionFlag>*)p1);
		break;
	}
	case 285121: {
		pThis->setTextWidth(*(double*)p1);
		break;
	}
	case 285122: {
		*(bool*)p1 = pThis->tabChangesFocus();
		break;
	}
	case 285123: {
		*(void**)p1 = new QTextCursor(pThis->textCursor());
		break;
	}
	case 285124: {
		*(QFlags<Qt::TextInteractionFlag>*)p1 = pThis->textInteractionFlags();
		break;
	}
	case 285125: {
		*(double*)p1 = pThis->textWidth();
		break;
	}
	case 285126: {
		drvSetString(p1,pThis->toHtml());
		break;
	}
	case 285127: {
		drvSetString(p1,pThis->toPlainText());
		break;
	}
	default:
		return drv_QGraphicsObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsTransform
int drv_QGraphicsTransform(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsTransform *pThis = (QGraphicsTransform*)_p;
	switch (funcid) {
	case 286000+1: {
		delete pThis;
		break;
	}
	case 286102: {
		pThis->update();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsView
int drv_QGraphicsView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsView *pThis = (QGraphicsView*)_p;
	switch (funcid) {
	case 287000+1: {
		delete pThis;
		break;
	}
	case 287102: {
		*(void**)_p = new QGraphicsView();
		break;
	}
	case 287103: {
		*(void**)_p = new QGraphicsView((QWidget*)(p1));
		break;
	}
	case 287104: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 287105: {
		*(void**)p1 = new QBrush(pThis->backgroundBrush());
		break;
	}
	case 287106: {
		*(QFlags<QGraphicsView::CacheModeFlag>*)p1 = pThis->cacheMode();
		break;
	}
	case 287107: {
		pThis->centerOn((QGraphicsItem*)(p1));
		break;
	}
	case 287108: {
		if(p1==0)return -2;
		pThis->centerOn(*(QPointF*)(p1));
		break;
	}
	case 287109: {
		pThis->centerOn(*(double*)p1,*(double*)p2);
		break;
	}
	case 287110: {
		*(QGraphicsView::DragMode*)p1 = pThis->dragMode();
		break;
	}
	case 287111: {
		if(p2==0)return -2;
		pThis->drawBackground((QPainter*)(p1),*(QRectF*)(p2));
		break;
	}
	case 287112: {
		if(p2==0)return -2;
		pThis->drawForeground((QPainter*)(p1),*(QRectF*)(p2));
		break;
	}
	case 287113: {
		pThis->ensureVisible((QGraphicsItem*)(p1));
		break;
	}
	case 287114: {
		if(p1==0)return -2;
		pThis->ensureVisible(*(QRectF*)(p1));
		break;
	}
	case 287115: {
		pThis->ensureVisible((QGraphicsItem*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 287116: {
		if(p1==0)return -2;
		pThis->ensureVisible(*(QRectF*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 287117: {
		pThis->ensureVisible(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 287118: {
		pThis->fitInView((QGraphicsItem*)(p1));
		break;
	}
	case 287119: {
		if(p1==0)return -2;
		pThis->fitInView(*(QRectF*)(p1));
		break;
	}
	case 287120: {
		pThis->fitInView((QGraphicsItem*)(p1),*(Qt::AspectRatioMode*)p2);
		break;
	}
	case 287121: {
		if(p1==0)return -2;
		pThis->fitInView(*(QRectF*)(p1),*(Qt::AspectRatioMode*)p2);
		break;
	}
	case 287122: {
		pThis->fitInView(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4,*(Qt::AspectRatioMode*)p5);
		break;
	}
	case 287123: {
		*(void**)p1 = new QBrush(pThis->foregroundBrush());
		break;
	}
	case 287124: {
		pThis->invalidateScene();
		break;
	}
	case 287125: {
		pThis->invalidateScene(p1==0?QRectF():*(QRectF*)(p1),*(QFlags<QGraphicsScene::SceneLayer>*)p2);
		break;
	}
	case 287126: {
		*(bool*)p1 = pThis->isInteractive();
		break;
	}
	case 287127: {
		*(bool*)p1 = pThis->isTransformed();
		break;
	}
	case 287128: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemAt(*(QPoint*)(p1));
		break;
	}
	case 287129: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 287130: {
		drvSetListObj<QGraphicsItem*>(p1,258000,pThis->items());
		break;
	}
	case 287131: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->items(*(QPainterPath*)(p1)));
		break;
	}
	case 287132: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->items(*(QPoint*)(p1)));
		break;
	}
	case 287133: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->items(*(QPolygon*)(p1)));
		break;
	}
	case 287134: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p2,258000,pThis->items(*(QRect*)(p1)));
		break;
	}
	case 287135: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p3,258000,pThis->items(*(QPainterPath*)(p1),*(Qt::ItemSelectionMode*)p2));
		break;
	}
	case 287136: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p3,258000,pThis->items(*(QPolygon*)(p1),*(Qt::ItemSelectionMode*)p2));
		break;
	}
	case 287137: {
		if(p1==0)return -2;
		drvSetListObj<QGraphicsItem*>(p3,258000,pThis->items(*(QRect*)(p1),*(Qt::ItemSelectionMode*)p2));
		break;
	}
	case 287138: {
		drvSetListObj<QGraphicsItem*>(p3,258000,pThis->items(*(int*)p1,*(int*)p2));
		break;
	}
	case 287139: {
		drvSetListObj<QGraphicsItem*>(p6,258000,pThis->items(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(Qt::ItemSelectionMode*)p5));
		break;
	}
	case 287140: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapFromScene(*(QPainterPath*)(p1)));
		break;
	}
	case 287141: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->mapFromScene(*(QPointF*)(p1)));
		break;
	}
	case 287142: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->mapFromScene(*(QPolygonF*)(p1)));
		break;
	}
	case 287143: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygon(pThis->mapFromScene(*(QRectF*)(p1)));
		break;
	}
	case 287144: {
		*(void**)p3 = new QPoint(pThis->mapFromScene(*(double*)p1,*(double*)p2));
		break;
	}
	case 287145: {
		*(void**)p5 = new QPolygon(pThis->mapFromScene(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4));
		break;
	}
	case 287146: {
		if(p1==0)return -2;
		*(void**)p2 = new QPainterPath(pThis->mapToScene(*(QPainterPath*)(p1)));
		break;
	}
	case 287147: {
		if(p1==0)return -2;
		*(void**)p2 = new QPointF(pThis->mapToScene(*(QPoint*)(p1)));
		break;
	}
	case 287148: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToScene(*(QPolygon*)(p1)));
		break;
	}
	case 287149: {
		if(p1==0)return -2;
		*(void**)p2 = new QPolygonF(pThis->mapToScene(*(QRect*)(p1)));
		break;
	}
	case 287150: {
		*(void**)p3 = new QPointF(pThis->mapToScene(*(int*)p1,*(int*)p2));
		break;
	}
	case 287151: {
		*(void**)p5 = new QPolygonF(pThis->mapToScene(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4));
		break;
	}
	case 287152: {
		*(void**)p1 = new QMatrix(pThis->matrix());
		break;
	}
	case 287153: {
		*(QFlags<QGraphicsView::OptimizationFlag>*)p1 = pThis->optimizationFlags();
		break;
	}
	case 287154: {
		pThis->render((QPainter*)(p1));
		break;
	}
	case 287155: {
		pThis->render((QPainter*)(p1),p2==0?QRectF():*(QRectF*)(p2),p3==0?QRect():*(QRect*)(p3),*(Qt::AspectRatioMode*)p4);
		break;
	}
	case 287156: {
		*(QFlags<QPainter::RenderHint>*)p1 = pThis->renderHints();
		break;
	}
	case 287157: {
		pThis->resetCachedContent();
		break;
	}
	case 287158: {
		pThis->resetMatrix();
		break;
	}
	case 287159: {
		pThis->resetTransform();
		break;
	}
	case 287160: {
		*(QGraphicsView::ViewportAnchor*)p1 = pThis->resizeAnchor();
		break;
	}
	case 287161: {
		pThis->rotate(*(double*)p1);
		break;
	}
	case 287162: {
		*(Qt::ItemSelectionMode*)p1 = pThis->rubberBandSelectionMode();
		break;
	}
	case 287163: {
		pThis->scale(*(double*)p1,*(double*)p2);
		break;
	}
	case 287164: {
		*(void**)p1 = pThis->scene();
		break;
	}
	case 287165: {
		*(void**)p1 = new QRectF(pThis->sceneRect());
		break;
	}
	case 287166: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 287167: {
		if(p1==0)return -2;
		pThis->setBackgroundBrush(*(QBrush*)(p1));
		break;
	}
	case 287168: {
		pThis->setCacheMode(*(QFlags<QGraphicsView::CacheModeFlag>*)p1);
		break;
	}
	case 287169: {
		pThis->setDragMode(*(QGraphicsView::DragMode*)p1);
		break;
	}
	case 287170: {
		if(p1==0)return -2;
		pThis->setForegroundBrush(*(QBrush*)(p1));
		break;
	}
	case 287171: {
		pThis->setInteractive(*(bool*)p1);
		break;
	}
	case 287172: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1));
		break;
	}
	case 287173: {
		if(p1==0)return -2;
		pThis->setMatrix(*(QMatrix*)(p1),*(bool*)p2);
		break;
	}
	case 287174: {
		pThis->setOptimizationFlag(*(QGraphicsView::OptimizationFlag*)p1);
		break;
	}
	case 287175: {
		pThis->setOptimizationFlag(*(QGraphicsView::OptimizationFlag*)p1,*(bool*)p2);
		break;
	}
	case 287176: {
		pThis->setOptimizationFlags(*(QFlags<QGraphicsView::OptimizationFlag>*)p1);
		break;
	}
	case 287177: {
		pThis->setRenderHint(*(QPainter::RenderHint*)p1);
		break;
	}
	case 287178: {
		pThis->setRenderHint(*(QPainter::RenderHint*)p1,*(bool*)p2);
		break;
	}
	case 287179: {
		pThis->setRenderHints(*(QFlags<QPainter::RenderHint>*)p1);
		break;
	}
	case 287180: {
		pThis->setResizeAnchor(*(QGraphicsView::ViewportAnchor*)p1);
		break;
	}
	case 287181: {
		pThis->setRubberBandSelectionMode(*(Qt::ItemSelectionMode*)p1);
		break;
	}
	case 287182: {
		pThis->setScene((QGraphicsScene*)(p1));
		break;
	}
	case 287183: {
		if(p1==0)return -2;
		pThis->setSceneRect(*(QRectF*)(p1));
		break;
	}
	case 287184: {
		pThis->setSceneRect(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 287185: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1));
		break;
	}
	case 287186: {
		if(p1==0)return -2;
		pThis->setTransform(*(QTransform*)(p1),*(bool*)p2);
		break;
	}
	case 287187: {
		pThis->setTransformationAnchor(*(QGraphicsView::ViewportAnchor*)p1);
		break;
	}
	case 287188: {
		pThis->setViewportUpdateMode(*(QGraphicsView::ViewportUpdateMode*)p1);
		break;
	}
	case 287189: {
		pThis->setupViewport((QWidget*)(p1));
		break;
	}
	case 287190: {
		pThis->shear(*(double*)p1,*(double*)p2);
		break;
	}
	case 287191: {
		*(void**)p1 = new QTransform(pThis->transform());
		break;
	}
	case 287192: {
		*(QGraphicsView::ViewportAnchor*)p1 = pThis->transformationAnchor();
		break;
	}
	case 287193: {
		pThis->translate(*(double*)p1,*(double*)p2);
		break;
	}
	case 287194: {
		pThis->updateScene(drvGetNoObjectArrayHeadT<QRectF>(p1));
		break;
	}
	case 287195: {
		if(p1==0)return -2;
		pThis->updateSceneRect(*(QRectF*)(p1));
		break;
	}
	case 287196: {
		*(void**)p1 = new QTransform(pThis->viewportTransform());
		break;
	}
	case 287197: {
		*(QGraphicsView::ViewportUpdateMode*)p1 = pThis->viewportUpdateMode();
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGraphicsWidget
int drv_QGraphicsWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGraphicsWidget *pThis = (QGraphicsWidget*)_p;
	switch (funcid) {
	case 288000+1: {
		delete pThis;
		break;
	}
	case 288102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(layoutChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 288103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(geometryChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 288104: {
		*(void**)_p = new QGraphicsWidget();
		break;
	}
	case 288105: {
		*(void**)_p = new QGraphicsWidget((QGraphicsItem*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 288106: {
		drvSetListObj<QAction*>(p1,209000,pThis->actions());
		break;
	}
	case 288107: {
		pThis->addAction((QAction*)(p1));
		break;
	}
	case 288108: {
		pThis->addActions(drvGetObjectArrayHeadT<QAction*>(p1));
		break;
	}
	case 288109: {
		pThis->adjustSize();
		break;
	}
	case 288110: {
		*(bool*)p1 = pThis->autoFillBackground();
		break;
	}
	case 288111: {
		pThis->changeEvent((QEvent*)(p1));
		break;
	}
	case 288112: {
		drvSetObjectArray(p1,316000,pThis->children());
		break;
	}
	case 288113: {
		*(bool*)p1 = pThis->close();
		break;
	}
	case 288114: {
		pThis->closeEvent((QCloseEvent*)(p1));
		break;
	}
	case 288115: {
		*(bool*)p2 = pThis->focusNextPrevChild(*(bool*)p1);
		break;
	}
	case 288116: {
		*(Qt::FocusPolicy*)p1 = pThis->focusPolicy();
		break;
	}
	case 288117: {
		*(void**)p1 = pThis->focusWidget();
		break;
	}
	case 288118: {
		*(void**)p1 = new QFont(pThis->font());
		break;
	}
	case 288119: {
		pThis->getWindowFrameMargins(*(double**)p1,*(double**)p2,*(double**)p3,*(double**)p4);
		break;
	}
	case 288120: {
		pThis->grabKeyboardEvent((QEvent*)(p1));
		break;
	}
	case 288121: {
		pThis->grabMouseEvent((QEvent*)(p1));
		break;
	}
	case 288122: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->grabShortcut(*(QKeySequence*)(p1));
		break;
	}
	case 288123: {
		if(p1==0)return -2;
		*(int*)p3 = pThis->grabShortcut(*(QKeySequence*)(p1),*(Qt::ShortcutContext*)p2);
		break;
	}
	case 288124: {
		pThis->hideEvent((QHideEvent*)(p1));
		break;
	}
	case 288125: {
		pThis->insertAction((QAction*)(p1),(QAction*)(p2));
		break;
	}
	case 288126: {
		pThis->insertActions((QAction*)(p1),drvGetObjectArrayHeadT<QAction*>(p2));
		break;
	}
	case 288127: {
		*(bool*)p1 = pThis->isActiveWindow();
		break;
	}
	case 288128: {
		*(void**)p1 = pThis->layout();
		break;
	}
	case 288129: {
		*(Qt::LayoutDirection*)p1 = pThis->layoutDirection();
		break;
	}
	case 288130: {
		pThis->moveEvent((QGraphicsSceneMoveEvent*)(p1));
		break;
	}
	case 288131: {
		*(void**)p1 = new QPalette(pThis->palette());
		break;
	}
	case 288132: {
		pThis->polishEvent();
		break;
	}
	case 288133: {
		if(p2==0)return -2;
		*(void**)p3 = new QVariant(pThis->propertyChange(drvGetStringHead(p1),*(QVariant*)(p2)));
		break;
	}
	case 288134: {
		*(void**)p1 = new QRectF(pThis->rect());
		break;
	}
	case 288135: {
		pThis->releaseShortcut(*(int*)p1);
		break;
	}
	case 288136: {
		pThis->removeAction((QAction*)(p1));
		break;
	}
	case 288137: {
		if(p1==0)return -2;
		pThis->resize(*(QSizeF*)(p1));
		break;
	}
	case 288138: {
		pThis->resize(*(double*)p1,*(double*)p2);
		break;
	}
	case 288139: {
		pThis->resizeEvent((QGraphicsSceneResizeEvent*)(p1));
		break;
	}
	case 288140: {
		pThis->setAttribute(*(Qt::WidgetAttribute*)p1);
		break;
	}
	case 288141: {
		pThis->setAttribute(*(Qt::WidgetAttribute*)p1,*(bool*)p2);
		break;
	}
	case 288142: {
		pThis->setAutoFillBackground(*(bool*)p1);
		break;
	}
	case 288143: {
		pThis->setContentsMargins(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 288144: {
		pThis->setFocusPolicy(*(Qt::FocusPolicy*)p1);
		break;
	}
	case 288145: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 288146: {
		pThis->setGeometry(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 288147: {
		pThis->setLayout((QGraphicsLayout*)(p1));
		break;
	}
	case 288148: {
		pThis->setLayoutDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 288149: {
		if(p1==0)return -2;
		pThis->setPalette(*(QPalette*)(p1));
		break;
	}
	case 288150: {
		pThis->setShortcutAutoRepeat(*(int*)p1);
		break;
	}
	case 288151: {
		pThis->setShortcutAutoRepeat(*(int*)p1,*(bool*)p2);
		break;
	}
	case 288152: {
		pThis->setShortcutEnabled(*(int*)p1);
		break;
	}
	case 288153: {
		pThis->setShortcutEnabled(*(int*)p1,*(bool*)p2);
		break;
	}
	case 288154: {
		pThis->setStyle((QStyle*)(p1));
		break;
	}
	case 288155: {
		QGraphicsWidget::setTabOrder((QGraphicsWidget*)(p1),(QGraphicsWidget*)(p2));
		break;
	}
	case 288156: {
		pThis->setWindowFlags(*(QFlags<Qt::WindowType>*)p1);
		break;
	}
	case 288157: {
		pThis->setWindowFrameMargins(*(double*)p1,*(double*)p2,*(double*)p3,*(double*)p4);
		break;
	}
	case 288158: {
		pThis->setWindowTitle(drvGetStringHead(p1));
		break;
	}
	case 288159: {
		pThis->showEvent((QShowEvent*)(p1));
		break;
	}
	case 288160: {
		*(void**)p1 = new QSizeF(pThis->size());
		break;
	}
	case 288161: {
		*(void**)p1 = pThis->style();
		break;
	}
	case 288162: {
		*(bool*)p2 = pThis->testAttribute(*(Qt::WidgetAttribute*)p1);
		break;
	}
	case 288163: {
		pThis->ungrabKeyboardEvent((QEvent*)(p1));
		break;
	}
	case 288164: {
		pThis->ungrabMouseEvent((QEvent*)(p1));
		break;
	}
	case 288165: {
		pThis->unsetLayoutDirection();
		break;
	}
	case 288166: {
		pThis->unsetWindowFrameMargins();
		break;
	}
	case 288167: {
		*(QFlags<Qt::WindowType>*)p1 = pThis->windowFlags();
		break;
	}
	case 288168: {
		*(bool*)p2 = pThis->windowFrameEvent((QEvent*)(p1));
		break;
	}
	case 288169: {
		*(void**)p1 = new QRectF(pThis->windowFrameGeometry());
		break;
	}
	case 288170: {
		*(void**)p1 = new QRectF(pThis->windowFrameRect());
		break;
	}
	case 288171: {
		if(p1==0)return -2;
		*(Qt::WindowFrameSection*)p2 = pThis->windowFrameSectionAt(*(QPointF*)(p1));
		break;
	}
	case 288172: {
		drvSetString(p1,pThis->windowTitle());
		break;
	}
	case 288173: {
		*(Qt::WindowType*)p1 = pThis->windowType();
		break;
	}
	default:
		return drv_QGraphicsObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGridLayout
int drv_QGridLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGridLayout *pThis = (QGridLayout*)_p;
	switch (funcid) {
	case 289000+1: {
		delete pThis;
		break;
	}
	case 289102: {
		*(void**)_p = new QGridLayout();
		break;
	}
	case 289103: {
		*(void**)_p = new QGridLayout((QWidget*)(p1));
		break;
	}
	case 289104: {
		pThis->addItem((QLayoutItem*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(QFlags<Qt::AlignmentFlag>*)p6);
		break;
	}
	case 289105: {
		pThis->addLayout((QLayout*)(p1),*(int*)p2,*(int*)p3,*(QFlags<Qt::AlignmentFlag>*)p4);
		break;
	}
	case 289106: {
		pThis->addLayout((QLayout*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(QFlags<Qt::AlignmentFlag>*)p6);
		break;
	}
	case 289107: {
		pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 289108: {
		pThis->addWidget((QWidget*)(p1),*(int*)p2,*(int*)p3,*(QFlags<Qt::AlignmentFlag>*)p4);
		break;
	}
	case 289109: {
		pThis->addWidget((QWidget*)(p1),*(int*)p2,*(int*)p3,*(int*)p4,*(int*)p5,*(QFlags<Qt::AlignmentFlag>*)p6);
		break;
	}
	case 289110: {
		*(void**)p3 = new QRect(pThis->cellRect(*(int*)p1,*(int*)p2));
		break;
	}
	case 289111: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 289112: {
		*(int*)p2 = pThis->columnMinimumWidth(*(int*)p1);
		break;
	}
	case 289113: {
		*(int*)p2 = pThis->columnStretch(*(int*)p1);
		break;
	}
	case 289114: {
		pThis->getItemPosition(*(int*)p1,*(int**)p2,*(int**)p3,*(int**)p4,*(int**)p5);
		break;
	}
	case 289115: {
		*(int*)p1 = pThis->horizontalSpacing();
		break;
	}
	case 289116: {
		*(void**)p3 = pThis->itemAtPosition(*(int*)p1,*(int*)p2);
		break;
	}
	case 289117: {
		*(Qt::Corner*)p1 = pThis->originCorner();
		break;
	}
	case 289118: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 289119: {
		*(int*)p2 = pThis->rowMinimumHeight(*(int*)p1);
		break;
	}
	case 289120: {
		*(int*)p2 = pThis->rowStretch(*(int*)p1);
		break;
	}
	case 289121: {
		pThis->setColumnMinimumWidth(*(int*)p1,*(int*)p2);
		break;
	}
	case 289122: {
		pThis->setColumnStretch(*(int*)p1,*(int*)p2);
		break;
	}
	case 289123: {
		pThis->setDefaultPositioning(*(int*)p1,*(Qt::Orientation*)p2);
		break;
	}
	case 289124: {
		pThis->setHorizontalSpacing(*(int*)p1);
		break;
	}
	case 289125: {
		pThis->setOriginCorner(*(Qt::Corner*)p1);
		break;
	}
	case 289126: {
		pThis->setRowMinimumHeight(*(int*)p1,*(int*)p2);
		break;
	}
	case 289127: {
		pThis->setRowStretch(*(int*)p1,*(int*)p2);
		break;
	}
	case 289128: {
		pThis->setSpacing(*(int*)p1);
		break;
	}
	case 289129: {
		pThis->setVerticalSpacing(*(int*)p1);
		break;
	}
	case 289130: {
		*(int*)p1 = pThis->spacing();
		break;
	}
	case 289131: {
		*(int*)p1 = pThis->verticalSpacing();
		break;
	}
	default:
		return drv_QLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QGroupBox
int drv_QGroupBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QGroupBox *pThis = (QGroupBox*)_p;
	switch (funcid) {
	case 290000+1: {
		delete pThis;
		break;
	}
	case 290102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 290103: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(clicked(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 290104: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(toggled(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 290105: {
		*(void**)_p = new QGroupBox();
		break;
	}
	case 290106: {
		*(void**)_p = new QGroupBox((QWidget*)(p1));
		break;
	}
	case 290107: {
		*(void**)_p = new QGroupBox(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 290108: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 290109: {
		*(bool*)p1 = pThis->isCheckable();
		break;
	}
	case 290110: {
		*(bool*)p1 = pThis->isChecked();
		break;
	}
	case 290111: {
		*(bool*)p1 = pThis->isFlat();
		break;
	}
	case 290112: {
		pThis->setAlignment(*(int*)p1);
		break;
	}
	case 290113: {
		pThis->setCheckable(*(bool*)p1);
		break;
	}
	case 290114: {
		pThis->setChecked(*(bool*)p1);
		break;
	}
	case 290115: {
		pThis->setFlat(*(bool*)p1);
		break;
	}
	case 290116: {
		pThis->setTitle(drvGetStringHead(p1));
		break;
	}
	case 290117: {
		drvSetString(p1,pThis->title());
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QHBoxLayout
int drv_QHBoxLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHBoxLayout *pThis = (QHBoxLayout*)_p;
	switch (funcid) {
	case 291000+1: {
		delete pThis;
		break;
	}
	case 291102: {
		*(void**)_p = new QHBoxLayout();
		break;
	}
	case 291103: {
		*(void**)_p = new QHBoxLayout((QWidget*)(p1));
		break;
	}
	default:
		return drv_QBoxLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QHeaderView
int drv_QHeaderView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHeaderView *pThis = (QHeaderView*)_p;
	switch (funcid) {
	case 292000+1: {
		delete pThis;
		break;
	}
	case 292102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionEntered(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionPressed(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionHandleDoubleClicked(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(geometriesChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292106: {
		UISignal73 *uis = new UISignal73(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionResized(int,int,int)),uis,SLOT(call(int,int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292107: {
		UISignal71 *uis = new UISignal71(pThis);
		if (QObject::connect(pThis,SIGNAL(sortIndicatorChanged(int,Qt::SortOrder)),uis,SLOT(call(int,Qt::SortOrder)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292108: {
		UISignal73 *uis = new UISignal73(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionMoved(int,int,int)),uis,SLOT(call(int,int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292109: {
		UISignal69 *uis = new UISignal69(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionAutoResize(int,QHeaderView::ResizeMode)),uis,SLOT(call(int,QHeaderView::ResizeMode)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292110: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionDoubleClicked(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292111: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionClicked(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292112: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(sectionCountChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 292113: {
		*(bool*)p1 = pThis->cascadingSectionResizes();
		break;
	}
	case 292114: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 292115: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->defaultAlignment();
		break;
	}
	case 292116: {
		*(int*)p1 = pThis->defaultSectionSize();
		break;
	}
	case 292117: {
		pThis->headerDataChanged(*(Qt::Orientation*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 292118: {
		*(int*)p1 = pThis->hiddenSectionCount();
		break;
	}
	case 292119: {
		pThis->hideSection(*(int*)p1);
		break;
	}
	case 292120: {
		*(bool*)p1 = pThis->highlightSections();
		break;
	}
	case 292121: {
		pThis->initialize();
		break;
	}
	case 292122: {
		pThis->initializeSections();
		break;
	}
	case 292123: {
		pThis->initializeSections(*(int*)p1,*(int*)p2);
		break;
	}
	case 292124: {
#ifdef QTDRV_QT5
		*(bool*)p1 = pThis->sectionsClickable();
#else
		*(bool*)p1 = pThis->isClickable();
#endif
		break;
	}
	case 292125: {
#ifdef QTDRV_QT5
		*(bool*)p1 = pThis->sectionsMovable();
#else
		*(bool*)p1 = pThis->isMovable();
#endif
		break;
	}
	case 292126: {
		*(bool*)p2 = pThis->isSectionHidden(*(int*)p1);
		break;
	}
	case 292127: {
		*(bool*)p1 = pThis->isSortIndicatorShown();
		break;
	}
	case 292128: {
		*(int*)p1 = pThis->length();
		break;
	}
	case 292129: {
		*(int*)p2 = pThis->logicalIndex(*(int*)p1);
		break;
	}
	case 292130: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->logicalIndexAt(*(QPoint*)(p1));
		break;
	}
	case 292131: {
		*(int*)p2 = pThis->logicalIndexAt(*(int*)p1);
		break;
	}
	case 292132: {
		*(int*)p3 = pThis->logicalIndexAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 292133: {
		*(int*)p1 = pThis->minimumSectionSize();
		break;
	}
	case 292134: {
		pThis->moveSection(*(int*)p1,*(int*)p2);
		break;
	}
	case 292135: {
		*(int*)p1 = pThis->offset();
		break;
	}
	case 292136: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 292137: {
		if(p2==0)return -2;
		pThis->paintSection((QPainter*)(p1),*(QRect*)(p2),*(int*)p3);
		break;
	}
	case 292138: {
#ifdef QTDRV_QT5
		*(QHeaderView::ResizeMode*)p2 = pThis->sectionResizeMode(*(int*)p1);
#else
		*(QHeaderView::ResizeMode*)p2 = pThis->resizeMode(*(int*)p1);
#endif
		break;
	}
	case 292139: {
		pThis->resizeSection(*(int*)p1,*(int*)p2);
		break;
	}
	case 292140: {
		pThis->resizeSections();
		break;
	}
	case 292141: {
		pThis->resizeSections(*(QHeaderView::ResizeMode*)p1);
		break;
	}
	case 292142: {
		*(bool*)p2 = pThis->restoreState(drvGetByteArrayHead(p1));
		break;
	}
	case 292143: {
		drvSetByteArray(p1,pThis->saveState());
		break;
	}
	case 292144: {
		*(int*)p2 = pThis->sectionPosition(*(int*)p1);
		break;
	}
	case 292145: {
		*(int*)p2 = pThis->sectionSize(*(int*)p1);
		break;
	}
	case 292146: {
		*(void**)p2 = new QSize(pThis->sectionSizeFromContents(*(int*)p1));
		break;
	}
	case 292147: {
		*(int*)p2 = pThis->sectionSizeHint(*(int*)p1);
		break;
	}
	case 292148: {
		*(int*)p2 = pThis->sectionViewportPosition(*(int*)p1);
		break;
	}
	case 292149: {
		if(p1==0)return -2;
		pThis->sectionsAboutToBeRemoved(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 292150: {
		*(bool*)p1 = pThis->sectionsHidden();
		break;
	}
	case 292151: {
		if(p1==0)return -2;
		pThis->sectionsInserted(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 292152: {
		*(bool*)p1 = pThis->sectionsMoved();
		break;
	}
	case 292153: {
		pThis->setCascadingSectionResizes(*(bool*)p1);
		break;
	}
	case 292154: {
#ifdef QTDRV_QT5
		pThis->setSectionsClickable(*(bool*)p1);
#else
		pThis->setClickable(*(bool*)p1);
#endif
		break;
	}
	case 292155: {
		pThis->setDefaultAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 292156: {
		pThis->setDefaultSectionSize(*(int*)p1);
		break;
	}
	case 292157: {
		pThis->setHighlightSections(*(bool*)p1);
		break;
	}
	case 292158: {
		pThis->setMinimumSectionSize(*(int*)p1);
		break;
	}
	case 292159: {
#ifdef QTDRV_QT5
		pThis->setSectionsMovable(*(bool*)p1);
#else
		pThis->setMovable(*(bool*)p1);
#endif
		break;
	}
	case 292160: {
		pThis->setOffset(*(int*)p1);
		break;
	}
	case 292161: {
		pThis->setOffsetToLastSection();
		break;
	}
	case 292162: {
		pThis->setOffsetToSectionPosition(*(int*)p1);
		break;
	}
	case 292163: {
#ifdef QTDRV_QT5
		pThis->setSectionResizeMode(*(QHeaderView::ResizeMode*)p1);
#else
		pThis->setResizeMode(*(QHeaderView::ResizeMode*)p1);
#endif
		break;
	}
	case 292164: {
#ifdef QTDRV_QT5
		pThis->setSectionResizeMode(*(int*)p1,*(QHeaderView::ResizeMode*)p2);
#else
		pThis->setResizeMode(*(int*)p1,*(QHeaderView::ResizeMode*)p2);
#endif
		break;
	}
	case 292165: {
		pThis->setSectionHidden(*(int*)p1,*(bool*)p2);
		break;
	}
	case 292166: {
		pThis->setSortIndicator(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 292167: {
		pThis->setSortIndicatorShown(*(bool*)p1);
		break;
	}
	case 292168: {
		pThis->setStretchLastSection(*(bool*)p1);
		break;
	}
	case 292169: {
		pThis->showSection(*(int*)p1);
		break;
	}
	case 292170: {
		*(Qt::SortOrder*)p1 = pThis->sortIndicatorOrder();
		break;
	}
	case 292171: {
		*(int*)p1 = pThis->sortIndicatorSection();
		break;
	}
	case 292172: {
		*(bool*)p1 = pThis->stretchLastSection();
		break;
	}
	case 292173: {
		*(int*)p1 = pThis->stretchSectionCount();
		break;
	}
	case 292174: {
		pThis->swapSections(*(int*)p1,*(int*)p2);
		break;
	}
	case 292175: {
		pThis->updateSection(*(int*)p1);
		break;
	}
	case 292176: {
		*(int*)p2 = pThis->visualIndex(*(int*)p1);
		break;
	}
	case 292177: {
		*(int*)p2 = pThis->visualIndexAt(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QHistoryState
int drv_QHistoryState(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QHistoryState *pThis = (QHistoryState*)_p;
	switch (funcid) {
	case 293000+1: {
		delete pThis;
		break;
	}
	case 293102: {
		*(void**)_p = new QHistoryState();
		break;
	}
	case 293103: {
		*(void**)_p = new QHistoryState((QState*)(p1));
		break;
	}
	case 293104: {
		*(void**)_p = new QHistoryState(*(QHistoryState::HistoryType*)p1,(QState*)(p2));
		break;
	}
	case 293105: {
		*(void**)p1 = pThis->defaultState();
		break;
	}
	case 293106: {
		*(QHistoryState::HistoryType*)p1 = pThis->historyType();
		break;
	}
	case 293107: {
		pThis->setDefaultState((QAbstractState*)(p1));
		break;
	}
	case 293108: {
		pThis->setHistoryType(*(QHistoryState::HistoryType*)p1);
		break;
	}
	default:
		return drv_QAbstractState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QIODevice
int drv_QIODevice(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QIODevice *pThis = (QIODevice*)_p;
	switch (funcid) {
	case 294000+1: {
		delete pThis;
		break;
	}
	case 294102: {
		UISignal75 *uis = new UISignal75(pThis);
		if (QObject::connect(pThis,SIGNAL(bytesWritten(qint64)),uis,SLOT(call(qint64)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 294103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(readyRead()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 294104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(readChannelFinished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 294105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(aboutToClose()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 294106: {
		*(bool*)p1 = pThis->atEnd();
		break;
	}
	case 294107: {
		*(qint64*)p1 = pThis->bytesAvailable();
		break;
	}
	case 294108: {
		*(qint64*)p1 = pThis->bytesToWrite();
		break;
	}
	case 294109: {
		*(bool*)p1 = pThis->canReadLine();
		break;
	}
	case 294110: {
		pThis->close();
		break;
	}
	case 294111: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 294112: {
		*(bool*)p2 = pThis->getChar(*(char**)p1);
		break;
	}
	case 294113: {
		*(bool*)p1 = pThis->isOpen();
		break;
	}
	case 294114: {
		*(bool*)p1 = pThis->isReadable();
		break;
	}
	case 294115: {
		*(bool*)p1 = pThis->isSequential();
		break;
	}
	case 294116: {
		*(bool*)p1 = pThis->isTextModeEnabled();
		break;
	}
	case 294117: {
		*(bool*)p1 = pThis->isWritable();
		break;
	}
	case 294118: {
		*(bool*)p2 = pThis->open(*(QFlags<QIODevice::OpenModeFlag>*)p1);
		break;
	}
	case 294119: {
		*(QFlags<QIODevice::OpenModeFlag>*)p1 = pThis->openMode();
		break;
	}
	case 294120: {
		drvSetByteArray(p2,pThis->peek(*(qint64*)p1));
		break;
	}
	case 294121: {
		*(qint64*)p3 = pThis->peek(*(char**)p1,*(qint64*)p2);
		break;
	}
	case 294122: {
		*(qint64*)p1 = pThis->pos();
		break;
	}
	case 294123: {
		*(bool*)p2 = pThis->putChar(*(char*)p1);
		break;
	}
	case 294124: {
		drvSetByteArray(p2,pThis->read(*(qint64*)p1));
		break;
	}
	case 294125: {
		*(qint64*)p3 = pThis->read(*(char**)p1,*(qint64*)p2);
		break;
	}
	case 294126: {
		drvSetByteArray(p1,pThis->readAll());
		break;
	}
	case 294127: {
		*(qint64*)p3 = pThis->readData(*(char**)p1,*(qint64*)p2);
		break;
	}
	case 294128: {
		drvSetByteArray(p1,pThis->readLine());
		break;
	}
	case 294129: {
		drvSetByteArray(p2,pThis->readLine(*(qint64*)p1));
		break;
	}
	case 294130: {
		*(qint64*)p3 = pThis->readLine(*(char**)p1,*(qint64*)p2);
		break;
	}
	case 294131: {
		*(qint64*)p3 = pThis->readLineData(*(char**)p1,*(qint64*)p2);
		break;
	}
	case 294132: {
		*(bool*)p1 = pThis->reset();
		break;
	}
	case 294133: {
		*(bool*)p2 = pThis->seek(*(qint64*)p1);
		break;
	}
	case 294134: {
		pThis->setErrorString(drvGetStringHead(p1));
		break;
	}
	case 294135: {
		pThis->setOpenMode(*(QFlags<QIODevice::OpenModeFlag>*)p1);
		break;
	}
	case 294136: {
		pThis->setTextModeEnabled(*(bool*)p1);
		break;
	}
	case 294137: {
		*(qint64*)p1 = pThis->size();
		break;
	}
	case 294138: {
		pThis->ungetChar(*(char*)p1);
		break;
	}
	case 294139: {
		*(bool*)p2 = pThis->waitForBytesWritten(*(int*)p1);
		break;
	}
	case 294140: {
		*(bool*)p2 = pThis->waitForReadyRead(*(int*)p1);
		break;
	}
	case 294141: {
		*(qint64*)p2 = pThis->write(drvGetByteArrayHead(p1));
		break;
	}
	case 294142: {
		*(qint64*)p3 = pThis->write(*(char const**)p1,*(qint64*)p2);
		break;
	}
	case 294143: {
		*(qint64*)p3 = pThis->writeData(*(char const**)p1,*(qint64*)p2);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QInputDialog
int drv_QInputDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QInputDialog *pThis = (QInputDialog*)_p;
	switch (funcid) {
	case 295000+1: {
		delete pThis;
		break;
	}
	case 295102: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(doubleValueSelected(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295103: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(doubleValueChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(textValueChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295105: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(intValueChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295106: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(intValueSelected(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295107: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(textValueSelected(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 295108: {
		*(void**)_p = new QInputDialog();
		break;
	}
	case 295109: {
		*(void**)_p = new QInputDialog((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 295110: {
		drvSetString(p1,pThis->cancelButtonText());
		break;
	}
	case 295111: {
		drvSetStringArray(p1,pThis->comboBoxItems());
		break;
	}
	case 295112: {
		*(int*)p1 = pThis->doubleDecimals();
		break;
	}
	case 295113: {
		*(double*)p1 = pThis->doubleMaximum();
		break;
	}
	case 295114: {
		*(double*)p1 = pThis->doubleMinimum();
		break;
	}
	case 295115: {
		*(double*)p1 = pThis->doubleValue();
		break;
	}
	case 295116: {
		*(double*)p10 = QInputDialog::getDouble((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(double*)p4,*(double*)p5,*(double*)p6,*(int*)p7,*(bool**)p8,*(QFlags<Qt::WindowType>*)p9);
		break;
	}
	case 295117: {
		*(int*)p10 = QInputDialog::getInt((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(int*)p4,*(int*)p5,*(int*)p6,*(int*)p7,*(bool**)p8,*(QFlags<Qt::WindowType>*)p9);
		break;
	}
	case 295118: {
		drvSetString(p9,QInputDialog::getItem((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringArray(p4),*(int*)p5,*(bool*)p6,*(bool**)p7,*(QFlags<Qt::WindowType>*)p8));
		break;
	}
	case 295119: {
		drvSetString(p8,QInputDialog::getText((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QLineEdit::EchoMode*)p4,drvGetStringHead(p5),*(bool**)p6,*(QFlags<Qt::WindowType>*)p7));
		break;
	}
	case 295120: {
		*(QInputDialog::InputMode*)p1 = pThis->inputMode();
		break;
	}
	case 295121: {
		*(int*)p1 = pThis->intMaximum();
		break;
	}
	case 295122: {
		*(int*)p1 = pThis->intMinimum();
		break;
	}
	case 295123: {
		*(int*)p1 = pThis->intStep();
		break;
	}
	case 295124: {
		*(int*)p1 = pThis->intValue();
		break;
	}
	case 295125: {
		*(bool*)p1 = pThis->isComboBoxEditable();
		break;
	}
	case 295126: {
		drvSetString(p1,pThis->labelText());
		break;
	}
	case 295127: {
		drvSetString(p1,pThis->okButtonText());
		break;
	}
	case 295128: {
		pThis->open();
		break;
	}
	case 295129: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 295130: {
		*(QFlags<QInputDialog::InputDialogOption>*)p1 = pThis->options();
		break;
	}
	case 295131: {
		pThis->setCancelButtonText(drvGetStringHead(p1));
		break;
	}
	case 295132: {
		pThis->setComboBoxEditable(*(bool*)p1);
		break;
	}
	case 295133: {
		pThis->setComboBoxItems(drvGetStringArray(p1));
		break;
	}
	case 295134: {
		pThis->setDoubleDecimals(*(int*)p1);
		break;
	}
	case 295135: {
		pThis->setDoubleMaximum(*(double*)p1);
		break;
	}
	case 295136: {
		pThis->setDoubleMinimum(*(double*)p1);
		break;
	}
	case 295137: {
		pThis->setDoubleRange(*(double*)p1,*(double*)p2);
		break;
	}
	case 295138: {
		pThis->setDoubleValue(*(double*)p1);
		break;
	}
	case 295139: {
		pThis->setInputMode(*(QInputDialog::InputMode*)p1);
		break;
	}
	case 295140: {
		pThis->setIntMaximum(*(int*)p1);
		break;
	}
	case 295141: {
		pThis->setIntMinimum(*(int*)p1);
		break;
	}
	case 295142: {
		pThis->setIntRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 295143: {
		pThis->setIntStep(*(int*)p1);
		break;
	}
	case 295144: {
		pThis->setIntValue(*(int*)p1);
		break;
	}
	case 295145: {
		pThis->setLabelText(drvGetStringHead(p1));
		break;
	}
	case 295146: {
		pThis->setOkButtonText(drvGetStringHead(p1));
		break;
	}
	case 295147: {
		pThis->setOption(*(QInputDialog::InputDialogOption*)p1);
		break;
	}
	case 295148: {
		pThis->setOption(*(QInputDialog::InputDialogOption*)p1,*(bool*)p2);
		break;
	}
	case 295149: {
		pThis->setOptions(*(QFlags<QInputDialog::InputDialogOption>*)p1);
		break;
	}
	case 295150: {
		pThis->setTextEchoMode(*(QLineEdit::EchoMode*)p1);
		break;
	}
	case 295151: {
		pThis->setTextValue(drvGetStringHead(p1));
		break;
	}
	case 295152: {
		*(bool*)p2 = pThis->testOption(*(QInputDialog::InputDialogOption*)p1);
		break;
	}
	case 295153: {
		*(QLineEdit::EchoMode*)p1 = pThis->textEchoMode();
		break;
	}
	case 295154: {
		drvSetString(p1,pThis->textValue());
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QIntValidator
int drv_QIntValidator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QIntValidator *pThis = (QIntValidator*)_p;
	switch (funcid) {
	case 296000+1: {
		delete pThis;
		break;
	}
	case 296102: {
		*(void**)_p = new QIntValidator();
		break;
	}
	case 296103: {
		*(void**)_p = new QIntValidator((QObject*)(p1));
		break;
	}
	case 296104: {
		*(void**)_p = new QIntValidator(*(int*)p1,*(int*)p2,(QObject*)(p3));
		break;
	}
	case 296105: {
		*(int*)p1 = pThis->bottom();
		break;
	}
	case 296106: {
		pThis->setBottom(*(int*)p1);
		break;
	}
	case 296107: {
		pThis->setRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 296108: {
		pThis->setTop(*(int*)p1);
		break;
	}
	case 296109: {
		*(int*)p1 = pThis->top();
		break;
	}
	default:
		return drv_QValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QItemDelegate
int drv_QItemDelegate(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QItemDelegate *pThis = (QItemDelegate*)_p;
	switch (funcid) {
	case 297000+1: {
		delete pThis;
		break;
	}
	case 297102: {
		*(void**)_p = new QItemDelegate();
		break;
	}
	case 297103: {
		*(void**)_p = new QItemDelegate((QObject*)(p1));
		break;
	}
	case 297104: {
		*(bool*)p1 = pThis->hasClipping();
		break;
	}
	case 297105: {
		*(void**)p1 = pThis->itemEditorFactory();
		break;
	}
	case 297106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p4 = pThis->selected(*(QPixmap*)(p1),*(QPalette*)(p2),*(bool*)p3);
		break;
	}
	case 297107: {
		pThis->setClipping(*(bool*)p1);
		break;
	}
	case 297108: {
		pThis->setItemEditorFactory((QItemEditorFactory*)(p1));
		break;
	}
	case 297109: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)p5 = new QRect(pThis->textRectangle((QPainter*)(p1),*(QRect*)(p2),*(QFont*)(p3),drvGetStringHead(p4)));
		break;
	}
	default:
		return drv_QAbstractItemDelegate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QItemSelectionModel
int drv_QItemSelectionModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QItemSelectionModel *pThis = (QItemSelectionModel*)_p;
	switch (funcid) {
	case 298000+1: {
		delete pThis;
		break;
	}
	case 298102: {
		UISignal26 *uis = new UISignal26(pThis);
		if (QObject::connect(pThis,SIGNAL(currentRowChanged(QModelIndex const&,QModelIndex const&)),uis,SLOT(call(QModelIndex const&,QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 298103: {
		UISignal19 *uis = new UISignal19(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged(QItemSelection const&,QItemSelection const&)),uis,SLOT(call(QItemSelection const&,QItemSelection const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 298104: {
		UISignal26 *uis = new UISignal26(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(QModelIndex const&,QModelIndex const&)),uis,SLOT(call(QModelIndex const&,QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 298105: {
		UISignal26 *uis = new UISignal26(pThis);
		if (QObject::connect(pThis,SIGNAL(currentColumnChanged(QModelIndex const&,QModelIndex const&)),uis,SLOT(call(QModelIndex const&,QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 298106: {
		*(void**)_p = new QItemSelectionModel((QAbstractItemModel*)(p1));
		break;
	}
	case 298107: {
		*(void**)_p = new QItemSelectionModel((QAbstractItemModel*)(p1),(QObject*)(p2));
		break;
	}
	case 298108: {
		pThis->clear();
		break;
	}
	case 298109: {
		pThis->clearSelection();
		break;
	}
	case 298110: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->columnIntersectsSelection(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 298111: {
		*(void**)p1 = new QModelIndex(pThis->currentIndex());
		break;
	}
	case 298112: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->emitSelectionChanged(*(QItemSelection*)(p1),*(QItemSelection*)(p2));
		break;
	}
	case 298113: {
		*(bool*)p1 = pThis->hasSelection();
		break;
	}
	case 298114: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->isColumnSelected(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 298115: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->isRowSelected(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 298116: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isSelected(*(QModelIndex*)(p1));
		break;
	}
	case 298117: {
		*(const void**)p1 = pThis->model();
		break;
	}
	case 298118: {
		pThis->reset();
		break;
	}
	case 298119: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->rowIntersectsSelection(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 298120: {
		if(p1==0)return -2;
		pThis->select(*(QItemSelection*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 298121: {
		if(p1==0)return -2;
		pThis->select(*(QModelIndex*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 298122: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->selectedColumns());
		break;
	}
	case 298123: {
		drvSetListPtr<QModelIndex>(p2,80000,pThis->selectedColumns(*(int*)p1));
		break;
	}
	case 298124: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->selectedIndexes());
		break;
	}
	case 298125: {
		drvSetListPtr<QModelIndex>(p1,80000,pThis->selectedRows());
		break;
	}
	case 298126: {
		drvSetListPtr<QModelIndex>(p2,80000,pThis->selectedRows(*(int*)p1));
		break;
	}
	case 298127: {
		*(const void**)p1 = new QItemSelection(pThis->selection());
		break;
	}
	case 298128: {
		if(p1==0)return -2;
		pThis->setCurrentIndex(*(QModelIndex*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QKeyEventTransition
int drv_QKeyEventTransition(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QKeyEventTransition *pThis = (QKeyEventTransition*)_p;
	switch (funcid) {
	case 299000+1: {
		delete pThis;
		break;
	}
	case 299102: {
		*(void**)_p = new QKeyEventTransition();
		break;
	}
	case 299103: {
		*(void**)_p = new QKeyEventTransition((QState*)(p1));
		break;
	}
	case 299104: {
		*(void**)_p = new QKeyEventTransition((QObject*)(p1),*(QEvent::Type*)p2,*(int*)p3,(QState*)(p4));
		break;
	}
	case 299105: {
		*(int*)p1 = pThis->key();
		break;
	}
	case 299106: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifierMask();
		break;
	}
	case 299107: {
		pThis->setKey(*(int*)p1);
		break;
	}
	case 299108: {
		pThis->setModifierMask(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	default:
		return drv_QEventTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QLCDNumber
int drv_QLCDNumber(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLCDNumber *pThis = (QLCDNumber*)_p;
	switch (funcid) {
	case 300000+1: {
		delete pThis;
		break;
	}
	case 300102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(overflow()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 300103: {
		*(void**)_p = new QLCDNumber();
		break;
	}
	case 300104: {
		*(void**)_p = new QLCDNumber((QWidget*)(p1));
		break;
	}
	case 300105: {
		*(void**)_p = new QLCDNumber(*(unsigned int*)p1,(QWidget*)(p2));
		break;
	}
	case 300106: {
		*(bool*)p2 = pThis->checkOverflow(*(double*)p1);
		break;
	}
	case 300107: {
		*(bool*)p2 = pThis->checkOverflow(*(int*)p1);
		break;
	}
	case 300108: {
		*(int*)p1 = pThis->digitCount();
		break;
	}
	case 300109: {
		pThis->display(drvGetStringHead(p1));
		break;
	}
	case 300110: {
		pThis->display(*(double*)p1);
		break;
	}
	case 300111: {
		pThis->display(*(int*)p1);
		break;
	}
	case 300112: {
		*(int*)p1 = pThis->intValue();
		break;
	}
	case 300113: {
		*(QLCDNumber::Mode*)p1 = pThis->mode();
		break;
	}
	case 300114: {
		*(QLCDNumber::SegmentStyle*)p1 = pThis->segmentStyle();
		break;
	}
	case 300115: {
		pThis->setBinMode();
		break;
	}
	case 300116: {
		pThis->setDecMode();
		break;
	}
	case 300117: {
		pThis->setDigitCount(*(int*)p1);
		break;
	}
	case 300118: {
		pThis->setHexMode();
		break;
	}
	case 300119: {
		pThis->setMode(*(QLCDNumber::Mode*)p1);
		break;
	}
	case 300120: {
		pThis->setOctMode();
		break;
	}
	case 300121: {
		pThis->setSegmentStyle(*(QLCDNumber::SegmentStyle*)p1);
		break;
	}
	case 300122: {
		pThis->setSmallDecimalPoint(*(bool*)p1);
		break;
	}
	case 300123: {
		*(bool*)p1 = pThis->smallDecimalPoint();
		break;
	}
	case 300124: {
		*(double*)p1 = pThis->value();
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QLabel
int drv_QLabel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLabel *pThis = (QLabel*)_p;
	switch (funcid) {
	case 301000+1: {
		delete pThis;
		break;
	}
	case 301102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(linkActivated(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 301103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(linkHovered(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 301104: {
		*(void**)_p = new QLabel();
		break;
	}
	case 301105: {
		*(void**)_p = new QLabel((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 301106: {
		*(void**)_p = new QLabel(drvGetStringHead(p1),(QWidget*)(p2),*(QFlags<Qt::WindowType>*)p3);
		break;
	}
	case 301107: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 301108: {
		*(void**)p1 = pThis->buddy();
		break;
	}
	case 301109: {
		pThis->clear();
		break;
	}
	case 301110: {
		*(bool*)p1 = pThis->hasScaledContents();
		break;
	}
	case 301111: {
		*(bool*)p1 = pThis->hasSelectedText();
		break;
	}
	case 301112: {
		*(int*)p1 = pThis->indent();
		break;
	}
	case 301113: {
		*(int*)p1 = pThis->margin();
		break;
	}
	case 301114: {
		*(void**)p1 = pThis->movie();
		break;
	}
	case 301115: {
		*(bool*)p1 = pThis->openExternalLinks();
		break;
	}
	case 301116: {
		*(const void**)p1 = pThis->picture();
		break;
	}
	case 301117: {
		*(const void**)p1 = pThis->pixmap();
		break;
	}
	case 301118: {
		drvSetString(p1,pThis->selectedText());
		break;
	}
	case 301119: {
		*(int*)p1 = pThis->selectionStart();
		break;
	}
	case 301120: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 301121: {
		pThis->setBuddy((QWidget*)(p1));
		break;
	}
	case 301122: {
		pThis->setIndent(*(int*)p1);
		break;
	}
	case 301123: {
		pThis->setMargin(*(int*)p1);
		break;
	}
	case 301124: {
		pThis->setMovie((QMovie*)(p1));
		break;
	}
	case 301125: {
		pThis->setNum(*(double*)p1);
		break;
	}
	case 301126: {
		pThis->setNum(*(int*)p1);
		break;
	}
	case 301127: {
		pThis->setOpenExternalLinks(*(bool*)p1);
		break;
	}
	case 301128: {
		if(p1==0)return -2;
		pThis->setPicture(*(QPicture*)(p1));
		break;
	}
	case 301129: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1));
		break;
	}
	case 301130: {
		pThis->setScaledContents(*(bool*)p1);
		break;
	}
	case 301131: {
		pThis->setSelection(*(int*)p1,*(int*)p2);
		break;
	}
	case 301132: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 301133: {
		pThis->setTextFormat(*(Qt::TextFormat*)p1);
		break;
	}
	case 301134: {
		pThis->setTextInteractionFlags(*(QFlags<Qt::TextInteractionFlag>*)p1);
		break;
	}
	case 301135: {
		pThis->setWordWrap(*(bool*)p1);
		break;
	}
	case 301136: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 301137: {
		*(Qt::TextFormat*)p1 = pThis->textFormat();
		break;
	}
	case 301138: {
		*(QFlags<Qt::TextInteractionFlag>*)p1 = pThis->textInteractionFlags();
		break;
	}
	case 301139: {
		*(bool*)p1 = pThis->wordWrap();
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QLayout
int drv_QLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLayout *pThis = (QLayout*)_p;
	switch (funcid) {
	case 302000+1: {
		delete pThis;
		break;
	}
	case 302102: {
		*(bool*)p1 = pThis->activate();
		break;
	}
	case 302103: {
		pThis->addChildLayout((QLayout*)(p1));
		break;
	}
	case 302104: {
		pThis->addChildWidget((QWidget*)(p1));
		break;
	}
	case 302105: {
		pThis->addItem((QLayoutItem*)(p1));
		break;
	}
	case 302106: {
		pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 302107: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->alignmentRect(*(QRect*)(p1)));
		break;
	}
	case 302108: {
		if(p2==0)return -2;
		*(void**)p3 = new QSize(QLayout::closestAcceptableSize((QWidget*)(p1),*(QSize*)(p2)));
		break;
	}
	case 302109: {
		*(void**)p1 = new QMargins(pThis->contentsMargins());
		break;
	}
	case 302110: {
		*(void**)p1 = new QRect(pThis->contentsRect());
		break;
	}
	case 302111: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 302112: {
		pThis->getContentsMargins(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 302113: {
		*(int*)p2 = pThis->indexOf((QWidget*)(p1));
		break;
	}
	case 302114: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 302115: {
		*(void**)p2 = pThis->itemAt(*(int*)p1);
		break;
	}
	case 302116: {
		*(int*)p1 = pThis->margin();
		break;
	}
	case 302117: {
		*(void**)p1 = pThis->menuBar();
		break;
	}
	case 302118: {
		*(void**)p1 = pThis->parentWidget();
		break;
	}
	case 302119: {
		pThis->removeItem((QLayoutItem*)(p1));
		break;
	}
	case 302120: {
		pThis->removeWidget((QWidget*)(p1));
		break;
	}
	case 302121: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 302122: {
		*(bool*)p3 = pThis->setAlignment((QLayout*)(p1),*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 302123: {
		*(bool*)p3 = pThis->setAlignment((QWidget*)(p1),*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 302124: {
		if(p1==0)return -2;
		pThis->setContentsMargins(*(QMargins*)(p1));
		break;
	}
	case 302125: {
		pThis->setContentsMargins(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 302126: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 302127: {
		pThis->setMargin(*(int*)p1);
		break;
	}
	case 302128: {
		pThis->setMenuBar((QWidget*)(p1));
		break;
	}
	case 302129: {
		pThis->setSizeConstraint(*(QLayout::SizeConstraint*)p1);
		break;
	}
	case 302130: {
		pThis->setSpacing(*(int*)p1);
		break;
	}
	case 302131: {
		*(QLayout::SizeConstraint*)p1 = pThis->sizeConstraint();
		break;
	}
	case 302132: {
		*(int*)p1 = pThis->spacing();
		break;
	}
	case 302133: {
		*(void**)p2 = pThis->takeAt(*(int*)p1);
		break;
	}
	case 302134: {
		*(int*)p2 = pThis->totalHeightForWidth(*(int*)p1);
		break;
	}
	case 302135: {
		*(void**)p1 = new QSize(pThis->totalMaximumSize());
		break;
	}
	case 302136: {
		*(void**)p1 = new QSize(pThis->totalMinimumSize());
		break;
	}
	case 302137: {
		*(void**)p1 = new QSize(pThis->totalSizeHint());
		break;
	}
	case 302138: {
		pThis->update();
		break;
	}
	case 302139: {
		pThis->widgetEvent((QEvent*)(p1));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QLibrary
int drv_QLibrary(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLibrary *pThis = (QLibrary*)_p;
	switch (funcid) {
	case 303000+1: {
		delete pThis;
		break;
	}
	case 303102: {
		*(void**)_p = new QLibrary();
		break;
	}
	case 303103: {
		*(void**)_p = new QLibrary((QObject*)(p1));
		break;
	}
	case 303104: {
		*(void**)_p = new QLibrary(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 303105: {
		*(void**)_p = new QLibrary(drvGetStringHead(p1),drvGetStringHead(p2),(QObject*)(p3));
		break;
	}
	case 303106: {
		*(void**)_p = new QLibrary(drvGetStringHead(p1),*(int*)p2,(QObject*)(p3));
		break;
	}
	case 303107: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 303108: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 303109: {
		*(bool*)p2 = QLibrary::isLibrary(drvGetStringHead(p1));
		break;
	}
	case 303110: {
		*(bool*)p1 = pThis->isLoaded();
		break;
	}
	case 303111: {
		*(bool*)p1 = pThis->load();
		break;
	}
	case 303112: {
		*(QFlags<QLibrary::LoadHint>*)p1 = pThis->loadHints();
		break;
	}
	case 303113: {
#ifdef QTDRV_QT5
		*(QFunctionPointer*)p2 = pThis->resolve(drvGet_const_char(p1));
#else
		*(void**)p2 = pThis->resolve(drvGet_const_char(p1));
#endif
		break;
	}
	case 303114: {
#ifdef QTDRV_QT5
		*(QFunctionPointer*)p3 = QLibrary::resolve(drvGetStringHead(p1),drvGet_const_char(p2));
#else
		*(void**)p3 = QLibrary::resolve(drvGetStringHead(p1),drvGet_const_char(p2));
#endif
		break;
	}
	case 303115: {
#ifdef QTDRV_QT5
		*(QFunctionPointer*)p4 = QLibrary::resolve(drvGetStringHead(p1),drvGetStringHead(p2),drvGet_const_char(p3));
#else
		*(void**)p4 = QLibrary::resolve(drvGetStringHead(p1),drvGetStringHead(p2),drvGet_const_char(p3));
#endif
		break;
	}
	case 303116: {
#ifdef QTDRV_QT5
		*(QFunctionPointer*)p4 = QLibrary::resolve(drvGetStringHead(p1),*(int*)p2,drvGet_const_char(p3));
#else
		*(void**)p4 = QLibrary::resolve(drvGetStringHead(p1),*(int*)p2,drvGet_const_char(p3));
#endif
		break;
	}
	case 303117: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 303118: {
		pThis->setFileNameAndVersion(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 303119: {
		pThis->setFileNameAndVersion(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 303120: {
		pThis->setLoadHints(*(QFlags<QLibrary::LoadHint>*)p1);
		break;
	}
	case 303121: {
		*(bool*)p1 = pThis->unload();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QLineEdit
int drv_QLineEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QLineEdit *pThis = (QLineEdit*)_p;
	switch (funcid) {
	case 304000+1: {
		delete pThis;
		break;
	}
	case 304102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(textEdited(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(returnPressed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304104: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cursorPositionChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304106: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(textChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304107: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(editingFinished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 304108: {
		*(void**)_p = new QLineEdit();
		break;
	}
	case 304109: {
		*(void**)_p = new QLineEdit((QWidget*)(p1));
		break;
	}
	case 304110: {
		*(void**)_p = new QLineEdit(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 304111: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 304112: {
		pThis->backspace();
		break;
	}
	case 304113: {
		pThis->clear();
		break;
	}
	case 304114: {
		*(void**)p1 = pThis->completer();
		break;
	}
	case 304115: {
		pThis->copy();
		break;
	}
	case 304116: {
		*(void**)p1 = pThis->createStandardContextMenu();
		break;
	}
	case 304117: {
		pThis->cursorBackward(*(bool*)p1);
		break;
	}
	case 304118: {
		pThis->cursorBackward(*(bool*)p1,*(int*)p2);
		break;
	}
	case 304119: {
		pThis->cursorForward(*(bool*)p1);
		break;
	}
	case 304120: {
		pThis->cursorForward(*(bool*)p1,*(int*)p2);
		break;
	}
	case 304121: {
		*(int*)p1 = pThis->cursorPosition();
		break;
	}
	case 304122: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->cursorPositionAt(*(QPoint*)(p1));
		break;
	}
	case 304123: {
		*(void**)p1 = new QRect(pThis->cursorRect());
		break;
	}
	case 304124: {
		pThis->cursorWordBackward(*(bool*)p1);
		break;
	}
	case 304125: {
		pThis->cursorWordForward(*(bool*)p1);
		break;
	}
	case 304126: {
		pThis->cut();
		break;
	}
	case 304127: {
		pThis->del();
		break;
	}
	case 304128: {
		pThis->deselect();
		break;
	}
	case 304129: {
		drvSetString(p1,pThis->displayText());
		break;
	}
	case 304130: {
		*(bool*)p1 = pThis->dragEnabled();
		break;
	}
	case 304131: {
		*(QLineEdit::EchoMode*)p1 = pThis->echoMode();
		break;
	}
	case 304132: {
		pThis->end(*(bool*)p1);
		break;
	}
	case 304133: {
		pThis->getTextMargins(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 304134: {
		*(bool*)p1 = pThis->hasAcceptableInput();
		break;
	}
	case 304135: {
		*(bool*)p1 = pThis->hasFrame();
		break;
	}
	case 304136: {
		*(bool*)p1 = pThis->hasSelectedText();
		break;
	}
	case 304137: {
		pThis->home(*(bool*)p1);
		break;
	}
	case 304138: {
		drvSetString(p1,pThis->inputMask());
		break;
	}
	case 304139: {
		pThis->insert(drvGetStringHead(p1));
		break;
	}
	case 304140: {
		*(bool*)p1 = pThis->isModified();
		break;
	}
	case 304141: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 304142: {
		*(bool*)p1 = pThis->isRedoAvailable();
		break;
	}
	case 304143: {
		*(bool*)p1 = pThis->isUndoAvailable();
		break;
	}
	case 304144: {
		*(int*)p1 = pThis->maxLength();
		break;
	}
	case 304145: {
		pThis->paste();
		break;
	}
	case 304146: {
		drvSetString(p1,pThis->placeholderText());
		break;
	}
	case 304147: {
		pThis->redo();
		break;
	}
	case 304148: {
		pThis->selectAll();
		break;
	}
	case 304149: {
		drvSetString(p1,pThis->selectedText());
		break;
	}
	case 304150: {
		*(int*)p1 = pThis->selectionStart();
		break;
	}
	case 304151: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 304152: {
		pThis->setCompleter((QCompleter*)(p1));
		break;
	}
	case 304153: {
		pThis->setCursorPosition(*(int*)p1);
		break;
	}
	case 304154: {
		pThis->setDragEnabled(*(bool*)p1);
		break;
	}
	case 304155: {
		pThis->setEchoMode(*(QLineEdit::EchoMode*)p1);
		break;
	}
	case 304156: {
		pThis->setFrame(*(bool*)p1);
		break;
	}
	case 304157: {
		pThis->setInputMask(drvGetStringHead(p1));
		break;
	}
	case 304158: {
		pThis->setMaxLength(*(int*)p1);
		break;
	}
	case 304159: {
		pThis->setModified(*(bool*)p1);
		break;
	}
	case 304160: {
		pThis->setPlaceholderText(drvGetStringHead(p1));
		break;
	}
	case 304161: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 304162: {
		pThis->setSelection(*(int*)p1,*(int*)p2);
		break;
	}
	case 304163: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 304164: {
		if(p1==0)return -2;
		pThis->setTextMargins(*(QMargins*)(p1));
		break;
	}
	case 304165: {
		pThis->setTextMargins(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 304166: {
		pThis->setValidator((QValidator*)(p1));
		break;
	}
	case 304167: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 304168: {
		*(void**)p1 = new QMargins(pThis->textMargins());
		break;
	}
	case 304169: {
		pThis->undo();
		break;
	}
	case 304170: {
		*(const void**)p1 = pThis->validator();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QListView
int drv_QListView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QListView *pThis = (QListView*)_p;
	switch (funcid) {
	case 305000+1: {
		delete pThis;
		break;
	}
	case 305102: {
		UISignal20 *uis = new UISignal20(pThis);
		if (QObject::connect(pThis,SIGNAL(indexesMoved(QList<QModelIndex> const&)),uis,SLOT(call(QList<QModelIndex> const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 305103: {
		*(void**)_p = new QListView();
		break;
	}
	case 305104: {
		*(void**)_p = new QListView((QWidget*)(p1));
		break;
	}
	case 305105: {
		*(int*)p1 = pThis->batchSize();
		break;
	}
	case 305106: {
		pThis->clearPropertyFlags();
		break;
	}
	case 305107: {
		*(void**)p1 = new QSize(pThis->contentsSize());
		break;
	}
	case 305108: {
		*(QListView::Flow*)p1 = pThis->flow();
		break;
	}
	case 305109: {
		*(void**)p1 = new QSize(pThis->gridSize());
		break;
	}
	case 305110: {
		*(bool*)p2 = pThis->isRowHidden(*(int*)p1);
		break;
	}
	case 305111: {
		*(bool*)p1 = pThis->isSelectionRectVisible();
		break;
	}
	case 305112: {
		*(bool*)p1 = pThis->isWrapping();
		break;
	}
	case 305113: {
		*(QListView::LayoutMode*)p1 = pThis->layoutMode();
		break;
	}
	case 305114: {
		*(int*)p1 = pThis->modelColumn();
		break;
	}
	case 305115: {
		*(QListView::Movement*)p1 = pThis->movement();
		break;
	}
	case 305116: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->rectForIndex(*(QModelIndex*)(p1)));
		break;
	}
	case 305117: {
		pThis->resizeContents(*(int*)p1,*(int*)p2);
		break;
	}
	case 305118: {
		*(QListView::ResizeMode*)p1 = pThis->resizeMode();
		break;
	}
	case 305119: {
		pThis->setBatchSize(*(int*)p1);
		break;
	}
	case 305120: {
		pThis->setFlow(*(QListView::Flow*)p1);
		break;
	}
	case 305121: {
		if(p1==0)return -2;
		pThis->setGridSize(*(QSize*)(p1));
		break;
	}
	case 305122: {
		pThis->setLayoutMode(*(QListView::LayoutMode*)p1);
		break;
	}
	case 305123: {
		pThis->setModelColumn(*(int*)p1);
		break;
	}
	case 305124: {
		pThis->setMovement(*(QListView::Movement*)p1);
		break;
	}
	case 305125: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		pThis->setPositionForIndex(*(QPoint*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 305126: {
		pThis->setResizeMode(*(QListView::ResizeMode*)p1);
		break;
	}
	case 305127: {
		pThis->setRowHidden(*(int*)p1,*(bool*)p2);
		break;
	}
	case 305128: {
		pThis->setSelectionRectVisible(*(bool*)p1);
		break;
	}
	case 305129: {
		pThis->setSpacing(*(int*)p1);
		break;
	}
	case 305130: {
		pThis->setUniformItemSizes(*(bool*)p1);
		break;
	}
	case 305131: {
		pThis->setViewMode(*(QListView::ViewMode*)p1);
		break;
	}
	case 305132: {
		pThis->setWordWrap(*(bool*)p1);
		break;
	}
	case 305133: {
		pThis->setWrapping(*(bool*)p1);
		break;
	}
	case 305134: {
		*(int*)p1 = pThis->spacing();
		break;
	}
	case 305135: {
		*(bool*)p1 = pThis->uniformItemSizes();
		break;
	}
	case 305136: {
		*(QListView::ViewMode*)p1 = pThis->viewMode();
		break;
	}
	case 305137: {
		*(bool*)p1 = pThis->wordWrap();
		break;
	}
	default:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QListWidget
int drv_QListWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QListWidget *pThis = (QListWidget*)_p;
	switch (funcid) {
	case 306000+1: {
		delete pThis;
		break;
	}
	case 306102: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemActivated(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306103: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemPressed(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentRowChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306105: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemClicked(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306106: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemChanged(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306107: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemDoubleClicked(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306108: {
		UISignal22 *uis = new UISignal22(pThis);
		if (QObject::connect(pThis,SIGNAL(itemEntered(QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306109: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(itemSelectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306110: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(currentTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306111: {
		UISignal23 *uis = new UISignal23(pThis);
		if (QObject::connect(pThis,SIGNAL(currentItemChanged(QListWidgetItem*,QListWidgetItem*)),uis,SLOT(call(QListWidgetItem*,QListWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 306112: {
		*(void**)_p = new QListWidget();
		break;
	}
	case 306113: {
		*(void**)_p = new QListWidget((QWidget*)(p1));
		break;
	}
	case 306114: {
		pThis->addItem((QListWidgetItem*)(p1));
		break;
	}
	case 306115: {
		pThis->addItem(drvGetStringHead(p1));
		break;
	}
	case 306116: {
		pThis->addItems(drvGetStringArray(p1));
		break;
	}
	case 306117: {
		pThis->clear();
		break;
	}
	case 306118: {
		pThis->closePersistentEditor((QListWidgetItem*)(p1));
		break;
	}
	case 306119: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 306120: {
		*(void**)p1 = pThis->currentItem();
		break;
	}
	case 306121: {
		*(int*)p1 = pThis->currentRow();
		break;
	}
	case 306122: {
		*(bool*)p4 = pThis->dropMimeData(*(int*)p1,(QMimeData*)(p2),*(Qt::DropAction*)p3);
		break;
	}
	case 306123: {
		pThis->editItem((QListWidgetItem*)(p1));
		break;
	}
	case 306124: {
		drvSetListObj<QListWidgetItem*>(p3,72000,pThis->findItems(drvGetStringHead(p1),*(QFlags<Qt::MatchFlag>*)p2));
		break;
	}
	case 306125: {
		*(void**)p2 = new QModelIndex(pThis->indexFromItem((QListWidgetItem*)(p1)));
		break;
	}
	case 306126: {
		pThis->insertItem(*(int*)p1,(QListWidgetItem*)(p2));
		break;
	}
	case 306127: {
		pThis->insertItem(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 306128: {
		pThis->insertItems(*(int*)p1,drvGetStringArray(p2));
		break;
	}
	case 306129: {
		*(bool*)p2 = pThis->isItemHidden((QListWidgetItem*)(p1));
		break;
	}
	case 306130: {
		*(bool*)p2 = pThis->isItemSelected((QListWidgetItem*)(p1));
		break;
	}
	case 306131: {
		*(bool*)p1 = pThis->isSortingEnabled();
		break;
	}
	case 306132: {
		*(void**)p2 = pThis->item(*(int*)p1);
		break;
	}
	case 306133: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemAt(*(QPoint*)(p1));
		break;
	}
	case 306134: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 306135: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemFromIndex(*(QModelIndex*)(p1));
		break;
	}
	case 306136: {
		*(void**)p2 = pThis->itemWidget((QListWidgetItem*)(p1));
		break;
	}
	case 306137: {
		drvSetListObj<QListWidgetItem*>(p2,72000,pThis->items((QMimeData*)(p1)));
		break;
	}
	case 306138: {
		*(void**)p2 = pThis->mimeData(drvGetObjectArrayHeadT<QListWidgetItem*>(p1));
		break;
	}
	case 306139: {
		drvSetStringArray(p1,pThis->mimeTypes());
		break;
	}
	case 306140: {
		pThis->openPersistentEditor((QListWidgetItem*)(p1));
		break;
	}
	case 306141: {
		pThis->removeItemWidget((QListWidgetItem*)(p1));
		break;
	}
	case 306142: {
		*(int*)p2 = pThis->row((QListWidgetItem*)(p1));
		break;
	}
	case 306143: {
		pThis->scrollToItem((QListWidgetItem*)(p1));
		break;
	}
	case 306144: {
		pThis->scrollToItem((QListWidgetItem*)(p1),*(QAbstractItemView::ScrollHint*)p2);
		break;
	}
	case 306145: {
		drvSetListObj<QListWidgetItem*>(p1,72000,pThis->selectedItems());
		break;
	}
	case 306146: {
		pThis->setCurrentItem((QListWidgetItem*)(p1));
		break;
	}
	case 306147: {
		pThis->setCurrentItem((QListWidgetItem*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 306148: {
		pThis->setCurrentRow(*(int*)p1);
		break;
	}
	case 306149: {
		pThis->setCurrentRow(*(int*)p1,*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 306150: {
		pThis->setItemHidden((QListWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 306151: {
		pThis->setItemSelected((QListWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 306152: {
		pThis->setItemWidget((QListWidgetItem*)(p1),(QWidget*)(p2));
		break;
	}
	case 306153: {
		pThis->setSortingEnabled(*(bool*)p1);
		break;
	}
	case 306154: {
		pThis->sortItems();
		break;
	}
	case 306155: {
		pThis->sortItems(*(Qt::SortOrder*)p1);
		break;
	}
	case 306156: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->supportedDropActions();
		break;
	}
	case 306157: {
		*(void**)p2 = pThis->takeItem(*(int*)p1);
		break;
	}
	case 306158: {
		*(void**)p2 = new QRect(pThis->visualItemRect((QListWidgetItem*)(p1)));
		break;
	}
	default:
		return drv_QListView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMainWindow
int drv_QMainWindow(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMainWindow *pThis = (QMainWindow*)_p;
	switch (funcid) {
	case 307000+1: {
		delete pThis;
		break;
	}
	case 307102: {
		UISignal65 *uis = new UISignal65(pThis);
		if (QObject::connect(pThis,SIGNAL(toolButtonStyleChanged(Qt::ToolButtonStyle)),uis,SLOT(call(Qt::ToolButtonStyle)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 307103: {
		UISignal38 *uis = new UISignal38(pThis);
		if (QObject::connect(pThis,SIGNAL(iconSizeChanged(QSize const&)),uis,SLOT(call(QSize const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 307104: {
		*(void**)_p = new QMainWindow();
		break;
	}
	case 307105: {
		*(void**)_p = new QMainWindow((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 307106: {
		pThis->addDockWidget(*(Qt::DockWidgetArea*)p1,(QDockWidget*)(p2));
		break;
	}
	case 307107: {
		pThis->addDockWidget(*(Qt::DockWidgetArea*)p1,(QDockWidget*)(p2),*(Qt::Orientation*)p3);
		break;
	}
	case 307108: {
		*(void**)p2 = pThis->addToolBar(drvGetStringHead(p1));
		break;
	}
	case 307109: {
		pThis->addToolBar((QToolBar*)(p1));
		break;
	}
	case 307110: {
		pThis->addToolBar(*(Qt::ToolBarArea*)p1,(QToolBar*)(p2));
		break;
	}
	case 307111: {
		pThis->addToolBarBreak();
		break;
	}
	case 307112: {
		pThis->addToolBarBreak(*(Qt::ToolBarArea*)p1);
		break;
	}
	case 307113: {
		*(void**)p1 = pThis->centralWidget();
		break;
	}
	case 307114: {
		*(Qt::DockWidgetArea*)p2 = pThis->corner(*(Qt::Corner*)p1);
		break;
	}
	case 307115: {
		*(void**)p1 = pThis->createPopupMenu();
		break;
	}
	case 307116: {
		*(QFlags<QMainWindow::DockOption>*)p1 = pThis->dockOptions();
		break;
	}
	case 307117: {
		*(Qt::DockWidgetArea*)p2 = pThis->dockWidgetArea((QDockWidget*)(p1));
		break;
	}
	case 307118: {
		*(bool*)p1 = pThis->documentMode();
		break;
	}
	case 307119: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 307120: {
		pThis->insertToolBar((QToolBar*)(p1),(QToolBar*)(p2));
		break;
	}
	case 307121: {
		pThis->insertToolBarBreak((QToolBar*)(p1));
		break;
	}
	case 307122: {
		*(bool*)p1 = pThis->isAnimated();
		break;
	}
	case 307123: {
		*(bool*)p1 = pThis->isDockNestingEnabled();
		break;
	}
	case 307124: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isSeparator(*(QPoint*)(p1));
		break;
	}
	case 307125: {
		*(void**)p1 = pThis->menuBar();
		break;
	}
	case 307126: {
		*(void**)p1 = pThis->menuWidget();
		break;
	}
	case 307127: {
		pThis->removeDockWidget((QDockWidget*)(p1));
		break;
	}
	case 307128: {
		pThis->removeToolBar((QToolBar*)(p1));
		break;
	}
	case 307129: {
		pThis->removeToolBarBreak((QToolBar*)(p1));
		break;
	}
	case 307130: {
		*(bool*)p2 = pThis->restoreDockWidget((QDockWidget*)(p1));
		break;
	}
	case 307131: {
		*(bool*)p2 = pThis->restoreState(drvGetByteArrayHead(p1));
		break;
	}
	case 307132: {
		*(bool*)p3 = pThis->restoreState(drvGetByteArrayHead(p1),*(int*)p2);
		break;
	}
	case 307133: {
		drvSetByteArray(p1,pThis->saveState());
		break;
	}
	case 307134: {
		drvSetByteArray(p2,pThis->saveState(*(int*)p1));
		break;
	}
	case 307135: {
		pThis->setAnimated(*(bool*)p1);
		break;
	}
	case 307136: {
		pThis->setCentralWidget((QWidget*)(p1));
		break;
	}
	case 307137: {
		pThis->setCorner(*(Qt::Corner*)p1,*(Qt::DockWidgetArea*)p2);
		break;
	}
	case 307138: {
		pThis->setDockNestingEnabled(*(bool*)p1);
		break;
	}
	case 307139: {
		pThis->setDockOptions(*(QFlags<QMainWindow::DockOption>*)p1);
		break;
	}
	case 307140: {
		pThis->setDocumentMode(*(bool*)p1);
		break;
	}
	case 307141: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 307142: {
		pThis->setMenuBar((QMenuBar*)(p1));
		break;
	}
	case 307143: {
		pThis->setMenuWidget((QWidget*)(p1));
		break;
	}
	case 307144: {
		pThis->setStatusBar((QStatusBar*)(p1));
		break;
	}
	case 307145: {
		pThis->setTabPosition(*(QFlags<Qt::DockWidgetArea>*)p1,*(QTabWidget::TabPosition*)p2);
		break;
	}
	case 307146: {
		pThis->setTabShape(*(QTabWidget::TabShape*)p1);
		break;
	}
	case 307147: {
		pThis->setToolButtonStyle(*(Qt::ToolButtonStyle*)p1);
		break;
	}
	case 307148: {
		pThis->setUnifiedTitleAndToolBarOnMac(*(bool*)p1);
		break;
	}
	case 307149: {
		pThis->splitDockWidget((QDockWidget*)(p1),(QDockWidget*)(p2),*(Qt::Orientation*)p3);
		break;
	}
	case 307150: {
		*(void**)p1 = pThis->statusBar();
		break;
	}
	case 307151: {
		*(QTabWidget::TabPosition*)p2 = pThis->tabPosition(*(Qt::DockWidgetArea*)p1);
		break;
	}
	case 307152: {
		*(QTabWidget::TabShape*)p1 = pThis->tabShape();
		break;
	}
	case 307153: {
		drvSetListObj<QDockWidget*>(p2,231000,pThis->tabifiedDockWidgets((QDockWidget*)(p1)));
		break;
	}
	case 307154: {
		pThis->tabifyDockWidget((QDockWidget*)(p1),(QDockWidget*)(p2));
		break;
	}
	case 307155: {
		*(Qt::ToolBarArea*)p2 = pThis->toolBarArea((QToolBar*)(p1));
		break;
	}
	case 307156: {
		*(bool*)p2 = pThis->toolBarBreak((QToolBar*)(p1));
		break;
	}
	case 307157: {
		*(Qt::ToolButtonStyle*)p1 = pThis->toolButtonStyle();
		break;
	}
	case 307158: {
		*(bool*)p1 = pThis->unifiedTitleAndToolBarOnMac();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMdiArea
int drv_QMdiArea(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMdiArea *pThis = (QMdiArea*)_p;
	switch (funcid) {
	case 308000+1: {
		delete pThis;
		break;
	}
	case 308102: {
		UISignal24 *uis = new UISignal24(pThis);
		if (QObject::connect(pThis,SIGNAL(subWindowActivated(QMdiSubWindow*)),uis,SLOT(call(QMdiSubWindow*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 308103: {
		*(void**)_p = new QMdiArea();
		break;
	}
	case 308104: {
		*(void**)_p = new QMdiArea((QWidget*)(p1));
		break;
	}
	case 308105: {
		pThis->activateNextSubWindow();
		break;
	}
	case 308106: {
		pThis->activatePreviousSubWindow();
		break;
	}
	case 308107: {
		*(QMdiArea::WindowOrder*)p1 = pThis->activationOrder();
		break;
	}
	case 308108: {
		*(void**)p1 = pThis->activeSubWindow();
		break;
	}
	case 308109: {
		*(void**)p2 = pThis->addSubWindow((QWidget*)(p1));
		break;
	}
	case 308110: {
		*(void**)p3 = pThis->addSubWindow((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 308111: {
		*(void**)p1 = new QBrush(pThis->background());
		break;
	}
	case 308112: {
		pThis->cascadeSubWindows();
		break;
	}
	case 308113: {
		pThis->closeActiveSubWindow();
		break;
	}
	case 308114: {
		pThis->closeAllSubWindows();
		break;
	}
	case 308115: {
		*(void**)p1 = pThis->currentSubWindow();
		break;
	}
	case 308116: {
		*(bool*)p1 = pThis->documentMode();
		break;
	}
	case 308117: {
		pThis->removeSubWindow((QWidget*)(p1));
		break;
	}
	case 308118: {
		pThis->setActivationOrder(*(QMdiArea::WindowOrder*)p1);
		break;
	}
	case 308119: {
		pThis->setActiveSubWindow((QMdiSubWindow*)(p1));
		break;
	}
	case 308120: {
		if(p1==0)return -2;
		pThis->setBackground(*(QBrush*)(p1));
		break;
	}
	case 308121: {
		pThis->setDocumentMode(*(bool*)p1);
		break;
	}
	case 308122: {
		pThis->setOption(*(QMdiArea::AreaOption*)p1);
		break;
	}
	case 308123: {
		pThis->setOption(*(QMdiArea::AreaOption*)p1,*(bool*)p2);
		break;
	}
	case 308124: {
		pThis->setTabPosition(*(QTabWidget::TabPosition*)p1);
		break;
	}
	case 308125: {
		pThis->setTabShape(*(QTabWidget::TabShape*)p1);
		break;
	}
	case 308126: {
		pThis->setViewMode(*(QMdiArea::ViewMode*)p1);
		break;
	}
	case 308127: {
		pThis->setupViewport((QWidget*)(p1));
		break;
	}
	case 308128: {
		drvSetListObj<QMdiSubWindow*>(p1,309000,pThis->subWindowList());
		break;
	}
	case 308129: {
		drvSetListObj<QMdiSubWindow*>(p2,309000,pThis->subWindowList(*(QMdiArea::WindowOrder*)p1));
		break;
	}
	case 308130: {
		*(QTabWidget::TabPosition*)p1 = pThis->tabPosition();
		break;
	}
	case 308131: {
		*(QTabWidget::TabShape*)p1 = pThis->tabShape();
		break;
	}
	case 308132: {
		*(bool*)p2 = pThis->testOption(*(QMdiArea::AreaOption*)p1);
		break;
	}
	case 308133: {
		pThis->tileSubWindows();
		break;
	}
	case 308134: {
		*(QMdiArea::ViewMode*)p1 = pThis->viewMode();
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMdiSubWindow
int drv_QMdiSubWindow(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMdiSubWindow *pThis = (QMdiSubWindow*)_p;
	switch (funcid) {
	case 309000+1: {
		delete pThis;
		break;
	}
	case 309102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(aboutToActivate()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 309103: {
		UISignal16 *uis = new UISignal16(pThis);
		if (QObject::connect(pThis,SIGNAL(windowStateChanged(QFlags<Qt::WindowState>,QFlags<Qt::WindowState>)),uis,SLOT(call(QFlags<Qt::WindowState>,QFlags<Qt::WindowState>)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 309104: {
		*(void**)_p = new QMdiSubWindow();
		break;
	}
	case 309105: {
		*(void**)_p = new QMdiSubWindow((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 309106: {
		*(bool*)p1 = pThis->isShaded();
		break;
	}
	case 309107: {
		*(int*)p1 = pThis->keyboardPageStep();
		break;
	}
	case 309108: {
		*(int*)p1 = pThis->keyboardSingleStep();
		break;
	}
	case 309109: {
		*(void**)p1 = pThis->maximizedButtonsWidget();
		break;
	}
	case 309110: {
		*(void**)p1 = pThis->maximizedSystemMenuIconWidget();
		break;
	}
	case 309111: {
		*(void**)p1 = pThis->mdiArea();
		break;
	}
	case 309112: {
		pThis->setKeyboardPageStep(*(int*)p1);
		break;
	}
	case 309113: {
		pThis->setKeyboardSingleStep(*(int*)p1);
		break;
	}
	case 309114: {
		pThis->setOption(*(QMdiSubWindow::SubWindowOption*)p1);
		break;
	}
	case 309115: {
		pThis->setOption(*(QMdiSubWindow::SubWindowOption*)p1,*(bool*)p2);
		break;
	}
	case 309116: {
		pThis->setSystemMenu((QMenu*)(p1));
		break;
	}
	case 309117: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 309118: {
		pThis->showShaded();
		break;
	}
	case 309119: {
		pThis->showSystemMenu();
		break;
	}
	case 309120: {
		*(void**)p1 = pThis->systemMenu();
		break;
	}
	case 309121: {
		*(bool*)p2 = pThis->testOption(*(QMdiSubWindow::SubWindowOption*)p1);
		break;
	}
	case 309122: {
		*(void**)p1 = pThis->widget();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMenu
int drv_QMenu(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMenu *pThis = (QMenu*)_p;
	switch (funcid) {
	case 310000+1: {
		delete pThis;
		break;
	}
	case 310102: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(hovered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 310103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(aboutToHide()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 310104: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 310105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(aboutToShow()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 310106: {
		*(void**)_p = new QMenu();
		break;
	}
	case 310107: {
		*(void**)_p = new QMenu((QWidget*)(p1));
		break;
	}
	case 310108: {
		*(void**)_p = new QMenu(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 310109: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->actionAt(*(QPoint*)(p1));
		break;
	}
	case 310110: {
		*(void**)p2 = new QRect(pThis->actionGeometry((QAction*)(p1)));
		break;
	}
	case 310111: {
		*(void**)p1 = pThis->activeAction();
		break;
	}
	case 310112: {
		pThis->addAction((QAction*)(p1));
		break;
	}
	case 310113: {
		*(void**)p2 = pThis->addAction(drvGetStringHead(p1));
		break;
	}
	case 310114: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addAction(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 310115: {
		*(void**)p5 = pThis->addAction(drvGetStringHead(p1),(QObject*)(p2),drvGet_const_char(p3),p4==0?QKeySequence():*(QKeySequence*)(p4));
		break;
	}
	case 310116: {
		if(p1==0)return -2;
		*(void**)p6 = pThis->addAction(*(QIcon*)(p1),drvGetStringHead(p2),(QObject*)(p3),drvGet_const_char(p4),p5==0?QKeySequence():*(QKeySequence*)(p5));
		break;
	}
	case 310117: {
		*(void**)p2 = pThis->addMenu((QMenu*)(p1));
		break;
	}
	case 310118: {
		*(void**)p2 = pThis->addMenu(drvGetStringHead(p1));
		break;
	}
	case 310119: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addMenu(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 310120: {
		*(void**)p1 = pThis->addSeparator();
		break;
	}
	case 310121: {
		pThis->clear();
		break;
	}
	case 310122: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 310123: {
		*(void**)p1 = pThis->defaultAction();
		break;
	}
	case 310124: {
		*(void**)p1 = pThis->exec();
		break;
	}
	case 310125: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->exec(*(QPoint*)(p1));
		break;
	}
	case 310126: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->exec(*(QPoint*)(p1),(QAction*)(p2));
		break;
	}
	case 310127: {
		if(p2==0)return -2;
		*(void**)p4 = QMenu::exec(drvGetObjectArrayHeadT<QAction*>(p1),*(QPoint*)(p2),(QAction*)(p3));
		break;
	}
	case 310128: {
		if(p2==0)return -2;
		*(void**)p5 = QMenu::exec(drvGetObjectArrayHeadT<QAction*>(p1),*(QPoint*)(p2),(QAction*)(p3),(QWidget*)(p4));
		break;
	}
	case 310129: {
		pThis->hideTearOffMenu();
		break;
	}
	case 310130: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 310131: {
		*(void**)p3 = pThis->insertMenu((QAction*)(p1),(QMenu*)(p2));
		break;
	}
	case 310132: {
		*(void**)p2 = pThis->insertSeparator((QAction*)(p1));
		break;
	}
	case 310133: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 310134: {
		*(bool*)p1 = pThis->isTearOffEnabled();
		break;
	}
	case 310135: {
		*(bool*)p1 = pThis->isTearOffMenuVisible();
		break;
	}
	case 310136: {
		*(void**)p1 = pThis->menuAction();
		break;
	}
	case 310137: {
		if(p1==0)return -2;
		pThis->popup(*(QPoint*)(p1));
		break;
	}
	case 310138: {
		if(p1==0)return -2;
		pThis->popup(*(QPoint*)(p1),(QAction*)(p2));
		break;
	}
	case 310139: {
		*(bool*)p1 = pThis->separatorsCollapsible();
		break;
	}
	case 310140: {
		pThis->setActiveAction((QAction*)(p1));
		break;
	}
	case 310141: {
		pThis->setDefaultAction((QAction*)(p1));
		break;
	}
	case 310142: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 310143: {
		pThis->setNoReplayFor((QWidget*)(p1));
		break;
	}
	case 310144: {
		pThis->setSeparatorsCollapsible(*(bool*)p1);
		break;
	}
	case 310145: {
		pThis->setTearOffEnabled(*(bool*)p1);
		break;
	}
	case 310146: {
		pThis->setTitle(drvGetStringHead(p1));
		break;
	}
	case 310147: {
		drvSetString(p1,pThis->title());
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMenuBar
int drv_QMenuBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMenuBar *pThis = (QMenuBar*)_p;
	switch (funcid) {
	case 311000+1: {
		delete pThis;
		break;
	}
	case 311102: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(hovered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 311103: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 311104: {
		*(void**)_p = new QMenuBar();
		break;
	}
	case 311105: {
		*(void**)_p = new QMenuBar((QWidget*)(p1));
		break;
	}
	case 311106: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->actionAt(*(QPoint*)(p1));
		break;
	}
	case 311107: {
		*(void**)p2 = new QRect(pThis->actionGeometry((QAction*)(p1)));
		break;
	}
	case 311108: {
		*(void**)p1 = pThis->activeAction();
		break;
	}
	case 311109: {
		pThis->addAction((QAction*)(p1));
		break;
	}
	case 311110: {
		*(void**)p2 = pThis->addAction(drvGetStringHead(p1));
		break;
	}
	case 311111: {
		*(void**)p4 = pThis->addAction(drvGetStringHead(p1),(QObject*)(p2),drvGet_const_char(p3));
		break;
	}
	case 311112: {
		*(void**)p2 = pThis->addMenu((QMenu*)(p1));
		break;
	}
	case 311113: {
		*(void**)p2 = pThis->addMenu(drvGetStringHead(p1));
		break;
	}
	case 311114: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addMenu(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 311115: {
		*(void**)p1 = pThis->addSeparator();
		break;
	}
	case 311116: {
		pThis->clear();
		break;
	}
	case 311117: {
		*(void**)p1 = pThis->cornerWidget();
		break;
	}
	case 311118: {
		*(void**)p2 = pThis->cornerWidget(*(Qt::Corner*)p1);
		break;
	}
	case 311119: {
		*(void**)p3 = pThis->insertMenu((QAction*)(p1),(QMenu*)(p2));
		break;
	}
	case 311120: {
		*(void**)p2 = pThis->insertSeparator((QAction*)(p1));
		break;
	}
	case 311121: {
		*(bool*)p1 = pThis->isDefaultUp();
		break;
	}
	case 311122: {
		*(bool*)p1 = pThis->isNativeMenuBar();
		break;
	}
	case 311123: {
		pThis->setActiveAction((QAction*)(p1));
		break;
	}
	case 311124: {
		pThis->setCornerWidget((QWidget*)(p1));
		break;
	}
	case 311125: {
		pThis->setCornerWidget((QWidget*)(p1),*(Qt::Corner*)p2);
		break;
	}
	case 311126: {
		pThis->setDefaultUp(*(bool*)p1);
		break;
	}
	case 311127: {
		pThis->setNativeMenuBar(*(bool*)p1);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMessageBox
int drv_QMessageBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMessageBox *pThis = (QMessageBox*)_p;
	switch (funcid) {
	case 312000+1: {
		delete pThis;
		break;
	}
	case 312102: {
		UISignal5 *uis = new UISignal5(pThis);
		if (QObject::connect(pThis,SIGNAL(buttonClicked(QAbstractButton*)),uis,SLOT(call(QAbstractButton*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 312103: {
		*(void**)_p = new QMessageBox();
		break;
	}
	case 312104: {
		*(void**)_p = new QMessageBox((QWidget*)(p1));
		break;
	}
	case 312105: {
		*(void**)_p = new QMessageBox(*(QMessageBox::Icon*)p1,drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QMessageBox::StandardButton>*)p4,(QWidget*)(p5),*(QFlags<Qt::WindowType>*)p6);
		break;
	}
	case 312106: {
		*(void**)_p = new QMessageBox(drvGetStringHead(p1),drvGetStringHead(p2),*(QMessageBox::Icon*)p3,*(int*)p4,*(int*)p5,*(int*)p6,(QWidget*)(p7),*(QFlags<Qt::WindowType>*)p8);
		break;
	}
	case 312107: {
		QMessageBox::about((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3));
		break;
	}
	case 312108: {
		QMessageBox::aboutQt((QWidget*)(p1));
		break;
	}
	case 312109: {
		QMessageBox::aboutQt((QWidget*)(p1),drvGetStringHead(p2));
		break;
	}
	case 312110: {
		*(void**)p2 = pThis->addButton(*(QMessageBox::StandardButton*)p1);
		break;
	}
	case 312111: {
		pThis->addButton((QAbstractButton*)(p1),*(QMessageBox::ButtonRole*)p2);
		break;
	}
	case 312112: {
		*(void**)p3 = pThis->addButton(drvGetStringHead(p1),*(QMessageBox::ButtonRole*)p2);
		break;
	}
	case 312113: {
		*(void**)p2 = pThis->button(*(QMessageBox::StandardButton*)p1);
		break;
	}
	case 312114: {
		*(QMessageBox::ButtonRole*)p2 = pThis->buttonRole((QAbstractButton*)(p1));
		break;
	}
	case 312115: {
		drvSetString(p2,pThis->buttonText(*(int*)p1));
		break;
	}
	case 312116: {
		drvSetListObj<QAbstractButton*>(p1,195000,pThis->buttons());
		break;
	}
	case 312117: {
		*(void**)p1 = pThis->clickedButton();
		break;
	}
	case 312118: {
		*(QMessageBox::StandardButton*)p6 = QMessageBox::critical((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QMessageBox::StandardButton>*)p4,*(QMessageBox::StandardButton*)p5);
		break;
	}
	case 312119: {
		*(int*)p7 = QMessageBox::critical((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 312120: {
		*(int*)p9 = QMessageBox::critical((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),drvGetStringHead(p5),drvGetStringHead(p6),*(int*)p7,*(int*)p8);
		break;
	}
	case 312121: {
		*(void**)p1 = pThis->defaultButton();
		break;
	}
	case 312122: {
		drvSetString(p1,pThis->detailedText());
		break;
	}
	case 312123: {
		*(void**)p1 = pThis->escapeButton();
		break;
	}
	case 312124: {
		*(QMessageBox::Icon*)p1 = pThis->icon();
		break;
	}
	case 312125: {
		*(void**)p1 = new QPixmap(pThis->iconPixmap());
		break;
	}
	case 312126: {
		*(QMessageBox::StandardButton*)p6 = QMessageBox::information((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QMessageBox::StandardButton>*)p4,*(QMessageBox::StandardButton*)p5);
		break;
	}
	case 312127: {
		*(int*)p7 = QMessageBox::information((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 312128: {
		*(int*)p9 = QMessageBox::information((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),drvGetStringHead(p5),drvGetStringHead(p6),*(int*)p7,*(int*)p8);
		break;
	}
	case 312129: {
		drvSetString(p1,pThis->informativeText());
		break;
	}
	case 312130: {
		pThis->open();
		break;
	}
	case 312131: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 312132: {
		*(QMessageBox::StandardButton*)p6 = QMessageBox::question((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QMessageBox::StandardButton>*)p4,*(QMessageBox::StandardButton*)p5);
		break;
	}
	case 312133: {
		*(int*)p7 = QMessageBox::question((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 312134: {
		*(int*)p9 = QMessageBox::question((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),drvGetStringHead(p5),drvGetStringHead(p6),*(int*)p7,*(int*)p8);
		break;
	}
	case 312135: {
		pThis->removeButton((QAbstractButton*)(p1));
		break;
	}
	case 312136: {
		pThis->setButtonText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 312137: {
		pThis->setDefaultButton(*(QMessageBox::StandardButton*)p1);
		break;
	}
	case 312138: {
		pThis->setDefaultButton((QPushButton*)(p1));
		break;
	}
	case 312139: {
		pThis->setDetailedText(drvGetStringHead(p1));
		break;
	}
	case 312140: {
		pThis->setEscapeButton((QAbstractButton*)(p1));
		break;
	}
	case 312141: {
		pThis->setEscapeButton(*(QMessageBox::StandardButton*)p1);
		break;
	}
	case 312142: {
		pThis->setIcon(*(QMessageBox::Icon*)p1);
		break;
	}
	case 312143: {
		if(p1==0)return -2;
		pThis->setIconPixmap(*(QPixmap*)(p1));
		break;
	}
	case 312144: {
		pThis->setInformativeText(drvGetStringHead(p1));
		break;
	}
	case 312145: {
		pThis->setStandardButtons(*(QFlags<QMessageBox::StandardButton>*)p1);
		break;
	}
	case 312146: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 312147: {
		pThis->setTextFormat(*(Qt::TextFormat*)p1);
		break;
	}
	case 312148: {
		pThis->setWindowModality(*(Qt::WindowModality*)p1);
		break;
	}
	case 312149: {
		pThis->setWindowTitle(drvGetStringHead(p1));
		break;
	}
	case 312150: {
		*(QMessageBox::StandardButton*)p2 = pThis->standardButton((QAbstractButton*)(p1));
		break;
	}
	case 312151: {
		*(QFlags<QMessageBox::StandardButton>*)p1 = pThis->standardButtons();
		break;
	}
	case 312152: {
		*(void**)p2 = new QPixmap(QMessageBox::standardIcon(*(QMessageBox::Icon*)p1));
		break;
	}
	case 312153: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 312154: {
		*(Qt::TextFormat*)p1 = pThis->textFormat();
		break;
	}
	case 312155: {
		*(QMessageBox::StandardButton*)p6 = QMessageBox::warning((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(QFlags<QMessageBox::StandardButton>*)p4,*(QMessageBox::StandardButton*)p5);
		break;
	}
	case 312156: {
		*(int*)p7 = QMessageBox::warning((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),*(int*)p4,*(int*)p5,*(int*)p6);
		break;
	}
	case 312157: {
		*(int*)p9 = QMessageBox::warning((QWidget*)(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4),drvGetStringHead(p5),drvGetStringHead(p6),*(int*)p7,*(int*)p8);
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMimeData
int drv_QMimeData(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMimeData *pThis = (QMimeData*)_p;
	switch (funcid) {
	case 313000+1: {
		delete pThis;
		break;
	}
	case 313102: {
		*(void**)_p = new QMimeData();
		break;
	}
	case 313103: {
		pThis->clear();
		break;
	}
	case 313104: {
		*(void**)p1 = new QVariant(pThis->colorData());
		break;
	}
	case 313105: {
		drvSetByteArray(p2,pThis->data(drvGetStringHead(p1)));
		break;
	}
	case 313106: {
		drvSetStringArray(p1,pThis->formats());
		break;
	}
	case 313107: {
		*(bool*)p1 = pThis->hasColor();
		break;
	}
	case 313108: {
		*(bool*)p2 = pThis->hasFormat(drvGetStringHead(p1));
		break;
	}
	case 313109: {
		*(bool*)p1 = pThis->hasHtml();
		break;
	}
	case 313110: {
		*(bool*)p1 = pThis->hasImage();
		break;
	}
	case 313111: {
		*(bool*)p1 = pThis->hasText();
		break;
	}
	case 313112: {
		*(bool*)p1 = pThis->hasUrls();
		break;
	}
	case 313113: {
		drvSetString(p1,pThis->html());
		break;
	}
	case 313114: {
		*(void**)p1 = new QVariant(pThis->imageData());
		break;
	}
	case 313115: {
		pThis->removeFormat(drvGetStringHead(p1));
		break;
	}
	case 313116: {
		*(void**)p3 = new QVariant(pThis->retrieveData(drvGetStringHead(p1),*(QVariant::Type*)p2));
		break;
	}
	case 313117: {
		if(p1==0)return -2;
		pThis->setColorData(*(QVariant*)(p1));
		break;
	}
	case 313118: {
		pThis->setData(drvGetStringHead(p1),drvGetByteArrayHead(p2));
		break;
	}
	case 313119: {
		pThis->setHtml(drvGetStringHead(p1));
		break;
	}
	case 313120: {
		if(p1==0)return -2;
		pThis->setImageData(*(QVariant*)(p1));
		break;
	}
	case 313121: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 313122: {
		pThis->setUrls(drvGetNoObjectArrayHeadT<QUrl>(p1));
		break;
	}
	case 313123: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 313124: {
		drvSetListPtr<QUrl>(p1,182000,pThis->urls());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMouseEventTransition
int drv_QMouseEventTransition(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMouseEventTransition *pThis = (QMouseEventTransition*)_p;
	switch (funcid) {
	case 314000+1: {
		delete pThis;
		break;
	}
	case 314102: {
		*(void**)_p = new QMouseEventTransition();
		break;
	}
	case 314103: {
		*(void**)_p = new QMouseEventTransition((QState*)(p1));
		break;
	}
	case 314104: {
		*(void**)_p = new QMouseEventTransition((QObject*)(p1),*(QEvent::Type*)p2,*(Qt::MouseButton*)p3,(QState*)(p4));
		break;
	}
	case 314105: {
		*(Qt::MouseButton*)p1 = pThis->button();
		break;
	}
	case 314106: {
		*(void**)p1 = new QPainterPath(pThis->hitTestPath());
		break;
	}
	case 314107: {
		*(QFlags<Qt::KeyboardModifier>*)p1 = pThis->modifierMask();
		break;
	}
	case 314108: {
		pThis->setButton(*(Qt::MouseButton*)p1);
		break;
	}
	case 314109: {
		if(p1==0)return -2;
		pThis->setHitTestPath(*(QPainterPath*)(p1));
		break;
	}
	case 314110: {
		pThis->setModifierMask(*(QFlags<Qt::KeyboardModifier>*)p1);
		break;
	}
	default:
		return drv_QEventTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QMovie
int drv_QMovie(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QMovie *pThis = (QMovie*)_p;
	switch (funcid) {
	case 315000+1: {
		delete pThis;
		break;
	}
	case 315102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(frameChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315103: {
		UISignal18 *uis = new UISignal18(pThis);
		if (QObject::connect(pThis,SIGNAL(error(QImageReader::ImageReaderError)),uis,SLOT(call(QImageReader::ImageReaderError)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315104: {
		UISignal38 *uis = new UISignal38(pThis);
		if (QObject::connect(pThis,SIGNAL(resized(QSize const&)),uis,SLOT(call(QSize const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315105: {
		UISignal27 *uis = new UISignal27(pThis);
		if (QObject::connect(pThis,SIGNAL(stateChanged(QMovie::MovieState)),uis,SLOT(call(QMovie::MovieState)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(started()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315107: {
		UISignal34 *uis = new UISignal34(pThis);
		if (QObject::connect(pThis,SIGNAL(updated(QRect const&)),uis,SLOT(call(QRect const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315108: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(finished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 315109: {
		*(void**)_p = new QMovie();
		break;
	}
	case 315110: {
		*(void**)_p = new QMovie((QObject*)(p1));
		break;
	}
	case 315111: {
		*(void**)_p = new QMovie((QIODevice*)(p1),drvGetByteArrayHead(p2),(QObject*)(p3));
		break;
	}
	case 315112: {
		*(void**)_p = new QMovie(drvGetStringHead(p1),drvGetByteArrayHead(p2),(QObject*)(p3));
		break;
	}
	case 315113: {
		*(void**)p1 = new QColor(pThis->backgroundColor());
		break;
	}
	case 315114: {
		*(QMovie::CacheMode*)p1 = pThis->cacheMode();
		break;
	}
	case 315115: {
		*(int*)p1 = pThis->currentFrameNumber();
		break;
	}
	case 315116: {
		*(void**)p1 = new QImage(pThis->currentImage());
		break;
	}
	case 315117: {
		*(void**)p1 = new QPixmap(pThis->currentPixmap());
		break;
	}
	case 315118: {
		*(void**)p1 = pThis->device();
		break;
	}
	case 315119: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 315120: {
		drvSetByteArray(p1,pThis->format());
		break;
	}
	case 315121: {
		*(int*)p1 = pThis->frameCount();
		break;
	}
	case 315122: {
		*(void**)p1 = new QRect(pThis->frameRect());
		break;
	}
	case 315123: {
		*(bool*)p1 = pThis->isValid();
		break;
	}
	case 315124: {
		*(bool*)p2 = pThis->jumpToFrame(*(int*)p1);
		break;
	}
	case 315125: {
		*(bool*)p1 = pThis->jumpToNextFrame();
		break;
	}
	case 315126: {
		*(int*)p1 = pThis->loopCount();
		break;
	}
	case 315127: {
		*(int*)p1 = pThis->nextFrameDelay();
		break;
	}
	case 315128: {
		*(void**)p1 = new QSize(pThis->scaledSize());
		break;
	}
	case 315129: {
		if(p1==0)return -2;
		pThis->setBackgroundColor(*(QColor*)(p1));
		break;
	}
	case 315130: {
		pThis->setCacheMode(*(QMovie::CacheMode*)p1);
		break;
	}
	case 315131: {
		pThis->setDevice((QIODevice*)(p1));
		break;
	}
	case 315132: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 315133: {
		pThis->setFormat(drvGetByteArrayHead(p1));
		break;
	}
	case 315134: {
		pThis->setPaused(*(bool*)p1);
		break;
	}
	case 315135: {
		if(p1==0)return -2;
		pThis->setScaledSize(*(QSize*)(p1));
		break;
	}
	case 315136: {
		pThis->setSpeed(*(int*)p1);
		break;
	}
	case 315137: {
		*(int*)p1 = pThis->speed();
		break;
	}
	case 315138: {
		pThis->start();
		break;
	}
	case 315139: {
		*(QMovie::MovieState*)p1 = pThis->state();
		break;
	}
	case 315140: {
		pThis->stop();
		break;
	}
	case 315141: {
		drvSetBytesArray(p1,QMovie::supportedFormats());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QObject
int drv_QObject(void *_p, int funcid, void* p1,void* p2,void* p3,void*,void*,void*,void*,void*,void*,void*,void*,void*)
{
	QObject *pThis = (QObject*)_p;
	switch (funcid) {
	case 316000+1: {
		delete pThis;
		break;
	}
	case 316102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(destroyed()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 316103: {
		UISignal28 *uis = new UISignal28(pThis);
		if (QObject::connect(pThis,SIGNAL(destroyed(QObject*)),uis,SLOT(call(QObject*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 316104: {
		*(void**)_p = new QObject();
		break;
	}
	case 316105: {
		*(void**)_p = new QObject((QObject*)(p1));
		break;
	}
	case 316106: {
		*(bool*)p2 = pThis->blockSignals(*(bool*)p1);
		break;
	}
	case 316107: {
		pThis->childEvent((QChildEvent*)(p1));
		break;
	}
	case 316108: {
		drvSetObjectArray(p1,316000,pThis->children());
		break;
	}
	case 316109: {
		pThis->customEvent((QEvent*)(p1));
		break;
	}
	case 316110: {
		pThis->deleteLater();
		break;
	}
	case 316111: {
		drvSetBytesArray(p1,pThis->dynamicPropertyNames());
		break;
	}
	case 316112: {
		*(bool*)p2 = pThis->event((QEvent*)(p1));
		break;
	}
	case 316113: {
		*(void**)p2 = pThis->findChild<QObject*>(drvGetStringHead(p1));
		break;
	}
	case 316114: {
		drvSetObjectArray(p2,316000,pThis->findChildren<QObject*>(drvGetStringHead(p1)));
		break;
	}
	case 316115: {
		if(p1==0)return -2;
		drvSetObjectArray(p2,316000,pThis->findChildren<QObject*>(*(QRegExp*)(p1)));
		break;
	}
	case 316116: {
		*(bool*)p2 = pThis->inherits(drvGet_const_char(p1));
		break;
	}
	case 316117: {
		*(bool*)p1 = pThis->isWidgetType();
		break;
	}
	case 316118: {
		pThis->killTimer(*(int*)p1);
		break;
	}
	case 316119: {
		*(const void**)p1 = pThis->metaObject();
		break;
	}
	case 316120: {
		drvSetString(p1,pThis->objectName());
		break;
	}
	case 316121: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 316122: {
		*(void**)p2 = new QVariant(pThis->property(drvGet_const_char(p1)));
		break;
	}
	case 316123: {
		*(int*)p2 = pThis->receivers(drvGet_const_char(p1));
		break;
	}
	case 316124: {
		*(unsigned int*)p1 = QObject::registerUserData();
		break;
	}
	case 316125: {
		*(void**)p1 = pThis->sender();
		break;
	}
	case 316126: {
		pThis->setObjectName(drvGetStringHead(p1));
		break;
	}
	case 316127: {
		pThis->setParent((QObject*)(p1));
		break;
	}
	case 316128: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->setProperty(drvGet_const_char(p1),*(QVariant*)(p2));
		break;
	}
	case 316129: {
		*(bool*)p1 = pThis->signalsBlocked();
		break;
	}
	case 316130: {
		*(int*)p2 = pThis->startTimer(*(int*)p1);
		break;
	}
	case 316131: {
		pThis->timerEvent((QTimerEvent*)(p1));
		break;
	}
	case 316132: {
		drvSetString(p2,pThis->tr(drvGet_const_char(p1)));
		break;
	}
	case 316133: {
		drvSetString(p3,pThis->tr(drvGet_const_char(p1),drvGet_const_char(p2)));
		break;
	}
	default:
		return -1;
	}
	return 0;
}

// QObjectCleanupHandler
int drv_QObjectCleanupHandler(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QObjectCleanupHandler *pThis = (QObjectCleanupHandler*)_p;
	switch (funcid) {
	case 317000+1: {
		delete pThis;
		break;
	}
	case 317102: {
		*(void**)_p = new QObjectCleanupHandler();
		break;
	}
	case 317103: {
		*(void**)p2 = pThis->add((QObject*)(p1));
		break;
	}
	case 317104: {
		pThis->clear();
		break;
	}
	case 317105: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 317106: {
		pThis->remove((QObject*)(p1));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPanGesture
int drv_QPanGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPanGesture *pThis = (QPanGesture*)_p;
	switch (funcid) {
	case 318000+1: {
		delete pThis;
		break;
	}
	case 318102: {
		*(void**)_p = new QPanGesture();
		break;
	}
	case 318103: {
		*(void**)_p = new QPanGesture((QObject*)(p1));
		break;
	}
	case 318104: {
		*(double*)p1 = pThis->acceleration();
		break;
	}
	case 318105: {
		*(void**)p1 = new QPointF(pThis->delta());
		break;
	}
	case 318106: {
		*(void**)p1 = new QPointF(pThis->lastOffset());
		break;
	}
	case 318107: {
		*(void**)p1 = new QPointF(pThis->offset());
		break;
	}
	case 318108: {
		pThis->setAcceleration(*(double*)p1);
		break;
	}
	case 318109: {
		if(p1==0)return -2;
		pThis->setLastOffset(*(QPointF*)(p1));
		break;
	}
	case 318110: {
		if(p1==0)return -2;
		pThis->setOffset(*(QPointF*)(p1));
		break;
	}
	default:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QParallelAnimationGroup
int drv_QParallelAnimationGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QParallelAnimationGroup *pThis = (QParallelAnimationGroup*)_p;
	switch (funcid) {
	case 319000+1: {
		delete pThis;
		break;
	}
	case 319102: {
		*(void**)_p = new QParallelAnimationGroup();
		break;
	}
	case 319103: {
		*(void**)_p = new QParallelAnimationGroup((QObject*)(p1));
		break;
	}
	default:
		return drv_QAnimationGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPauseAnimation
int drv_QPauseAnimation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPauseAnimation *pThis = (QPauseAnimation*)_p;
	switch (funcid) {
	case 320000+1: {
		delete pThis;
		break;
	}
	case 320102: {
		*(void**)_p = new QPauseAnimation();
		break;
	}
	case 320103: {
		*(void**)_p = new QPauseAnimation((QObject*)(p1));
		break;
	}
	case 320104: {
		*(void**)_p = new QPauseAnimation(*(int*)p1,(QObject*)(p2));
		break;
	}
	case 320105: {
		pThis->setDuration(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPinchGesture
int drv_QPinchGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPinchGesture *pThis = (QPinchGesture*)_p;
	switch (funcid) {
	case 321000+1: {
		delete pThis;
		break;
	}
	case 321102: {
		*(void**)_p = new QPinchGesture();
		break;
	}
	case 321103: {
		*(void**)_p = new QPinchGesture((QObject*)(p1));
		break;
	}
	case 321104: {
		*(void**)p1 = new QPointF(pThis->centerPoint());
		break;
	}
	case 321105: {
		*(QFlags<QPinchGesture::ChangeFlag>*)p1 = pThis->changeFlags();
		break;
	}
	case 321106: {
		*(void**)p1 = new QPointF(pThis->lastCenterPoint());
		break;
	}
	case 321107: {
		*(double*)p1 = pThis->lastRotationAngle();
		break;
	}
	case 321108: {
		*(double*)p1 = pThis->lastScaleFactor();
		break;
	}
	case 321109: {
		*(double*)p1 = pThis->rotationAngle();
		break;
	}
	case 321110: {
		*(double*)p1 = pThis->scaleFactor();
		break;
	}
	case 321111: {
		if(p1==0)return -2;
		pThis->setCenterPoint(*(QPointF*)(p1));
		break;
	}
	case 321112: {
		pThis->setChangeFlags(*(QFlags<QPinchGesture::ChangeFlag>*)p1);
		break;
	}
	case 321113: {
		if(p1==0)return -2;
		pThis->setLastCenterPoint(*(QPointF*)(p1));
		break;
	}
	case 321114: {
		pThis->setLastRotationAngle(*(double*)p1);
		break;
	}
	case 321115: {
		pThis->setLastScaleFactor(*(double*)p1);
		break;
	}
	case 321116: {
		pThis->setRotationAngle(*(double*)p1);
		break;
	}
	case 321117: {
		pThis->setScaleFactor(*(double*)p1);
		break;
	}
	case 321118: {
		if(p1==0)return -2;
		pThis->setStartCenterPoint(*(QPointF*)(p1));
		break;
	}
	case 321119: {
		pThis->setTotalChangeFlags(*(QFlags<QPinchGesture::ChangeFlag>*)p1);
		break;
	}
	case 321120: {
		pThis->setTotalRotationAngle(*(double*)p1);
		break;
	}
	case 321121: {
		pThis->setTotalScaleFactor(*(double*)p1);
		break;
	}
	case 321122: {
		*(void**)p1 = new QPointF(pThis->startCenterPoint());
		break;
	}
	case 321123: {
		*(QFlags<QPinchGesture::ChangeFlag>*)p1 = pThis->totalChangeFlags();
		break;
	}
	case 321124: {
		*(double*)p1 = pThis->totalRotationAngle();
		break;
	}
	case 321125: {
		*(double*)p1 = pThis->totalScaleFactor();
		break;
	}
	default:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPlainTextDocumentLayout
int drv_QPlainTextDocumentLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPlainTextDocumentLayout *pThis = (QPlainTextDocumentLayout*)_p;
	switch (funcid) {
	case 322000+1: {
		delete pThis;
		break;
	}
	case 322102: {
		*(void**)_p = new QPlainTextDocumentLayout((QTextDocument*)(p1));
		break;
	}
	case 322103: {
		*(int*)p1 = pThis->cursorWidth();
		break;
	}
	case 322104: {
		if(p1==0)return -2;
		pThis->ensureBlockLayout(*(QTextBlock*)(p1));
		break;
	}
	case 322105: {
		pThis->requestUpdate();
		break;
	}
	case 322106: {
		pThis->setCursorWidth(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractTextDocumentLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPlainTextEdit
int drv_QPlainTextEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPlainTextEdit *pThis = (QPlainTextEdit*)_p;
	switch (funcid) {
	case 323000+1: {
		delete pThis;
		break;
	}
	case 323102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(copyAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323103: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(undoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(blockCountChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323105: {
		UISignal35 *uis = new UISignal35(pThis);
		if (QObject::connect(pThis,SIGNAL(updateRequest(QRect const&,int)),uis,SLOT(call(QRect const&,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(modificationChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323107: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(cursorPositionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323108: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323109: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(textChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323110: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(redoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 323111: {
		*(void**)_p = new QPlainTextEdit();
		break;
	}
	case 323112: {
		*(void**)_p = new QPlainTextEdit((QWidget*)(p1));
		break;
	}
	case 323113: {
		*(void**)_p = new QPlainTextEdit(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 323114: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->anchorAt(*(QPoint*)(p1)));
		break;
	}
	case 323115: {
		pThis->appendHtml(drvGetStringHead(p1));
		break;
	}
	case 323116: {
		pThis->appendPlainText(drvGetStringHead(p1));
		break;
	}
	case 323117: {
		*(bool*)p1 = pThis->backgroundVisible();
		break;
	}
	case 323118: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->blockBoundingGeometry(*(QTextBlock*)(p1)));
		break;
	}
	case 323119: {
		if(p1==0)return -2;
		*(void**)p2 = new QRectF(pThis->blockBoundingRect(*(QTextBlock*)(p1)));
		break;
	}
	case 323120: {
		*(int*)p1 = pThis->blockCount();
		break;
	}
	case 323121: {
		*(bool*)p2 = pThis->canInsertFromMimeData((QMimeData*)(p1));
		break;
	}
	case 323122: {
		*(bool*)p1 = pThis->canPaste();
		break;
	}
	case 323123: {
		pThis->centerCursor();
		break;
	}
	case 323124: {
		*(bool*)p1 = pThis->centerOnScroll();
		break;
	}
	case 323125: {
		pThis->clear();
		break;
	}
	case 323126: {
		*(void**)p1 = new QPointF(pThis->contentOffset());
		break;
	}
	case 323127: {
		pThis->copy();
		break;
	}
	case 323128: {
		*(void**)p1 = pThis->createMimeDataFromSelection();
		break;
	}
	case 323129: {
		*(void**)p1 = pThis->createStandardContextMenu();
		break;
	}
	case 323130: {
		*(void**)p1 = new QTextCharFormat(pThis->currentCharFormat());
		break;
	}
	case 323131: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCursor(pThis->cursorForPosition(*(QPoint*)(p1)));
		break;
	}
	case 323132: {
		*(void**)p1 = new QRect(pThis->cursorRect());
		break;
	}
	case 323133: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->cursorRect(*(QTextCursor*)(p1)));
		break;
	}
	case 323134: {
		*(int*)p1 = pThis->cursorWidth();
		break;
	}
	case 323135: {
		pThis->cut();
		break;
	}
	case 323136: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 323137: {
		drvSetString(p1,pThis->documentTitle());
		break;
	}
	case 323138: {
		pThis->ensureCursorVisible();
		break;
	}
	case 323139: {
		drvSetListPtr<QTextEdit::ExtraSelection>(p1,151000,pThis->extraSelections());
		break;
	}
	case 323140: {
		*(bool*)p2 = pThis->find(drvGetStringHead(p1));
		break;
	}
	case 323141: {
		*(bool*)p3 = pThis->find(drvGetStringHead(p1),*(QFlags<QTextDocument::FindFlag>*)p2);
		break;
	}
	case 323142: {
		*(void**)p1 = new QTextBlock(pThis->firstVisibleBlock());
		break;
	}
	case 323143: {
		*(void**)p1 = new QAbstractTextDocumentLayout::PaintContext(pThis->getPaintContext());
		break;
	}
	case 323144: {
		pThis->insertFromMimeData((QMimeData*)(p1));
		break;
	}
	case 323145: {
		pThis->insertPlainText(drvGetStringHead(p1));
		break;
	}
	case 323146: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 323147: {
		*(bool*)p1 = pThis->isUndoRedoEnabled();
		break;
	}
	case 323148: {
		*(QPlainTextEdit::LineWrapMode*)p1 = pThis->lineWrapMode();
		break;
	}
	case 323149: {
		if(p2==0)return -2;
		*(void**)p3 = new QVariant(pThis->loadResource(*(int*)p1,*(QUrl*)(p2)));
		break;
	}
	case 323150: {
		*(int*)p1 = pThis->maximumBlockCount();
		break;
	}
	case 323151: {
		if(p1==0)return -2;
		pThis->mergeCurrentCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 323152: {
		pThis->moveCursor(*(QTextCursor::MoveOperation*)p1);
		break;
	}
	case 323153: {
		pThis->moveCursor(*(QTextCursor::MoveOperation*)p1,*(QTextCursor::MoveMode*)p2);
		break;
	}
	case 323154: {
		*(bool*)p1 = pThis->overwriteMode();
		break;
	}
	case 323155: {
		pThis->paste();
		break;
	}
	case 323156: {
		pThis->print((QPrinter*)(p1));
		break;
	}
	case 323157: {
		pThis->redo();
		break;
	}
	case 323158: {
		pThis->selectAll();
		break;
	}
	case 323159: {
		pThis->setBackgroundVisible(*(bool*)p1);
		break;
	}
	case 323160: {
		pThis->setCenterOnScroll(*(bool*)p1);
		break;
	}
	case 323161: {
		if(p1==0)return -2;
		pThis->setCurrentCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 323162: {
		pThis->setCursorWidth(*(int*)p1);
		break;
	}
	case 323163: {
		pThis->setDocument((QTextDocument*)(p1));
		break;
	}
	case 323164: {
		pThis->setDocumentTitle(drvGetStringHead(p1));
		break;
	}
	case 323165: {
		pThis->setExtraSelections(drvGetNoObjectArrayHeadT<QTextEdit::ExtraSelection>(p1));
		break;
	}
	case 323166: {
		pThis->setLineWrapMode(*(QPlainTextEdit::LineWrapMode*)p1);
		break;
	}
	case 323167: {
		pThis->setMaximumBlockCount(*(int*)p1);
		break;
	}
	case 323168: {
		pThis->setOverwriteMode(*(bool*)p1);
		break;
	}
	case 323169: {
		pThis->setPlainText(drvGetStringHead(p1));
		break;
	}
	case 323170: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 323171: {
		pThis->setTabChangesFocus(*(bool*)p1);
		break;
	}
	case 323172: {
		pThis->setTabStopWidth(*(int*)p1);
		break;
	}
	case 323173: {
		if(p1==0)return -2;
		pThis->setTextCursor(*(QTextCursor*)(p1));
		break;
	}
	case 323174: {
		pThis->setTextInteractionFlags(*(QFlags<Qt::TextInteractionFlag>*)p1);
		break;
	}
	case 323175: {
		pThis->setUndoRedoEnabled(*(bool*)p1);
		break;
	}
	case 323176: {
		pThis->setWordWrapMode(*(QTextOption::WrapMode*)p1);
		break;
	}
	case 323177: {
		*(bool*)p1 = pThis->tabChangesFocus();
		break;
	}
	case 323178: {
		*(int*)p1 = pThis->tabStopWidth();
		break;
	}
	case 323179: {
		*(void**)p1 = new QTextCursor(pThis->textCursor());
		break;
	}
	case 323180: {
		*(QFlags<Qt::TextInteractionFlag>*)p1 = pThis->textInteractionFlags();
		break;
	}
	case 323181: {
		drvSetString(p1,pThis->toPlainText());
		break;
	}
	case 323182: {
		pThis->undo();
		break;
	}
	case 323183: {
		*(QTextOption::WrapMode*)p1 = pThis->wordWrapMode();
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPluginLoader
int drv_QPluginLoader(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPluginLoader *pThis = (QPluginLoader*)_p;
	switch (funcid) {
	case 324000+1: {
		delete pThis;
		break;
	}
	case 324102: {
		*(void**)_p = new QPluginLoader();
		break;
	}
	case 324103: {
		*(void**)_p = new QPluginLoader((QObject*)(p1));
		break;
	}
	case 324104: {
		*(void**)_p = new QPluginLoader(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 324105: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 324106: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 324107: {
		*(void**)p1 = pThis->instance();
		break;
	}
	case 324108: {
		*(bool*)p1 = pThis->isLoaded();
		break;
	}
	case 324109: {
		*(bool*)p1 = pThis->load();
		break;
	}
	case 324110: {
		*(QFlags<QLibrary::LoadHint>*)p1 = pThis->loadHints();
		break;
	}
	case 324111: {
		pThis->setFileName(drvGetStringHead(p1));
		break;
	}
	case 324112: {
		pThis->setLoadHints(*(QFlags<QLibrary::LoadHint>*)p1);
		break;
	}
	case 324113: {
		drvSetObjectArray(p1,316000,QPluginLoader::staticInstances());
		break;
	}
	case 324114: {
		*(bool*)p1 = pThis->unload();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPrintDialog
int drv_QPrintDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPrintDialog *pThis = (QPrintDialog*)_p;
	switch (funcid) {
	case 325000+1: {
		delete pThis;
		break;
	}
	case 325102: {
		UISignal31 *uis = new UISignal31(pThis);
		if (QObject::connect(pThis,SIGNAL(accepted(QPrinter*)),uis,SLOT(call(QPrinter*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 325103: {
		*(void**)_p = new QPrintDialog();
		break;
	}
	case 325104: {
		*(void**)_p = new QPrintDialog((QWidget*)(p1));
		break;
	}
	case 325105: {
		*(void**)_p = new QPrintDialog((QPrinter*)(p1),(QWidget*)(p2));
		break;
	}
	case 325106: {
		pThis->accepted();
		break;
	}
	case 325107: {
		pThis->open();
		break;
	}
	case 325108: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 325109: {
		*(QFlags<QAbstractPrintDialog::PrintDialogOption>*)p1 = pThis->options();
		break;
	}
	case 325110: {
		pThis->setOption(*(QAbstractPrintDialog::PrintDialogOption*)p1);
		break;
	}
	case 325111: {
		pThis->setOption(*(QAbstractPrintDialog::PrintDialogOption*)p1,*(bool*)p2);
		break;
	}
	case 325112: {
		pThis->setOptions(*(QFlags<QAbstractPrintDialog::PrintDialogOption>*)p1);
		break;
	}
	case 325113: {
		*(bool*)p2 = pThis->testOption(*(QAbstractPrintDialog::PrintDialogOption*)p1);
		break;
	}
	default:
		return drv_QAbstractPrintDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPrintPreviewDialog
int drv_QPrintPreviewDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPrintPreviewDialog *pThis = (QPrintPreviewDialog*)_p;
	switch (funcid) {
	case 326000+1: {
		delete pThis;
		break;
	}
	case 326102: {
		UISignal31 *uis = new UISignal31(pThis);
		if (QObject::connect(pThis,SIGNAL(paintRequested(QPrinter*)),uis,SLOT(call(QPrinter*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 326103: {
		*(void**)_p = new QPrintPreviewDialog();
		break;
	}
	case 326104: {
		*(void**)_p = new QPrintPreviewDialog((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 326105: {
		*(void**)_p = new QPrintPreviewDialog((QPrinter*)(p1),(QWidget*)(p2),*(QFlags<Qt::WindowType>*)p3);
		break;
	}
	case 326106: {
		pThis->open();
		break;
	}
	case 326107: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 326108: {
		*(void**)p1 = pThis->printer();
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPrintPreviewWidget
int drv_QPrintPreviewWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPrintPreviewWidget *pThis = (QPrintPreviewWidget*)_p;
	switch (funcid) {
	case 327000+1: {
		delete pThis;
		break;
	}
	case 327102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(previewChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 327103: {
		UISignal31 *uis = new UISignal31(pThis);
		if (QObject::connect(pThis,SIGNAL(paintRequested(QPrinter*)),uis,SLOT(call(QPrinter*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 327104: {
		*(void**)_p = new QPrintPreviewWidget();
		break;
	}
	case 327105: {
		*(void**)_p = new QPrintPreviewWidget((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 327106: {
		*(void**)_p = new QPrintPreviewWidget((QPrinter*)(p1),(QWidget*)(p2),*(QFlags<Qt::WindowType>*)p3);
		break;
	}
	case 327107: {
		*(int*)p1 = pThis->currentPage();
		break;
	}
	case 327108: {
		pThis->fitInView();
		break;
	}
	case 327109: {
		pThis->fitToWidth();
		break;
	}
	case 327110: {
		*(QPrinter::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 327111: {
		*(int*)p1 = pThis->pageCount();
		break;
	}
	case 327112: {
		pThis->print();
		break;
	}
	case 327113: {
		pThis->setAllPagesViewMode();
		break;
	}
	case 327114: {
		pThis->setCurrentPage(*(int*)p1);
		break;
	}
	case 327115: {
		pThis->setFacingPagesViewMode();
		break;
	}
	case 327116: {
		pThis->setLandscapeOrientation();
		break;
	}
	case 327117: {
		pThis->setOrientation(*(QPrinter::Orientation*)p1);
		break;
	}
	case 327118: {
		pThis->setPortraitOrientation();
		break;
	}
	case 327119: {
		pThis->setSinglePageViewMode();
		break;
	}
	case 327120: {
		pThis->setViewMode(*(QPrintPreviewWidget::ViewMode*)p1);
		break;
	}
	case 327121: {
		pThis->setZoomFactor(*(double*)p1);
		break;
	}
	case 327122: {
		pThis->setZoomMode(*(QPrintPreviewWidget::ZoomMode*)p1);
		break;
	}
	case 327123: {
		pThis->updatePreview();
		break;
	}
	case 327124: {
		*(QPrintPreviewWidget::ViewMode*)p1 = pThis->viewMode();
		break;
	}
	case 327125: {
		*(double*)p1 = pThis->zoomFactor();
		break;
	}
	case 327126: {
		pThis->zoomIn();
		break;
	}
	case 327127: {
		pThis->zoomIn(*(double*)p1);
		break;
	}
	case 327128: {
		*(QPrintPreviewWidget::ZoomMode*)p1 = pThis->zoomMode();
		break;
	}
	case 327129: {
		pThis->zoomOut();
		break;
	}
	case 327130: {
		pThis->zoomOut(*(double*)p1);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QProcess
int drv_QProcess(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QProcess *pThis = (QProcess*)_p;
	switch (funcid) {
	case 328000+1: {
		delete pThis;
		break;
	}
	case 328102: {
		UISignal32 *uis = new UISignal32(pThis);
		if (QObject::connect(pThis,SIGNAL(error(QProcess::ProcessError)),uis,SLOT(call(QProcess::ProcessError)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(readyReadStandardError()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328104: {
		UISignal33 *uis = new UISignal33(pThis);
		if (QObject::connect(pThis,SIGNAL(stateChanged(QProcess::ProcessState)),uis,SLOT(call(QProcess::ProcessState)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(started()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(readyReadStandardOutput()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328107: {
		UISignal70 *uis = new UISignal70(pThis);
		if (QObject::connect(pThis,SIGNAL(finished(int,QProcess::ExitStatus)),uis,SLOT(call(int,QProcess::ExitStatus)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328108: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(finished(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 328109: {
		*(void**)_p = new QProcess();
		break;
	}
	case 328110: {
		*(void**)_p = new QProcess((QObject*)(p1));
		break;
	}
	case 328111: {
		pThis->closeReadChannel(*(QProcess::ProcessChannel*)p1);
		break;
	}
	case 328112: {
		pThis->closeWriteChannel();
		break;
	}
	case 328113: {
		drvSetStringArray(p1,pThis->environment());
		break;
	}
	case 328114: {
		*(QProcess::ProcessError*)p1 = pThis->error();
		break;
	}
	case 328115: {
		*(int*)p2 = QProcess::execute(drvGetStringHead(p1));
		break;
	}
	case 328116: {
		*(int*)p3 = QProcess::execute(drvGetStringHead(p1),drvGetStringArray(p2));
		break;
	}
	case 328117: {
		*(int*)p1 = pThis->exitCode();
		break;
	}
	case 328118: {
		*(QProcess::ExitStatus*)p1 = pThis->exitStatus();
		break;
	}
	case 328119: {
		pThis->kill();
		break;
	}
	case 328120: {
		*(QProcess::ProcessChannelMode*)p1 = pThis->processChannelMode();
		break;
	}
	case 328121: {
		*(void**)p1 = new QProcessEnvironment(pThis->processEnvironment());
		break;
	}
	case 328122: {
		drvSetByteArray(p1,pThis->readAllStandardError());
		break;
	}
	case 328123: {
		drvSetByteArray(p1,pThis->readAllStandardOutput());
		break;
	}
	case 328124: {
		*(QProcess::ProcessChannel*)p1 = pThis->readChannel();
		break;
	}
	case 328125: {
		*(QProcess::ProcessChannelMode*)p1 = pThis->readChannelMode();
		break;
	}
	case 328126: {
		pThis->setEnvironment(drvGetStringArray(p1));
		break;
	}
	case 328127: {
		pThis->setProcessChannelMode(*(QProcess::ProcessChannelMode*)p1);
		break;
	}
	case 328128: {
		if(p1==0)return -2;
		pThis->setProcessEnvironment(*(QProcessEnvironment*)(p1));
		break;
	}
	case 328129: {
		pThis->setProcessState(*(QProcess::ProcessState*)p1);
		break;
	}
	case 328130: {
		pThis->setReadChannel(*(QProcess::ProcessChannel*)p1);
		break;
	}
	case 328131: {
		pThis->setReadChannelMode(*(QProcess::ProcessChannelMode*)p1);
		break;
	}
	case 328132: {
		pThis->setStandardErrorFile(drvGetStringHead(p1));
		break;
	}
	case 328133: {
		pThis->setStandardErrorFile(drvGetStringHead(p1),*(QFlags<QIODevice::OpenModeFlag>*)p2);
		break;
	}
	case 328134: {
		pThis->setStandardInputFile(drvGetStringHead(p1));
		break;
	}
	case 328135: {
		pThis->setStandardOutputFile(drvGetStringHead(p1));
		break;
	}
	case 328136: {
		pThis->setStandardOutputFile(drvGetStringHead(p1),*(QFlags<QIODevice::OpenModeFlag>*)p2);
		break;
	}
	case 328137: {
		pThis->setStandardOutputProcess((QProcess*)(p1));
		break;
	}
	case 328138: {
		pThis->setWorkingDirectory(drvGetStringHead(p1));
		break;
	}
	case 328139: {
		pThis->setupChildProcess();
		break;
	}
	case 328140: {
		pThis->start(drvGetStringHead(p1));
		break;
	}
	case 328141: {
		pThis->start(drvGetStringHead(p1),*(QFlags<QIODevice::OpenModeFlag>*)p2);
		break;
	}
	case 328142: {
		pThis->start(drvGetStringHead(p1),drvGetStringArray(p2),*(QFlags<QIODevice::OpenModeFlag>*)p3);
		break;
	}
	case 328143: {
		*(bool*)p2 = QProcess::startDetached(drvGetStringHead(p1));
		break;
	}
	case 328144: {
		*(bool*)p3 = QProcess::startDetached(drvGetStringHead(p1),drvGetStringArray(p2));
		break;
	}
	case 328145: {
		*(bool*)p5 = QProcess::startDetached(drvGetStringHead(p1),drvGetStringArray(p2),drvGetStringHead(p3),*(qint64**)p4);
		break;
	}
	case 328146: {
		*(QProcess::ProcessState*)p1 = pThis->state();
		break;
	}
	case 328147: {
		drvSetStringArray(p1,QProcess::systemEnvironment());
		break;
	}
	case 328148: {
		pThis->terminate();
		break;
	}
	case 328149: {
		*(bool*)p1 = pThis->waitForBytesWritten();
		break;
	}
	case 328150: {
		*(bool*)p1 = pThis->waitForFinished();
		break;
	}
	case 328151: {
		*(bool*)p2 = pThis->waitForFinished(*(int*)p1);
		break;
	}
	case 328152: {
		*(bool*)p1 = pThis->waitForReadyRead();
		break;
	}
	case 328153: {
		*(bool*)p1 = pThis->waitForStarted();
		break;
	}
	case 328154: {
		*(bool*)p2 = pThis->waitForStarted(*(int*)p1);
		break;
	}
	case 328155: {
		drvSetString(p1,pThis->workingDirectory());
		break;
	}
	default:
		return drv_QIODevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QProgressBar
int drv_QProgressBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QProgressBar *pThis = (QProgressBar*)_p;
	switch (funcid) {
	case 329000+1: {
		delete pThis;
		break;
	}
	case 329102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 329103: {
		*(void**)_p = new QProgressBar();
		break;
	}
	case 329104: {
		*(void**)_p = new QProgressBar((QWidget*)(p1));
		break;
	}
	case 329105: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 329106: {
		drvSetString(p1,pThis->format());
		break;
	}
	case 329107: {
		*(bool*)p1 = pThis->invertedAppearance();
		break;
	}
	case 329108: {
		*(bool*)p1 = pThis->isTextVisible();
		break;
	}
	case 329109: {
		*(int*)p1 = pThis->maximum();
		break;
	}
	case 329110: {
		*(int*)p1 = pThis->minimum();
		break;
	}
	case 329111: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 329112: {
		pThis->reset();
		break;
	}
	case 329113: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 329114: {
		pThis->setFormat(drvGetStringHead(p1));
		break;
	}
	case 329115: {
		pThis->setInvertedAppearance(*(bool*)p1);
		break;
	}
	case 329116: {
		pThis->setMaximum(*(int*)p1);
		break;
	}
	case 329117: {
		pThis->setMinimum(*(int*)p1);
		break;
	}
	case 329118: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 329119: {
		pThis->setRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 329120: {
		pThis->setTextDirection(*(QProgressBar::Direction*)p1);
		break;
	}
	case 329121: {
		pThis->setTextVisible(*(bool*)p1);
		break;
	}
	case 329122: {
		pThis->setValue(*(int*)p1);
		break;
	}
	case 329123: {
		drvSetString(p1,pThis->text());
		break;
	}
	case 329124: {
		*(QProgressBar::Direction*)p1 = pThis->textDirection();
		break;
	}
	case 329125: {
		*(int*)p1 = pThis->value();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QProgressDialog
int drv_QProgressDialog(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QProgressDialog *pThis = (QProgressDialog*)_p;
	switch (funcid) {
	case 330000+1: {
		delete pThis;
		break;
	}
	case 330102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(canceled()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 330103: {
		*(void**)_p = new QProgressDialog();
		break;
	}
	case 330104: {
		*(void**)_p = new QProgressDialog((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 330105: {
		*(void**)_p = new QProgressDialog(drvGetStringHead(p1),drvGetStringHead(p2),*(int*)p3,*(int*)p4,(QWidget*)(p5),*(QFlags<Qt::WindowType>*)p6);
		break;
	}
	case 330106: {
		*(bool*)p1 = pThis->autoClose();
		break;
	}
	case 330107: {
		*(bool*)p1 = pThis->autoReset();
		break;
	}
	case 330108: {
		pThis->cancel();
		break;
	}
	case 330109: {
		pThis->forceShow();
		break;
	}
	case 330110: {
		drvSetString(p1,pThis->labelText());
		break;
	}
	case 330111: {
		*(int*)p1 = pThis->maximum();
		break;
	}
	case 330112: {
		*(int*)p1 = pThis->minimum();
		break;
	}
	case 330113: {
		*(int*)p1 = pThis->minimumDuration();
		break;
	}
	case 330114: {
		pThis->open();
		break;
	}
	case 330115: {
		pThis->open((QObject*)(p1),drvGet_const_char(p2));
		break;
	}
	case 330116: {
		pThis->reset();
		break;
	}
	case 330117: {
		pThis->setAutoClose(*(bool*)p1);
		break;
	}
	case 330118: {
		pThis->setAutoReset(*(bool*)p1);
		break;
	}
	case 330119: {
		pThis->setBar((QProgressBar*)(p1));
		break;
	}
	case 330120: {
		pThis->setCancelButton((QPushButton*)(p1));
		break;
	}
	case 330121: {
		pThis->setCancelButtonText(drvGetStringHead(p1));
		break;
	}
	case 330122: {
		pThis->setLabel((QLabel*)(p1));
		break;
	}
	case 330123: {
		pThis->setLabelText(drvGetStringHead(p1));
		break;
	}
	case 330124: {
		pThis->setMaximum(*(int*)p1);
		break;
	}
	case 330125: {
		pThis->setMinimum(*(int*)p1);
		break;
	}
	case 330126: {
		pThis->setMinimumDuration(*(int*)p1);
		break;
	}
	case 330127: {
		pThis->setRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 330128: {
		pThis->setValue(*(int*)p1);
		break;
	}
	case 330129: {
		*(int*)p1 = pThis->value();
		break;
	}
	case 330130: {
		*(bool*)p1 = pThis->wasCanceled();
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPropertyAnimation
int drv_QPropertyAnimation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPropertyAnimation *pThis = (QPropertyAnimation*)_p;
	switch (funcid) {
	case 331000+1: {
		delete pThis;
		break;
	}
	case 331102: {
		*(void**)_p = new QPropertyAnimation();
		break;
	}
	case 331103: {
		*(void**)_p = new QPropertyAnimation((QObject*)(p1));
		break;
	}
	case 331104: {
		*(void**)_p = new QPropertyAnimation((QObject*)(p1),drvGetByteArrayHead(p2),(QObject*)(p3));
		break;
	}
	case 331105: {
		drvSetByteArray(p1,pThis->propertyName());
		break;
	}
	case 331106: {
		pThis->setPropertyName(drvGetByteArrayHead(p1));
		break;
	}
	case 331107: {
		pThis->setTargetObject((QObject*)(p1));
		break;
	}
	case 331108: {
		*(void**)p1 = pThis->targetObject();
		break;
	}
	default:
		return drv_QVariantAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QProxyStyle
int drv_QProxyStyle(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QProxyStyle *pThis = (QProxyStyle*)_p;
	switch (funcid) {
	case 332000+1: {
		delete pThis;
		break;
	}
	case 332102: {
		*(void**)_p = new QProxyStyle();
		break;
	}
	case 332103: {
		*(void**)_p = new QProxyStyle((QStyle*)(p1));
		break;
	}
	case 332104: {
		*(void**)p1 = pThis->baseStyle();
		break;
	}
	case 332105: {
		pThis->setBaseStyle((QStyle*)(p1));
		break;
	}
	default:
		return drv_QCommonStyle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QPushButton
int drv_QPushButton(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QPushButton *pThis = (QPushButton*)_p;
	switch (funcid) {
	case 333000+1: {
		delete pThis;
		break;
	}
	case 333102: {
		*(void**)_p = new QPushButton();
		break;
	}
	case 333103: {
		*(void**)_p = new QPushButton((QWidget*)(p1));
		break;
	}
	case 333104: {
		*(void**)_p = new QPushButton(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 333105: {
		if(p1==0)return -2;
		*(void**)_p = new QPushButton(*(QIcon*)(p1),drvGetStringHead(p2),(QWidget*)(p3));
		break;
	}
	case 333106: {
		*(bool*)p1 = pThis->autoDefault();
		break;
	}
	case 333107: {
		*(bool*)p1 = pThis->isDefault();
		break;
	}
	case 333108: {
		*(bool*)p1 = pThis->isFlat();
		break;
	}
	case 333109: {
		*(void**)p1 = pThis->menu();
		break;
	}
	case 333110: {
		pThis->setAutoDefault(*(bool*)p1);
		break;
	}
	case 333111: {
		pThis->setDefault(*(bool*)p1);
		break;
	}
	case 333112: {
		pThis->setFlat(*(bool*)p1);
		break;
	}
	case 333113: {
		pThis->setMenu((QMenu*)(p1));
		break;
	}
	case 333114: {
		pThis->showMenu();
		break;
	}
	default:
		return drv_QAbstractButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QRadioButton
int drv_QRadioButton(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QRadioButton *pThis = (QRadioButton*)_p;
	switch (funcid) {
	case 334000+1: {
		delete pThis;
		break;
	}
	case 334102: {
		*(void**)_p = new QRadioButton();
		break;
	}
	case 334103: {
		*(void**)_p = new QRadioButton((QWidget*)(p1));
		break;
	}
	case 334104: {
		*(void**)_p = new QRadioButton(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	default:
		return drv_QAbstractButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QRegExpValidator
int drv_QRegExpValidator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QRegExpValidator *pThis = (QRegExpValidator*)_p;
	switch (funcid) {
	case 335000+1: {
		delete pThis;
		break;
	}
	case 335102: {
		*(void**)_p = new QRegExpValidator();
		break;
	}
	case 335103: {
		*(void**)_p = new QRegExpValidator((QObject*)(p1));
		break;
	}
	case 335104: {
		if(p1==0)return -2;
		*(void**)_p = new QRegExpValidator(*(QRegExp*)(p1),(QObject*)(p2));
		break;
	}
	case 335105: {
		*(const void**)p1 = new QRegExp(pThis->regExp());
		break;
	}
	case 335106: {
		if(p1==0)return -2;
		pThis->setRegExp(*(QRegExp*)(p1));
		break;
	}
	default:
		return drv_QValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QRubberBand
int drv_QRubberBand(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QRubberBand *pThis = (QRubberBand*)_p;
	switch (funcid) {
	case 336000+1: {
		delete pThis;
		break;
	}
	case 336102: {
		*(void**)_p = new QRubberBand(*(QRubberBand::Shape*)p1,(QWidget*)(p2));
		break;
	}
	case 336103: {
		if(p1==0)return -2;
		pThis->move(*(QPoint*)(p1));
		break;
	}
	case 336104: {
		pThis->move(*(int*)p1,*(int*)p2);
		break;
	}
	case 336105: {
		if(p1==0)return -2;
		pThis->resize(*(QSize*)(p1));
		break;
	}
	case 336106: {
		pThis->resize(*(int*)p1,*(int*)p2);
		break;
	}
	case 336107: {
		if(p1==0)return -2;
		pThis->setGeometry(*(QRect*)(p1));
		break;
	}
	case 336108: {
		pThis->setGeometry(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 336109: {
		*(QRubberBand::Shape*)p1 = pThis->shape();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QScrollArea
int drv_QScrollArea(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QScrollArea *pThis = (QScrollArea*)_p;
	switch (funcid) {
	case 337000+1: {
		delete pThis;
		break;
	}
	case 337102: {
		*(void**)_p = new QScrollArea();
		break;
	}
	case 337103: {
		*(void**)_p = new QScrollArea((QWidget*)(p1));
		break;
	}
	case 337104: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 337105: {
		pThis->ensureVisible(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 337106: {
		pThis->ensureWidgetVisible((QWidget*)(p1));
		break;
	}
	case 337107: {
		pThis->ensureWidgetVisible((QWidget*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 337108: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 337109: {
		pThis->setWidget((QWidget*)(p1));
		break;
	}
	case 337110: {
		pThis->setWidgetResizable(*(bool*)p1);
		break;
	}
	case 337111: {
		*(void**)p1 = pThis->takeWidget();
		break;
	}
	case 337112: {
		*(void**)p1 = pThis->widget();
		break;
	}
	case 337113: {
		*(bool*)p1 = pThis->widgetResizable();
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QScrollBar
int drv_QScrollBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QScrollBar *pThis = (QScrollBar*)_p;
	switch (funcid) {
	case 338000+1: {
		delete pThis;
		break;
	}
	case 338102: {
		*(void**)_p = new QScrollBar();
		break;
	}
	case 338103: {
		*(void**)_p = new QScrollBar((QWidget*)(p1));
		break;
	}
	case 338104: {
		*(void**)_p = new QScrollBar(*(Qt::Orientation*)p1,(QWidget*)(p2));
		break;
	}
	default:
		return drv_QAbstractSlider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSequentialAnimationGroup
int drv_QSequentialAnimationGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSequentialAnimationGroup *pThis = (QSequentialAnimationGroup*)_p;
	switch (funcid) {
	case 339000+1: {
		delete pThis;
		break;
	}
	case 339102: {
		UISignal2 *uis = new UISignal2(pThis);
		if (QObject::connect(pThis,SIGNAL(currentAnimationChanged(QAbstractAnimation*)),uis,SLOT(call(QAbstractAnimation*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 339103: {
		*(void**)_p = new QSequentialAnimationGroup();
		break;
	}
	case 339104: {
		*(void**)_p = new QSequentialAnimationGroup((QObject*)(p1));
		break;
	}
	case 339105: {
		*(void**)p2 = pThis->addPause(*(int*)p1);
		break;
	}
	case 339106: {
		*(void**)p1 = pThis->currentAnimation();
		break;
	}
	case 339107: {
		*(void**)p3 = pThis->insertPause(*(int*)p1,*(int*)p2);
		break;
	}
	default:
		return drv_QAnimationGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSessionManager
int drv_QSessionManager(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSessionManager *pThis = (QSessionManager*)_p;
	switch (funcid) {
	case 340102: {
		*(bool*)p1 = pThis->allowsErrorInteraction();
		break;
	}
	case 340103: {
		*(bool*)p1 = pThis->allowsInteraction();
		break;
	}
	case 340104: {
		pThis->cancel();
		break;
	}
	case 340105: {
		drvSetStringArray(p1,pThis->discardCommand());
		break;
	}
	case 340106: {
		*(bool*)p1 = pThis->isPhase2();
		break;
	}
	case 340107: {
		pThis->release();
		break;
	}
	case 340108: {
		pThis->requestPhase2();
		break;
	}
	case 340109: {
		drvSetStringArray(p1,pThis->restartCommand());
		break;
	}
	case 340110: {
		*(QSessionManager::RestartHint*)p1 = pThis->restartHint();
		break;
	}
	case 340111: {
		drvSetString(p1,pThis->sessionId());
		break;
	}
	case 340112: {
		drvSetString(p1,pThis->sessionKey());
		break;
	}
	case 340113: {
		pThis->setDiscardCommand(drvGetStringArray(p1));
		break;
	}
	case 340114: {
		pThis->setManagerProperty(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 340115: {
		pThis->setManagerProperty(drvGetStringHead(p1),drvGetStringArray(p2));
		break;
	}
	case 340116: {
		pThis->setRestartCommand(drvGetStringArray(p1));
		break;
	}
	case 340117: {
		pThis->setRestartHint(*(QSessionManager::RestartHint*)p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSettings
int drv_QSettings(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSettings *pThis = (QSettings*)_p;
	switch (funcid) {
	case 341000+1: {
		delete pThis;
		break;
	}
	case 341102: {
		*(void**)_p = new QSettings();
		break;
	}
	case 341103: {
		*(void**)_p = new QSettings((QObject*)(p1));
		break;
	}
	case 341104: {
		*(void**)_p = new QSettings(drvGetStringHead(p1),*(QSettings::Format*)p2,(QObject*)(p3));
		break;
	}
	case 341105: {
		*(void**)_p = new QSettings(drvGetStringHead(p1),drvGetStringHead(p2),(QObject*)(p3));
		break;
	}
	case 341106: {
		*(void**)_p = new QSettings(*(QSettings::Scope*)p1,drvGetStringHead(p2),drvGetStringHead(p3),(QObject*)(p4));
		break;
	}
	case 341107: {
		*(void**)_p = new QSettings(*(QSettings::Format*)p1,*(QSettings::Scope*)p2,drvGetStringHead(p3),drvGetStringHead(p4),(QObject*)(p5));
		break;
	}
	case 341108: {
		drvSetStringArray(p1,pThis->allKeys());
		break;
	}
	case 341109: {
		drvSetString(p1,pThis->applicationName());
		break;
	}
	case 341110: {
		pThis->beginGroup(drvGetStringHead(p1));
		break;
	}
	case 341111: {
		*(int*)p2 = pThis->beginReadArray(drvGetStringHead(p1));
		break;
	}
	case 341112: {
		pThis->beginWriteArray(drvGetStringHead(p1));
		break;
	}
	case 341113: {
		pThis->beginWriteArray(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	case 341114: {
		drvSetStringArray(p1,pThis->childGroups());
		break;
	}
	case 341115: {
		drvSetStringArray(p1,pThis->childKeys());
		break;
	}
	case 341116: {
		pThis->clear();
		break;
	}
	case 341117: {
		*(bool*)p2 = pThis->contains(drvGetStringHead(p1));
		break;
	}
	case 341118: {
		*(QSettings::Format*)p1 = QSettings::defaultFormat();
		break;
	}
	case 341119: {
		pThis->endArray();
		break;
	}
	case 341120: {
		pThis->endGroup();
		break;
	}
	case 341121: {
		*(bool*)p1 = pThis->fallbacksEnabled();
		break;
	}
	case 341122: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 341123: {
		*(QSettings::Format*)p1 = pThis->format();
		break;
	}
	case 341124: {
		drvSetString(p1,pThis->group());
		break;
	}
	case 341125: {
		*(void**)p1 = pThis->iniCodec();
		break;
	}
	case 341126: {
		*(bool*)p1 = pThis->isWritable();
		break;
	}
	case 341127: {
		drvSetString(p1,pThis->organizationName());
		break;
	}
	case 341128: {
		pThis->remove(drvGetStringHead(p1));
		break;
	}
	case 341129: {
		*(QSettings::Scope*)p1 = pThis->scope();
		break;
	}
	case 341130: {
		pThis->setArrayIndex(*(int*)p1);
		break;
	}
	case 341131: {
		QSettings::setDefaultFormat(*(QSettings::Format*)p1);
		break;
	}
	case 341132: {
		pThis->setFallbacksEnabled(*(bool*)p1);
		break;
	}
	case 341133: {
		pThis->setIniCodec((QTextCodec*)(p1));
		break;
	}
	case 341134: {
		pThis->setIniCodec(drvGet_const_char(p1));
		break;
	}
	case 341135: {
		QSettings::setPath(*(QSettings::Format*)p1,*(QSettings::Scope*)p2,drvGetStringHead(p3));
		break;
	}
	case 341136: {
		QSettings::setSystemIniPath(drvGetStringHead(p1));
		break;
	}
	case 341137: {
		QSettings::setUserIniPath(drvGetStringHead(p1));
		break;
	}
	case 341138: {
		if(p2==0)return -2;
		pThis->setValue(drvGetStringHead(p1),*(QVariant*)(p2));
		break;
	}
	case 341139: {
		*(QSettings::Status*)p1 = pThis->status();
		break;
	}
	case 341140: {
		pThis->sync();
		break;
	}
	case 341141: {
		*(void**)p2 = new QVariant(pThis->value(drvGetStringHead(p1)));
		break;
	}
	case 341142: {
		*(void**)p3 = new QVariant(pThis->value(drvGetStringHead(p1),p2==0?QVariant():*(QVariant*)(p2)));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSharedMemory
int drv_QSharedMemory(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSharedMemory *pThis = (QSharedMemory*)_p;
	switch (funcid) {
	case 342000+1: {
		delete pThis;
		break;
	}
	case 342102: {
		*(void**)_p = new QSharedMemory();
		break;
	}
	case 342103: {
		*(void**)_p = new QSharedMemory((QObject*)(p1));
		break;
	}
	case 342104: {
		*(void**)_p = new QSharedMemory(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 342105: {
		*(bool*)p1 = pThis->attach();
		break;
	}
	case 342106: {
		*(bool*)p2 = pThis->attach(*(QSharedMemory::AccessMode*)p1);
		break;
	}
	case 342107: {
		*(void const**)p1 = pThis->constData();
		break;
	}
	case 342108: {
		*(bool*)p2 = pThis->create(*(int*)p1);
		break;
	}
	case 342109: {
		*(bool*)p3 = pThis->create(*(int*)p1,*(QSharedMemory::AccessMode*)p2);
		break;
	}
	case 342110: {
		*(void const**)p1 = pThis->data();
		break;
	}
	case 342111: {
		*(bool*)p1 = pThis->detach();
		break;
	}
	case 342112: {
		*(QSharedMemory::SharedMemoryError*)p1 = pThis->error();
		break;
	}
	case 342113: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 342114: {
		*(bool*)p1 = pThis->isAttached();
		break;
	}
	case 342115: {
		drvSetString(p1,pThis->key());
		break;
	}
	case 342116: {
		*(bool*)p1 = pThis->lock();
		break;
	}
	case 342117: {
		pThis->setKey(drvGetStringHead(p1));
		break;
	}
	case 342118: {
		*(int*)p1 = pThis->size();
		break;
	}
	case 342119: {
		*(bool*)p1 = pThis->unlock();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QShortcut
int drv_QShortcut(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QShortcut *pThis = (QShortcut*)_p;
	switch (funcid) {
	case 343000+1: {
		delete pThis;
		break;
	}
	case 343102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(activatedAmbiguously()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 343103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(activated()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 343104: {
		*(void**)_p = new QShortcut((QWidget*)(p1));
		break;
	}
	case 343105: {
		if(p1==0)return -2;
		*(void**)_p = new QShortcut(*(QKeySequence*)(p1),(QWidget*)(p2),drvGet_const_char(p3),drvGet_const_char(p4),*(Qt::ShortcutContext*)p5);
		break;
	}
	case 343106: {
		*(bool*)p1 = pThis->autoRepeat();
		break;
	}
	case 343107: {
		*(Qt::ShortcutContext*)p1 = pThis->context();
		break;
	}
	case 343108: {
		*(int*)p1 = pThis->id();
		break;
	}
	case 343109: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 343110: {
		*(void**)p1 = new QKeySequence(pThis->key());
		break;
	}
	case 343111: {
		*(void**)p1 = pThis->parentWidget();
		break;
	}
	case 343112: {
		pThis->setAutoRepeat(*(bool*)p1);
		break;
	}
	case 343113: {
		pThis->setContext(*(Qt::ShortcutContext*)p1);
		break;
	}
	case 343114: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 343115: {
		if(p1==0)return -2;
		pThis->setKey(*(QKeySequence*)(p1));
		break;
	}
	case 343116: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 343117: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSignalMapper
int drv_QSignalMapper(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSignalMapper *pThis = (QSignalMapper*)_p;
	switch (funcid) {
	case 344000+1: {
		delete pThis;
		break;
	}
	case 344102: {
		UISignal28 *uis = new UISignal28(pThis);
		if (QObject::connect(pThis,SIGNAL(mapped(QObject*)),uis,SLOT(call(QObject*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 344103: {
		UISignal58 *uis = new UISignal58(pThis);
		if (QObject::connect(pThis,SIGNAL(mapped(QWidget*)),uis,SLOT(call(QWidget*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 344104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(mapped(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 344105: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(mapped(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 344106: {
		*(void**)_p = new QSignalMapper();
		break;
	}
	case 344107: {
		*(void**)_p = new QSignalMapper((QObject*)(p1));
		break;
	}
	case 344108: {
		pThis->map();
		break;
	}
	case 344109: {
		pThis->map((QObject*)(p1));
		break;
	}
	case 344110: {
		*(void**)p2 = pThis->mapping((QObject*)(p1));
		break;
	}
	case 344111: {
		*(void**)p2 = pThis->mapping(drvGetStringHead(p1));
		break;
	}
	case 344112: {
		*(void**)p2 = pThis->mapping((QWidget*)(p1));
		break;
	}
	case 344113: {
		*(void**)p2 = pThis->mapping(*(int*)p1);
		break;
	}
	case 344114: {
		pThis->removeMappings((QObject*)(p1));
		break;
	}
	case 344115: {
		pThis->setMapping((QObject*)(p1),(QObject*)(p2));
		break;
	}
	case 344116: {
		pThis->setMapping((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 344117: {
		pThis->setMapping((QObject*)(p1),(QWidget*)(p2));
		break;
	}
	case 344118: {
		pThis->setMapping((QObject*)(p1),*(int*)p2);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSizeGrip
int drv_QSizeGrip(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSizeGrip *pThis = (QSizeGrip*)_p;
	switch (funcid) {
	case 345000+1: {
		delete pThis;
		break;
	}
	case 345102: {
		*(void**)_p = new QSizeGrip((QWidget*)(p1));
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSlider
int drv_QSlider(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSlider *pThis = (QSlider*)_p;
	switch (funcid) {
	case 346000+1: {
		delete pThis;
		break;
	}
	case 346102: {
		*(void**)_p = new QSlider();
		break;
	}
	case 346103: {
		*(void**)_p = new QSlider((QWidget*)(p1));
		break;
	}
	case 346104: {
		*(void**)_p = new QSlider(*(Qt::Orientation*)p1,(QWidget*)(p2));
		break;
	}
	case 346105: {
		pThis->setTickInterval(*(int*)p1);
		break;
	}
	case 346106: {
		pThis->setTickPosition(*(QSlider::TickPosition*)p1);
		break;
	}
	case 346107: {
		*(int*)p1 = pThis->tickInterval();
		break;
	}
	case 346108: {
		*(QSlider::TickPosition*)p1 = pThis->tickPosition();
		break;
	}
	default:
		return drv_QAbstractSlider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSortFilterProxyModel
int drv_QSortFilterProxyModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSortFilterProxyModel *pThis = (QSortFilterProxyModel*)_p;
	switch (funcid) {
	case 347000+1: {
		delete pThis;
		break;
	}
	case 347102: {
		*(void**)_p = new QSortFilterProxyModel();
		break;
	}
	case 347103: {
		*(void**)_p = new QSortFilterProxyModel((QObject*)(p1));
		break;
	}
	case 347104: {
		pThis->clear();
		break;
	}
	case 347105: {
		*(bool*)p1 = pThis->dynamicSortFilter();
		break;
	}
	case 347106: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->filterAcceptsColumn(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 347107: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->filterAcceptsRow(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 347108: {
		*(Qt::CaseSensitivity*)p1 = pThis->filterCaseSensitivity();
		break;
	}
	case 347109: {
		pThis->filterChanged();
		break;
	}
	case 347110: {
		*(int*)p1 = pThis->filterKeyColumn();
		break;
	}
	case 347111: {
		*(void**)p1 = new QRegExp(pThis->filterRegExp());
		break;
	}
	case 347112: {
		*(int*)p1 = pThis->filterRole();
		break;
	}
	case 347113: {
		pThis->invalidate();
		break;
	}
	case 347114: {
		pThis->invalidateFilter();
		break;
	}
	case 347115: {
		*(bool*)p1 = pThis->isSortLocaleAware();
		break;
	}
	case 347116: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(bool*)p3 = pThis->lessThan(*(QModelIndex*)(p1),*(QModelIndex*)(p2));
		break;
	}
	case 347117: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 347118: {
		pThis->setDynamicSortFilter(*(bool*)p1);
		break;
	}
	case 347119: {
		pThis->setFilterCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 347120: {
		pThis->setFilterFixedString(drvGetStringHead(p1));
		break;
	}
	case 347121: {
		pThis->setFilterKeyColumn(*(int*)p1);
		break;
	}
	case 347122: {
		if(p1==0)return -2;
		pThis->setFilterRegExp(*(QRegExp*)(p1));
		break;
	}
	case 347123: {
		pThis->setFilterRegExp(drvGetStringHead(p1));
		break;
	}
	case 347124: {
		pThis->setFilterRole(*(int*)p1);
		break;
	}
	case 347125: {
		pThis->setFilterWildcard(drvGetStringHead(p1));
		break;
	}
	case 347126: {
		pThis->setSortCaseSensitivity(*(Qt::CaseSensitivity*)p1);
		break;
	}
	case 347127: {
		pThis->setSortLocaleAware(*(bool*)p1);
		break;
	}
	case 347128: {
		pThis->setSortRole(*(int*)p1);
		break;
	}
	case 347129: {
		*(Qt::CaseSensitivity*)p1 = pThis->sortCaseSensitivity();
		break;
	}
	case 347130: {
		*(int*)p1 = pThis->sortColumn();
		break;
	}
	case 347131: {
		*(Qt::SortOrder*)p1 = pThis->sortOrder();
		break;
	}
	case 347132: {
		*(int*)p1 = pThis->sortRole();
		break;
	}
	default:
		return drv_QAbstractProxyModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSpinBox
int drv_QSpinBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSpinBox *pThis = (QSpinBox*)_p;
	switch (funcid) {
	case 348000+1: {
		delete pThis;
		break;
	}
	case 348102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 348103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 348104: {
		*(void**)_p = new QSpinBox();
		break;
	}
	case 348105: {
		*(void**)_p = new QSpinBox((QWidget*)(p1));
		break;
	}
	case 348106: {
		drvSetString(p1,pThis->cleanText());
		break;
	}
	case 348107: {
		*(int*)p1 = pThis->maximum();
		break;
	}
	case 348108: {
		*(int*)p1 = pThis->minimum();
		break;
	}
	case 348109: {
		drvSetString(p1,pThis->prefix());
		break;
	}
	case 348110: {
		pThis->setMaximum(*(int*)p1);
		break;
	}
	case 348111: {
		pThis->setMinimum(*(int*)p1);
		break;
	}
	case 348112: {
		pThis->setPrefix(drvGetStringHead(p1));
		break;
	}
	case 348113: {
		pThis->setRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 348114: {
		pThis->setSingleStep(*(int*)p1);
		break;
	}
	case 348115: {
		pThis->setSuffix(drvGetStringHead(p1));
		break;
	}
	case 348116: {
		pThis->setValue(*(int*)p1);
		break;
	}
	case 348117: {
		*(int*)p1 = pThis->singleStep();
		break;
	}
	case 348118: {
		drvSetString(p1,pThis->suffix());
		break;
	}
	case 348119: {
		drvSetString(p2,pThis->textFromValue(*(int*)p1));
		break;
	}
	case 348120: {
		*(int*)p1 = pThis->value();
		break;
	}
	case 348121: {
		*(int*)p2 = pThis->valueFromText(drvGetStringHead(p1));
		break;
	}
	default:
		return drv_QAbstractSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSplashScreen
int drv_QSplashScreen(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSplashScreen *pThis = (QSplashScreen*)_p;
	switch (funcid) {
	case 349000+1: {
		delete pThis;
		break;
	}
	case 349102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(messageChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 349103: {
		*(void**)_p = new QSplashScreen();
		break;
	}
	case 349104: {
		*(void**)_p = new QSplashScreen(p1==0?QPixmap():*(QPixmap*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 349105: {
		*(void**)_p = new QSplashScreen((QWidget*)(p1),p2==0?QPixmap():*(QPixmap*)(p2),*(QFlags<Qt::WindowType>*)p3);
		break;
	}
	case 349106: {
		pThis->clearMessage();
		break;
	}
	case 349107: {
		pThis->drawContents((QPainter*)(p1));
		break;
	}
	case 349108: {
		pThis->finish((QWidget*)(p1));
		break;
	}
	case 349109: {
		*(const void**)p1 = new QPixmap(pThis->pixmap());
		break;
	}
	case 349110: {
		pThis->repaint();
		break;
	}
	case 349111: {
		if(p1==0)return -2;
		pThis->setPixmap(*(QPixmap*)(p1));
		break;
	}
	case 349112: {
		pThis->showMessage(drvGetStringHead(p1));
		break;
	}
	case 349113: {
		pThis->showMessage(drvGetStringHead(p1),*(int*)p2,p3==0?QColor():*(QColor*)(p3));
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSplitter
int drv_QSplitter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSplitter *pThis = (QSplitter*)_p;
	switch (funcid) {
	case 350000+1: {
		delete pThis;
		break;
	}
	case 350102: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(splitterMoved(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 350103: {
		*(void**)_p = new QSplitter();
		break;
	}
	case 350104: {
		*(void**)_p = new QSplitter((QWidget*)(p1));
		break;
	}
	case 350105: {
		*(void**)_p = new QSplitter(*(Qt::Orientation*)p1,(QWidget*)(p2));
		break;
	}
	case 350106: {
		pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 350107: {
		*(bool*)p1 = pThis->childrenCollapsible();
		break;
	}
	case 350108: {
		*(int*)p3 = pThis->closestLegalPosition(*(int*)p1,*(int*)p2);
		break;
	}
	case 350109: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 350110: {
		*(void**)p1 = pThis->createHandle();
		break;
	}
	case 350111: {
		pThis->getRange(*(int*)p1,*(int**)p2,*(int**)p3);
		break;
	}
	case 350112: {
		*(void**)p2 = pThis->handle(*(int*)p1);
		break;
	}
	case 350113: {
		*(int*)p1 = pThis->handleWidth();
		break;
	}
	case 350114: {
		*(int*)p2 = pThis->indexOf((QWidget*)(p1));
		break;
	}
	case 350115: {
		pThis->insertWidget(*(int*)p1,(QWidget*)(p2));
		break;
	}
	case 350116: {
		*(bool*)p2 = pThis->isCollapsible(*(int*)p1);
		break;
	}
	case 350117: {
		pThis->moveSplitter(*(int*)p1,*(int*)p2);
		break;
	}
	case 350118: {
		*(bool*)p1 = pThis->opaqueResize();
		break;
	}
	case 350119: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 350120: {
		pThis->refresh();
		break;
	}
	case 350121: {
		*(bool*)p2 = pThis->restoreState(drvGetByteArrayHead(p1));
		break;
	}
	case 350122: {
		drvSetByteArray(p1,pThis->saveState());
		break;
	}
	case 350123: {
		pThis->setChildrenCollapsible(*(bool*)p1);
		break;
	}
	case 350124: {
		pThis->setCollapsible(*(int*)p1,*(bool*)p2);
		break;
	}
	case 350125: {
		pThis->setHandleWidth(*(int*)p1);
		break;
	}
	case 350126: {
		pThis->setOpaqueResize(*(bool*)p1);
		break;
	}
	case 350127: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 350128: {
		pThis->setRubberBand(*(int*)p1);
		break;
	}
	case 350129: {
		pThis->setSizes(drvGetIntArrayHead(p1));
		break;
	}
	case 350130: {
		pThis->setStretchFactor(*(int*)p1,*(int*)p2);
		break;
	}
	case 350131: {
		drvSetList<int>(p1,pThis->sizes());
		break;
	}
	case 350132: {
		*(void**)p2 = pThis->widget(*(int*)p1);
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSplitterHandle
int drv_QSplitterHandle(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSplitterHandle *pThis = (QSplitterHandle*)_p;
	switch (funcid) {
	case 351000+1: {
		delete pThis;
		break;
	}
	case 351102: {
		*(void**)_p = new QSplitterHandle(*(Qt::Orientation*)p1,(QSplitter*)(p2));
		break;
	}
	case 351103: {
		*(int*)p2 = pThis->closestLegalPosition(*(int*)p1);
		break;
	}
	case 351104: {
		pThis->moveSplitter(*(int*)p1);
		break;
	}
	case 351105: {
		*(bool*)p1 = pThis->opaqueResize();
		break;
	}
	case 351106: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 351107: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 351108: {
		*(void**)p1 = pThis->splitter();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStackedLayout
int drv_QStackedLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStackedLayout *pThis = (QStackedLayout*)_p;
	switch (funcid) {
	case 352000+1: {
		delete pThis;
		break;
	}
	case 352102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(widgetRemoved(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 352103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 352104: {
		*(void**)_p = new QStackedLayout();
		break;
	}
	case 352105: {
		*(void**)_p = new QStackedLayout((QLayout*)(p1));
		break;
	}
	case 352106: {
		*(void**)_p = new QStackedLayout((QWidget*)(p1));
		break;
	}
	case 352107: {
		*(int*)p2 = pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 352108: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 352109: {
		*(void**)p1 = pThis->currentWidget();
		break;
	}
	case 352110: {
		*(int*)p3 = pThis->insertWidget(*(int*)p1,(QWidget*)(p2));
		break;
	}
	case 352111: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 352112: {
		pThis->setCurrentWidget((QWidget*)(p1));
		break;
	}
	case 352113: {
		pThis->setStackingMode(*(QStackedLayout::StackingMode*)p1);
		break;
	}
	case 352114: {
		*(QStackedLayout::StackingMode*)p1 = pThis->stackingMode();
		break;
	}
	case 352115: {
		*(void**)p2 = pThis->widget(*(int*)p1);
		break;
	}
	default:
		return drv_QLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStackedWidget
int drv_QStackedWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStackedWidget *pThis = (QStackedWidget*)_p;
	switch (funcid) {
	case 353000+1: {
		delete pThis;
		break;
	}
	case 353102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(widgetRemoved(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 353103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 353104: {
		*(void**)_p = new QStackedWidget();
		break;
	}
	case 353105: {
		*(void**)_p = new QStackedWidget((QWidget*)(p1));
		break;
	}
	case 353106: {
		*(int*)p2 = pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 353107: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 353108: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 353109: {
		*(void**)p1 = pThis->currentWidget();
		break;
	}
	case 353110: {
		*(int*)p2 = pThis->indexOf((QWidget*)(p1));
		break;
	}
	case 353111: {
		*(int*)p3 = pThis->insertWidget(*(int*)p1,(QWidget*)(p2));
		break;
	}
	case 353112: {
		pThis->removeWidget((QWidget*)(p1));
		break;
	}
	case 353113: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 353114: {
		pThis->setCurrentWidget((QWidget*)(p1));
		break;
	}
	case 353115: {
		*(void**)p2 = pThis->widget(*(int*)p1);
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStandardItemModel
int drv_QStandardItemModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStandardItemModel *pThis = (QStandardItemModel*)_p;
	switch (funcid) {
	case 354000+1: {
		delete pThis;
		break;
	}
	case 354102: {
		UISignal40 *uis = new UISignal40(pThis);
		if (QObject::connect(pThis,SIGNAL(itemChanged(QStandardItem*)),uis,SLOT(call(QStandardItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 354103: {
		*(void**)_p = new QStandardItemModel();
		break;
	}
	case 354104: {
		*(void**)_p = new QStandardItemModel((QObject*)(p1));
		break;
	}
	case 354105: {
		*(void**)_p = new QStandardItemModel(*(int*)p1,*(int*)p2,(QObject*)(p3));
		break;
	}
	case 354106: {
		pThis->appendColumn(drvGetObjectArrayHeadT<QStandardItem*>(p1));
		break;
	}
	case 354107: {
		pThis->appendRow(drvGetObjectArrayHeadT<QStandardItem*>(p1));
		break;
	}
	case 354108: {
		pThis->appendRow((QStandardItem*)(p1));
		break;
	}
	case 354109: {
		pThis->clear();
		break;
	}
	case 354110: {
		drvSetListObj<QStandardItem*>(p2,124000,pThis->findItems(drvGetStringHead(p1)));
		break;
	}
	case 354111: {
		drvSetListObj<QStandardItem*>(p4,124000,pThis->findItems(drvGetStringHead(p1),*(QFlags<Qt::MatchFlag>*)p2,*(int*)p3));
		break;
	}
	case 354112: {
		*(void**)p2 = pThis->horizontalHeaderItem(*(int*)p1);
		break;
	}
	case 354113: {
		*(void**)p2 = new QModelIndex(pThis->indexFromItem((QStandardItem*)(p1)));
		break;
	}
	case 354114: {
		*(bool*)p2 = pThis->insertColumn(*(int*)p1);
		break;
	}
	case 354115: {
		pThis->insertColumn(*(int*)p1,drvGetObjectArrayHeadT<QStandardItem*>(p2));
		break;
	}
	case 354116: {
		*(bool*)p3 = pThis->insertColumn(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 354117: {
		*(bool*)p2 = pThis->insertRow(*(int*)p1);
		break;
	}
	case 354118: {
		pThis->insertRow(*(int*)p1,drvGetObjectArrayHeadT<QStandardItem*>(p2));
		break;
	}
	case 354119: {
		*(bool*)p3 = pThis->insertRow(*(int*)p1,p2==0?QModelIndex():*(QModelIndex*)(p2));
		break;
	}
	case 354120: {
		pThis->insertRow(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 354121: {
		*(void**)p1 = pThis->invisibleRootItem();
		break;
	}
	case 354122: {
		*(void**)p2 = pThis->item(*(int*)p1);
		break;
	}
	case 354123: {
		*(void**)p3 = pThis->item(*(int*)p1,*(int*)p2);
		break;
	}
	case 354124: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemFromIndex(*(QModelIndex*)(p1));
		break;
	}
	case 354125: {
		*(const void**)p1 = pThis->itemPrototype();
		break;
	}
	case 354126: {
		*(void**)p1 = pThis->parent();
		break;
	}
	case 354127: {
		pThis->setColumnCount(*(int*)p1);
		break;
	}
	case 354128: {
		pThis->setHorizontalHeaderItem(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 354129: {
		pThis->setHorizontalHeaderLabels(drvGetStringArray(p1));
		break;
	}
	case 354130: {
		pThis->setItem(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 354131: {
		pThis->setItem(*(int*)p1,*(int*)p2,(QStandardItem*)(p3));
		break;
	}
	case 354132: {
		pThis->setItemPrototype((QStandardItem*)(p1));
		break;
	}
	case 354133: {
		pThis->setRowCount(*(int*)p1);
		break;
	}
	case 354134: {
		pThis->setSortRole(*(int*)p1);
		break;
	}
	case 354135: {
		pThis->setVerticalHeaderItem(*(int*)p1,(QStandardItem*)(p2));
		break;
	}
	case 354136: {
		pThis->setVerticalHeaderLabels(drvGetStringArray(p1));
		break;
	}
	case 354137: {
		*(int*)p1 = pThis->sortRole();
		break;
	}
	case 354138: {
		drvSetListObj<QStandardItem*>(p2,124000,pThis->takeColumn(*(int*)p1));
		break;
	}
	case 354139: {
		*(void**)p2 = pThis->takeHorizontalHeaderItem(*(int*)p1);
		break;
	}
	case 354140: {
		*(void**)p2 = pThis->takeItem(*(int*)p1);
		break;
	}
	case 354141: {
		*(void**)p3 = pThis->takeItem(*(int*)p1,*(int*)p2);
		break;
	}
	case 354142: {
		drvSetListObj<QStandardItem*>(p2,124000,pThis->takeRow(*(int*)p1));
		break;
	}
	case 354143: {
		*(void**)p2 = pThis->takeVerticalHeaderItem(*(int*)p1);
		break;
	}
	case 354144: {
		*(void**)p2 = pThis->verticalHeaderItem(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QState
int drv_QState(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QState *pThis = (QState*)_p;
	switch (funcid) {
	case 355000+1: {
		delete pThis;
		break;
	}
	case 355102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(finished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 355103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(propertiesAssigned()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 355104: {
		*(void**)_p = new QState();
		break;
	}
	case 355105: {
		*(void**)_p = new QState((QState*)(p1));
		break;
	}
	case 355106: {
		*(void**)_p = new QState(*(QState::ChildMode*)p1,(QState*)(p2));
		break;
	}
	case 355107: {
		*(void**)p2 = pThis->addTransition((QAbstractState*)(p1));
		break;
	}
	case 355108: {
		pThis->addTransition((QAbstractTransition*)(p1));
		break;
	}
	case 355109: {
		if(p3==0)return -2;
		pThis->assignProperty((QObject*)(p1),drvGet_const_char(p2),*(QVariant*)(p3));
		break;
	}
	case 355110: {
		*(QState::ChildMode*)p1 = pThis->childMode();
		break;
	}
	case 355111: {
		*(void**)p1 = pThis->errorState();
		break;
	}
	case 355112: {
		*(void**)p1 = pThis->initialState();
		break;
	}
	case 355113: {
		pThis->removeTransition((QAbstractTransition*)(p1));
		break;
	}
	case 355114: {
		pThis->setChildMode(*(QState::ChildMode*)p1);
		break;
	}
	case 355115: {
		pThis->setErrorState((QAbstractState*)(p1));
		break;
	}
	case 355116: {
		pThis->setInitialState((QAbstractState*)(p1));
		break;
	}
	case 355117: {
		drvSetListObj<QAbstractTransition*>(p1,208000,pThis->transitions());
		break;
	}
	default:
		return drv_QAbstractState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStateMachine
int drv_QStateMachine(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStateMachine *pThis = (QStateMachine*)_p;
	switch (funcid) {
	case 356000+1: {
		delete pThis;
		break;
	}
	case 356102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(started()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 356103: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(stopped()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 356104: {
		*(void**)_p = new QStateMachine();
		break;
	}
	case 356105: {
		*(void**)_p = new QStateMachine((QObject*)(p1));
		break;
	}
	case 356106: {
		pThis->addDefaultAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 356107: {
		pThis->addState((QAbstractState*)(p1));
		break;
	}
	case 356108: {
		pThis->beginMicrostep((QEvent*)(p1));
		break;
	}
	case 356109: {
		pThis->beginSelectTransitions((QEvent*)(p1));
		break;
	}
	case 356110: {
		*(bool*)p2 = pThis->cancelDelayedEvent(*(int*)p1);
		break;
	}
	case 356111: {
		pThis->clearError();
		break;
	}
	case 356112: {
		drvSetListObj<QAbstractAnimation*>(p1,194000,pThis->defaultAnimations());
		break;
	}
	case 356113: {
		pThis->endMicrostep((QEvent*)(p1));
		break;
	}
	case 356114: {
		pThis->endSelectTransitions((QEvent*)(p1));
		break;
	}
	case 356115: {
		*(QStateMachine::Error*)p1 = pThis->error();
		break;
	}
	case 356116: {
		drvSetString(p1,pThis->errorString());
		break;
	}
	case 356117: {
		*(QStateMachine::RestorePolicy*)p1 = pThis->globalRestorePolicy();
		break;
	}
	case 356118: {
		*(bool*)p1 = pThis->isAnimated();
		break;
	}
	case 356119: {
		*(bool*)p1 = pThis->isRunning();
		break;
	}
	case 356120: {
		*(int*)p3 = pThis->postDelayedEvent((QEvent*)(p1),*(int*)p2);
		break;
	}
	case 356121: {
		pThis->postEvent((QEvent*)(p1));
		break;
	}
	case 356122: {
		pThis->postEvent((QEvent*)(p1),*(QStateMachine::EventPriority*)p2);
		break;
	}
	case 356123: {
		pThis->removeDefaultAnimation((QAbstractAnimation*)(p1));
		break;
	}
	case 356124: {
		pThis->removeState((QAbstractState*)(p1));
		break;
	}
	case 356125: {
		pThis->setAnimated(*(bool*)p1);
		break;
	}
	case 356126: {
		pThis->setGlobalRestorePolicy(*(QStateMachine::RestorePolicy*)p1);
		break;
	}
	case 356127: {
		pThis->start();
		break;
	}
	case 356128: {
		pThis->stop();
		break;
	}
	default:
		return drv_QState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStatusBar
int drv_QStatusBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStatusBar *pThis = (QStatusBar*)_p;
	switch (funcid) {
	case 357000+1: {
		delete pThis;
		break;
	}
	case 357102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(messageChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 357103: {
		*(void**)_p = new QStatusBar();
		break;
	}
	case 357104: {
		*(void**)_p = new QStatusBar((QWidget*)(p1));
		break;
	}
	case 357105: {
		pThis->addPermanentWidget((QWidget*)(p1));
		break;
	}
	case 357106: {
		pThis->addPermanentWidget((QWidget*)(p1),*(int*)p2);
		break;
	}
	case 357107: {
		pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 357108: {
		pThis->addWidget((QWidget*)(p1),*(int*)p2);
		break;
	}
	case 357109: {
		pThis->clearMessage();
		break;
	}
	case 357110: {
		drvSetString(p1,pThis->currentMessage());
		break;
	}
	case 357111: {
		pThis->hideOrShow();
		break;
	}
	case 357112: {
		*(int*)p4 = pThis->insertPermanentWidget(*(int*)p1,(QWidget*)(p2),*(int*)p3);
		break;
	}
	case 357113: {
		*(int*)p4 = pThis->insertWidget(*(int*)p1,(QWidget*)(p2),*(int*)p3);
		break;
	}
	case 357114: {
		*(bool*)p1 = pThis->isSizeGripEnabled();
		break;
	}
	case 357115: {
		pThis->reformat();
		break;
	}
	case 357116: {
		pThis->removeWidget((QWidget*)(p1));
		break;
	}
	case 357117: {
		pThis->setSizeGripEnabled(*(bool*)p1);
		break;
	}
	case 357118: {
		pThis->showMessage(drvGetStringHead(p1));
		break;
	}
	case 357119: {
		pThis->showMessage(drvGetStringHead(p1),*(int*)p2);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStringListModel
int drv_QStringListModel(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStringListModel *pThis = (QStringListModel*)_p;
	switch (funcid) {
	case 358000+1: {
		delete pThis;
		break;
	}
	case 358102: {
		pThis->setStringList(drvGetStringArray(p1));
		break;
	}
	case 358103: {
		drvSetStringArray(p1,pThis->stringList());
		break;
	}
	case 358104: {
		*(void**)_p = new QStringListModel((QObject*)p1);
		break;
	}
	default:
		return drv_QAbstractListModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStyle
int drv_QStyle(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStyle *pThis = (QStyle*)_p;
	switch (funcid) {
	case 359000+1: {
		delete pThis;
		break;
	}
	case 359102: {
		if(p3==0)return -2;
	if(p4==0)return -2;
		*(void**)p5 = new QRect(QStyle::alignedRect(*(Qt::LayoutDirection*)p1,*(QFlags<Qt::AlignmentFlag>*)p2,*(QSize*)(p3),*(QRect*)(p4)));
		break;
	}
	case 359103: {
		if(p2==0)return -2;
	if(p4==0)return -2;
		pThis->drawItemPixmap((QPainter*)(p1),*(QRect*)(p2),*(int*)p3,*(QPixmap*)(p4));
		break;
	}
	case 359104: {
		if(p2==0)return -2;
	if(p4==0)return -2;
		pThis->drawItemText((QPainter*)(p1),*(QRect*)(p2),*(int*)p3,*(QPalette*)(p4),*(bool*)p5,drvGetStringHead(p6),*(QPalette::ColorRole*)p7);
		break;
	}
	case 359105: {
		if(p1==0)return -2;
	if(p3==0)return -2;
		*(void**)p4 = new QRect(pThis->itemPixmapRect(*(QRect*)(p1),*(int*)p2,*(QPixmap*)(p3)));
		break;
	}
	case 359106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p6 = new QRect(pThis->itemTextRect(*(QFontMetrics*)(p1),*(QRect*)(p2),*(int*)p3,*(bool*)p4,drvGetStringHead(p5)));
		break;
	}
	case 359107: {
		*(int*)p2 = pThis->pixelMetric(*(QStyle::PixelMetric*)p1);
		break;
	}
	case 359108: {
		pThis->polish((QApplication*)(p1));
		break;
	}
	case 359109: {
		if(p1==0)return -2;
		pThis->polish(*(QPalette*)(p1));
		break;
	}
	case 359110: {
		pThis->polish((QWidget*)(p1));
		break;
	}
	case 359111: {
		*(const void**)p1 = pThis->proxy();
		break;
	}
	case 359112: {
		*(int*)p6 = QStyle::sliderPositionFromValue(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(bool*)p5);
		break;
	}
	case 359113: {
		*(int*)p6 = QStyle::sliderValueFromPosition(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4,*(bool*)p5);
		break;
	}
	case 359114: {
		*(void**)p2 = new QIcon(pThis->standardIcon(*(QStyle::StandardPixmap*)p1));
		break;
	}
	case 359115: {
		*(void**)p1 = new QPalette(pThis->standardPalette());
		break;
	}
	case 359116: {
		*(void**)p2 = new QPixmap(pThis->standardPixmap(*(QStyle::StandardPixmap*)p1));
		break;
	}
	case 359117: {
		*(int*)p2 = pThis->styleHint(*(QStyle::StyleHint*)p1);
		break;
	}
	case 359118: {
		pThis->unpolish((QApplication*)(p1));
		break;
	}
	case 359119: {
		pThis->unpolish((QWidget*)(p1));
		break;
	}
	case 359120: {
		*(QFlags<Qt::AlignmentFlag>*)p3 = QStyle::visualAlignment(*(Qt::LayoutDirection*)p1,*(QFlags<Qt::AlignmentFlag>*)p2);
		break;
	}
	case 359121: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)p4 = new QPoint(QStyle::visualPos(*(Qt::LayoutDirection*)p1,*(QRect*)(p2),*(QPoint*)(p3)));
		break;
	}
	case 359122: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		*(void**)p4 = new QRect(QStyle::visualRect(*(Qt::LayoutDirection*)p1,*(QRect*)(p2),*(QRect*)(p3)));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QStyledItemDelegate
int drv_QStyledItemDelegate(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QStyledItemDelegate *pThis = (QStyledItemDelegate*)_p;
	switch (funcid) {
	case 360000+1: {
		delete pThis;
		break;
	}
	case 360102: {
		*(void**)_p = new QStyledItemDelegate();
		break;
	}
	case 360103: {
		*(void**)_p = new QStyledItemDelegate((QObject*)(p1));
		break;
	}
	case 360104: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		drvSetString(p3,pThis->displayText(*(QVariant*)(p1),*(QLocale*)(p2)));
		break;
	}
	case 360105: {
		*(void**)p1 = pThis->itemEditorFactory();
		break;
	}
	case 360106: {
		pThis->setItemEditorFactory((QItemEditorFactory*)(p1));
		break;
	}
	default:
		return drv_QAbstractItemDelegate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSwipeGesture
int drv_QSwipeGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSwipeGesture *pThis = (QSwipeGesture*)_p;
	switch (funcid) {
	case 361000+1: {
		delete pThis;
		break;
	}
	case 361102: {
		*(void**)_p = new QSwipeGesture();
		break;
	}
	case 361103: {
		*(void**)_p = new QSwipeGesture((QObject*)(p1));
		break;
	}
	case 361104: {
		*(QSwipeGesture::SwipeDirection*)p1 = pThis->horizontalDirection();
		break;
	}
	case 361105: {
		pThis->setSwipeAngle(*(double*)p1);
		break;
	}
	case 361106: {
		*(double*)p1 = pThis->swipeAngle();
		break;
	}
	case 361107: {
		*(QSwipeGesture::SwipeDirection*)p1 = pThis->verticalDirection();
		break;
	}
	default:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSyntaxHighlighter
int drv_QSyntaxHighlighter(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSyntaxHighlighter *pThis = (QSyntaxHighlighter*)_p;
	switch (funcid) {
	case 362000+1: {
		delete pThis;
		break;
	}
	case 362102: {
		*(void**)p1 = new QTextBlock(pThis->currentBlock());
		break;
	}
	case 362103: {
		*(int*)p1 = pThis->currentBlockState();
		break;
	}
	case 362104: {
		*(void**)p1 = pThis->currentBlockUserData();
		break;
	}
	case 362105: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 362106: {
		*(void**)p2 = new QTextCharFormat(pThis->format(*(int*)p1));
		break;
	}
	case 362107: {
		pThis->highlightBlock(drvGetStringHead(p1));
		break;
	}
	case 362108: {
		*(int*)p1 = pThis->previousBlockState();
		break;
	}
	case 362109: {
		pThis->rehighlight();
		break;
	}
	case 362110: {
		if(p1==0)return -2;
		pThis->rehighlightBlock(*(QTextBlock*)(p1));
		break;
	}
	case 362111: {
		pThis->setCurrentBlockState(*(int*)p1);
		break;
	}
	case 362112: {
		pThis->setCurrentBlockUserData((QTextBlockUserData*)(p1));
		break;
	}
	case 362113: {
		pThis->setDocument((QTextDocument*)(p1));
		break;
	}
	case 362114: {
		if(p3==0)return -2;
		pThis->setFormat(*(int*)p1,*(int*)p2,*(QColor*)(p3));
		break;
	}
	case 362115: {
		if(p3==0)return -2;
		pThis->setFormat(*(int*)p1,*(int*)p2,*(QFont*)(p3));
		break;
	}
	case 362116: {
		if(p3==0)return -2;
		pThis->setFormat(*(int*)p1,*(int*)p2,*(QTextCharFormat*)(p3));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSyntaxHighlighterHook
int drv_QSyntaxHighlighterHook(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSyntaxHighlighterHook *pThis = (QSyntaxHighlighterHook*)_p;
	switch (funcid) {
	case 363000+1: {
		delete pThis;
		break;
	}
	case 363102: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(hook_highlightBlock(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 363103: {
		*(void**)_p = new QSyntaxHighlighterHook((QObject*)(p1));
		break;
	}
	case 363104: {
		*(void**)_p = new QSyntaxHighlighterHook((QTextDocument*)(p1));
		break;
	}
	case 363105: {
		*(void**)_p = new QSyntaxHighlighterHook((QTextEdit*)(p1));
		break;
	}
	default:
		return drv_QSyntaxHighlighter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QSystemTrayIcon
int drv_QSystemTrayIcon(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QSystemTrayIcon *pThis = (QSystemTrayIcon*)_p;
	switch (funcid) {
	case 364000+1: {
		delete pThis;
		break;
	}
	case 364102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(messageClicked()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 364103: {
		UISignal44 *uis = new UISignal44(pThis);
		if (QObject::connect(pThis,SIGNAL(activated(QSystemTrayIcon::ActivationReason)),uis,SLOT(call(QSystemTrayIcon::ActivationReason)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 364104: {
		*(void**)_p = new QSystemTrayIcon();
		break;
	}
	case 364105: {
		*(void**)_p = new QSystemTrayIcon((QObject*)(p1));
		break;
	}
	case 364106: {
		if(p1==0)return -2;
		*(void**)_p = new QSystemTrayIcon(*(QIcon*)(p1),(QObject*)(p2));
		break;
	}
	case 364107: {
		*(void**)p1 = pThis->contextMenu();
		break;
	}
	case 364108: {
		*(void**)p1 = new QRect(pThis->geometry());
		break;
	}
	case 364109: {
		pThis->hide();
		break;
	}
	case 364110: {
		*(void**)p1 = new QIcon(pThis->icon());
		break;
	}
	case 364111: {
		*(bool*)p1 = QSystemTrayIcon::isSystemTrayAvailable();
		break;
	}
	case 364112: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 364113: {
		pThis->setContextMenu((QMenu*)(p1));
		break;
	}
	case 364114: {
		if(p1==0)return -2;
		pThis->setIcon(*(QIcon*)(p1));
		break;
	}
	case 364115: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 364116: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	case 364117: {
		pThis->show();
		break;
	}
	case 364118: {
		pThis->showMessage(drvGetStringHead(p1),drvGetStringHead(p2),*(QSystemTrayIcon::MessageIcon*)p3,*(int*)p4);
		break;
	}
	case 364119: {
		*(bool*)p1 = QSystemTrayIcon::supportsMessages();
		break;
	}
	case 364120: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTabBar
int drv_QTabBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTabBar *pThis = (QTabBar*)_p;
	switch (funcid) {
	case 365000+1: {
		delete pThis;
		break;
	}
	case 365102: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(tabMoved(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 365103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 365104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(tabCloseRequested(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 365105: {
		*(void**)_p = new QTabBar();
		break;
	}
	case 365106: {
		*(void**)_p = new QTabBar((QWidget*)(p1));
		break;
	}
	case 365107: {
		*(int*)p2 = pThis->addTab(drvGetStringHead(p1));
		break;
	}
	case 365108: {
		if(p1==0)return -2;
		*(int*)p3 = pThis->addTab(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 365109: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 365110: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 365111: {
		*(bool*)p1 = pThis->documentMode();
		break;
	}
	case 365112: {
		*(bool*)p1 = pThis->drawBase();
		break;
	}
	case 365113: {
		*(Qt::TextElideMode*)p1 = pThis->elideMode();
		break;
	}
	case 365114: {
		*(bool*)p1 = pThis->expanding();
		break;
	}
	case 365115: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 365116: {
		*(int*)p3 = pThis->insertTab(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 365117: {
		if(p2==0)return -2;
		*(int*)p4 = pThis->insertTab(*(int*)p1,*(QIcon*)(p2),drvGetStringHead(p3));
		break;
	}
	case 365118: {
		*(bool*)p1 = pThis->isMovable();
		break;
	}
	case 365119: {
		*(bool*)p2 = pThis->isTabEnabled(*(int*)p1);
		break;
	}
	case 365120: {
		pThis->moveTab(*(int*)p1,*(int*)p2);
		break;
	}
	case 365121: {
		pThis->removeTab(*(int*)p1);
		break;
	}
	case 365122: {
		*(QTabBar::SelectionBehavior*)p1 = pThis->selectionBehaviorOnRemove();
		break;
	}
	case 365123: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 365124: {
		pThis->setDocumentMode(*(bool*)p1);
		break;
	}
	case 365125: {
		pThis->setDrawBase(*(bool*)p1);
		break;
	}
	case 365126: {
		pThis->setElideMode(*(Qt::TextElideMode*)p1);
		break;
	}
	case 365127: {
		pThis->setExpanding(*(bool*)p1);
		break;
	}
	case 365128: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 365129: {
		pThis->setMovable(*(bool*)p1);
		break;
	}
	case 365130: {
		pThis->setSelectionBehaviorOnRemove(*(QTabBar::SelectionBehavior*)p1);
		break;
	}
	case 365131: {
		pThis->setShape(*(QTabBar::Shape*)p1);
		break;
	}
	case 365132: {
		pThis->setTabButton(*(int*)p1,*(QTabBar::ButtonPosition*)p2,(QWidget*)(p3));
		break;
	}
	case 365133: {
		if(p2==0)return -2;
		pThis->setTabData(*(int*)p1,*(QVariant*)(p2));
		break;
	}
	case 365134: {
		pThis->setTabEnabled(*(int*)p1,*(bool*)p2);
		break;
	}
	case 365135: {
		if(p2==0)return -2;
		pThis->setTabIcon(*(int*)p1,*(QIcon*)(p2));
		break;
	}
	case 365136: {
		pThis->setTabText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 365137: {
		if(p2==0)return -2;
		pThis->setTabTextColor(*(int*)p1,*(QColor*)(p2));
		break;
	}
	case 365138: {
		pThis->setTabToolTip(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 365139: {
		pThis->setTabWhatsThis(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 365140: {
		pThis->setTabsClosable(*(bool*)p1);
		break;
	}
	case 365141: {
		pThis->setUsesScrollButtons(*(bool*)p1);
		break;
	}
	case 365142: {
		*(QTabBar::Shape*)p1 = pThis->shape();
		break;
	}
	case 365143: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->tabAt(*(QPoint*)(p1));
		break;
	}
	case 365144: {
		*(void**)p3 = pThis->tabButton(*(int*)p1,*(QTabBar::ButtonPosition*)p2);
		break;
	}
	case 365145: {
		*(void**)p2 = new QVariant(pThis->tabData(*(int*)p1));
		break;
	}
	case 365146: {
		*(void**)p2 = new QIcon(pThis->tabIcon(*(int*)p1));
		break;
	}
	case 365147: {
		pThis->tabInserted(*(int*)p1);
		break;
	}
	case 365148: {
		pThis->tabLayoutChange();
		break;
	}
	case 365149: {
		*(void**)p2 = new QRect(pThis->tabRect(*(int*)p1));
		break;
	}
	case 365150: {
		pThis->tabRemoved(*(int*)p1);
		break;
	}
	case 365151: {
		*(void**)p2 = new QSize(pThis->tabSizeHint(*(int*)p1));
		break;
	}
	case 365152: {
		drvSetString(p2,pThis->tabText(*(int*)p1));
		break;
	}
	case 365153: {
		*(void**)p2 = new QColor(pThis->tabTextColor(*(int*)p1));
		break;
	}
	case 365154: {
		drvSetString(p2,pThis->tabToolTip(*(int*)p1));
		break;
	}
	case 365155: {
		drvSetString(p2,pThis->tabWhatsThis(*(int*)p1));
		break;
	}
	case 365156: {
		*(bool*)p1 = pThis->tabsClosable();
		break;
	}
	case 365157: {
		*(bool*)p1 = pThis->usesScrollButtons();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTabWidget
int drv_QTabWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTabWidget *pThis = (QTabWidget*)_p;
	switch (funcid) {
	case 366000+1: {
		delete pThis;
		break;
	}
	case 366102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 366103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(tabCloseRequested(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 366104: {
		*(void**)_p = new QTabWidget();
		break;
	}
	case 366105: {
		*(void**)_p = new QTabWidget((QWidget*)(p1));
		break;
	}
	case 366106: {
		*(int*)p3 = pThis->addTab((QWidget*)(p1),drvGetStringHead(p2));
		break;
	}
	case 366107: {
		if(p2==0)return -2;
		*(int*)p4 = pThis->addTab((QWidget*)(p1),*(QIcon*)(p2),drvGetStringHead(p3));
		break;
	}
	case 366108: {
		pThis->clear();
		break;
	}
	case 366109: {
		*(void**)p1 = pThis->cornerWidget();
		break;
	}
	case 366110: {
		*(void**)p2 = pThis->cornerWidget(*(Qt::Corner*)p1);
		break;
	}
	case 366111: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 366112: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 366113: {
		*(void**)p1 = pThis->currentWidget();
		break;
	}
	case 366114: {
		*(bool*)p1 = pThis->documentMode();
		break;
	}
	case 366115: {
		*(Qt::TextElideMode*)p1 = pThis->elideMode();
		break;
	}
	case 366116: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 366117: {
		*(int*)p2 = pThis->indexOf((QWidget*)(p1));
		break;
	}
	case 366118: {
		*(int*)p4 = pThis->insertTab(*(int*)p1,(QWidget*)(p2),drvGetStringHead(p3));
		break;
	}
	case 366119: {
		if(p3==0)return -2;
		*(int*)p5 = pThis->insertTab(*(int*)p1,(QWidget*)(p2),*(QIcon*)(p3),drvGetStringHead(p4));
		break;
	}
	case 366120: {
		*(bool*)p1 = pThis->isMovable();
		break;
	}
	case 366121: {
		*(bool*)p2 = pThis->isTabEnabled(*(int*)p1);
		break;
	}
	case 366122: {
		pThis->removeTab(*(int*)p1);
		break;
	}
	case 366123: {
		pThis->setCornerWidget((QWidget*)(p1));
		break;
	}
	case 366124: {
		pThis->setCornerWidget((QWidget*)(p1),*(Qt::Corner*)p2);
		break;
	}
	case 366125: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 366126: {
		pThis->setCurrentWidget((QWidget*)(p1));
		break;
	}
	case 366127: {
		pThis->setDocumentMode(*(bool*)p1);
		break;
	}
	case 366128: {
		pThis->setElideMode(*(Qt::TextElideMode*)p1);
		break;
	}
	case 366129: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 366130: {
		pThis->setMovable(*(bool*)p1);
		break;
	}
	case 366131: {
		pThis->setTabBar((QTabBar*)(p1));
		break;
	}
	case 366132: {
		pThis->setTabEnabled(*(int*)p1,*(bool*)p2);
		break;
	}
	case 366133: {
		if(p2==0)return -2;
		pThis->setTabIcon(*(int*)p1,*(QIcon*)(p2));
		break;
	}
	case 366134: {
		pThis->setTabPosition(*(QTabWidget::TabPosition*)p1);
		break;
	}
	case 366135: {
		pThis->setTabShape(*(QTabWidget::TabShape*)p1);
		break;
	}
	case 366136: {
		pThis->setTabText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 366137: {
		pThis->setTabToolTip(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 366138: {
		pThis->setTabWhatsThis(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 366139: {
		pThis->setTabsClosable(*(bool*)p1);
		break;
	}
	case 366140: {
		pThis->setUsesScrollButtons(*(bool*)p1);
		break;
	}
	case 366141: {
		*(void**)p1 = pThis->tabBar();
		break;
	}
	case 366142: {
		*(void**)p2 = new QIcon(pThis->tabIcon(*(int*)p1));
		break;
	}
	case 366143: {
		pThis->tabInserted(*(int*)p1);
		break;
	}
	case 366144: {
		*(QTabWidget::TabPosition*)p1 = pThis->tabPosition();
		break;
	}
	case 366145: {
		pThis->tabRemoved(*(int*)p1);
		break;
	}
	case 366146: {
		*(QTabWidget::TabShape*)p1 = pThis->tabShape();
		break;
	}
	case 366147: {
		drvSetString(p2,pThis->tabText(*(int*)p1));
		break;
	}
	case 366148: {
		drvSetString(p2,pThis->tabToolTip(*(int*)p1));
		break;
	}
	case 366149: {
		drvSetString(p2,pThis->tabWhatsThis(*(int*)p1));
		break;
	}
	case 366150: {
		*(bool*)p1 = pThis->tabsClosable();
		break;
	}
	case 366151: {
		*(bool*)p1 = pThis->usesScrollButtons();
		break;
	}
	case 366152: {
		*(void**)p2 = pThis->widget(*(int*)p1);
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTableView
int drv_QTableView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTableView *pThis = (QTableView*)_p;
	switch (funcid) {
	case 367000+1: {
		delete pThis;
		break;
	}
	case 367102: {
		*(void**)_p = new QTableView();
		break;
	}
	case 367103: {
		*(void**)_p = new QTableView((QWidget*)(p1));
		break;
	}
	case 367104: {
		pThis->clearSpans();
		break;
	}
	case 367105: {
		*(int*)p2 = pThis->columnAt(*(int*)p1);
		break;
	}
	case 367106: {
		pThis->columnCountChanged(*(int*)p1,*(int*)p2);
		break;
	}
	case 367107: {
		pThis->columnMoved(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 367108: {
		pThis->columnResized(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 367109: {
		*(int*)p3 = pThis->columnSpan(*(int*)p1,*(int*)p2);
		break;
	}
	case 367110: {
		*(int*)p2 = pThis->columnViewportPosition(*(int*)p1);
		break;
	}
	case 367111: {
		*(int*)p2 = pThis->columnWidth(*(int*)p1);
		break;
	}
	case 367112: {
		*(Qt::PenStyle*)p1 = pThis->gridStyle();
		break;
	}
	case 367113: {
		pThis->hideColumn(*(int*)p1);
		break;
	}
	case 367114: {
		pThis->hideRow(*(int*)p1);
		break;
	}
	case 367115: {
		*(void**)p1 = pThis->horizontalHeader();
		break;
	}
	case 367116: {
		*(bool*)p2 = pThis->isColumnHidden(*(int*)p1);
		break;
	}
	case 367117: {
		*(bool*)p1 = pThis->isCornerButtonEnabled();
		break;
	}
	case 367118: {
		*(bool*)p2 = pThis->isRowHidden(*(int*)p1);
		break;
	}
	case 367119: {
		*(bool*)p1 = pThis->isSortingEnabled();
		break;
	}
	case 367120: {
		pThis->resizeColumnToContents(*(int*)p1);
		break;
	}
	case 367121: {
		pThis->resizeColumnsToContents();
		break;
	}
	case 367122: {
		pThis->resizeRowToContents(*(int*)p1);
		break;
	}
	case 367123: {
		pThis->resizeRowsToContents();
		break;
	}
	case 367124: {
		*(int*)p2 = pThis->rowAt(*(int*)p1);
		break;
	}
	case 367125: {
		pThis->rowCountChanged(*(int*)p1,*(int*)p2);
		break;
	}
	case 367126: {
		*(int*)p2 = pThis->rowHeight(*(int*)p1);
		break;
	}
	case 367127: {
		pThis->rowMoved(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 367128: {
		pThis->rowResized(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 367129: {
		*(int*)p3 = pThis->rowSpan(*(int*)p1,*(int*)p2);
		break;
	}
	case 367130: {
		*(int*)p2 = pThis->rowViewportPosition(*(int*)p1);
		break;
	}
	case 367131: {
		pThis->selectColumn(*(int*)p1);
		break;
	}
	case 367132: {
		pThis->selectRow(*(int*)p1);
		break;
	}
	case 367133: {
		pThis->setColumnHidden(*(int*)p1,*(bool*)p2);
		break;
	}
	case 367134: {
		pThis->setColumnWidth(*(int*)p1,*(int*)p2);
		break;
	}
	case 367135: {
		pThis->setCornerButtonEnabled(*(bool*)p1);
		break;
	}
	case 367136: {
		pThis->setGridStyle(*(Qt::PenStyle*)p1);
		break;
	}
	case 367137: {
		pThis->setHorizontalHeader((QHeaderView*)(p1));
		break;
	}
	case 367138: {
		pThis->setRowHeight(*(int*)p1,*(int*)p2);
		break;
	}
	case 367139: {
		pThis->setRowHidden(*(int*)p1,*(bool*)p2);
		break;
	}
	case 367140: {
		pThis->setShowGrid(*(bool*)p1);
		break;
	}
	case 367141: {
		pThis->setSortingEnabled(*(bool*)p1);
		break;
	}
	case 367142: {
		pThis->setSpan(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 367143: {
		pThis->setVerticalHeader((QHeaderView*)(p1));
		break;
	}
	case 367144: {
		pThis->setWordWrap(*(bool*)p1);
		break;
	}
	case 367145: {
		pThis->showColumn(*(int*)p1);
		break;
	}
	case 367146: {
		*(bool*)p1 = pThis->showGrid();
		break;
	}
	case 367147: {
		pThis->showRow(*(int*)p1);
		break;
	}
	case 367148: {
		pThis->sortByColumn(*(int*)p1);
		break;
	}
	case 367149: {
		pThis->sortByColumn(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 367150: {
		*(void**)p1 = pThis->verticalHeader();
		break;
	}
	case 367151: {
		*(bool*)p1 = pThis->wordWrap();
		break;
	}
	default:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTableWidget
int drv_QTableWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTableWidget *pThis = (QTableWidget*)_p;
	switch (funcid) {
	case 368000+1: {
		delete pThis;
		break;
	}
	case 368102: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemEntered(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368103: {
		UISignal74 *uis = new UISignal74(pThis);
		if (QObject::connect(pThis,SIGNAL(currentCellChanged(int,int,int,int)),uis,SLOT(call(int,int,int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368104: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemPressed(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(itemSelectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368106: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellActivated(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368107: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellClicked(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368108: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellChanged(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368109: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellDoubleClicked(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368110: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemActivated(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368111: {
		UISignal46 *uis = new UISignal46(pThis);
		if (QObject::connect(pThis,SIGNAL(currentItemChanged(QTableWidgetItem*,QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*,QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368112: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemDoubleClicked(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368113: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellPressed(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368114: {
		UISignal72 *uis = new UISignal72(pThis);
		if (QObject::connect(pThis,SIGNAL(cellEntered(int,int)),uis,SLOT(call(int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368115: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemChanged(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368116: {
		UISignal45 *uis = new UISignal45(pThis);
		if (QObject::connect(pThis,SIGNAL(itemClicked(QTableWidgetItem*)),uis,SLOT(call(QTableWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 368117: {
		*(void**)_p = new QTableWidget();
		break;
	}
	case 368118: {
		*(void**)_p = new QTableWidget((QWidget*)(p1));
		break;
	}
	case 368119: {
		*(void**)_p = new QTableWidget(*(int*)p1,*(int*)p2,(QWidget*)(p3));
		break;
	}
	case 368120: {
		*(void**)p3 = pThis->cellWidget(*(int*)p1,*(int*)p2);
		break;
	}
	case 368121: {
		pThis->clear();
		break;
	}
	case 368122: {
		pThis->clearContents();
		break;
	}
	case 368123: {
		pThis->closePersistentEditor((QTableWidgetItem*)(p1));
		break;
	}
	case 368124: {
		*(int*)p2 = pThis->column((QTableWidgetItem*)(p1));
		break;
	}
	case 368125: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 368126: {
		*(int*)p1 = pThis->currentColumn();
		break;
	}
	case 368127: {
		*(void**)p1 = pThis->currentItem();
		break;
	}
	case 368128: {
		*(int*)p1 = pThis->currentRow();
		break;
	}
	case 368129: {
		*(bool*)p5 = pThis->dropMimeData(*(int*)p1,*(int*)p2,(QMimeData*)(p3),*(Qt::DropAction*)p4);
		break;
	}
	case 368130: {
		pThis->editItem((QTableWidgetItem*)(p1));
		break;
	}
	case 368131: {
		drvSetListObj<QTableWidgetItem*>(p3,136000,pThis->findItems(drvGetStringHead(p1),*(QFlags<Qt::MatchFlag>*)p2));
		break;
	}
	case 368132: {
		*(void**)p2 = pThis->horizontalHeaderItem(*(int*)p1);
		break;
	}
	case 368133: {
		*(void**)p2 = new QModelIndex(pThis->indexFromItem((QTableWidgetItem*)(p1)));
		break;
	}
	case 368134: {
		pThis->insertColumn(*(int*)p1);
		break;
	}
	case 368135: {
		pThis->insertRow(*(int*)p1);
		break;
	}
	case 368136: {
		*(bool*)p2 = pThis->isItemSelected((QTableWidgetItem*)(p1));
		break;
	}
	case 368137: {
		*(bool*)p1 = pThis->isSortingEnabled();
		break;
	}
	case 368138: {
		*(void**)p3 = pThis->item(*(int*)p1,*(int*)p2);
		break;
	}
	case 368139: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemAt(*(QPoint*)(p1));
		break;
	}
	case 368140: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 368141: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemFromIndex(*(QModelIndex*)(p1));
		break;
	}
	case 368142: {
		*(const void**)p1 = pThis->itemPrototype();
		break;
	}
	case 368143: {
		drvSetListObj<QTableWidgetItem*>(p2,136000,pThis->items((QMimeData*)(p1)));
		break;
	}
	case 368144: {
		*(void**)p2 = pThis->mimeData(drvGetObjectArrayHeadT<QTableWidgetItem*>(p1));
		break;
	}
	case 368145: {
		drvSetStringArray(p1,pThis->mimeTypes());
		break;
	}
	case 368146: {
		pThis->openPersistentEditor((QTableWidgetItem*)(p1));
		break;
	}
	case 368147: {
		pThis->removeCellWidget(*(int*)p1,*(int*)p2);
		break;
	}
	case 368148: {
		pThis->removeColumn(*(int*)p1);
		break;
	}
	case 368149: {
		pThis->removeRow(*(int*)p1);
		break;
	}
	case 368150: {
		*(int*)p2 = pThis->row((QTableWidgetItem*)(p1));
		break;
	}
	case 368151: {
		*(int*)p1 = pThis->rowCount();
		break;
	}
	case 368152: {
		pThis->scrollToItem((QTableWidgetItem*)(p1));
		break;
	}
	case 368153: {
		pThis->scrollToItem((QTableWidgetItem*)(p1),*(QAbstractItemView::ScrollHint*)p2);
		break;
	}
	case 368154: {
		drvSetListObj<QTableWidgetItem*>(p1,136000,pThis->selectedItems());
		break;
	}
	case 368155: {
		drvSetListPtr<QTableWidgetSelectionRange>(p1,137000,pThis->selectedRanges());
		break;
	}
	case 368156: {
		pThis->setCellWidget(*(int*)p1,*(int*)p2,(QWidget*)(p3));
		break;
	}
	case 368157: {
		pThis->setColumnCount(*(int*)p1);
		break;
	}
	case 368158: {
		pThis->setCurrentCell(*(int*)p1,*(int*)p2);
		break;
	}
	case 368159: {
		pThis->setCurrentCell(*(int*)p1,*(int*)p2,*(QFlags<QItemSelectionModel::SelectionFlag>*)p3);
		break;
	}
	case 368160: {
		pThis->setCurrentItem((QTableWidgetItem*)(p1));
		break;
	}
	case 368161: {
		pThis->setCurrentItem((QTableWidgetItem*)(p1),*(QFlags<QItemSelectionModel::SelectionFlag>*)p2);
		break;
	}
	case 368162: {
		pThis->setHorizontalHeaderItem(*(int*)p1,(QTableWidgetItem*)(p2));
		break;
	}
	case 368163: {
		pThis->setHorizontalHeaderLabels(drvGetStringArray(p1));
		break;
	}
	case 368164: {
		pThis->setItem(*(int*)p1,*(int*)p2,(QTableWidgetItem*)(p3));
		break;
	}
	case 368165: {
		pThis->setItemPrototype((QTableWidgetItem*)(p1));
		break;
	}
	case 368166: {
		pThis->setItemSelected((QTableWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 368167: {
		if(p1==0)return -2;
		pThis->setRangeSelected(*(QTableWidgetSelectionRange*)(p1),*(bool*)p2);
		break;
	}
	case 368168: {
		pThis->setRowCount(*(int*)p1);
		break;
	}
	case 368169: {
		pThis->setSortingEnabled(*(bool*)p1);
		break;
	}
	case 368170: {
		pThis->setVerticalHeaderItem(*(int*)p1,(QTableWidgetItem*)(p2));
		break;
	}
	case 368171: {
		pThis->setVerticalHeaderLabels(drvGetStringArray(p1));
		break;
	}
	case 368172: {
		pThis->sortItems(*(int*)p1);
		break;
	}
	case 368173: {
		pThis->sortItems(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 368174: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->supportedDropActions();
		break;
	}
	case 368175: {
		*(void**)p2 = pThis->takeHorizontalHeaderItem(*(int*)p1);
		break;
	}
	case 368176: {
		*(void**)p3 = pThis->takeItem(*(int*)p1,*(int*)p2);
		break;
	}
	case 368177: {
		*(void**)p2 = pThis->takeVerticalHeaderItem(*(int*)p1);
		break;
	}
	case 368178: {
		*(void**)p2 = pThis->verticalHeaderItem(*(int*)p1);
		break;
	}
	case 368179: {
		*(int*)p2 = pThis->visualColumn(*(int*)p1);
		break;
	}
	case 368180: {
		*(void**)p2 = new QRect(pThis->visualItemRect((QTableWidgetItem*)(p1)));
		break;
	}
	case 368181: {
		*(int*)p2 = pThis->visualRow(*(int*)p1);
		break;
	}
	default:
		return drv_QTableView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTapAndHoldGesture
int drv_QTapAndHoldGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTapAndHoldGesture *pThis = (QTapAndHoldGesture*)_p;
	switch (funcid) {
	case 369000+1: {
		delete pThis;
		break;
	}
	case 369102: {
		*(void**)_p = new QTapAndHoldGesture();
		break;
	}
	case 369103: {
		*(void**)_p = new QTapAndHoldGesture((QObject*)(p1));
		break;
	}
	case 369104: {
		*(void**)p1 = new QPointF(pThis->position());
		break;
	}
	case 369105: {
		if(p1==0)return -2;
		pThis->setPosition(*(QPointF*)(p1));
		break;
	}
	case 369106: {
		QTapAndHoldGesture::setTimeout(*(int*)p1);
		break;
	}
	case 369107: {
		*(int*)p1 = QTapAndHoldGesture::timeout();
		break;
	}
	default:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTapGesture
int drv_QTapGesture(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTapGesture *pThis = (QTapGesture*)_p;
	switch (funcid) {
	case 370000+1: {
		delete pThis;
		break;
	}
	case 370102: {
		*(void**)_p = new QTapGesture();
		break;
	}
	case 370103: {
		*(void**)_p = new QTapGesture((QObject*)(p1));
		break;
	}
	case 370104: {
		*(void**)p1 = new QPointF(pThis->position());
		break;
	}
	case 370105: {
		if(p1==0)return -2;
		pThis->setPosition(*(QPointF*)(p1));
		break;
	}
	default:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTemporaryFile
int drv_QTemporaryFile(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTemporaryFile *pThis = (QTemporaryFile*)_p;
	switch (funcid) {
	case 371000+1: {
		delete pThis;
		break;
	}
	case 371102: {
		*(void**)_p = new QTemporaryFile();
		break;
	}
	case 371103: {
		*(void**)_p = new QTemporaryFile((QObject*)(p1));
		break;
	}
	case 371104: {
		*(void**)_p = new QTemporaryFile(drvGetStringHead(p1));
		break;
	}
	case 371105: {
		*(void**)_p = new QTemporaryFile(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 371106: {
		*(bool*)p1 = pThis->autoRemove();
		break;
	}
	case 371107: {
		if(p1==0)return -2;
		*(void**)p2 = QTemporaryFile::createLocalFile(*(QFile*)(p1));
		break;
	}
	case 371108: {
		*(void**)p2 = QTemporaryFile::createLocalFile(drvGetStringHead(p1));
		break;
	}
	case 371109: {
		drvSetString(p1,pThis->fileName());
		break;
	}
	case 371110: {
		drvSetString(p1,pThis->fileTemplate());
		break;
	}
	case 371111: {
		*(bool*)p1 = pThis->open();
		break;
	}
	case 371112: {
		pThis->setAutoRemove(*(bool*)p1);
		break;
	}
	case 371113: {
		pThis->setFileTemplate(drvGetStringHead(p1));
		break;
	}
	default:
		return drv_QFile(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextBlockGroup
int drv_QTextBlockGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextBlockGroup *pThis = (QTextBlockGroup*)_p;
	switch (funcid) {
	case 372102: {
		if(p1==0)return -2;
		pThis->blockFormatChanged(*(QTextBlock*)(p1));
		break;
	}
	case 372103: {
		if(p1==0)return -2;
		pThis->blockInserted(*(QTextBlock*)(p1));
		break;
	}
	case 372104: {
		drvSetListPtr<QTextBlock>(p1,139000,pThis->blockList());
		break;
	}
	case 372105: {
		if(p1==0)return -2;
		pThis->blockRemoved(*(QTextBlock*)(p1));
		break;
	}
	default:
		return drv_QTextObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextBrowser
int drv_QTextBrowser(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextBrowser *pThis = (QTextBrowser*)_p;
	switch (funcid) {
	case 373000+1: {
		delete pThis;
		break;
	}
	case 373102: {
		UISignal56 *uis = new UISignal56(pThis);
		if (QObject::connect(pThis,SIGNAL(sourceChanged(QUrl const&)),uis,SLOT(call(QUrl const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373103: {
		UISignal56 *uis = new UISignal56(pThis);
		if (QObject::connect(pThis,SIGNAL(anchorClicked(QUrl const&)),uis,SLOT(call(QUrl const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373105: {
		UISignal56 *uis = new UISignal56(pThis);
		if (QObject::connect(pThis,SIGNAL(highlighted(QUrl const&)),uis,SLOT(call(QUrl const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(historyChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373107: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(backwardAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373108: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(forwardAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 373109: {
		*(void**)_p = new QTextBrowser();
		break;
	}
	case 373110: {
		*(void**)_p = new QTextBrowser((QWidget*)(p1));
		break;
	}
	case 373111: {
		pThis->backward();
		break;
	}
	case 373112: {
		*(int*)p1 = pThis->backwardHistoryCount();
		break;
	}
	case 373113: {
		pThis->clearHistory();
		break;
	}
	case 373114: {
		pThis->forward();
		break;
	}
	case 373115: {
		*(int*)p1 = pThis->forwardHistoryCount();
		break;
	}
	case 373116: {
		drvSetString(p2,pThis->historyTitle(*(int*)p1));
		break;
	}
	case 373117: {
		*(void**)p2 = new QUrl(pThis->historyUrl(*(int*)p1));
		break;
	}
	case 373118: {
		pThis->home();
		break;
	}
	case 373119: {
		*(bool*)p1 = pThis->isBackwardAvailable();
		break;
	}
	case 373120: {
		*(bool*)p1 = pThis->isForwardAvailable();
		break;
	}
	case 373121: {
		*(bool*)p1 = pThis->openExternalLinks();
		break;
	}
	case 373122: {
		*(bool*)p1 = pThis->openLinks();
		break;
	}
	case 373123: {
		pThis->reload();
		break;
	}
	case 373124: {
		drvSetStringArray(p1,pThis->searchPaths());
		break;
	}
	case 373125: {
		pThis->setOpenExternalLinks(*(bool*)p1);
		break;
	}
	case 373126: {
		pThis->setOpenLinks(*(bool*)p1);
		break;
	}
	case 373127: {
		pThis->setSearchPaths(drvGetStringArray(p1));
		break;
	}
	case 373128: {
		if(p1==0)return -2;
		pThis->setSource(*(QUrl*)(p1));
		break;
	}
	case 373129: {
		*(void**)p1 = new QUrl(pThis->source());
		break;
	}
	default:
		return drv_QTextEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextDocument
int drv_QTextDocument(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextDocument *pThis = (QTextDocument*)_p;
	switch (funcid) {
	case 374000+1: {
		delete pThis;
		break;
	}
	case 374102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(undoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(blockCountChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374104: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(modificationChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374105: {
		UISignal49 *uis = new UISignal49(pThis);
		if (QObject::connect(pThis,SIGNAL(cursorPositionChanged(QTextCursor const&)),uis,SLOT(call(QTextCursor const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374106: {
		UISignal73 *uis = new UISignal73(pThis);
		if (QObject::connect(pThis,SIGNAL(contentsChange(int,int,int)),uis,SLOT(call(int,int,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374107: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(documentLayoutChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374108: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(undoCommandAdded()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374109: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(contentsChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374110: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(redoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 374111: {
		*(void**)_p = new QTextDocument();
		break;
	}
	case 374112: {
		*(void**)_p = new QTextDocument((QObject*)(p1));
		break;
	}
	case 374113: {
		*(void**)_p = new QTextDocument(drvGetStringHead(p1),(QObject*)(p2));
		break;
	}
	case 374114: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->addResource(*(int*)p1,*(QUrl*)(p2),*(QVariant*)(p3));
		break;
	}
	case 374115: {
		pThis->adjustSize();
		break;
	}
	case 374116: {
		drvSetVectorPtr<QTextFormat>(p1,153000,pThis->allFormats());
		break;
	}
	case 374117: {
		pThis->appendUndoItem((QAbstractUndoItem*)(p1));
		break;
	}
	case 374118: {
		*(int*)p1 = pThis->availableRedoSteps();
		break;
	}
	case 374119: {
		*(int*)p1 = pThis->availableUndoSteps();
		break;
	}
	case 374120: {
		*(void**)p1 = new QTextBlock(pThis->begin());
		break;
	}
	case 374121: {
		*(int*)p1 = pThis->blockCount();
		break;
	}
	case 374122: {
		*(QChar*)p2 = pThis->characterAt(*(int*)p1);
		break;
	}
	case 374123: {
		*(int*)p1 = pThis->characterCount();
		break;
	}
	case 374124: {
		pThis->clear();
		break;
	}
	case 374125: {
		pThis->clearUndoRedoStacks();
		break;
	}
	case 374126: {
		pThis->clearUndoRedoStacks(*(QTextDocument::Stacks*)p1);
		break;
	}
	case 374127: {
		*(void**)p1 = pThis->clone();
		break;
	}
	case 374128: {
		*(void**)p2 = pThis->clone((QObject*)(p1));
		break;
	}
	case 374129: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->createObject(*(QTextFormat*)(p1));
		break;
	}
	case 374130: {
		*(void**)p1 = new QFont(pThis->defaultFont());
		break;
	}
	case 374131: {
		drvSetString(p1,pThis->defaultStyleSheet());
		break;
	}
	case 374132: {
		*(void**)p1 = new QTextOption(pThis->defaultTextOption());
		break;
	}
	case 374133: {
		*(void**)p1 = pThis->documentLayout();
		break;
	}
	case 374134: {
		*(double*)p1 = pThis->documentMargin();
		break;
	}
	case 374135: {
		pThis->drawContents((QPainter*)(p1));
		break;
	}
	case 374136: {
		pThis->drawContents((QPainter*)(p1),p2==0?QRectF():*(QRectF*)(p2));
		break;
	}
	case 374137: {
		*(void**)p1 = new QTextBlock(pThis->end());
		break;
	}
	case 374138: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCursor(pThis->find(*(QRegExp*)(p1)));
		break;
	}
	case 374139: {
		*(void**)p2 = new QTextCursor(pThis->find(drvGetStringHead(p1)));
		break;
	}
	case 374140: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p4 = new QTextCursor(pThis->find(*(QRegExp*)(p1),*(QTextCursor*)(p2),*(QFlags<QTextDocument::FindFlag>*)p3));
		break;
	}
	case 374141: {
		if(p1==0)return -2;
		*(void**)p4 = new QTextCursor(pThis->find(*(QRegExp*)(p1),*(int*)p2,*(QFlags<QTextDocument::FindFlag>*)p3));
		break;
	}
	case 374142: {
		if(p2==0)return -2;
		*(void**)p4 = new QTextCursor(pThis->find(drvGetStringHead(p1),*(QTextCursor*)(p2),*(QFlags<QTextDocument::FindFlag>*)p3));
		break;
	}
	case 374143: {
		*(void**)p4 = new QTextCursor(pThis->find(drvGetStringHead(p1),*(int*)p2,*(QFlags<QTextDocument::FindFlag>*)p3));
		break;
	}
	case 374144: {
		*(void**)p2 = new QTextBlock(pThis->findBlock(*(int*)p1));
		break;
	}
	case 374145: {
		*(void**)p2 = new QTextBlock(pThis->findBlockByLineNumber(*(int*)p1));
		break;
	}
	case 374146: {
		*(void**)p2 = new QTextBlock(pThis->findBlockByNumber(*(int*)p1));
		break;
	}
	case 374147: {
		*(void**)p1 = new QTextBlock(pThis->firstBlock());
		break;
	}
	case 374148: {
		*(void**)p2 = pThis->frameAt(*(int*)p1);
		break;
	}
	case 374149: {
		*(double*)p1 = pThis->idealWidth();
		break;
	}
	case 374150: {
		*(double*)p1 = pThis->indentWidth();
		break;
	}
	case 374151: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 374152: {
		*(bool*)p1 = pThis->isModified();
		break;
	}
	case 374153: {
		*(bool*)p1 = pThis->isRedoAvailable();
		break;
	}
	case 374154: {
		*(bool*)p1 = pThis->isUndoAvailable();
		break;
	}
	case 374155: {
		*(bool*)p1 = pThis->isUndoRedoEnabled();
		break;
	}
	case 374156: {
		*(void**)p1 = new QTextBlock(pThis->lastBlock());
		break;
	}
	case 374157: {
		*(int*)p1 = pThis->lineCount();
		break;
	}
	case 374158: {
		if(p2==0)return -2;
		*(void**)p3 = new QVariant(pThis->loadResource(*(int*)p1,*(QUrl*)(p2)));
		break;
	}
	case 374159: {
		pThis->markContentsDirty(*(int*)p1,*(int*)p2);
		break;
	}
	case 374160: {
		*(int*)p1 = pThis->maximumBlockCount();
		break;
	}
	case 374161: {
		drvSetString(p2,pThis->metaInformation(*(QTextDocument::MetaInformation*)p1));
		break;
	}
	case 374162: {
		*(void**)p2 = pThis->object(*(int*)p1);
		break;
	}
	case 374163: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->objectForFormat(*(QTextFormat*)(p1));
		break;
	}
	case 374164: {
		*(int*)p1 = pThis->pageCount();
		break;
	}
	case 374165: {
		*(void**)p1 = new QSizeF(pThis->pageSize());
		break;
	}
	case 374166: {
		pThis->print((QPrinter*)(p1));
		break;
	}
	case 374167: {
		pThis->redo();
		break;
	}
	case 374168: {
		pThis->redo((QTextCursor*)(p1));
		break;
	}
	case 374169: {
		if(p2==0)return -2;
		*(void**)p3 = new QVariant(pThis->resource(*(int*)p1,*(QUrl*)(p2)));
		break;
	}
	case 374170: {
		*(int*)p1 = pThis->revision();
		break;
	}
	case 374171: {
		*(void**)p1 = pThis->rootFrame();
		break;
	}
	case 374172: {
		if(p1==0)return -2;
		pThis->setDefaultFont(*(QFont*)(p1));
		break;
	}
	case 374173: {
		pThis->setDefaultStyleSheet(drvGetStringHead(p1));
		break;
	}
	case 374174: {
		if(p1==0)return -2;
		pThis->setDefaultTextOption(*(QTextOption*)(p1));
		break;
	}
	case 374175: {
		pThis->setDocumentLayout((QAbstractTextDocumentLayout*)(p1));
		break;
	}
	case 374176: {
		pThis->setDocumentMargin(*(double*)p1);
		break;
	}
	case 374177: {
		pThis->setHtml(drvGetStringHead(p1));
		break;
	}
	case 374178: {
		pThis->setIndentWidth(*(double*)p1);
		break;
	}
	case 374179: {
		pThis->setMaximumBlockCount(*(int*)p1);
		break;
	}
	case 374180: {
		pThis->setMetaInformation(*(QTextDocument::MetaInformation*)p1,drvGetStringHead(p2));
		break;
	}
	case 374181: {
		pThis->setModified(*(bool*)p1);
		break;
	}
	case 374182: {
		if(p1==0)return -2;
		pThis->setPageSize(*(QSizeF*)(p1));
		break;
	}
	case 374183: {
		pThis->setPlainText(drvGetStringHead(p1));
		break;
	}
	case 374184: {
		pThis->setTextWidth(*(double*)p1);
		break;
	}
	case 374185: {
		pThis->setUndoRedoEnabled(*(bool*)p1);
		break;
	}
	case 374186: {
		pThis->setUseDesignMetrics(*(bool*)p1);
		break;
	}
	case 374187: {
		*(void**)p1 = new QSizeF(pThis->size());
		break;
	}
	case 374188: {
		*(double*)p1 = pThis->textWidth();
		break;
	}
	case 374189: {
		drvSetString(p1,pThis->toHtml());
		break;
	}
	case 374190: {
		drvSetString(p2,pThis->toHtml(drvGetByteArrayHead(p1)));
		break;
	}
	case 374191: {
		drvSetString(p1,pThis->toPlainText());
		break;
	}
	case 374192: {
		pThis->undo();
		break;
	}
	case 374193: {
		pThis->undo((QTextCursor*)(p1));
		break;
	}
	case 374194: {
		*(bool*)p1 = pThis->useDesignMetrics();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextEdit
int drv_QTextEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextEdit *pThis = (QTextEdit*)_p;
	switch (funcid) {
	case 375000+1: {
		delete pThis;
		break;
	}
	case 375102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(copyAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375103: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(undoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(cursorPositionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375105: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(selectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375106: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(textChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375107: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(redoAvailable(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375108: {
		UISignal48 *uis = new UISignal48(pThis);
		if (QObject::connect(pThis,SIGNAL(currentCharFormatChanged(QTextCharFormat const&)),uis,SLOT(call(QTextCharFormat const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 375109: {
		*(void**)_p = new QTextEdit();
		break;
	}
	case 375110: {
		*(void**)_p = new QTextEdit((QWidget*)(p1));
		break;
	}
	case 375111: {
		*(void**)_p = new QTextEdit(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 375112: {
		*(bool*)p1 = pThis->acceptRichText();
		break;
	}
	case 375113: {
		*(QFlags<Qt::AlignmentFlag>*)p1 = pThis->alignment();
		break;
	}
	case 375114: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->anchorAt(*(QPoint*)(p1)));
		break;
	}
	case 375115: {
		pThis->append(drvGetStringHead(p1));
		break;
	}
	case 375116: {
		*(QFlags<QTextEdit::AutoFormattingFlag>*)p1 = pThis->autoFormatting();
		break;
	}
	case 375117: {
		*(bool*)p2 = pThis->canInsertFromMimeData((QMimeData*)(p1));
		break;
	}
	case 375118: {
		*(bool*)p1 = pThis->canPaste();
		break;
	}
	case 375119: {
		pThis->clear();
		break;
	}
	case 375120: {
		pThis->copy();
		break;
	}
	case 375121: {
		*(void**)p1 = pThis->createMimeDataFromSelection();
		break;
	}
	case 375122: {
		*(void**)p1 = pThis->createStandardContextMenu();
		break;
	}
	case 375123: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->createStandardContextMenu(*(QPoint*)(p1));
		break;
	}
	case 375124: {
		*(void**)p1 = new QTextCharFormat(pThis->currentCharFormat());
		break;
	}
	case 375125: {
		*(void**)p1 = new QFont(pThis->currentFont());
		break;
	}
	case 375126: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCursor(pThis->cursorForPosition(*(QPoint*)(p1)));
		break;
	}
	case 375127: {
		*(void**)p1 = new QRect(pThis->cursorRect());
		break;
	}
	case 375128: {
		if(p1==0)return -2;
		*(void**)p2 = new QRect(pThis->cursorRect(*(QTextCursor*)(p1)));
		break;
	}
	case 375129: {
		*(int*)p1 = pThis->cursorWidth();
		break;
	}
	case 375130: {
		pThis->cut();
		break;
	}
	case 375131: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 375132: {
		drvSetString(p1,pThis->documentTitle());
		break;
	}
	case 375133: {
		pThis->ensureCursorVisible();
		break;
	}
	case 375134: {
		drvSetListPtr<QTextEdit::ExtraSelection>(p1,151000,pThis->extraSelections());
		break;
	}
	case 375135: {
		*(bool*)p2 = pThis->find(drvGetStringHead(p1));
		break;
	}
	case 375136: {
		*(bool*)p3 = pThis->find(drvGetStringHead(p1),*(QFlags<QTextDocument::FindFlag>*)p2);
		break;
	}
	case 375137: {
		drvSetString(p1,pThis->fontFamily());
		break;
	}
	case 375138: {
		*(bool*)p1 = pThis->fontItalic();
		break;
	}
	case 375139: {
		*(double*)p1 = pThis->fontPointSize();
		break;
	}
	case 375140: {
		*(bool*)p1 = pThis->fontUnderline();
		break;
	}
	case 375141: {
		*(int*)p1 = pThis->fontWeight();
		break;
	}
	case 375142: {
		pThis->insertFromMimeData((QMimeData*)(p1));
		break;
	}
	case 375143: {
		pThis->insertHtml(drvGetStringHead(p1));
		break;
	}
	case 375144: {
		pThis->insertPlainText(drvGetStringHead(p1));
		break;
	}
	case 375145: {
		*(bool*)p1 = pThis->isReadOnly();
		break;
	}
	case 375146: {
		*(bool*)p1 = pThis->isUndoRedoEnabled();
		break;
	}
	case 375147: {
		*(int*)p1 = pThis->lineWrapColumnOrWidth();
		break;
	}
	case 375148: {
		*(QTextEdit::LineWrapMode*)p1 = pThis->lineWrapMode();
		break;
	}
	case 375149: {
		if(p2==0)return -2;
		*(void**)p3 = new QVariant(pThis->loadResource(*(int*)p1,*(QUrl*)(p2)));
		break;
	}
	case 375150: {
		if(p1==0)return -2;
		pThis->mergeCurrentCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 375151: {
		pThis->moveCursor(*(QTextCursor::MoveOperation*)p1);
		break;
	}
	case 375152: {
		pThis->moveCursor(*(QTextCursor::MoveOperation*)p1,*(QTextCursor::MoveMode*)p2);
		break;
	}
	case 375153: {
		*(bool*)p1 = pThis->overwriteMode();
		break;
	}
	case 375154: {
		pThis->paste();
		break;
	}
	case 375155: {
		pThis->print((QPrinter*)(p1));
		break;
	}
	case 375156: {
		pThis->redo();
		break;
	}
	case 375157: {
		pThis->scrollToAnchor(drvGetStringHead(p1));
		break;
	}
	case 375158: {
		pThis->selectAll();
		break;
	}
	case 375159: {
		pThis->setAcceptRichText(*(bool*)p1);
		break;
	}
	case 375160: {
		pThis->setAlignment(*(QFlags<Qt::AlignmentFlag>*)p1);
		break;
	}
	case 375161: {
		pThis->setAutoFormatting(*(QFlags<QTextEdit::AutoFormattingFlag>*)p1);
		break;
	}
	case 375162: {
		if(p1==0)return -2;
		pThis->setCurrentCharFormat(*(QTextCharFormat*)(p1));
		break;
	}
	case 375163: {
		if(p1==0)return -2;
		pThis->setCurrentFont(*(QFont*)(p1));
		break;
	}
	case 375164: {
		pThis->setCursorWidth(*(int*)p1);
		break;
	}
	case 375165: {
		pThis->setDocument((QTextDocument*)(p1));
		break;
	}
	case 375166: {
		pThis->setDocumentTitle(drvGetStringHead(p1));
		break;
	}
	case 375167: {
		pThis->setExtraSelections(drvGetNoObjectArrayHeadT<QTextEdit::ExtraSelection>(p1));
		break;
	}
	case 375168: {
		pThis->setFontFamily(drvGetStringHead(p1));
		break;
	}
	case 375169: {
		pThis->setFontItalic(*(bool*)p1);
		break;
	}
	case 375170: {
		pThis->setFontPointSize(*(double*)p1);
		break;
	}
	case 375171: {
		pThis->setFontUnderline(*(bool*)p1);
		break;
	}
	case 375172: {
		pThis->setFontWeight(*(int*)p1);
		break;
	}
	case 375173: {
		pThis->setHtml(drvGetStringHead(p1));
		break;
	}
	case 375174: {
		pThis->setLineWrapColumnOrWidth(*(int*)p1);
		break;
	}
	case 375175: {
		pThis->setLineWrapMode(*(QTextEdit::LineWrapMode*)p1);
		break;
	}
	case 375176: {
		pThis->setOverwriteMode(*(bool*)p1);
		break;
	}
	case 375177: {
		pThis->setPlainText(drvGetStringHead(p1));
		break;
	}
	case 375178: {
		pThis->setReadOnly(*(bool*)p1);
		break;
	}
	case 375179: {
		pThis->setTabChangesFocus(*(bool*)p1);
		break;
	}
	case 375180: {
		pThis->setTabStopWidth(*(int*)p1);
		break;
	}
	case 375181: {
		pThis->setText(drvGetStringHead(p1));
		break;
	}
	case 375182: {
		if(p1==0)return -2;
		pThis->setTextBackgroundColor(*(QColor*)(p1));
		break;
	}
	case 375183: {
		if(p1==0)return -2;
		pThis->setTextColor(*(QColor*)(p1));
		break;
	}
	case 375184: {
		if(p1==0)return -2;
		pThis->setTextCursor(*(QTextCursor*)(p1));
		break;
	}
	case 375185: {
		pThis->setTextInteractionFlags(*(QFlags<Qt::TextInteractionFlag>*)p1);
		break;
	}
	case 375186: {
		pThis->setUndoRedoEnabled(*(bool*)p1);
		break;
	}
	case 375187: {
		pThis->setWordWrapMode(*(QTextOption::WrapMode*)p1);
		break;
	}
	case 375188: {
		*(bool*)p1 = pThis->tabChangesFocus();
		break;
	}
	case 375189: {
		*(int*)p1 = pThis->tabStopWidth();
		break;
	}
	case 375190: {
		*(void**)p1 = new QColor(pThis->textBackgroundColor());
		break;
	}
	case 375191: {
		*(void**)p1 = new QColor(pThis->textColor());
		break;
	}
	case 375192: {
		*(void**)p1 = new QTextCursor(pThis->textCursor());
		break;
	}
	case 375193: {
		*(QFlags<Qt::TextInteractionFlag>*)p1 = pThis->textInteractionFlags();
		break;
	}
	case 375194: {
		drvSetString(p1,pThis->toHtml());
		break;
	}
	case 375195: {
		drvSetString(p1,pThis->toPlainText());
		break;
	}
	case 375196: {
		pThis->undo();
		break;
	}
	case 375197: {
		*(QTextOption::WrapMode*)p1 = pThis->wordWrapMode();
		break;
	}
	case 375198: {
		pThis->zoomIn();
		break;
	}
	case 375199: {
		pThis->zoomIn(*(int*)p1);
		break;
	}
	case 375200: {
		pThis->zoomOut();
		break;
	}
	case 375201: {
		pThis->zoomOut(*(int*)p1);
		break;
	}
	default:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextFrame
int drv_QTextFrame(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextFrame *pThis = (QTextFrame*)_p;
	switch (funcid) {
	case 376000+1: {
		delete pThis;
		break;
	}
	case 376102: {
		*(void**)_p = new QTextFrame((QTextDocument*)(p1));
		break;
	}
	case 376103: {
		*(void**)p1 = new QTextFrame::iterator(pThis->begin());
		break;
	}
	case 376104: {
		drvSetListObj<QTextFrame*>(p1,376000,pThis->childFrames());
		break;
	}
	case 376105: {
		*(void**)p1 = new QTextFrame::iterator(pThis->end());
		break;
	}
	case 376106: {
		*(void**)p1 = new QTextCursor(pThis->firstCursorPosition());
		break;
	}
	case 376107: {
		*(int*)p1 = pThis->firstPosition();
		break;
	}
	case 376108: {
		*(void**)p1 = new QTextFrameFormat(pThis->frameFormat());
		break;
	}
	case 376109: {
		*(void**)p1 = new QTextCursor(pThis->lastCursorPosition());
		break;
	}
	case 376110: {
		*(int*)p1 = pThis->lastPosition();
		break;
	}
	case 376111: {
		*(void**)p1 = pThis->parentFrame();
		break;
	}
	case 376112: {
		if(p1==0)return -2;
		pThis->setFrameFormat(*(QTextFrameFormat*)(p1));
		break;
	}
	default:
		return drv_QTextObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextList
int drv_QTextList(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextList *pThis = (QTextList*)_p;
	switch (funcid) {
	case 377000+1: {
		delete pThis;
		break;
	}
	case 377102: {
		*(void**)_p = new QTextList((QTextDocument*)(p1));
		break;
	}
	case 377103: {
		if(p1==0)return -2;
		pThis->add(*(QTextBlock*)(p1));
		break;
	}
	case 377104: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 377105: {
		*(void**)p1 = new QTextListFormat(pThis->format());
		break;
	}
	case 377106: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 377107: {
		*(void**)p2 = new QTextBlock(pThis->item(*(int*)p1));
		break;
	}
	case 377108: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->itemNumber(*(QTextBlock*)(p1));
		break;
	}
	case 377109: {
		if(p1==0)return -2;
		drvSetString(p2,pThis->itemText(*(QTextBlock*)(p1)));
		break;
	}
	case 377110: {
		if(p1==0)return -2;
		pThis->remove(*(QTextBlock*)(p1));
		break;
	}
	case 377111: {
		pThis->removeItem(*(int*)p1);
		break;
	}
	case 377112: {
		if(p1==0)return -2;
		pThis->setFormat(*(QTextListFormat*)(p1));
		break;
	}
	default:
		return drv_QTextBlockGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextObject
int drv_QTextObject(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextObject *pThis = (QTextObject*)_p;
	switch (funcid) {
	case 378102: {
		*(void**)p1 = pThis->document();
		break;
	}
	case 378103: {
		*(void**)p1 = new QTextFormat(pThis->format());
		break;
	}
	case 378104: {
		*(int*)p1 = pThis->formatIndex();
		break;
	}
	case 378105: {
		*(int*)p1 = pThis->objectIndex();
		break;
	}
	case 378106: {
		if(p1==0)return -2;
		pThis->setFormat(*(QTextFormat*)(p1));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTextTable
int drv_QTextTable(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTextTable *pThis = (QTextTable*)_p;
	switch (funcid) {
	case 379000+1: {
		delete pThis;
		break;
	}
	case 379102: {
		*(void**)_p = new QTextTable((QTextDocument*)(p1));
		break;
	}
	case 379103: {
		pThis->appendColumns(*(int*)p1);
		break;
	}
	case 379104: {
		pThis->appendRows(*(int*)p1);
		break;
	}
	case 379105: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextTableCell(pThis->cellAt(*(QTextCursor*)(p1)));
		break;
	}
	case 379106: {
		*(void**)p2 = new QTextTableCell(pThis->cellAt(*(int*)p1));
		break;
	}
	case 379107: {
		*(void**)p3 = new QTextTableCell(pThis->cellAt(*(int*)p1,*(int*)p2));
		break;
	}
	case 379108: {
		*(int*)p1 = pThis->columns();
		break;
	}
	case 379109: {
		*(void**)p1 = new QTextTableFormat(pThis->format());
		break;
	}
	case 379110: {
		pThis->insertColumns(*(int*)p1,*(int*)p2);
		break;
	}
	case 379111: {
		pThis->insertRows(*(int*)p1,*(int*)p2);
		break;
	}
	case 379112: {
		if(p1==0)return -2;
		pThis->mergeCells(*(QTextCursor*)(p1));
		break;
	}
	case 379113: {
		pThis->mergeCells(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 379114: {
		pThis->removeColumns(*(int*)p1,*(int*)p2);
		break;
	}
	case 379115: {
		pThis->removeRows(*(int*)p1,*(int*)p2);
		break;
	}
	case 379116: {
		pThis->resize(*(int*)p1,*(int*)p2);
		break;
	}
	case 379117: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCursor(pThis->rowEnd(*(QTextCursor*)(p1)));
		break;
	}
	case 379118: {
		if(p1==0)return -2;
		*(void**)p2 = new QTextCursor(pThis->rowStart(*(QTextCursor*)(p1)));
		break;
	}
	case 379119: {
		*(int*)p1 = pThis->rows();
		break;
	}
	case 379120: {
		if(p1==0)return -2;
		pThis->setFormat(*(QTextTableFormat*)(p1));
		break;
	}
	case 379121: {
		pThis->splitCell(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	default:
		return drv_QTextFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTimeEdit
int drv_QTimeEdit(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTimeEdit *pThis = (QTimeEdit*)_p;
	switch (funcid) {
	case 380000+1: {
		delete pThis;
		break;
	}
	case 380102: {
		*(void**)_p = new QTimeEdit();
		break;
	}
	case 380103: {
		*(void**)_p = new QTimeEdit((QWidget*)(p1));
		break;
	}
	case 380104: {
		if(p1==0)return -2;
		*(void**)_p = new QTimeEdit(*(QTime*)(p1),(QWidget*)(p2));
		break;
	}
	default:
		return drv_QDateTimeEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTimeLine
int drv_QTimeLine(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTimeLine *pThis = (QTimeLine*)_p;
	switch (funcid) {
	case 381000+1: {
		delete pThis;
		break;
	}
	case 381102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(frameChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 381103: {
		UISignal51 *uis = new UISignal51(pThis);
		if (QObject::connect(pThis,SIGNAL(stateChanged(QTimeLine::State)),uis,SLOT(call(QTimeLine::State)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 381104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(finished()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 381105: {
		UISignal67 *uis = new UISignal67(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(double)),uis,SLOT(call(double)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 381106: {
		*(void**)_p = new QTimeLine();
		break;
	}
	case 381107: {
		*(void**)_p = new QTimeLine(*(int*)p1,(QObject*)(p2));
		break;
	}
	case 381108: {
		*(int*)p1 = pThis->currentFrame();
		break;
	}
	case 381109: {
		*(int*)p1 = pThis->currentTime();
		break;
	}
	case 381110: {
		*(double*)p1 = pThis->currentValue();
		break;
	}
	case 381111: {
		*(QTimeLine::CurveShape*)p1 = pThis->curveShape();
		break;
	}
	case 381112: {
		*(QTimeLine::Direction*)p1 = pThis->direction();
		break;
	}
	case 381113: {
		*(int*)p1 = pThis->duration();
		break;
	}
	case 381114: {
		*(void**)p1 = new QEasingCurve(pThis->easingCurve());
		break;
	}
	case 381115: {
		*(int*)p1 = pThis->endFrame();
		break;
	}
	case 381116: {
		*(int*)p2 = pThis->frameForTime(*(int*)p1);
		break;
	}
	case 381117: {
		*(int*)p1 = pThis->loopCount();
		break;
	}
	case 381118: {
		pThis->resume();
		break;
	}
	case 381119: {
		pThis->setCurrentTime(*(int*)p1);
		break;
	}
	case 381120: {
		pThis->setCurveShape(*(QTimeLine::CurveShape*)p1);
		break;
	}
	case 381121: {
		pThis->setDirection(*(QTimeLine::Direction*)p1);
		break;
	}
	case 381122: {
		pThis->setDuration(*(int*)p1);
		break;
	}
	case 381123: {
		if(p1==0)return -2;
		pThis->setEasingCurve(*(QEasingCurve*)(p1));
		break;
	}
	case 381124: {
		pThis->setEndFrame(*(int*)p1);
		break;
	}
	case 381125: {
		pThis->setFrameRange(*(int*)p1,*(int*)p2);
		break;
	}
	case 381126: {
		pThis->setLoopCount(*(int*)p1);
		break;
	}
	case 381127: {
		pThis->setPaused(*(bool*)p1);
		break;
	}
	case 381128: {
		pThis->setStartFrame(*(int*)p1);
		break;
	}
	case 381129: {
		pThis->setUpdateInterval(*(int*)p1);
		break;
	}
	case 381130: {
		pThis->start();
		break;
	}
	case 381131: {
		*(int*)p1 = pThis->startFrame();
		break;
	}
	case 381132: {
		*(QTimeLine::State*)p1 = pThis->state();
		break;
	}
	case 381133: {
		pThis->stop();
		break;
	}
	case 381134: {
		pThis->toggleDirection();
		break;
	}
	case 381135: {
		*(int*)p1 = pThis->updateInterval();
		break;
	}
	case 381136: {
		*(double*)p2 = pThis->valueForTime(*(int*)p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTimer
int drv_QTimer(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTimer *pThis = (QTimer*)_p;
	switch (funcid) {
	case 382000+1: {
		delete pThis;
		break;
	}
	case 382102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(timeout()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 382103: {
		*(void**)_p = new QTimer();
		break;
	}
	case 382104: {
		*(void**)_p = new QTimer((QObject*)(p1));
		break;
	}
	case 382105: {
		*(int*)p1 = pThis->interval();
		break;
	}
	case 382106: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 382107: {
		*(bool*)p1 = pThis->isSingleShot();
		break;
	}
	case 382108: {
		pThis->setInterval(*(int*)p1);
		break;
	}
	case 382109: {
		pThis->setSingleShot(*(bool*)p1);
		break;
	}
	case 382110: {
		QTimer::singleShot(*(int*)p1,(QObject*)(p2),drvGet_const_char(p3));
		break;
	}
	case 382111: {
		pThis->start();
		break;
	}
	case 382112: {
		pThis->start(*(int*)p1);
		break;
	}
	case 382113: {
		pThis->stop();
		break;
	}
	case 382114: {
		*(int*)p1 = pThis->timerId();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QToolBar
int drv_QToolBar(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QToolBar *pThis = (QToolBar*)_p;
	switch (funcid) {
	case 383000+1: {
		delete pThis;
		break;
	}
	case 383102: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(movableChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383103: {
		UISignal65 *uis = new UISignal65(pThis);
		if (QObject::connect(pThis,SIGNAL(toolButtonStyleChanged(Qt::ToolButtonStyle)),uis,SLOT(call(Qt::ToolButtonStyle)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383104: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(actionTriggered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383105: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(topLevelChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(visibilityChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383107: {
		UISignal63 *uis = new UISignal63(pThis);
		if (QObject::connect(pThis,SIGNAL(orientationChanged(Qt::Orientation)),uis,SLOT(call(Qt::Orientation)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383108: {
		UISignal15 *uis = new UISignal15(pThis);
		if (QObject::connect(pThis,SIGNAL(allowedAreasChanged(QFlags<Qt::ToolBarArea>)),uis,SLOT(call(QFlags<Qt::ToolBarArea>)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383109: {
		UISignal38 *uis = new UISignal38(pThis);
		if (QObject::connect(pThis,SIGNAL(iconSizeChanged(QSize const&)),uis,SLOT(call(QSize const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 383110: {
		*(void**)_p = new QToolBar();
		break;
	}
	case 383111: {
		*(void**)_p = new QToolBar((QWidget*)(p1));
		break;
	}
	case 383112: {
		*(void**)_p = new QToolBar(drvGetStringHead(p1),(QWidget*)(p2));
		break;
	}
	case 383113: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->actionAt(*(QPoint*)(p1));
		break;
	}
	case 383114: {
		*(void**)p3 = pThis->actionAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 383115: {
		*(void**)p2 = new QRect(pThis->actionGeometry((QAction*)(p1)));
		break;
	}
	case 383116: {
		pThis->addAction((QAction*)(p1));
		break;
	}
	case 383117: {
		*(void**)p2 = pThis->addAction(drvGetStringHead(p1));
		break;
	}
	case 383118: {
		if(p1==0)return -2;
		*(void**)p3 = pThis->addAction(*(QIcon*)(p1),drvGetStringHead(p2));
		break;
	}
	case 383119: {
		*(void**)p4 = pThis->addAction(drvGetStringHead(p1),(QObject*)(p2),drvGet_const_char(p3));
		break;
	}
	case 383120: {
		if(p1==0)return -2;
		*(void**)p5 = pThis->addAction(*(QIcon*)(p1),drvGetStringHead(p2),(QObject*)(p3),drvGet_const_char(p4));
		break;
	}
	case 383121: {
		*(void**)p1 = pThis->addSeparator();
		break;
	}
	case 383122: {
		*(void**)p2 = pThis->addWidget((QWidget*)(p1));
		break;
	}
	case 383123: {
		*(QFlags<Qt::ToolBarArea>*)p1 = pThis->allowedAreas();
		break;
	}
	case 383124: {
		pThis->clear();
		break;
	}
	case 383125: {
		*(void**)p1 = new QSize(pThis->iconSize());
		break;
	}
	case 383126: {
		*(void**)p2 = pThis->insertSeparator((QAction*)(p1));
		break;
	}
	case 383127: {
		*(void**)p3 = pThis->insertWidget((QAction*)(p1),(QWidget*)(p2));
		break;
	}
	case 383128: {
		*(bool*)p2 = pThis->isAreaAllowed(*(Qt::ToolBarArea*)p1);
		break;
	}
	case 383129: {
		*(bool*)p1 = pThis->isFloatable();
		break;
	}
	case 383130: {
		*(bool*)p1 = pThis->isFloating();
		break;
	}
	case 383131: {
		*(bool*)p1 = pThis->isMovable();
		break;
	}
	case 383132: {
		*(Qt::Orientation*)p1 = pThis->orientation();
		break;
	}
	case 383133: {
		pThis->setAllowedAreas(*(QFlags<Qt::ToolBarArea>*)p1);
		break;
	}
	case 383134: {
		pThis->setFloatable(*(bool*)p1);
		break;
	}
	case 383135: {
		if(p1==0)return -2;
		pThis->setIconSize(*(QSize*)(p1));
		break;
	}
	case 383136: {
		pThis->setMovable(*(bool*)p1);
		break;
	}
	case 383137: {
		pThis->setOrientation(*(Qt::Orientation*)p1);
		break;
	}
	case 383138: {
		pThis->setToolButtonStyle(*(Qt::ToolButtonStyle*)p1);
		break;
	}
	case 383139: {
		*(void**)p1 = pThis->toggleViewAction();
		break;
	}
	case 383140: {
		*(Qt::ToolButtonStyle*)p1 = pThis->toolButtonStyle();
		break;
	}
	case 383141: {
		*(void**)p2 = pThis->widgetForAction((QAction*)(p1));
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QToolBox
int drv_QToolBox(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QToolBox *pThis = (QToolBox*)_p;
	switch (funcid) {
	case 384000+1: {
		delete pThis;
		break;
	}
	case 384102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 384103: {
		*(void**)_p = new QToolBox();
		break;
	}
	case 384104: {
		*(void**)_p = new QToolBox((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 384105: {
		*(int*)p3 = pThis->addItem((QWidget*)(p1),drvGetStringHead(p2));
		break;
	}
	case 384106: {
		if(p2==0)return -2;
		*(int*)p4 = pThis->addItem((QWidget*)(p1),*(QIcon*)(p2),drvGetStringHead(p3));
		break;
	}
	case 384107: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 384108: {
		*(int*)p1 = pThis->currentIndex();
		break;
	}
	case 384109: {
		*(void**)p1 = pThis->currentWidget();
		break;
	}
	case 384110: {
		*(int*)p2 = pThis->indexOf((QWidget*)(p1));
		break;
	}
	case 384111: {
		*(int*)p4 = pThis->insertItem(*(int*)p1,(QWidget*)(p2),drvGetStringHead(p3));
		break;
	}
	case 384112: {
		if(p3==0)return -2;
		*(int*)p5 = pThis->insertItem(*(int*)p1,(QWidget*)(p2),*(QIcon*)(p3),drvGetStringHead(p4));
		break;
	}
	case 384113: {
		*(bool*)p2 = pThis->isItemEnabled(*(int*)p1);
		break;
	}
	case 384114: {
		*(void**)p2 = new QIcon(pThis->itemIcon(*(int*)p1));
		break;
	}
	case 384115: {
		pThis->itemInserted(*(int*)p1);
		break;
	}
	case 384116: {
		pThis->itemRemoved(*(int*)p1);
		break;
	}
	case 384117: {
		drvSetString(p2,pThis->itemText(*(int*)p1));
		break;
	}
	case 384118: {
		drvSetString(p2,pThis->itemToolTip(*(int*)p1));
		break;
	}
	case 384119: {
		pThis->removeItem(*(int*)p1);
		break;
	}
	case 384120: {
		pThis->setCurrentIndex(*(int*)p1);
		break;
	}
	case 384121: {
		pThis->setCurrentWidget((QWidget*)(p1));
		break;
	}
	case 384122: {
		pThis->setItemEnabled(*(int*)p1,*(bool*)p2);
		break;
	}
	case 384123: {
		if(p2==0)return -2;
		pThis->setItemIcon(*(int*)p1,*(QIcon*)(p2));
		break;
	}
	case 384124: {
		pThis->setItemText(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 384125: {
		pThis->setItemToolTip(*(int*)p1,drvGetStringHead(p2));
		break;
	}
	case 384126: {
		*(void**)p2 = pThis->widget(*(int*)p1);
		break;
	}
	default:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QToolButton
int drv_QToolButton(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QToolButton *pThis = (QToolButton*)_p;
	switch (funcid) {
	case 385000+1: {
		delete pThis;
		break;
	}
	case 385102: {
		UISignal6 *uis = new UISignal6(pThis);
		if (QObject::connect(pThis,SIGNAL(triggered(QAction*)),uis,SLOT(call(QAction*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 385103: {
		*(void**)_p = new QToolButton();
		break;
	}
	case 385104: {
		*(void**)_p = new QToolButton((QWidget*)(p1));
		break;
	}
	case 385105: {
		*(Qt::ArrowType*)p1 = pThis->arrowType();
		break;
	}
	case 385106: {
		*(bool*)p1 = pThis->autoRaise();
		break;
	}
	case 385107: {
		*(void**)p1 = pThis->defaultAction();
		break;
	}
	case 385108: {
		*(void**)p1 = pThis->menu();
		break;
	}
	case 385109: {
		*(QToolButton::ToolButtonPopupMode*)p1 = pThis->popupMode();
		break;
	}
	case 385110: {
		pThis->setArrowType(*(Qt::ArrowType*)p1);
		break;
	}
	case 385111: {
		pThis->setAutoRaise(*(bool*)p1);
		break;
	}
	case 385112: {
		pThis->setDefaultAction((QAction*)(p1));
		break;
	}
	case 385113: {
		pThis->setMenu((QMenu*)(p1));
		break;
	}
	case 385114: {
		pThis->setPopupMode(*(QToolButton::ToolButtonPopupMode*)p1);
		break;
	}
	case 385115: {
		pThis->setToolButtonStyle(*(Qt::ToolButtonStyle*)p1);
		break;
	}
	case 385116: {
		pThis->showMenu();
		break;
	}
	case 385117: {
		*(Qt::ToolButtonStyle*)p1 = pThis->toolButtonStyle();
		break;
	}
	default:
		return drv_QAbstractButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTranslator
int drv_QTranslator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTranslator *pThis = (QTranslator*)_p;
	switch (funcid) {
	case 386000+1: {
		delete pThis;
		break;
	}
	case 386102: {
		*(void**)_p = new QTranslator();
		break;
	}
	case 386103: {
		*(void**)_p = new QTranslator((QObject*)(p1));
		break;
	}
	case 386104: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 386105: {
		*(bool*)p2 = pThis->load(drvGetStringHead(p1));
		break;
	}
	case 386106: {
		*(bool*)p3 = pThis->load(*(unsigned char const**)p1,*(int*)p2);
		break;
	}
	case 386107: {
		*(bool*)p5 = pThis->load(drvGetStringHead(p1),drvGetStringHead(p2),drvGetStringHead(p3),drvGetStringHead(p4));
		break;
	}
	case 386108: {
		drvSetString(p4,pThis->translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3)));
		break;
	}
	case 386109: {
		drvSetString(p5,pThis->translate(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3),*(int*)p4));
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTreeView
int drv_QTreeView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTreeView *pThis = (QTreeView*)_p;
	switch (funcid) {
	case 387000+1: {
		delete pThis;
		break;
	}
	case 387102: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(collapsed(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 387103: {
		UISignal25 *uis = new UISignal25(pThis);
		if (QObject::connect(pThis,SIGNAL(expanded(QModelIndex const&)),uis,SLOT(call(QModelIndex const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 387104: {
		*(void**)_p = new QTreeView();
		break;
	}
	case 387105: {
		*(void**)_p = new QTreeView((QWidget*)(p1));
		break;
	}
	case 387106: {
		*(bool*)p1 = pThis->allColumnsShowFocus();
		break;
	}
	case 387107: {
		*(int*)p1 = pThis->autoExpandDelay();
		break;
	}
	case 387108: {
		if(p1==0)return -2;
		pThis->collapse(*(QModelIndex*)(p1));
		break;
	}
	case 387109: {
		pThis->collapseAll();
		break;
	}
	case 387110: {
		*(int*)p2 = pThis->columnAt(*(int*)p1);
		break;
	}
	case 387111: {
		pThis->columnCountChanged(*(int*)p1,*(int*)p2);
		break;
	}
	case 387112: {
		pThis->columnMoved();
		break;
	}
	case 387113: {
		pThis->columnResized(*(int*)p1,*(int*)p2,*(int*)p3);
		break;
	}
	case 387114: {
		*(int*)p2 = pThis->columnViewportPosition(*(int*)p1);
		break;
	}
	case 387115: {
		*(int*)p2 = pThis->columnWidth(*(int*)p1);
		break;
	}
	case 387116: {
		if(p2==0)return -2;
	if(p3==0)return -2;
		pThis->drawBranches((QPainter*)(p1),*(QRect*)(p2),*(QModelIndex*)(p3));
		break;
	}
	case 387117: {
		if(p2==0)return -2;
		pThis->drawTree((QPainter*)(p1),*(QRegion*)(p2));
		break;
	}
	case 387118: {
		if(p1==0)return -2;
		pThis->expand(*(QModelIndex*)(p1));
		break;
	}
	case 387119: {
		pThis->expandAll();
		break;
	}
	case 387120: {
		pThis->expandToDepth(*(int*)p1);
		break;
	}
	case 387121: {
		*(bool*)p1 = pThis->expandsOnDoubleClick();
		break;
	}
	case 387122: {
		*(void**)p1 = pThis->header();
		break;
	}
	case 387123: {
		pThis->hideColumn(*(int*)p1);
		break;
	}
	case 387124: {
		*(int*)p1 = pThis->indentation();
		break;
	}
	case 387125: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->indexAbove(*(QModelIndex*)(p1)));
		break;
	}
	case 387126: {
		if(p1==0)return -2;
		*(void**)p2 = new QModelIndex(pThis->indexBelow(*(QModelIndex*)(p1)));
		break;
	}
	case 387127: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->indexRowSizeHint(*(QModelIndex*)(p1));
		break;
	}
	case 387128: {
		*(bool*)p1 = pThis->isAnimated();
		break;
	}
	case 387129: {
		*(bool*)p2 = pThis->isColumnHidden(*(int*)p1);
		break;
	}
	case 387130: {
		if(p1==0)return -2;
		*(bool*)p2 = pThis->isExpanded(*(QModelIndex*)(p1));
		break;
	}
	case 387131: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->isFirstColumnSpanned(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 387132: {
		*(bool*)p1 = pThis->isHeaderHidden();
		break;
	}
	case 387133: {
		if(p2==0)return -2;
		*(bool*)p3 = pThis->isRowHidden(*(int*)p1,*(QModelIndex*)(p2));
		break;
	}
	case 387134: {
		*(bool*)p1 = pThis->isSortingEnabled();
		break;
	}
	case 387135: {
		*(bool*)p1 = pThis->itemsExpandable();
		break;
	}
	case 387136: {
		pThis->reexpand();
		break;
	}
	case 387137: {
		pThis->resizeColumnToContents(*(int*)p1);
		break;
	}
	case 387138: {
		*(bool*)p1 = pThis->rootIsDecorated();
		break;
	}
	case 387139: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->rowHeight(*(QModelIndex*)(p1));
		break;
	}
	case 387140: {
		if(p1==0)return -2;
		pThis->rowsRemoved(*(QModelIndex*)(p1),*(int*)p2,*(int*)p3);
		break;
	}
	case 387141: {
		pThis->setAllColumnsShowFocus(*(bool*)p1);
		break;
	}
	case 387142: {
		pThis->setAnimated(*(bool*)p1);
		break;
	}
	case 387143: {
		pThis->setAutoExpandDelay(*(int*)p1);
		break;
	}
	case 387144: {
		pThis->setColumnHidden(*(int*)p1,*(bool*)p2);
		break;
	}
	case 387145: {
		pThis->setColumnWidth(*(int*)p1,*(int*)p2);
		break;
	}
	case 387146: {
		if(p1==0)return -2;
		pThis->setExpanded(*(QModelIndex*)(p1),*(bool*)p2);
		break;
	}
	case 387147: {
		pThis->setExpandsOnDoubleClick(*(bool*)p1);
		break;
	}
	case 387148: {
		if(p2==0)return -2;
		pThis->setFirstColumnSpanned(*(int*)p1,*(QModelIndex*)(p2),*(bool*)p3);
		break;
	}
	case 387149: {
		pThis->setHeader((QHeaderView*)(p1));
		break;
	}
	case 387150: {
		pThis->setHeaderHidden(*(bool*)p1);
		break;
	}
	case 387151: {
		pThis->setIndentation(*(int*)p1);
		break;
	}
	case 387152: {
		pThis->setItemsExpandable(*(bool*)p1);
		break;
	}
	case 387153: {
		pThis->setRootIsDecorated(*(bool*)p1);
		break;
	}
	case 387154: {
		if(p2==0)return -2;
		pThis->setRowHidden(*(int*)p1,*(QModelIndex*)(p2),*(bool*)p3);
		break;
	}
	case 387155: {
		pThis->setSortingEnabled(*(bool*)p1);
		break;
	}
	case 387156: {
		pThis->setUniformRowHeights(*(bool*)p1);
		break;
	}
	case 387157: {
		pThis->setWordWrap(*(bool*)p1);
		break;
	}
	case 387158: {
		pThis->showColumn(*(int*)p1);
		break;
	}
	case 387159: {
		pThis->sortByColumn(*(int*)p1);
		break;
	}
	case 387160: {
		pThis->sortByColumn(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 387161: {
		*(bool*)p1 = pThis->uniformRowHeights();
		break;
	}
	case 387162: {
		*(bool*)p1 = pThis->wordWrap();
		break;
	}
	default:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QTreeWidget
int drv_QTreeWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QTreeWidget *pThis = (QTreeWidget*)_p;
	switch (funcid) {
	case 388000+1: {
		delete pThis;
		break;
	}
	case 388102: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemEntered(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388103: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemPressed(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388104: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(itemSelectionChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388105: {
		UISignal52 *uis = new UISignal52(pThis);
		if (QObject::connect(pThis,SIGNAL(itemCollapsed(QTreeWidgetItem*)),uis,SLOT(call(QTreeWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388106: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemActivated(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388107: {
		UISignal53 *uis = new UISignal53(pThis);
		if (QObject::connect(pThis,SIGNAL(currentItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)),uis,SLOT(call(QTreeWidgetItem*,QTreeWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388108: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemDoubleClicked(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388109: {
		UISignal52 *uis = new UISignal52(pThis);
		if (QObject::connect(pThis,SIGNAL(itemExpanded(QTreeWidgetItem*)),uis,SLOT(call(QTreeWidgetItem*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388110: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemChanged(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388111: {
		UISignal54 *uis = new UISignal54(pThis);
		if (QObject::connect(pThis,SIGNAL(itemClicked(QTreeWidgetItem*,int)),uis,SLOT(call(QTreeWidgetItem*,int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 388112: {
		*(void**)_p = new QTreeWidget();
		break;
	}
	case 388113: {
		*(void**)_p = new QTreeWidget((QWidget*)(p1));
		break;
	}
	case 388114: {
		pThis->addTopLevelItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388115: {
		pThis->addTopLevelItems(drvGetObjectArrayHeadT<QTreeWidgetItem*>(p1));
		break;
	}
	case 388116: {
		pThis->clear();
		break;
	}
	case 388117: {
		pThis->closePersistentEditor((QTreeWidgetItem*)(p1));
		break;
	}
	case 388118: {
		pThis->closePersistentEditor((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388119: {
		pThis->collapseItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388120: {
		*(int*)p1 = pThis->columnCount();
		break;
	}
	case 388121: {
		*(int*)p1 = pThis->currentColumn();
		break;
	}
	case 388122: {
		*(void**)p1 = pThis->currentItem();
		break;
	}
	case 388123: {
		*(bool*)p5 = pThis->dropMimeData((QTreeWidgetItem*)(p1),*(int*)p2,(QMimeData*)(p3),*(Qt::DropAction*)p4);
		break;
	}
	case 388124: {
		pThis->editItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388125: {
		pThis->editItem((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388126: {
		pThis->expandItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388127: {
		drvSetListObj<QTreeWidgetItem*>(p4,179000,pThis->findItems(drvGetStringHead(p1),*(QFlags<Qt::MatchFlag>*)p2,*(int*)p3));
		break;
	}
	case 388128: {
		*(void**)p1 = pThis->headerItem();
		break;
	}
	case 388129: {
		*(void**)p3 = new QModelIndex(pThis->indexFromItem((QTreeWidgetItem*)(p1),*(int*)p2));
		break;
	}
	case 388130: {
		*(int*)p2 = pThis->indexOfTopLevelItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388131: {
		pThis->insertTopLevelItem(*(int*)p1,(QTreeWidgetItem*)(p2));
		break;
	}
	case 388132: {
		pThis->insertTopLevelItems(*(int*)p1,drvGetObjectArrayHeadT<QTreeWidgetItem*>(p2));
		break;
	}
	case 388133: {
		*(void**)p1 = pThis->invisibleRootItem();
		break;
	}
	case 388134: {
		*(bool*)p2 = pThis->isFirstItemColumnSpanned((QTreeWidgetItem*)(p1));
		break;
	}
	case 388135: {
		*(bool*)p2 = pThis->isItemExpanded((QTreeWidgetItem*)(p1));
		break;
	}
	case 388136: {
		*(bool*)p2 = pThis->isItemHidden((QTreeWidgetItem*)(p1));
		break;
	}
	case 388137: {
		*(bool*)p2 = pThis->isItemSelected((QTreeWidgetItem*)(p1));
		break;
	}
	case 388138: {
		*(bool*)p1 = pThis->isSortingEnabled();
		break;
	}
	case 388139: {
		*(void**)p2 = pThis->itemAbove((QTreeWidgetItem*)(p1));
		break;
	}
	case 388140: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemAt(*(QPoint*)(p1));
		break;
	}
	case 388141: {
		*(void**)p3 = pThis->itemAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 388142: {
		*(void**)p2 = pThis->itemBelow((QTreeWidgetItem*)(p1));
		break;
	}
	case 388143: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->itemFromIndex(*(QModelIndex*)(p1));
		break;
	}
	case 388144: {
		*(void**)p3 = pThis->itemWidget((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388145: {
		drvSetListObj<QTreeWidgetItem*>(p2,179000,pThis->items((QMimeData*)(p1)));
		break;
	}
	case 388146: {
		*(void**)p2 = pThis->mimeData(drvGetObjectArrayHeadT<QTreeWidgetItem*>(p1));
		break;
	}
	case 388147: {
		drvSetStringArray(p1,pThis->mimeTypes());
		break;
	}
	case 388148: {
		pThis->openPersistentEditor((QTreeWidgetItem*)(p1));
		break;
	}
	case 388149: {
		pThis->openPersistentEditor((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388150: {
		pThis->removeItemWidget((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388151: {
		pThis->scrollToItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388152: {
		pThis->scrollToItem((QTreeWidgetItem*)(p1),*(QAbstractItemView::ScrollHint*)p2);
		break;
	}
	case 388153: {
		drvSetListObj<QTreeWidgetItem*>(p1,179000,pThis->selectedItems());
		break;
	}
	case 388154: {
		pThis->setColumnCount(*(int*)p1);
		break;
	}
	case 388155: {
		pThis->setCurrentItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388156: {
		pThis->setCurrentItem((QTreeWidgetItem*)(p1),*(int*)p2);
		break;
	}
	case 388157: {
		pThis->setCurrentItem((QTreeWidgetItem*)(p1),*(int*)p2,*(QFlags<QItemSelectionModel::SelectionFlag>*)p3);
		break;
	}
	case 388158: {
		pThis->setFirstItemColumnSpanned((QTreeWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 388159: {
		pThis->setHeaderItem((QTreeWidgetItem*)(p1));
		break;
	}
	case 388160: {
		pThis->setHeaderLabel(drvGetStringHead(p1));
		break;
	}
	case 388161: {
		pThis->setHeaderLabels(drvGetStringArray(p1));
		break;
	}
	case 388162: {
		pThis->setItemExpanded((QTreeWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 388163: {
		pThis->setItemHidden((QTreeWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 388164: {
		pThis->setItemSelected((QTreeWidgetItem*)(p1),*(bool*)p2);
		break;
	}
	case 388165: {
		pThis->setItemWidget((QTreeWidgetItem*)(p1),*(int*)p2,(QWidget*)(p3));
		break;
	}
	case 388166: {
		pThis->setSortingEnabled(*(bool*)p1);
		break;
	}
	case 388167: {
		*(int*)p1 = pThis->sortColumn();
		break;
	}
	case 388168: {
		pThis->sortItems(*(int*)p1,*(Qt::SortOrder*)p2);
		break;
	}
	case 388169: {
		*(QFlags<Qt::DropAction>*)p1 = pThis->supportedDropActions();
		break;
	}
	case 388170: {
		*(void**)p2 = pThis->takeTopLevelItem(*(int*)p1);
		break;
	}
	case 388171: {
		*(void**)p2 = pThis->topLevelItem(*(int*)p1);
		break;
	}
	case 388172: {
		*(int*)p1 = pThis->topLevelItemCount();
		break;
	}
	case 388173: {
		*(void**)p2 = new QRect(pThis->visualItemRect((QTreeWidgetItem*)(p1)));
		break;
	}
	default:
		return drv_QTreeView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QUiLoader
int drv_QUiLoader(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QUiLoader *pThis = (QUiLoader*)_p;
	switch (funcid) {
	case 389000+1: {
		delete pThis;
		break;
	}
	case 389102: {
		*(void**)_p = new QUiLoader();
		break;
	}
	case 389103: {
		*(void**)_p = new QUiLoader((QObject*)(p1));
		break;
	}
	case 389104: {
		pThis->addPluginPath(drvGetStringHead(p1));
		break;
	}
	case 389105: {
		drvSetStringArray(p1,pThis->availableLayouts());
		break;
	}
	case 389106: {
		drvSetStringArray(p1,pThis->availableWidgets());
		break;
	}
	case 389107: {
		pThis->clearPluginPaths();
		break;
	}
	case 389108: {
		*(void**)p2 = pThis->createAction((QObject*)(p1));
		break;
	}
	case 389109: {
		*(void**)p3 = pThis->createAction((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 389110: {
		*(void**)p1 = pThis->createActionGroup();
		break;
	}
	case 389111: {
		*(void**)p3 = pThis->createActionGroup((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 389112: {
		*(void**)p2 = pThis->createLayout(drvGetStringHead(p1));
		break;
	}
	case 389113: {
		*(void**)p4 = pThis->createLayout(drvGetStringHead(p1),(QObject*)(p2),drvGetStringHead(p3));
		break;
	}
	case 389114: {
		*(void**)p2 = pThis->createWidget(drvGetStringHead(p1));
		break;
	}
	case 389115: {
		*(void**)p4 = pThis->createWidget(drvGetStringHead(p1),(QWidget*)(p2),drvGetStringHead(p3));
		break;
	}
	case 389116: {
		*(bool*)p1 = pThis->isLanguageChangeEnabled();
		break;
	}
	case 389117: {
		*(void**)p2 = pThis->load((QIODevice*)(p1));
		break;
	}
	case 389118: {
		*(void**)p3 = pThis->load((QIODevice*)(p1),(QWidget*)(p2));
		break;
	}
	case 389119: {
		drvSetStringArray(p1,pThis->pluginPaths());
		break;
	}
	case 389120: {
		pThis->setLanguageChangeEnabled(*(bool*)p1);
		break;
	}
	case 389121: {
		if(p1==0)return -2;
		pThis->setWorkingDirectory(*(QDir*)(p1));
		break;
	}
	case 389122: {
		*(void**)p1 = new QDir(pThis->workingDirectory());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QUndoGroup
int drv_QUndoGroup(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QUndoGroup *pThis = (QUndoGroup*)_p;
	switch (funcid) {
	case 390000+1: {
		delete pThis;
		break;
	}
	case 390102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(indexChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390103: {
		UISignal55 *uis = new UISignal55(pThis);
		if (QObject::connect(pThis,SIGNAL(activeStackChanged(QUndoStack*)),uis,SLOT(call(QUndoStack*)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390104: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(undoTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390105: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(canUndoChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390106: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(redoTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390107: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(canRedoChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390108: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(cleanChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 390109: {
		*(void**)_p = new QUndoGroup();
		break;
	}
	case 390110: {
		*(void**)_p = new QUndoGroup((QObject*)(p1));
		break;
	}
	case 390111: {
		*(void**)p1 = pThis->activeStack();
		break;
	}
	case 390112: {
		pThis->addStack((QUndoStack*)(p1));
		break;
	}
	case 390113: {
		*(bool*)p1 = pThis->canRedo();
		break;
	}
	case 390114: {
		*(bool*)p1 = pThis->canUndo();
		break;
	}
	case 390115: {
		*(void**)p2 = pThis->createRedoAction((QObject*)(p1));
		break;
	}
	case 390116: {
		*(void**)p3 = pThis->createRedoAction((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 390117: {
		*(void**)p2 = pThis->createUndoAction((QObject*)(p1));
		break;
	}
	case 390118: {
		*(void**)p3 = pThis->createUndoAction((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 390119: {
		*(bool*)p1 = pThis->isClean();
		break;
	}
	case 390120: {
		pThis->redo();
		break;
	}
	case 390121: {
		drvSetString(p1,pThis->redoText());
		break;
	}
	case 390122: {
		pThis->removeStack((QUndoStack*)(p1));
		break;
	}
	case 390123: {
		pThis->setActiveStack((QUndoStack*)(p1));
		break;
	}
	case 390124: {
		drvSetListObj<QUndoStack*>(p1,391000,pThis->stacks());
		break;
	}
	case 390125: {
		pThis->undo();
		break;
	}
	case 390126: {
		drvSetString(p1,pThis->undoText());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QUndoStack
int drv_QUndoStack(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QUndoStack *pThis = (QUndoStack*)_p;
	switch (funcid) {
	case 391000+1: {
		delete pThis;
		break;
	}
	case 391102: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(indexChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391103: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(undoTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391104: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(canUndoChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391105: {
		UISignal41 *uis = new UISignal41(pThis);
		if (QObject::connect(pThis,SIGNAL(redoTextChanged(QString const&)),uis,SLOT(call(QString const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391106: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(canRedoChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391107: {
		UISignal66 *uis = new UISignal66(pThis);
		if (QObject::connect(pThis,SIGNAL(cleanChanged(bool)),uis,SLOT(call(bool)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 391108: {
		*(void**)_p = new QUndoStack();
		break;
	}
	case 391109: {
		*(void**)_p = new QUndoStack((QObject*)(p1));
		break;
	}
	case 391110: {
		pThis->beginMacro(drvGetStringHead(p1));
		break;
	}
	case 391111: {
		*(bool*)p1 = pThis->canRedo();
		break;
	}
	case 391112: {
		*(bool*)p1 = pThis->canUndo();
		break;
	}
	case 391113: {
		*(int*)p1 = pThis->cleanIndex();
		break;
	}
	case 391114: {
		pThis->clear();
		break;
	}
	case 391115: {
		*(const void**)p2 = pThis->command(*(int*)p1);
		break;
	}
	case 391116: {
		*(int*)p1 = pThis->count();
		break;
	}
	case 391117: {
		*(void**)p2 = pThis->createRedoAction((QObject*)(p1));
		break;
	}
	case 391118: {
		*(void**)p3 = pThis->createRedoAction((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 391119: {
		*(void**)p2 = pThis->createUndoAction((QObject*)(p1));
		break;
	}
	case 391120: {
		*(void**)p3 = pThis->createUndoAction((QObject*)(p1),drvGetStringHead(p2));
		break;
	}
	case 391121: {
		pThis->endMacro();
		break;
	}
	case 391122: {
		*(int*)p1 = pThis->index();
		break;
	}
	case 391123: {
		*(bool*)p1 = pThis->isActive();
		break;
	}
	case 391124: {
		*(bool*)p1 = pThis->isClean();
		break;
	}
	case 391125: {
		pThis->push((QUndoCommand*)(p1));
		break;
	}
	case 391126: {
		pThis->redo();
		break;
	}
	case 391127: {
		drvSetString(p1,pThis->redoText());
		break;
	}
	case 391128: {
		pThis->setActive(*(bool*)p1);
		break;
	}
	case 391129: {
		pThis->setClean();
		break;
	}
	case 391130: {
		pThis->setIndex(*(int*)p1);
		break;
	}
	case 391131: {
		pThis->setUndoLimit(*(int*)p1);
		break;
	}
	case 391132: {
		drvSetString(p2,pThis->text(*(int*)p1));
		break;
	}
	case 391133: {
		pThis->undo();
		break;
	}
	case 391134: {
		*(int*)p1 = pThis->undoLimit();
		break;
	}
	case 391135: {
		drvSetString(p1,pThis->undoText());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QUndoView
int drv_QUndoView(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QUndoView *pThis = (QUndoView*)_p;
	switch (funcid) {
	case 392000+1: {
		delete pThis;
		break;
	}
	case 392102: {
		*(void**)_p = new QUndoView();
		break;
	}
	case 392103: {
		*(void**)_p = new QUndoView((QWidget*)(p1));
		break;
	}
	case 392104: {
		*(void**)_p = new QUndoView((QUndoGroup*)(p1),(QWidget*)(p2));
		break;
	}
	case 392105: {
		*(void**)_p = new QUndoView((QUndoStack*)(p1),(QWidget*)(p2));
		break;
	}
	case 392106: {
		*(void**)p1 = new QIcon(pThis->cleanIcon());
		break;
	}
	case 392107: {
		drvSetString(p1,pThis->emptyLabel());
		break;
	}
	case 392108: {
		*(void**)p1 = pThis->group();
		break;
	}
	case 392109: {
		if(p1==0)return -2;
		pThis->setCleanIcon(*(QIcon*)(p1));
		break;
	}
	case 392110: {
		pThis->setEmptyLabel(drvGetStringHead(p1));
		break;
	}
	case 392111: {
		pThis->setGroup((QUndoGroup*)(p1));
		break;
	}
	case 392112: {
		pThis->setStack((QUndoStack*)(p1));
		break;
	}
	case 392113: {
		*(void**)p1 = pThis->stack();
		break;
	}
	default:
		return drv_QListView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QUrlQuery
int drv_QUrlQuery(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QUrlQuery *pThis = (QUrlQuery*)_p;
	switch (funcid) {
	case 393000+1: {
		delete pThis;
		break;
	}
	case 393102: {
		*(void**)_p = new QUrlQuery();
		break;
	}
	case 393103: {
		*(void**)_p = new QUrlQuery(drvGetStringHead(p1));
		break;
	}
	case 393104: {
		if(p1==0)return -2;
		*(void**)_p = new QUrlQuery(*(QUrl*)(p1));
		break;
	}
	case 393105: {
		if(p1==0)return -2;
		*(void**)_p = new QUrlQuery(*(QUrlQuery*)(p1));
		break;
	}
	case 393106: {
		pThis->addQueryItem(drvGetStringHead(p1),drvGetStringHead(p2));
		break;
	}
	case 393107: {
		drvSetStringArray(p2,pThis->allQueryItemValues(drvGetStringHead(p1)));
		break;
	}
	case 393108: {
		pThis->clear();
		break;
	}
	case 393109: {
		*(QChar*)p1 = QUrlQuery::defaultQueryPairDelimiter();
		break;
	}
	case 393110: {
		*(QChar*)p1 = QUrlQuery::defaultQueryValueDelimiter();
		break;
	}
	case 393111: {
		*(bool*)p2 = pThis->hasQueryItem(drvGetStringHead(p1));
		break;
	}
	case 393112: {
		*(bool*)p1 = pThis->isDetached();
		break;
	}
	case 393113: {
		*(bool*)p1 = pThis->isEmpty();
		break;
	}
	case 393114: {
		drvSetString(p1,pThis->query());
		break;
	}
	case 393115: {
		drvSetString(p2,pThis->queryItemValue(drvGetStringHead(p1)));
		break;
	}
	case 393116: {
		*(QChar*)p1 = pThis->queryPairDelimiter();
		break;
	}
	case 393117: {
		*(QChar*)p1 = pThis->queryValueDelimiter();
		break;
	}
	case 393118: {
		pThis->removeAllQueryItems(drvGetStringHead(p1));
		break;
	}
	case 393119: {
		pThis->removeQueryItem(drvGetStringHead(p1));
		break;
	}
	case 393120: {
		pThis->setQuery(drvGetStringHead(p1));
		break;
	}
	case 393121: {
		pThis->setQueryDelimiters(*(QChar*)p1,*(QChar*)p2);
		break;
	}
	case 393122: {
		if(p1==0)return -2;
		pThis->swap(*(QUrlQuery*)(p1));
		break;
	}
	case 393123: {
		drvSetString(p1,pThis->toString());
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QVBoxLayout
int drv_QVBoxLayout(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QVBoxLayout *pThis = (QVBoxLayout*)_p;
	switch (funcid) {
	case 394000+1: {
		delete pThis;
		break;
	}
	case 394102: {
		*(void**)_p = new QVBoxLayout();
		break;
	}
	case 394103: {
		*(void**)_p = new QVBoxLayout((QWidget*)(p1));
		break;
	}
	default:
		return drv_QBoxLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QValidator
int drv_QValidator(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QValidator *pThis = (QValidator*)_p;
	switch (funcid) {
	case 395000+1: {
		delete pThis;
		break;
	}
	case 395102: {
		QString _p1=drvGetStringRef(p1);
		pThis->fixup(_p1);
		drvSetStringRef(p1,_p1);
		break;
	}
	case 395103: {
		*(void**)p1 = new QLocale(pThis->locale());
		break;
	}
	case 395104: {
		if(p1==0)return -2;
		pThis->setLocale(*(QLocale*)(p1));
		break;
	}
	case 395105: {
		QString _p1=drvGetStringRef(p1);
		*(QValidator::State*)p3 = pThis->validate(_p1,*(int*)p2);
		drvSetStringRef(p1,_p1);
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QVariantAnimation
int drv_QVariantAnimation(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QVariantAnimation *pThis = (QVariantAnimation*)_p;
	switch (funcid) {
	case 396000+1: {
		delete pThis;
		break;
	}
	case 396102: {
		UISignal57 *uis = new UISignal57(pThis);
		if (QObject::connect(pThis,SIGNAL(valueChanged(QVariant const&)),uis,SLOT(call(QVariant const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 396103: {
		*(void**)p1 = new QVariant(pThis->currentValue());
		break;
	}
	case 396104: {
		*(void**)p1 = new QEasingCurve(pThis->easingCurve());
		break;
	}
	case 396105: {
		*(void**)p1 = new QVariant(pThis->endValue());
		break;
	}
	case 396106: {
		if(p1==0)return -2;
	if(p2==0)return -2;
		*(void**)p4 = new QVariant(pThis->interpolated(*(QVariant*)(p1),*(QVariant*)(p2),*(double*)p3));
		break;
	}
	case 396107: {
		*(void**)p2 = new QVariant(pThis->keyValueAt(*(double*)p1));
		break;
	}
	case 396108: {
		pThis->setDuration(*(int*)p1);
		break;
	}
	case 396109: {
		if(p1==0)return -2;
		pThis->setEasingCurve(*(QEasingCurve*)(p1));
		break;
	}
	case 396110: {
		if(p1==0)return -2;
		pThis->setEndValue(*(QVariant*)(p1));
		break;
	}
	case 396111: {
		if(p2==0)return -2;
		pThis->setKeyValueAt(*(double*)p1,*(QVariant*)(p2));
		break;
	}
	case 396112: {
		if(p1==0)return -2;
		pThis->setStartValue(*(QVariant*)(p1));
		break;
	}
	case 396113: {
		*(void**)p1 = new QVariant(pThis->startValue());
		break;
	}
	case 396114: {
		if(p1==0)return -2;
		pThis->updateCurrentValue(*(QVariant*)(p1));
		break;
	}
	default:
		return drv_QAbstractAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWidget
int drv_QWidget(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWidget *pThis = (QWidget*)_p;
	switch (funcid) {
	case 397000+1: {
		delete pThis;
		break;
	}
	case 397102: {
		UISignal29 *uis = new UISignal29(pThis);
		if (QObject::connect(pThis,SIGNAL(customContextMenuRequested(QPoint const&)),uis,SLOT(call(QPoint const&)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 397103: {
		*(void**)_p = new QWidget();
		break;
	}
	case 397104: {
		*(void**)_p = new QWidget((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 397105: {
		*(bool*)p1 = pThis->acceptDrops();
		break;
	}
	case 397106: {
		drvSetString(p1,pThis->accessibleDescription());
		break;
	}
	case 397107: {
		drvSetString(p1,pThis->accessibleName());
		break;
	}
	case 397108: {
		pThis->actionEvent((QActionEvent*)(p1));
		break;
	}
	case 397109: {
		drvSetListObj<QAction*>(p1,209000,pThis->actions());
		break;
	}
	case 397110: {
		pThis->activateWindow();
		break;
	}
	case 397111: {
		pThis->addAction((QAction*)(p1));
		break;
	}
	case 397112: {
		pThis->addActions(drvGetObjectArrayHeadT<QAction*>(p1));
		break;
	}
	case 397113: {
		pThis->adjustSize();
		break;
	}
	case 397114: {
		*(bool*)p1 = pThis->autoFillBackground();
		break;
	}
	case 397115: {
		*(QPalette::ColorRole*)p1 = pThis->backgroundRole();
		break;
	}
	case 397116: {
		*(void**)p1 = new QSize(pThis->baseSize());
		break;
	}
	case 397117: {
		pThis->changeEvent((QEvent*)(p1));
		break;
	}
	case 397118: {
		if(p1==0)return -2;
		*(void**)p2 = pThis->childAt(*(QPoint*)(p1));
		break;
	}
	case 397119: {
		*(void**)p3 = pThis->childAt(*(int*)p1,*(int*)p2);
		break;
	}
	case 397120: {
		*(void**)p1 = new QRect(pThis->childrenRect());
		break;
	}
	case 397121: {
		*(void**)p1 = new QRegion(pThis->childrenRegion());
		break;
	}
	case 397122: {
		pThis->clearFocus();
		break;
	}
	case 397123: {
		pThis->clearMask();
		break;
	}
	case 397124: {
		*(bool*)p1 = pThis->close();
		break;
	}
	case 397125: {
		pThis->closeEvent((QCloseEvent*)(p1));
		break;
	}
	case 397126: {
		*(int*)p1 = pThis->colorCount();
		break;
	}
	case 397127: {
		*(void**)p1 = new QMargins(pThis->contentsMargins());
		break;
	}
	case 397128: {
		*(void**)p1 = new QRect(pThis->contentsRect());
		break;
	}
	case 397129: {
		pThis->contextMenuEvent((QContextMenuEvent*)(p1));
		break;
	}
	case 397130: {
		*(Qt::ContextMenuPolicy*)p1 = pThis->contextMenuPolicy();
		break;
	}
	case 397131: {
		pThis->createWinId();
		break;
	}
	case 397132: {
		*(void**)p1 = new QCursor(pThis->cursor());
		break;
	}
	case 397133: {
		*(int*)p1 = pThis->depth();
		break;
	}
	case 397134: {
		pThis->destroy(*(bool*)p1,*(bool*)p2);
		break;
	}
	case 397135: {
		*(int*)p1 = pThis->devType();
		break;
	}
	case 397136: {
		pThis->dragEnterEvent((QDragEnterEvent*)(p1));
		break;
	}
	case 397137: {
		pThis->dragLeaveEvent((QDragLeaveEvent*)(p1));
		break;
	}
	case 397138: {
		pThis->dragMoveEvent((QDragMoveEvent*)(p1));
		break;
	}
	case 397139: {
		pThis->dropEvent((QDropEvent*)(p1));
		break;
	}
	case 397140: {
		pThis->ensurePolished();
		break;
	}
	case 397141: {
		pThis->enterEvent((QEvent*)(p1));
		break;
	}
	case 397142: {
		*(bool*)p2 = pThis->event((QEvent*)(p1));
		break;
	}
	case 397143: {
		pThis->focusInEvent((QFocusEvent*)(p1));
		break;
	}
	case 397144: {
		*(bool*)p1 = pThis->focusNextChild();
		break;
	}
	case 397145: {
		*(bool*)p2 = pThis->focusNextPrevChild(*(bool*)p1);
		break;
	}
	case 397146: {
		pThis->focusOutEvent((QFocusEvent*)(p1));
		break;
	}
	case 397147: {
		*(Qt::FocusPolicy*)p1 = pThis->focusPolicy();
		break;
	}
	case 397148: {
		*(bool*)p1 = pThis->focusPreviousChild();
		break;
	}
	case 397149: {
		*(void**)p1 = pThis->focusProxy();
		break;
	}
	case 397150: {
		*(void**)p1 = pThis->focusWidget();
		break;
	}
	case 397151: {
		*(const void**)p1 = new QFont(pThis->font());
		break;
	}
	case 397152: {
		*(void**)p1 = new QFontInfo(pThis->fontInfo());
		break;
	}
	case 397153: {
		*(void**)p1 = new QFontMetrics(pThis->fontMetrics());
		break;
	}
	case 397154: {
		*(QPalette::ColorRole*)p1 = pThis->foregroundRole();
		break;
	}
	case 397155: {
		*(void**)p1 = new QRect(pThis->frameGeometry());
		break;
	}
	case 397156: {
		*(void**)p1 = new QSize(pThis->frameSize());
		break;
	}
	case 397157: {
		*(const void**)p1 = new QRect(pThis->geometry());
		break;
	}
	case 397158: {
		pThis->getContentsMargins(*(int**)p1,*(int**)p2,*(int**)p3,*(int**)p4);
		break;
	}
	case 397159: {
		pThis->grabGesture(*(Qt::GestureType*)p1);
		break;
	}
	case 397160: {
		pThis->grabGesture(*(Qt::GestureType*)p1,*(QFlags<Qt::GestureFlag>*)p2);
		break;
	}
	case 397161: {
		pThis->grabKeyboard();
		break;
	}
	case 397162: {
		pThis->grabMouse();
		break;
	}
	case 397163: {
		if(p1==0)return -2;
		pThis->grabMouse(*(QCursor*)(p1));
		break;
	}
	case 397164: {
		if(p1==0)return -2;
		*(int*)p2 = pThis->grabShortcut(*(QKeySequence*)(p1));
		break;
	}
	case 397165: {
		if(p1==0)return -2;
		*(int*)p3 = pThis->grabShortcut(*(QKeySequence*)(p1),*(Qt::ShortcutContext*)p2);
		break;
	}
	case 397166: {
		*(void**)p1 = pThis->graphicsEffect();
		break;
	}
	case 397167: {
		*(void**)p1 = pThis->graphicsProxyWidget();
		break;
	}
	case 397168: {
		*(bool*)p1 = pThis->hasFocus();
		break;
	}
	case 397169: {
		*(bool*)p1 = pThis->hasMouseTracking();
		break;
	}
	case 397170: {
		*(int*)p1 = pThis->height();
		break;
	}
	case 397171: {
		*(int*)p2 = pThis->heightForWidth(*(int*)p1);
		break;
	}
	case 397172: {
		*(int*)p1 = pThis->heightMM();
		break;
	}
	case 397173: {
		pThis->hide();
		break;
	}
	case 397174: {
		pThis->hideEvent((QHideEvent*)(p1));
		break;
	}
	case 397175: {
		pThis->inputMethodEvent((QInputMethodEvent*)(p1));
		break;
	}
	case 397176: {
		*(QFlags<Qt::InputMethodHint>*)p1 = pThis->inputMethodHints();
		break;
	}
	case 397177: {
		*(void**)p2 = new QVariant(pThis->inputMethodQuery(*(Qt::InputMethodQuery*)p1));
		break;
	}
	case 397178: {
		pThis->insertAction((QAction*)(p1),(QAction*)(p2));
		break;
	}
	case 397179: {
		pThis->insertActions((QAction*)(p1),drvGetObjectArrayHeadT<QAction*>(p2));
		break;
	}
	case 397180: {
		*(bool*)p1 = pThis->isActiveWindow();
		break;
	}
	case 397181: {
		*(bool*)p2 = pThis->isAncestorOf((QWidget*)(p1));
		break;
	}
	case 397182: {
		*(bool*)p1 = pThis->isEnabled();
		break;
	}
	case 397183: {
		*(bool*)p2 = pThis->isEnabledTo((QWidget*)(p1));
		break;
	}
	case 397184: {
		*(bool*)p1 = pThis->isEnabledToTLW();
		break;
	}
	case 397185: {
		*(bool*)p1 = pThis->isFullScreen();
		break;
	}
	case 397186: {
		*(bool*)p1 = pThis->isHidden();
		break;
	}
	case 397187: {
		*(bool*)p1 = pThis->isLeftToRight();
		break;
	}
	case 397188: {
		*(bool*)p1 = pThis->isMaximized();
		break;
	}
	case 397189: {
		*(bool*)p1 = pThis->isMinimized();
		break;
	}
	case 397190: {
		*(bool*)p1 = pThis->isModal();
		break;
	}
	case 397191: {
		*(bool*)p1 = pThis->isRightToLeft();
		break;
	}
	case 397192: {
		*(bool*)p1 = pThis->isTopLevel();
		break;
	}
	case 397193: {
		*(bool*)p1 = pThis->isVisible();
		break;
	}
	case 397194: {
		*(bool*)p2 = pThis->isVisibleTo((QWidget*)(p1));
		break;
	}
	case 397195: {
		*(bool*)p1 = pThis->isWindow();
		break;
	}
	case 397196: {
		*(bool*)p1 = pThis->isWindowModified();
		break;
	}
	case 397197: {
		pThis->keyPressEvent((QKeyEvent*)(p1));
		break;
	}
	case 397198: {
		pThis->keyReleaseEvent((QKeyEvent*)(p1));
		break;
	}
	case 397199: {
		*(void**)p1 = QWidget::keyboardGrabber();
		break;
	}
	case 397200: {
		*(void**)p1 = pThis->layout();
		break;
	}
	case 397201: {
		*(Qt::LayoutDirection*)p1 = pThis->layoutDirection();
		break;
	}
	case 397202: {
		pThis->leaveEvent((QEvent*)(p1));
		break;
	}
	case 397203: {
		*(void**)p1 = new QLocale(pThis->locale());
		break;
	}
	case 397204: {
		*(int*)p1 = pThis->logicalDpiX();
		break;
	}
	case 397205: {
		*(int*)p1 = pThis->logicalDpiY();
		break;
	}
	case 397206: {
		pThis->lower();
		break;
	}
	case 397207: {
		if(p2==0)return -2;
		*(void**)p3 = new QPoint(pThis->mapFrom((QWidget*)(p1),*(QPoint*)(p2)));
		break;
	}
	case 397208: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->mapFromGlobal(*(QPoint*)(p1)));
		break;
	}
	case 397209: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->mapFromParent(*(QPoint*)(p1)));
		break;
	}
	case 397210: {
		if(p2==0)return -2;
		*(void**)p3 = new QPoint(pThis->mapTo((QWidget*)(p1),*(QPoint*)(p2)));
		break;
	}
	case 397211: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->mapToGlobal(*(QPoint*)(p1)));
		break;
	}
	case 397212: {
		if(p1==0)return -2;
		*(void**)p2 = new QPoint(pThis->mapToParent(*(QPoint*)(p1)));
		break;
	}
	case 397213: {
		*(void**)p1 = new QRegion(pThis->mask());
		break;
	}
	case 397214: {
		*(int*)p1 = pThis->maximumHeight();
		break;
	}
	case 397215: {
		*(void**)p1 = new QSize(pThis->maximumSize());
		break;
	}
	case 397216: {
		*(int*)p1 = pThis->maximumWidth();
		break;
	}
	case 397217: {
		*(int*)p2 = pThis->metric(*(QPaintDevice::PaintDeviceMetric*)p1);
		break;
	}
	case 397218: {
		*(int*)p1 = pThis->minimumHeight();
		break;
	}
	case 397219: {
		*(void**)p1 = new QSize(pThis->minimumSize());
		break;
	}
	case 397220: {
		*(void**)p1 = new QSize(pThis->minimumSizeHint());
		break;
	}
	case 397221: {
		*(int*)p1 = pThis->minimumWidth();
		break;
	}
	case 397222: {
		pThis->mouseDoubleClickEvent((QMouseEvent*)(p1));
		break;
	}
	case 397223: {
		*(void**)p1 = QWidget::mouseGrabber();
		break;
	}
	case 397224: {
		pThis->mouseMoveEvent((QMouseEvent*)(p1));
		break;
	}
	case 397225: {
		pThis->mousePressEvent((QMouseEvent*)(p1));
		break;
	}
	case 397226: {
		pThis->mouseReleaseEvent((QMouseEvent*)(p1));
		break;
	}
	case 397227: {
		if(p1==0)return -2;
		pThis->move(*(QPoint*)(p1));
		break;
	}
	case 397228: {
		pThis->move(*(int*)p1,*(int*)p2);
		break;
	}
	case 397229: {
		pThis->moveEvent((QMoveEvent*)(p1));
		break;
	}
	case 397230: {
		*(void**)p1 = pThis->nativeParentWidget();
		break;
	}
	case 397231: {
		*(void**)p1 = pThis->nextInFocusChain();
		break;
	}
	case 397232: {
		*(void**)p1 = new QRect(pThis->normalGeometry());
		break;
	}
	case 397233: {
		pThis->overrideWindowFlags(*(QFlags<Qt::WindowType>*)p1);
		break;
	}
	case 397234: {
		pThis->overrideWindowState(*(QFlags<Qt::WindowState>*)p1);
		break;
	}
	case 397235: {
		*(void**)p1 = pThis->paintEngine();
		break;
	}
	case 397236: {
		pThis->paintEvent((QPaintEvent*)(p1));
		break;
	}
	case 397237: {
		*(bool*)p1 = pThis->paintingActive();
		break;
	}
	case 397238: {
		*(const void**)p1 = new QPalette(pThis->palette());
		break;
	}
	case 397239: {
		*(void**)p1 = pThis->parentWidget();
		break;
	}
	case 397240: {
		*(int*)p1 = pThis->physicalDpiX();
		break;
	}
	case 397241: {
		*(int*)p1 = pThis->physicalDpiY();
		break;
	}
	case 397242: {
		*(void**)p1 = new QPoint(pThis->pos());
		break;
	}
	case 397243: {
		*(void**)p1 = pThis->previousInFocusChain();
		break;
	}
	case 397244: {
		pThis->raise();
		break;
	}
	case 397245: {
		*(void**)p1 = new QRect(pThis->rect());
		break;
	}
	case 397246: {
		pThis->releaseKeyboard();
		break;
	}
	case 397247: {
		pThis->releaseMouse();
		break;
	}
	case 397248: {
		pThis->releaseShortcut(*(int*)p1);
		break;
	}
	case 397249: {
		pThis->removeAction((QAction*)(p1));
		break;
	}
	case 397250: {
		pThis->render(drvGetPaintDevice(p1));
		break;
	}
	case 397251: {
		pThis->render((QPainter*)(p1));
		break;
	}
	case 397252: {
		pThis->render(drvGetPaintDevice(p1),p2==0?QPoint():*(QPoint*)(p2),p3==0?QRegion():*(QRegion*)(p3),*(QFlags<QWidget::RenderFlag>*)p4);
		break;
	}
	case 397253: {
		pThis->render((QPainter*)(p1),p2==0?QPoint():*(QPoint*)(p2),p3==0?QRegion():*(QRegion*)(p3),*(QFlags<QWidget::RenderFlag>*)p4);
		break;
	}
	case 397254: {
		pThis->repaint();
		break;
	}
	case 397255: {
		if(p1==0)return -2;
		pThis->repaint(*(QRect*)(p1));
		break;
	}
	case 397256: {
		if(p1==0)return -2;
		pThis->repaint(*(QRegion*)(p1));
		break;
	}
	case 397257: {
		pThis->repaint(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 397258: {
		if(p1==0)return -2;
		pThis->resize(*(QSize*)(p1));
		break;
	}
	case 397259: {
		pThis->resize(*(int*)p1,*(int*)p2);
		break;
	}
	case 397260: {
		pThis->resizeEvent((QResizeEvent*)(p1));
		break;
	}
	case 397261: {
		*(bool*)p2 = pThis->restoreGeometry(drvGetByteArrayHead(p1));
		break;
	}
	case 397262: {
		drvSetByteArray(p1,pThis->saveGeometry());
		break;
	}
	case 397263: {
		pThis->scroll(*(int*)p1,*(int*)p2);
		break;
	}
	case 397264: {
		if(p3==0)return -2;
		pThis->scroll(*(int*)p1,*(int*)p2,*(QRect*)(p3));
		break;
	}
	case 397265: {
		pThis->setAcceptDrops(*(bool*)p1);
		break;
	}
	case 397266: {
		pThis->setAccessibleDescription(drvGetStringHead(p1));
		break;
	}
	case 397267: {
		pThis->setAccessibleName(drvGetStringHead(p1));
		break;
	}
	case 397268: {
		pThis->setAttribute(*(Qt::WidgetAttribute*)p1);
		break;
	}
	case 397269: {
		pThis->setAttribute(*(Qt::WidgetAttribute*)p1,*(bool*)p2);
		break;
	}
	case 397270: {
		pThis->setAutoFillBackground(*(bool*)p1);
		break;
	}
	case 397271: {
		pThis->setBackgroundRole(*(QPalette::ColorRole*)p1);
		break;
	}
	case 397272: {
		if(p1==0)return -2;
		pThis->setBaseSize(*(QSize*)(p1));
		break;
	}
	case 397273: {
		pThis->setBaseSize(*(int*)p1,*(int*)p2);
		break;
	}
	case 397274: {
		if(p1==0)return -2;
		pThis->setContentsMargins(*(QMargins*)(p1));
		break;
	}
	case 397275: {
		pThis->setContentsMargins(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 397276: {
		pThis->setContextMenuPolicy(*(Qt::ContextMenuPolicy*)p1);
		break;
	}
	case 397277: {
		if(p1==0)return -2;
		pThis->setCursor(*(QCursor*)(p1));
		break;
	}
	case 397278: {
		pThis->setDisabled(*(bool*)p1);
		break;
	}
	case 397279: {
		pThis->setEnabled(*(bool*)p1);
		break;
	}
	case 397280: {
		pThis->setFixedHeight(*(int*)p1);
		break;
	}
	case 397281: {
		if(p1==0)return -2;
		pThis->setFixedSize(*(QSize*)(p1));
		break;
	}
	case 397282: {
		pThis->setFixedSize(*(int*)p1,*(int*)p2);
		break;
	}
	case 397283: {
		pThis->setFixedWidth(*(int*)p1);
		break;
	}
	case 397284: {
		pThis->setFocus();
		break;
	}
	case 397285: {
		pThis->setFocus(*(Qt::FocusReason*)p1);
		break;
	}
	case 397286: {
		pThis->setFocusPolicy(*(Qt::FocusPolicy*)p1);
		break;
	}
	case 397287: {
		pThis->setFocusProxy((QWidget*)(p1));
		break;
	}
	case 397288: {
		if(p1==0)return -2;
		pThis->setFont(*(QFont*)(p1));
		break;
	}
	case 397289: {
		pThis->setForegroundRole(*(QPalette::ColorRole*)p1);
		break;
	}
	case 397290: {
		if(p1==0)return -2;
		pThis->setGeometry(*(QRect*)(p1));
		break;
	}
	case 397291: {
		pThis->setGeometry(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 397292: {
		pThis->setGraphicsEffect((QGraphicsEffect*)(p1));
		break;
	}
	case 397293: {
		pThis->setHidden(*(bool*)p1);
		break;
	}
	case 397294: {
		pThis->setInputMethodHints(*(QFlags<Qt::InputMethodHint>*)p1);
		break;
	}
	case 397295: {
		pThis->setLayout((QLayout*)(p1));
		break;
	}
	case 397296: {
		pThis->setLayoutDirection(*(Qt::LayoutDirection*)p1);
		break;
	}
	case 397297: {
		if(p1==0)return -2;
		pThis->setLocale(*(QLocale*)(p1));
		break;
	}
	case 397298: {
		if(p1==0)return -2;
		pThis->setMask(*(QBitmap*)(p1));
		break;
	}
	case 397299: {
		if(p1==0)return -2;
		pThis->setMask(*(QRegion*)(p1));
		break;
	}
	case 397300: {
		pThis->setMaximumHeight(*(int*)p1);
		break;
	}
	case 397301: {
		if(p1==0)return -2;
		pThis->setMaximumSize(*(QSize*)(p1));
		break;
	}
	case 397302: {
		pThis->setMaximumSize(*(int*)p1,*(int*)p2);
		break;
	}
	case 397303: {
		pThis->setMaximumWidth(*(int*)p1);
		break;
	}
	case 397304: {
		pThis->setMinimumHeight(*(int*)p1);
		break;
	}
	case 397305: {
		if(p1==0)return -2;
		pThis->setMinimumSize(*(QSize*)(p1));
		break;
	}
	case 397306: {
		pThis->setMinimumSize(*(int*)p1,*(int*)p2);
		break;
	}
	case 397307: {
		pThis->setMinimumWidth(*(int*)p1);
		break;
	}
	case 397308: {
		pThis->setMouseTracking(*(bool*)p1);
		break;
	}
	case 397309: {
		if(p1==0)return -2;
		pThis->setPalette(*(QPalette*)(p1));
		break;
	}
	case 397310: {
		pThis->setParent((QWidget*)(p1));
		break;
	}
	case 397311: {
		pThis->setParent((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 397312: {
		pThis->setShortcutAutoRepeat(*(int*)p1);
		break;
	}
	case 397313: {
		pThis->setShortcutAutoRepeat(*(int*)p1,*(bool*)p2);
		break;
	}
	case 397314: {
		pThis->setShortcutEnabled(*(int*)p1);
		break;
	}
	case 397315: {
		pThis->setShortcutEnabled(*(int*)p1,*(bool*)p2);
		break;
	}
	case 397316: {
		if(p1==0)return -2;
		pThis->setSizeIncrement(*(QSize*)(p1));
		break;
	}
	case 397317: {
		pThis->setSizeIncrement(*(int*)p1,*(int*)p2);
		break;
	}
	case 397318: {
		if(p1==0)return -2;
		pThis->setSizePolicy(*(QSizePolicy*)(p1));
		break;
	}
	case 397319: {
		pThis->setSizePolicy(*(QSizePolicy::Policy*)p1,*(QSizePolicy::Policy*)p2);
		break;
	}
	case 397320: {
		pThis->setStatusTip(drvGetStringHead(p1));
		break;
	}
	case 397321: {
		pThis->setStyle((QStyle*)(p1));
		break;
	}
	case 397322: {
		pThis->setStyleSheet(drvGetStringHead(p1));
		break;
	}
	case 397323: {
		QWidget::setTabOrder((QWidget*)(p1),(QWidget*)(p2));
		break;
	}
	case 397324: {
		pThis->setToolTip(drvGetStringHead(p1));
		break;
	}
	case 397325: {
		pThis->setUpdatesEnabled(*(bool*)p1);
		break;
	}
	case 397326: {
		pThis->setVisible(*(bool*)p1);
		break;
	}
	case 397327: {
		pThis->setWhatsThis(drvGetStringHead(p1));
		break;
	}
	case 397328: {
		pThis->setWindowFilePath(drvGetStringHead(p1));
		break;
	}
	case 397329: {
		pThis->setWindowFlags(*(QFlags<Qt::WindowType>*)p1);
		break;
	}
	case 397330: {
		if(p1==0)return -2;
		pThis->setWindowIcon(*(QIcon*)(p1));
		break;
	}
	case 397331: {
		pThis->setWindowIconText(drvGetStringHead(p1));
		break;
	}
	case 397332: {
		pThis->setWindowModality(*(Qt::WindowModality*)p1);
		break;
	}
	case 397333: {
		pThis->setWindowModified(*(bool*)p1);
		break;
	}
	case 397334: {
		pThis->setWindowOpacity(*(double*)p1);
		break;
	}
	case 397335: {
		pThis->setWindowRole(drvGetStringHead(p1));
		break;
	}
	case 397336: {
		pThis->setWindowState(*(QFlags<Qt::WindowState>*)p1);
		break;
	}
	case 397337: {
		pThis->setWindowTitle(drvGetStringHead(p1));
		break;
	}
	case 397338: {
		pThis->show();
		break;
	}
	case 397339: {
		pThis->showEvent((QShowEvent*)(p1));
		break;
	}
	case 397340: {
		pThis->showFullScreen();
		break;
	}
	case 397341: {
		pThis->showMaximized();
		break;
	}
	case 397342: {
		pThis->showMinimized();
		break;
	}
	case 397343: {
		pThis->showNormal();
		break;
	}
	case 397344: {
		*(void**)p1 = new QSize(pThis->size());
		break;
	}
	case 397345: {
		*(void**)p1 = new QSize(pThis->sizeHint());
		break;
	}
	case 397346: {
		*(void**)p1 = new QSize(pThis->sizeIncrement());
		break;
	}
	case 397347: {
		*(void**)p1 = new QSizePolicy(pThis->sizePolicy());
		break;
	}
	case 397348: {
		pThis->stackUnder((QWidget*)(p1));
		break;
	}
	case 397349: {
		drvSetString(p1,pThis->statusTip());
		break;
	}
	case 397350: {
		*(void**)p1 = pThis->style();
		break;
	}
	case 397351: {
		drvSetString(p1,pThis->styleSheet());
		break;
	}
	case 397352: {
		pThis->tabletEvent((QTabletEvent*)(p1));
		break;
	}
	case 397353: {
		*(bool*)p2 = pThis->testAttribute(*(Qt::WidgetAttribute*)p1);
		break;
	}
	case 397354: {
		drvSetString(p1,pThis->toolTip());
		break;
	}
	case 397355: {
		*(void**)p1 = pThis->topLevelWidget();
		break;
	}
	case 397356: {
		*(bool*)p1 = pThis->underMouse();
		break;
	}
	case 397357: {
		pThis->ungrabGesture(*(Qt::GestureType*)p1);
		break;
	}
	case 397358: {
		pThis->unsetCursor();
		break;
	}
	case 397359: {
		pThis->unsetLayoutDirection();
		break;
	}
	case 397360: {
		pThis->unsetLocale();
		break;
	}
	case 397361: {
		pThis->update();
		break;
	}
	case 397362: {
		if(p1==0)return -2;
		pThis->update(*(QRect*)(p1));
		break;
	}
	case 397363: {
		if(p1==0)return -2;
		pThis->update(*(QRegion*)(p1));
		break;
	}
	case 397364: {
		pThis->update(*(int*)p1,*(int*)p2,*(int*)p3,*(int*)p4);
		break;
	}
	case 397365: {
		pThis->updateGeometry();
		break;
	}
	case 397366: {
		pThis->updateMicroFocus();
		break;
	}
	case 397367: {
		*(bool*)p1 = pThis->updatesEnabled();
		break;
	}
	case 397368: {
		*(void**)p1 = new QRegion(pThis->visibleRegion());
		break;
	}
	case 397369: {
		drvSetString(p1,pThis->whatsThis());
		break;
	}
	case 397370: {
		pThis->wheelEvent((QWheelEvent*)(p1));
		break;
	}
	case 397371: {
		*(int*)p1 = pThis->width();
		break;
	}
	case 397372: {
		*(int*)p1 = pThis->widthMM();
		break;
	}
	case 397373: {
		*(void**)p1 = pThis->window();
		break;
	}
	case 397374: {
		drvSetString(p1,pThis->windowFilePath());
		break;
	}
	case 397375: {
		*(QFlags<Qt::WindowType>*)p1 = pThis->windowFlags();
		break;
	}
	case 397376: {
		*(void**)p1 = new QIcon(pThis->windowIcon());
		break;
	}
	case 397377: {
		drvSetString(p1,pThis->windowIconText());
		break;
	}
	case 397378: {
		*(Qt::WindowModality*)p1 = pThis->windowModality();
		break;
	}
	case 397379: {
		*(double*)p1 = pThis->windowOpacity();
		break;
	}
	case 397380: {
		drvSetString(p1,pThis->windowRole());
		break;
	}
	case 397381: {
		*(QFlags<Qt::WindowState>*)p1 = pThis->windowState();
		break;
	}
	case 397382: {
		drvSetString(p1,pThis->windowTitle());
		break;
	}
	case 397383: {
		*(Qt::WindowType*)p1 = pThis->windowType();
		break;
	}
	case 397384: {
		*(int*)p1 = pThis->x();
		break;
	}
	case 397385: {
		*(int*)p1 = pThis->y();
		break;
	}
	default:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWidgetAction
int drv_QWidgetAction(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWidgetAction *pThis = (QWidgetAction*)_p;
	switch (funcid) {
	case 398000+1: {
		delete pThis;
		break;
	}
	case 398102: {
		*(void**)_p = new QWidgetAction((QObject*)(p1));
		break;
	}
	case 398103: {
		*(void**)p2 = pThis->createWidget((QWidget*)(p1));
		break;
	}
	case 398104: {
		drvSetListObj<QWidget*>(p1,397000,pThis->createdWidgets());
		break;
	}
	case 398105: {
		*(void**)p1 = pThis->defaultWidget();
		break;
	}
	case 398106: {
		pThis->deleteWidget((QWidget*)(p1));
		break;
	}
	case 398107: {
		pThis->releaseWidget((QWidget*)(p1));
		break;
	}
	case 398108: {
		*(void**)p2 = pThis->requestWidget((QWidget*)(p1));
		break;
	}
	case 398109: {
		pThis->setDefaultWidget((QWidget*)(p1));
		break;
	}
	default:
		return drv_QAction(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWizard
int drv_QWizard(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWizard *pThis = (QWizard*)_p;
	switch (funcid) {
	case 399000+1: {
		delete pThis;
		break;
	}
	case 399102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(helpRequested()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 399103: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(currentIdChanged(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 399104: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(customButtonClicked(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 399105: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(pageAdded(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 399106: {
		UISignal68 *uis = new UISignal68(pThis);
		if (QObject::connect(pThis,SIGNAL(pageRemoved(int)),uis,SLOT(call(int)))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 399107: {
		*(void**)_p = new QWizard();
		break;
	}
	case 399108: {
		*(void**)_p = new QWizard((QWidget*)(p1),*(QFlags<Qt::WindowType>*)p2);
		break;
	}
	case 399109: {
		*(int*)p2 = pThis->addPage((QWizardPage*)(p1));
		break;
	}
	case 399110: {
		pThis->back();
		break;
	}
	case 399111: {
		*(void**)p2 = pThis->button(*(QWizard::WizardButton*)p1);
		break;
	}
	case 399112: {
		drvSetString(p2,pThis->buttonText(*(QWizard::WizardButton*)p1));
		break;
	}
	case 399113: {
		pThis->cleanupPage(*(int*)p1);
		break;
	}
	case 399114: {
		*(int*)p1 = pThis->currentId();
		break;
	}
	case 399115: {
		*(void**)p1 = pThis->currentPage();
		break;
	}
	case 399116: {
		*(void**)p2 = new QVariant(pThis->field(drvGetStringHead(p1)));
		break;
	}
	case 399117: {
		*(bool*)p2 = pThis->hasVisitedPage(*(int*)p1);
		break;
	}
	case 399118: {
		pThis->initializePage(*(int*)p1);
		break;
	}
	case 399119: {
		pThis->next();
		break;
	}
	case 399120: {
		*(int*)p1 = pThis->nextId();
		break;
	}
	case 399121: {
		*(QFlags<QWizard::WizardOption>*)p1 = pThis->options();
		break;
	}
	case 399122: {
		*(void**)p2 = pThis->page(*(int*)p1);
		break;
	}
	case 399123: {
		drvSetList<int>(p1,pThis->pageIds());
		break;
	}
	case 399124: {
		*(void**)p2 = new QPixmap(pThis->pixmap(*(QWizard::WizardPixmap*)p1));
		break;
	}
	case 399125: {
		pThis->removePage(*(int*)p1);
		break;
	}
	case 399126: {
		pThis->restart();
		break;
	}
	case 399127: {
		pThis->setButton(*(QWizard::WizardButton*)p1,(QAbstractButton*)(p2));
		break;
	}
	case 399128: {
		pThis->setButtonLayout(drvGetIntArrayHeadT<QWizard::WizardButton>(p1));
		break;
	}
	case 399129: {
		pThis->setButtonText(*(QWizard::WizardButton*)p1,drvGetStringHead(p2));
		break;
	}
	case 399130: {
		pThis->setDefaultProperty(drvGet_const_char(p1),drvGet_const_char(p2),drvGet_const_char(p3));
		break;
	}
	case 399131: {
		if(p2==0)return -2;
		pThis->setField(drvGetStringHead(p1),*(QVariant*)(p2));
		break;
	}
	case 399132: {
		pThis->setOption(*(QWizard::WizardOption*)p1);
		break;
	}
	case 399133: {
		pThis->setOption(*(QWizard::WizardOption*)p1,*(bool*)p2);
		break;
	}
	case 399134: {
		pThis->setOptions(*(QFlags<QWizard::WizardOption>*)p1);
		break;
	}
	case 399135: {
		pThis->setPage(*(int*)p1,(QWizardPage*)(p2));
		break;
	}
	case 399136: {
		if(p2==0)return -2;
		pThis->setPixmap(*(QWizard::WizardPixmap*)p1,*(QPixmap*)(p2));
		break;
	}
	case 399137: {
		pThis->setSideWidget((QWidget*)(p1));
		break;
	}
	case 399138: {
		pThis->setStartId(*(int*)p1);
		break;
	}
	case 399139: {
		pThis->setSubTitleFormat(*(Qt::TextFormat*)p1);
		break;
	}
	case 399140: {
		pThis->setTitleFormat(*(Qt::TextFormat*)p1);
		break;
	}
	case 399141: {
		pThis->setWizardStyle(*(QWizard::WizardStyle*)p1);
		break;
	}
	case 399142: {
		*(void**)p1 = pThis->sideWidget();
		break;
	}
	case 399143: {
		*(int*)p1 = pThis->startId();
		break;
	}
	case 399144: {
		*(Qt::TextFormat*)p1 = pThis->subTitleFormat();
		break;
	}
	case 399145: {
		*(bool*)p2 = pThis->testOption(*(QWizard::WizardOption*)p1);
		break;
	}
	case 399146: {
		*(Qt::TextFormat*)p1 = pThis->titleFormat();
		break;
	}
	case 399147: {
		*(bool*)p1 = pThis->validateCurrentPage();
		break;
	}
	case 399148: {
		drvSetList<int>(p1,pThis->visitedPages());
		break;
	}
	case 399149: {
		*(QWizard::WizardStyle*)p1 = pThis->wizardStyle();
		break;
	}
	default:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

// QWizardPage
int drv_QWizardPage(void *_p, int funcid, void* p1,void* p2,void* p3,void* p4,void* p5,void* p6,void* p7,void* p8,void* p9,void* p10,void* p11,void* p12)
{
	QWizardPage *pThis = (QWizardPage*)_p;
	switch (funcid) {
	case 400000+1: {
		delete pThis;
		break;
	}
	case 400102: {
		UISignal1 *uis = new UISignal1(pThis);
		if (QObject::connect(pThis,SIGNAL(completeChanged()),uis,SLOT(call()))) {
			*(void**)p2 = uis;
		}
		break;
	}
	case 400103: {
		*(void**)_p = new QWizardPage();
		break;
	}
	case 400104: {
		*(void**)_p = new QWizardPage((QWidget*)(p1));
		break;
	}
	case 400105: {
		drvSetString(p2,pThis->buttonText(*(QWizard::WizardButton*)p1));
		break;
	}
	case 400106: {
		pThis->cleanupPage();
		break;
	}
	case 400107: {
		*(void**)p2 = new QVariant(pThis->field(drvGetStringHead(p1)));
		break;
	}
	case 400108: {
		pThis->initializePage();
		break;
	}
	case 400109: {
		*(bool*)p1 = pThis->isCommitPage();
		break;
	}
	case 400110: {
		*(bool*)p1 = pThis->isComplete();
		break;
	}
	case 400111: {
		*(bool*)p1 = pThis->isFinalPage();
		break;
	}
	case 400112: {
		*(int*)p1 = pThis->nextId();
		break;
	}
	case 400113: {
		*(void**)p2 = new QPixmap(pThis->pixmap(*(QWizard::WizardPixmap*)p1));
		break;
	}
	case 400114: {
		pThis->registerField(drvGetStringHead(p1),(QWidget*)(p2),drvGet_const_char(p3),drvGet_const_char(p4));
		break;
	}
	case 400115: {
		pThis->setButtonText(*(QWizard::WizardButton*)p1,drvGetStringHead(p2));
		break;
	}
	case 400116: {
		pThis->setCommitPage(*(bool*)p1);
		break;
	}
	case 400117: {
		if(p2==0)return -2;
		pThis->setField(drvGetStringHead(p1),*(QVariant*)(p2));
		break;
	}
	case 400118: {
		pThis->setFinalPage(*(bool*)p1);
		break;
	}
	case 400119: {
		if(p2==0)return -2;
		pThis->setPixmap(*(QWizard::WizardPixmap*)p1,*(QPixmap*)(p2));
		break;
	}
	case 400120: {
		pThis->setSubTitle(drvGetStringHead(p1));
		break;
	}
	case 400121: {
		pThis->setTitle(drvGetStringHead(p1));
		break;
	}
	case 400122: {
		drvSetString(p1,pThis->subTitle());
		break;
	}
	case 400123: {
		drvSetString(p1,pThis->title());
		break;
	}
	case 400124: {
		*(bool*)p1 = pThis->validatePage();
		break;
	}
	case 400125: {
		*(void**)p1 = pThis->wizard();
		break;
	}
	default:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	}
	return 0;
}

int qtdrv(void *_p, int _typeid, int funcid, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6, void *p7, void *p8, void *p9, void *p10, void *p11, void *p12)
{
	switch(_typeid) {
	case 1:
		return init_callback(_p,funcid,p1,p2,p3);
	case 1000:
		return drv_QAbstractGraphicsShapeItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 2000:
		return drv_QAbstractTextDocumentLayout_PaintContext(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 3000:
		return drv_QAbstractTextDocumentLayout_Selection(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 4000:
		return drv_QAbstractUndoItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 5000:
		return drv_QActionEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 6000:
		return drv_QApplication(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 7000:
		return drv_QBasicTimer(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 8000:
		return drv_QBitmap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 9000:
		return drv_QBrush(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 10000:
		return drv_QByteArrayMatcher(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 11000:
		return drv_QChildEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 12000:
		return drv_QCloseEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 13000:
		return drv_QColor(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 14000:
		return drv_QColormap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 15000:
		return drv_QConicalGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 16000:
		return drv_QContextMenuEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 17000:
		return drv_QCryptographicHash(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 18000:
		return drv_QCursor(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 19000:
		return drv_QDate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 20000:
		return drv_QDateTime(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 21000:
		return drv_QDesktopServices(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 22000:
		return drv_QDir(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 23000:
		return drv_QDirIterator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 24000:
		return drv_QDragEnterEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 25000:
		return drv_QDragLeaveEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 26000:
		return drv_QDragMoveEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 27000:
		return drv_QDropEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 28000:
		return drv_QDynamicPropertyChangeEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 29000:
		return drv_QEasingCurve(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 30000:
		return drv_QElapsedTimer(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 31000:
		return drv_QEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 32000:
		return drv_QFactoryInterface(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 33000:
		return drv_QFileIconProvider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 34000:
		return drv_QFileInfo(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 35000:
		return drv_QFileOpenEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 36000:
		return drv_QFocusEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 37000:
		return drv_QFont(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 38000:
		return drv_QFontDatabase(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 39000:
		return drv_QFontInfo(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 40000:
		return drv_QFontMetrics(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 41000:
		return drv_QFontMetricsF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 42000:
		return drv_QGenericArgument(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 43000:
		return drv_QGenericReturnArgument(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 44000:
		return drv_QGestureEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 45000:
		return drv_QGestureRecognizer(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 46000:
		return drv_QGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 47000:
		return drv_QHashDummyValue(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 48000:
		return drv_QHelpEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 49000:
		return drv_QHideEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 50000:
		return drv_QHoverEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 51000:
		return drv_QIcon(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 52000:
		return drv_QIconDragEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 53000:
		return drv_QImage(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 54000:
		return drv_QImageIOHandler(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 55000:
		return drv_QImageReader(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 56000:
		return drv_QImageWriter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 57000:
		return drv_QInputEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 58000:
		return drv_QInputMethodEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 59000:
		return drv_QInputMethodEvent_Attribute(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 60000:
		return drv_QIntVariantMap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 61000:
		return drv_QItemEditorCreatorBase(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 62000:
		return drv_QItemEditorFactory(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 63000:
		return drv_QItemSelection(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 64000:
		return drv_QItemSelectionRange(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 65000:
		return drv_QKeyEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 66000:
		return drv_QKeySequence(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 67000:
		return drv_QLayoutItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 68000:
		return drv_QLibraryInfo(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 69000:
		return drv_QLine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 70000:
		return drv_QLineF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 71000:
		return drv_QLinearGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 72000:
		return drv_QListWidgetItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 73000:
		return drv_QLocale(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 74000:
		return drv_QMargins(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 75000:
		return drv_QMatrix(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 76000:
		return drv_QMetaEnum(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 77000:
		return drv_QMetaMethod(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 78000:
		return drv_QMetaObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 79000:
		return drv_QMetaProperty(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 80000:
		return drv_QModelIndex(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 81000:
		return drv_QMouseEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 82000:
		return drv_QMoveEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 83000:
		return drv_QPaintDevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 84000:
		return drv_QPaintEngine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 85000:
		return drv_QPaintEngineState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 86000:
		return drv_QPaintEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 87000:
		return drv_QPainter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 88000:
		return drv_QPainter_PixmapFragment(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 89000:
		return drv_QPainterPath(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 90000:
		return drv_QPainterPath_Element(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 91000:
		return drv_QPainterPathStroker(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 92000:
		return drv_QPalette(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 93000:
		return drv_QPen(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 94000:
		return drv_QPersistentModelIndex(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 95000:
		return drv_QPicture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 96000:
		return drv_QPictureIO(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 97000:
		return drv_QPixmap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 98000:
		return drv_QPixmapCache(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 99000:
		return drv_QPixmapCache_Key(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 100000:
		return drv_QPoint(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 101000:
		return drv_QPointF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 102000:
		return drv_QPolygon(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 103000:
		return drv_QPolygonF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 104000:
		return drv_QPrintEngine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 105000:
		return drv_QPrinter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 106000:
		return drv_QPrinterInfo(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 107000:
		return drv_QProcessEnvironment(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 108000:
		return drv_QQuaternion(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 109000:
		return drv_QRadialGradient(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 110000:
		return drv_QReadLocker(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 111000:
		return drv_QRect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 112000:
		return drv_QRectF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 113000:
		return drv_QRegExp(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 114000:
		return drv_QRegion(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 115000:
		return drv_QResHelp(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 116000:
		return drv_QResizeEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 117000:
		return drv_QResource(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 118000:
		return drv_QShortcutEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 119000:
		return drv_QShowEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 120000:
		return drv_QSize(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 121000:
		return drv_QSizeF(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 122000:
		return drv_QSizePolicy(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 123000:
		return drv_QSpacerItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 124000:
		return drv_QStandardItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 125000:
		return drv_QStateMachine_SignalEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 126000:
		return drv_QStateMachine_WrappedEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 127000:
		return drv_QStaticText(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 128000:
		return drv_QStatusTipEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 129000:
		return drv_QStringMatcher(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 130000:
		return drv_QStringVariantMap(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 131000:
		return drv_QStyleFactory(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 132000:
		return drv_QStyleHintReturn(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 133000:
		return drv_QStyleHintReturnMask(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 134000:
		return drv_QStyleHintReturnVariant(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 135000:
		return drv_QStylePainter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 136000:
		return drv_QTableWidgetItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 137000:
		return drv_QTableWidgetSelectionRange(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 138000:
		return drv_QTabletEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 139000:
		return drv_QTextBlock(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 140000:
		return drv_QTextBlock_iterator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 141000:
		return drv_QTextBlockFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 142000:
		return drv_QTextBlockUserData(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 143000:
		return drv_QTextBoundaryFinder(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 144000:
		return drv_QTextCharFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 145000:
		return drv_QTextCodec(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 146000:
		return drv_QTextCodec_ConverterState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 147000:
		return drv_QTextCursor(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 148000:
		return drv_QTextDecoder(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 149000:
		return drv_QTextDocumentFragment(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 150000:
		return drv_QTextDocumentWriter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 151000:
		return drv_QTextEdit_ExtraSelection(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 152000:
		return drv_QTextEncoder(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 153000:
		return drv_QTextFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 154000:
		return drv_QTextFragment(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 155000:
		return drv_QTextFrame_iterator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 156000:
		return drv_QTextFrameFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 157000:
		return drv_QTextImageFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 158000:
		return drv_QTextInlineObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 159000:
		return drv_QTextItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 160000:
		return drv_QTextLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 161000:
		return drv_QTextLayout_FormatRange(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 162000:
		return drv_QTextLength(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 163000:
		return drv_QTextLine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 164000:
		return drv_QTextListFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 165000:
		return drv_QTextObjectInterface(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 166000:
		return drv_QTextOption(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 167000:
		return drv_QTextOption_Tab(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 168000:
		return drv_QTextTableCell(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 169000:
		return drv_QTextTableCellFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 170000:
		return drv_QTextTableFormat(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 171000:
		return drv_QTileRules(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 172000:
		return drv_QTime(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 173000:
		return drv_QTimerEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 174000:
		return drv_QToolBarChangeEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 175000:
		return drv_QToolTip(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 176000:
		return drv_QTouchEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 177000:
		return drv_QTouchEvent_TouchPoint(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 178000:
		return drv_QTransform(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 179000:
		return drv_QTreeWidgetItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 180000:
		return drv_QTreeWidgetItemIterator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 181000:
		return drv_QUndoCommand(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 182000:
		return drv_QUrl(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 183000:
		return drv_QUuid(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 184000:
		return drv_QVariant(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 185000:
		return drv_QVariantComparisonHelper(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 186000:
		return drv_QVector2D(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 187000:
		return drv_QVector3D(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 188000:
		return drv_QVector4D(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 189000:
		return drv_QWhatsThis(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 190000:
		return drv_QWhatsThisClickedEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 191000:
		return drv_QWheelEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 192000:
		return drv_QWidgetItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 193000:
		return drv_QWindowStateChangeEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 194000:
		return drv_QAbstractAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 195000:
		return drv_QAbstractButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 196000:
		return drv_QAbstractItemDelegate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 197000:
		return drv_QAbstractItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 198000:
		return drv_QAbstractItemView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 199000:
		return drv_QAbstractListModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 200000:
		return drv_QAbstractPrintDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 201000:
		return drv_QAbstractProxyModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 202000:
		return drv_QAbstractScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 203000:
		return drv_QAbstractSlider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 204000:
		return drv_QAbstractSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 205000:
		return drv_QAbstractState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 206000:
		return drv_QAbstractTableModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 207000:
		return drv_QAbstractTextDocumentLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 208000:
		return drv_QAbstractTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 209000:
		return drv_QAction(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 210000:
		return drv_QActionGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 211000:
		return drv_QAnimationGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 212000:
		return drv_QBoxLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 213000:
		return drv_QButtonGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 214000:
		return drv_QCalendarWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 215000:
		return drv_QCheckBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 216000:
		return drv_QClipboard(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 217000:
		return drv_QColorDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 218000:
		return drv_QColumnView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 219000:
		return drv_QComboBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 220000:
		return drv_QCommandLinkButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 221000:
		return drv_QCommonStyle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 222000:
		return drv_QCompleter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 223000:
		return drv_QDataWidgetMapper(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 224000:
		return drv_QDateEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 225000:
		return drv_QDateTimeEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 226000:
		return drv_QDesktopWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 227000:
		return drv_QDial(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 228000:
		return drv_QDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 229000:
		return drv_QDialogButtonBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 230000:
		return drv_QDirModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 231000:
		return drv_QDockWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 232000:
		return drv_QDoubleSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 233000:
		return drv_QDoubleValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 234000:
		return drv_QDrag(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 235000:
		return drv_QErrorMessage(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 236000:
		return drv_QEventLoop(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 237000:
		return drv_QEventTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 238000:
		return drv_QFile(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 239000:
		return drv_QFileDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 240000:
		return drv_QFileSystemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 241000:
		return drv_QFileSystemWatcher(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 242000:
		return drv_QFinalState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 243000:
		return drv_QFocusFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 244000:
		return drv_QFontComboBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 245000:
		return drv_QFontDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 246000:
		return drv_QFormLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 247000:
		return drv_QFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 248000:
		return drv_QFutureWatcherBase(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 249000:
		return drv_QGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 250000:
		return drv_QGraphicsAnchor(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 251000:
		return drv_QGraphicsAnchorLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 252000:
		return drv_QGraphicsBlurEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 253000:
		return drv_QGraphicsColorizeEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 254000:
		return drv_QGraphicsDropShadowEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 255000:
		return drv_QGraphicsEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 256000:
		return drv_QGraphicsEllipseItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 257000:
		return drv_QGraphicsGridLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 258000:
		return drv_QGraphicsItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 259000:
		return drv_QGraphicsItemAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 260000:
		return drv_QGraphicsItemGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 261000:
		return drv_QGraphicsLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 262000:
		return drv_QGraphicsLayoutItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 263000:
		return drv_QGraphicsLineItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 264000:
		return drv_QGraphicsLinearLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 265000:
		return drv_QGraphicsObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 266000:
		return drv_QGraphicsOpacityEffect(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 267000:
		return drv_QGraphicsPathItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 268000:
		return drv_QGraphicsPixmapItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 269000:
		return drv_QGraphicsPolygonItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 270000:
		return drv_QGraphicsProxyWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 271000:
		return drv_QGraphicsRectItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 272000:
		return drv_QGraphicsRotation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 273000:
		return drv_QGraphicsScale(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 274000:
		return drv_QGraphicsScene(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 275000:
		return drv_QGraphicsSceneContextMenuEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 276000:
		return drv_QGraphicsSceneDragDropEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 277000:
		return drv_QGraphicsSceneEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 278000:
		return drv_QGraphicsSceneHelpEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 279000:
		return drv_QGraphicsSceneHoverEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 280000:
		return drv_QGraphicsSceneMouseEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 281000:
		return drv_QGraphicsSceneMoveEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 282000:
		return drv_QGraphicsSceneResizeEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 283000:
		return drv_QGraphicsSceneWheelEvent(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 284000:
		return drv_QGraphicsSimpleTextItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 285000:
		return drv_QGraphicsTextItem(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 286000:
		return drv_QGraphicsTransform(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 287000:
		return drv_QGraphicsView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 288000:
		return drv_QGraphicsWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 289000:
		return drv_QGridLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 290000:
		return drv_QGroupBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 291000:
		return drv_QHBoxLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 292000:
		return drv_QHeaderView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 293000:
		return drv_QHistoryState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 294000:
		return drv_QIODevice(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 295000:
		return drv_QInputDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 296000:
		return drv_QIntValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 297000:
		return drv_QItemDelegate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 298000:
		return drv_QItemSelectionModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 299000:
		return drv_QKeyEventTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 300000:
		return drv_QLCDNumber(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 301000:
		return drv_QLabel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 302000:
		return drv_QLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 303000:
		return drv_QLibrary(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 304000:
		return drv_QLineEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 305000:
		return drv_QListView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 306000:
		return drv_QListWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 307000:
		return drv_QMainWindow(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 308000:
		return drv_QMdiArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 309000:
		return drv_QMdiSubWindow(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 310000:
		return drv_QMenu(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 311000:
		return drv_QMenuBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 312000:
		return drv_QMessageBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 313000:
		return drv_QMimeData(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 314000:
		return drv_QMouseEventTransition(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 315000:
		return drv_QMovie(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 316000:
		return drv_QObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 317000:
		return drv_QObjectCleanupHandler(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 318000:
		return drv_QPanGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 319000:
		return drv_QParallelAnimationGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 320000:
		return drv_QPauseAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 321000:
		return drv_QPinchGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 322000:
		return drv_QPlainTextDocumentLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 323000:
		return drv_QPlainTextEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 324000:
		return drv_QPluginLoader(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 325000:
		return drv_QPrintDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 326000:
		return drv_QPrintPreviewDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 327000:
		return drv_QPrintPreviewWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 328000:
		return drv_QProcess(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 329000:
		return drv_QProgressBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 330000:
		return drv_QProgressDialog(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 331000:
		return drv_QPropertyAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 332000:
		return drv_QProxyStyle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 333000:
		return drv_QPushButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 334000:
		return drv_QRadioButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 335000:
		return drv_QRegExpValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 336000:
		return drv_QRubberBand(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 337000:
		return drv_QScrollArea(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 338000:
		return drv_QScrollBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 339000:
		return drv_QSequentialAnimationGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 340000:
		return drv_QSessionManager(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 341000:
		return drv_QSettings(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 342000:
		return drv_QSharedMemory(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 343000:
		return drv_QShortcut(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 344000:
		return drv_QSignalMapper(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 345000:
		return drv_QSizeGrip(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 346000:
		return drv_QSlider(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 347000:
		return drv_QSortFilterProxyModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 348000:
		return drv_QSpinBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 349000:
		return drv_QSplashScreen(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 350000:
		return drv_QSplitter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 351000:
		return drv_QSplitterHandle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 352000:
		return drv_QStackedLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 353000:
		return drv_QStackedWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 354000:
		return drv_QStandardItemModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 355000:
		return drv_QState(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 356000:
		return drv_QStateMachine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 357000:
		return drv_QStatusBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 358000:
		return drv_QStringListModel(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 359000:
		return drv_QStyle(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 360000:
		return drv_QStyledItemDelegate(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 361000:
		return drv_QSwipeGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 362000:
		return drv_QSyntaxHighlighter(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 363000:
		return drv_QSyntaxHighlighterHook(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 364000:
		return drv_QSystemTrayIcon(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 365000:
		return drv_QTabBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 366000:
		return drv_QTabWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 367000:
		return drv_QTableView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 368000:
		return drv_QTableWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 369000:
		return drv_QTapAndHoldGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 370000:
		return drv_QTapGesture(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 371000:
		return drv_QTemporaryFile(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 372000:
		return drv_QTextBlockGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 373000:
		return drv_QTextBrowser(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 374000:
		return drv_QTextDocument(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 375000:
		return drv_QTextEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 376000:
		return drv_QTextFrame(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 377000:
		return drv_QTextList(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 378000:
		return drv_QTextObject(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 379000:
		return drv_QTextTable(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 380000:
		return drv_QTimeEdit(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 381000:
		return drv_QTimeLine(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 382000:
		return drv_QTimer(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 383000:
		return drv_QToolBar(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 384000:
		return drv_QToolBox(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 385000:
		return drv_QToolButton(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 386000:
		return drv_QTranslator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 387000:
		return drv_QTreeView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 388000:
		return drv_QTreeWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 389000:
		return drv_QUiLoader(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 390000:
		return drv_QUndoGroup(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 391000:
		return drv_QUndoStack(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 392000:
		return drv_QUndoView(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 393000:
		return drv_QUrlQuery(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 394000:
		return drv_QVBoxLayout(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 395000:
		return drv_QValidator(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 396000:
		return drv_QVariantAnimation(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 397000:
		return drv_QWidget(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 398000:
		return drv_QWidgetAction(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 399000:
		return drv_QWizard(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	case 400000:
		return drv_QWizardPage(_p,funcid,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12);
	default:
		return -1;
	}
	return 0;
}
